[
    {
        "title": "State of the Stack Q2 2021",
        "content": "We have had an exciting couple of months here at Stack Overflow. As you know, earlier this month we announced that Prosus intends to acquire the entirety of Stack Overflow the company, which includes Stack Overflow, Stack Exchange, and all of our paid products. You can read more details in Prashanth’s blog post. I have been fielding questions from our team and our community about what changes as a result of the acquisition. Our 2021 product and community strategies, our roadmaps, our hiring and financial plan will not change; we will continue what we set out to do this year. Stack Overflow will continue to operate independently after the acquisition closes, and I don’t expect much will change day to day for our teams or our users. \n\n\n\nAs we begin planning our 2022 product and community strategies and identifying opportunities to invest and innovate, I am excited to collaborate with Prosus to increase the value we deliver to our public platform (Stack Overflow and Stack Exchange) and Stack Overflow for Teams users. We will leverage our user research, backlog of product ideas, and feature requests to define opportunities for deeper impact for all our users and customers. We are excited about the possibility of working with Prosus companies like Codecademy, Udemy, Skillsoft, and Brainly. As these opportunities develop into plans, we will share them through our blog posts and roadmap updates. \n\n\n\nI have read a number of concerns and predictions, both around the acquisition and beyond, which I wanted to specifically address:\n\n\n\nIn my one and half years at Stack Overflow, we have never discussed putting a paywall in front of the content that the community has created and curated over many years. We have no intention of ever doing this and understand just how damaging this would be for everyone.We also have no intention of limiting the number of copy and pastes for users from our public platform sites. Yes, we did this as an April Fool’s joke, but only because that is just how ridiculous we think this possibility is.We have conservative and restrictive advertising and third-party data usage policies because we understand how important this is to our users. Though we ran an experiment on real-time bidding for ads in 2019, we do not use it currently and have no plans to in the future, and all of our advertisers buy directly from Stack Overflow to ensure quality and relevance. We have limited the level of animation and distractions that advertising on our sites creates for our users and investigate any ads reported by users to ensure we maintain high standards. \n\n\n\nWe have no intention of changing these strategies or policies. We believe that democratizing technical information empowers the world to develop better technology and innovate faster. Keeping the site open to all has always been core to our values and to our business, and an acquisition doesn’t change that. The team and I are really energized by the impact we have made in the last year and what the future holds for our products, community, customers, and company.\n\n\n\nPublic Platform\n\n\n\nWe kicked off Q2 with our April Fool’s Day prank claiming that in order to copy and paste from Stack Overflow you needed to purchase “The Key.” The content and screenshots around this prank were widely shared and hopefully enjoyed as much by our users as it was by our staff. It also taught us some interesting things about how people use our site. \n\n\n\nIn May, we launched our 2021 Dev Survey which streamlined both the questions we ask as well as the process to analyze and share the results. As the second quarter ends, we are wrapping up the final phase of our large investment in improving and updating our Review Queue functionality. We have been working on improving content health through research and data collection on closed questions and outdated answers. I look forward to potential improvements based on our learnings which we will share in future roadmap blog posts. We are in the planning phase of user and product research on improving the new user onboarding and overall experience. \n\n\n\nCommunity Management\n\n\n\nWe have been focused on growth and renewal in Community Management this year through investment in people and tooling. We have welcomed three new team members who have been introduced to the community on Meta. We have kicked off the search for a VP of Community Management and just recently welcomed a former team member back from within the company. We currently have two additional open positions on Curator Support and Community Operations.\n\n\n\nThe team transitioned into three sub-teams earlier this year: Community Operations, Curator Support, and Trust and Safety. The creation and focus of these teams enable us to ensure we are on track to meet the fundamental needs of our community. Everyone is settling into their more defined roles and responsibilities, and with the addition of the new team members, we are making real progress on delivering more timely support to our users and reducing our backlog of improvements. \n\n\n\nReach & Relevance\n\n\n\nWe are focused on building and operating product features that address real user needs while giving technology vendors and employers the ability to build awareness and engage with interested users on our sites. We have invested months of user and customer research over the last year to innovate and inform how we build new features and functionality. The entire company is excited about what we have been working on and looking forward to sharing more with you; stay tuned for more news later this month. \n\n\n\nTo support this, we are focusing more on customer employer branding and company awareness needs, and moving away from job slots and direct hiring. We have begun to wind down the sale of some of our Talent products, namely job listings. We will give our users and customers plenty of notice before we sunset products. More details on this change can be found here.\n\n\n\nTeams \n\n\n\nWe launched our freemium Stack Overflow for Teams product in March after months of planning and hard work across our company. User response has exceeded our expectations!  In Q2, we have surpassed 25,000 free teams created, which nearly meets our goal for the entire year. Our previous investments from creating product onboarding, messaging, and work within the product and engineering to build high performance and efficient scaling were instrumental in enabling us to launch our Freemium Teams product tier. We are continuing to invest in our product-led growth and SaaS transformation through improved analytics and ongoing engagement with users to inform and educate them about the product. \n\n\n\nWe are just getting started with user research on our Basic and Free Teams tiers to understand how we can provide more value to smaller teams and organizations. We are continuing to investigate how and where Public Platform content can be integrated into the Teams experience. We just launched Unified Search on our Enterprise Team tier to allow each customer to decide whether they wanted an integrated search experience or not while ensuring users knew whether they were leveraging internal or public content to help them solve problems. \n\n\n\nConclusion\n\n\n\nTaking a broad view, I see some important themes are emerging in our work. We are investing deeply in research across many areas to understand where our users and customers see the most value and how we can make the greatest impact across the communities, products, and platform that make up Stack Overflow and Stack Exchange. We are seeing real impact in the areas we have focused our investment. The announcement of our planned acquisition means we can lean into the strategies we committed to in our roadmaps for this year with increased confidence and speed. We remain committed to building an open, public platform that allows anyone to share and find knowledge. We’re building for our users and customers so they can build for the world.\n\n\n\nPlease share your thoughts with us on the MSE feedback post.\n    Tags: announcements, state of the stack",
        "url": "https://stackoverflow.blog/2021/06/16/state-of-the-stack-q2-2021/"
    },
    {
        "title": "A deep dive into how we designed Collectives",
        "content": "Last month, we announced the launch of CollectivesTM, places within Stack Overflow that are a little bit more concentrated, a little bit more specialized. They’re mini communities around certain programming languages, products, or services in Stack Overflow where developers can engage directly with the companies and individuals who know the technology best. Each Collective is smaller than a full exchange, larger than a single tag, and an easier way of narrowing down all of the content on Stack Overflow when working with specific tech. \n\n\n\nWe’re excited that this product is finally live in front of our community of users, and we wanted to take a deep dive into how we designed Collectives, starting from the initial ideation to all the decisions and considerations that led to what it is today. This should give you some insight into how we thought about the product and its use.\n\n\n\nA public version of our private version\n\n\n\nCollectives was an idea that had been kicking around for a while. For years, we had seen individuals share knowledge about technical products freely. Some companies even provided unofficial (or official) tech support by answering questions on their products. We had explored the idea of providing a home page for a technology or company within Stack Overflow, but never figured out a good implementation of it. \n\n\n\nIn 2019, at the Stack Overflow meetup in Austin, Texas, the product team did a buildup and tear down of that idea, an exercise where we collectively “tear down” an idea by identifying potential pitfalls and risks, and then build it back up stronger by addressing major concerns and incorporating additional perspectives. One of the biggest problems we found with the idea was that you’d either be moving or duplicating content. Moving content would remove years of curation from Stack Overflow and remove credit from those that helped create the content. Duplicating the content would create two repositories that needed upkeep and add unnecessary cognitive load to users on where to go for the information. In either case, you’d need to create a new user base for this content in the new location.\n\n\n\nBut in the buildup, the folks on the Reach and Relevance team saw this as an opportunity for companies to make a positive contribution to the site without taking anyone outside of the public Stack Overflow site or moving content around. The idea was to organize content and put companies around the already built communities, which is where they want to be.\n\n\n\nWhen we got back from the meetup, we started a traditional five-day design sprint: the first day was understanding, the second day diverging, third converging, fourth day prototype, and fifth day test. During this sprint, we came up with the problems that this product would solve:\n\n\n\nEnable organizations to build relationships with the Stack Overflow community in a way that improves Stack Overflow as a resource for developers. Provide unique data showing trends and insights to companies so they can better understand developer needs, measure impact, and see our unique value. \n\n\n\nAt the end of the sprint, we had a few different ideas, including allowing users to post on behalf of an organization, an organization recommending an answer, a homepage to curate and interact with the organization, and a dashboard for the organization to learn about their community and users.\n\n\n\nOur initial solutions were presented to a small group of potential clients and users with positive results. It took a few months before we garnered enough interest from customers to justify moving forward. We had to move quickly in order to get the product ready for an upcoming conference. \n\n\n\nIn order to meet this new deadline, we ran research sprints. Every two weeks, research and product design would get together and decide what we wanted to tackle, then research would design a study, run it, and come back with recommendations. Then we would design based off those recommendations. Altogether there were nine research sprints.\n\n\n\nSome of the biggest takeaways from these sprints were that users didn’t want Stack Overflow to feel like a social network and that they wanted the answer ranking to remain the same.\n\n\n\nWhat’s in a name: Recognized members\n\n\n\nLooking back at the problems we defined during the design sprint, we wanted Collectives and the organizations that took part to improve Stack Overflow. Recognized Members was our first feature planned to solve that problem. This role is intended to increase the quantity and quality of contributions from an organization to the community. This applies not only to employees, but allows organizations to recognize and discover users that already contribute to Stack Overflow successfully.  We were trying to get more people to answer the right questions or recommend the right answers. The idea that these subject matter experts of the organization could be new users of Stack Overflow and would contribute high quality answers and recommendations alongside seasoned community members at the same level within the collective was a driving motivator for this project.\n\n\n\nOriginally, the term for “Recognized Members” needed to include both experts within the community and employees of the organization. It started as “Verified;” that was too close to social media. We also tested affiliate, partner, expert, and more. There were terms that the clients really liked, like expert, but then we showed it to users and they disliked it immediately. Users felt that “Expert” was a weighted title that added too much pressure—you’re expected to know absolutely everything about the technology. They also felt it was disrespectful to other experts on the site that wouldn’t have this badge.\n\n\n\nBy the time we went back the fifth time, “Recognized” was one of the original ideas that had tested fairly neutral—it wasn’t picked as a favorite, but didn’t get any negative feedback. We tested it again. That’s the term that best fit the expectation of what we wanted that role to be. So wording was fun.\n\n\n\nThe other challenge was how to highlight these users and their answers in the collective. We started with “Recognized Member” written in bright orange text. When you start peppering that around the site in different areas, it gets very long. Then we paired the user name with an icon that shows up alongside it so that when space is limited, we could display the icon by itself. Originally, it was a checkmark, but that just didn’t fly—too much like Twitter. We tried colored backgrounds, but that felt too bold. We wanted to make sure the weighting was appropriate, but still recognizable. Eventually, we settled on a star as the icon. \n\n\n\nIn our first design sprints, we made the decision to not do employee labels in order to reduce cognitive load and minimize the amount of new user types that we were introducing. However, our potential clients wanted to differentiate between actual employees of the company versus somebody from the community that they’re recognizing. Some potential clients even had this as a legal requirement. We tested this with users, and they agreed that the information should be upfront and transparent so users know who is official and who is a community user that knows their stuff.\n\n\n\nAt this point, some of the nuances around Employees and Recognized Members began to reveal themselves. If someone leaves the company and are no longer an Employee, what happens to the badge on their answer? Do Employee and Recognized statuses stay on the question if that was true when they answered? We don’t want to label somebody as an employee when they’re not—there can be legal repercussions around that as well. Alternatively, if someone was Recognized when they answered a question, we want to keep highlighting that answer because they were still a recognized authority at the time they answered.\n\n\n\nOn top of all this, we had to work around the existing codebase. We had to be mindful of our developers and public users, especially anything that would need extra time from the Public Platform or Architecture team; we couldn’t make large changes. Plus, our engineering team had spent the last three years eliminating tech debt and improving stability; they didn’t want to endanger that by making large codebase changes. Just because we’re introducing this new feature quickly, it doesn’t mean we could disturb existing community functionality. This is supposed to add additional value to Public Platform users, not mess with their experience. \n\n\n\nA new content type for the community\n\n\n\nWe knew from survey results that Articles were of interest to users, something that we had already been using successfully in Teams. Articles were present in most of the research sessions, and it went through a lot of iteration and discovery. Phase one was pretty easy: port Articles over from Stack Overflow for Teams. \n\n\n\nWe heard very early on in research about our Documentation project and how it was painful for the community when that failed. Along with the designer that originally worked on documentation, we examined why it failed and what went wrong. When that feature first came out, some users flooded the site with low quality documentation in order to inflate their reputation. Much of the design effort here was to make sure that the quality was going to be higher and there wasn’t going to be the same reputation grab. \n\n\n\nThe power of these Collectives isn’t just in the people who run them, it’s in the Members. We want any Member to be able to propose or submit a draft to the Collective for review. In the near future, we’ll launch an Article proposal flow, but we’re still sorting out the nuances of moderation and review. During user research, we heard from a lot of users who don’t want this to become just another blog site. \n\n\n\nIn order to get higher quality Articles, we’ll also want to enable other users to propose edits.  Part of this future feature, will allow authors to add any Member as an editor. But we need to put in extra safeguards when a Member goes back and makes edits to their article. This involves another type of approval queue. We want to avoid someone sneaking malicious content into an article without external review. \n\n\n\nRight now, there’s a lot of research into outdated answers and downvoting on the public site. People just tend to close, delete, or downvote questions if they’re wrong or duplicate. Newer users feel like this poses a barrier to the site—they don’t know why their question was downvoted so it feels a little hostile. Imagine how that feels on an Article that someone put a lot of work into. We’re trying to promote the feedback mechanism on Articles to avoid that. If you’re going to downvote, explain why and help the author.\n\n\n\nA concern with the feedback mechanism is that the feedback goes to the author in a private section. Only the author, collective Employees, and Recognized Members can see it. There’s definitely moderation concerns because anywhere that someone can send a private message to somebody on the internet usually turns bad. One of our clients was concerned that some of their members might not want to write an article in fear of just getting downvoted or worse because of their gender or their race. They’re opening themselves up to potential backlash just based on who they are, which they’ve seen before in the developer community.\n\n\n\nUnlike questions, Articles can’t be answered. They still have comments, though comments on questions are for flagging something, edits, or feedback on the question. That doesn’t really make sense on Articles. Typically, people use comment sections to discuss ideas that were written in the Article. We tested calling comments on articles ‘discussion,’ and it tested pretty well. But there’s a lot of new stuff coming with Collectives. So we pulled back on that plan to wait and see how Articles does in the first place. For now, we still want to encourage interaction with these Articles, so instead of the small “Add a comment link,” we auto-expanded the comment text box to give it more visual weight.\n\n\n\nCollective health\n\n\n\nStack Overflow has a heavy gamification component, so we wanted to use that within a collective. When we went to look at designing a Member’s page, we wanted it to be more than a list of members; it should be a little bit more interactive and have a little bit of that competitive spirit. So we pivoted the feature into a leaderboard. We have several leaderboards—the overall one on Stack Overflow, tag-specific ones, ones on Stack Overflow for Teams—so we looked at these and external leaderboards to see what worked and what didn’t. \n\n\n\nThe biggest change is that we highlight where you are on the leaderboard. Not everyone will be on the first page, even the first five pages, but it’s still fun to be able to track your progress as you learn and level up. The top three on the leaderboard will get a trophy beside their user card throughout the collective. Employees and Recognized Members will be competing on the same leaderboard; our research showed that users appreciated seeing these users high up on the leaderboard. It meant that the organization behind the collective was actually engaged and putting something back into the site and into the community.\n\n\n\nOn the client side of things, we still wanted to provide that insights dashboard. We’d heard from users of our Stack Overflow for Teams dashboards that the information in them was great, but that they didn’t know what to do with it. At first, we tried cutting the amount of information down—location, time of day, and other pieces of data got cut. But still, clients ran into the same problem: here’s the info, now what? If my Collective is doing badly, what can I do to make it better?\n\n\n\nWe were constantly prioritizing during the design of this dashboard. The deadline kept moving, so we always felt like we were up against this tight deadline and we constantly needed to prioritize over other items. Sometimes, one thing would be the most important and other times, it was something else. Constant communication, prioritization exercises, and time management were our daily lives. One of our biggest trip-ups was the amount of times that we had to go through and iterate on it. The team was split on whether to do it at all. \n\n\n\nJust reports and metrics could help prove return on investment with clients. But we wanted something that would ensure that Collectives succeeded, so the insights dashboard evolved into Actions for you, a list of tasks that we think the collective experts should do to make the place successful. It highlights problem areas, so if a Recognized Member has a little bit of time, they know where their efforts will pay off the most. Maybe there’s a lot of unanswered questions. Maybe questions have answers, but those answers need recommendations. \n\n\n\nAlong with these highlights, we included a weekly tasks list, steps that the collective team should take every week to help their space thrive. The collective Recognized Members and Admins know exactly what they need to do—write two articles, answer ten questions—and tick off those boxes as the tasks are completed. Next week, it refreshes. It helps level set what a reasonable amount of effort looks like. \n\n\n\nIn the future, the task list may have more dynamic items supported by data, nudges to invite more Recognized Members or encourage more edits. When we tested that feature with some of the moderators and high rep users, they all really liked it and requested that we bring it to the mod review queue, which was a good confirmation we were on the right path. \n\n\n\nGetting the dashboards up and running was one of design’s biggest challenges, but it was worth it—it looks great.\n\n\n\nAnd we’re just getting started\n\n\n\nGoogle Cloud and the Go programming language were the first Collectives to launch and those organizations and their users are seeing the value of the work we put in. More technology providers and more features are on the way. \n\n\n\nFor example, we’re looking at the ability to pin certain content to the top of the list, perhaps as a way for the collective to promote a certain article for a limited amount of time so that everybody can see the official answer immediately. We’re also looking for ways that the organization can ask and discuss topics with their collective Members. But we want to make sure this adds value to users and it remains within the confines of the collective.These are a few of the features that will really make Collectives feel unique.\n\n\n\nAs always, we’re trying to lower the friction between technology workers and the answers that they need to get the job done. Technology companies want to be able to engage with those people directly, and Collectives gives both groups a space to interact and share knowledge.\n    Tags: collectives, deep dive, design",
        "url": "https://stackoverflow.blog/2021/07/26/a-design-deep-dive-into-how-we-created-collectives/"
    },
    {
        "title": "Vote for Stack Overflow in this year’s Webby Awards!",
        "content": "It’s award season again and that means all the glitz and glamour you come to expect, all the stars in their fancy clothes, and tearful speeches. We’re ironing our finery too, since we’ve been nominated for a Webby this year in the Web Services & Applications category for Websites. This is the second year in a row we’ve been nominated—last year, we won the People’s Voice Award! You like us, you really like us!\n\n\n\nI mean, we knew that. Our April Fool’s joke ended up showing us how much you all value the knowledge shared and reused on our site. Almost one in four visitors copied something from a question or answer, whether it was to use code in a project or correct something for a better answer. The web has always worked best when it is open and shareable, and we’re proud to be the source for knowledge shared among coders and technologists. \n\n\n\nWe’re honored to be nominated again. It shows just how valuable people find us. Last year, we were nominated in the Community category, so we’re looking to shine in a new category. Competition is stiff—we’re up against GIPHY. Words alone can’t express how we feel. \n\n\n\t\n\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\n\t\n\n\nThis is the 25th Webby Awards, which means they’ve been picking the best of the internet since the days before JavaScript and HTML 5—just look at 1997’s best film and TV website, IMDB. \n\n\n\nTheir slate of awards covers everything, from websites and apps to podcasts and games. The only qualification is that it has to appear on the internet. It’s the internet’s most prestigious award, beating out the badges and internet points we distribute by just a hair. \n\n\n\nWhile the Webby is picked by the members of the International Academy of Digital Arts and Sciences, the People’s Voice award is selected by you, surfers of the net, browsers of the web. You drove us to digital glory last year, and we’re hoping we can muster enough virtual muscle to get us the nod again. Head over to their site and vote for Stack Overflow as the best Web Service & Application. Just think, there might be people who have never heard of Stack Overflow. Help us win, and there will be a whole new audience who will copy and paste your code! \n\n\n\nThe votes will be tallied and presented live and virtually on Tuesday, May 18th, so don’t wait to vote. Then tune in for the stream—hosted by the talented Jameela Jamil—and see who the internet crowns as the people’s champion. \n    Tags: webby award",
        "url": "https://stackoverflow.blog/2021/04/29/vote-for-stack-overflow-in-this-years-webby-awards/"
    },
    {
        "title": "Find knowledge faster: New Articles features",
        "content": "In the second half of 2020, we launched Articles on Stack Overflow for Teams in the Business and Enterprise tiers, which introduced a new first-class content type intended for users to proactively share long-form knowledge.  Within Articles, users can easily create knowledge documents, announcements, how-to guides, and policy notices.\n\n\n\nSince that initial launch, we have listened to customer feedback and have incorporated the top three requested features into a new release.\n\n\n\nWith this new release, users can now:\n\n\n\nFind Articles alongside Questions when searching for particular tags.Save a draft of an Article before publishing later.Earn reputation points by creating an Article or responding to an Article.\n\n\n\nWith these new features, knowledge becomes even easier to find, content becomes better, and the experience becomes more enhanced.  We think users will find these new features make creating, interacting, and discovering Articles easier and more fun.\n\n\n\nKnowledge discoverability\n\n\n\nArticles are now easier to find.  No longer are Articles and Q&A treated as separate items; search queries will return both. Search and uncover long-form content by topic or subject with tags. Also, when users follow specific tags or ignore specific tags, Articles will either show or not show in their feed or digest. This makes it even easier for users to find the most fitting content when they need it. \n\n\n\nBetter knowledge sharing experience\n\n\n\nArticles now have enhanced edit capabilities that are similar to Questions.  We listened and now users can start an Article, save it as a draft, and come back to it before publishing to the team or organization.\n\n\n\nImproved recognition\n\n\n\nArticles now contribute to reputation points, rewarding users for contributing to the knowledge base.  Similar to Questions & Answers, reputation points can now be earned for performing functions.  For example, users can earn +10 points for upvoting an article. Bonus: early adopters of Articles will receive reputation points retroactively.\n\n\n\nExplore all of the features of Stack Overflow for Teams or explore all of our plans.\n\n\n\nTags: se-all, new features, stack overflow for teams, se-stackoverflow\n    Tags: new features, stack overflow for teams",
        "url": "https://stackoverflow.blog/2021/05/03/find-knowledge-faster-new-articles-features/"
    },
    {
        "title": "Prosus’s Acquisition of Stack Overflow: Our Exciting Next Chapter",
        "content": "As you may have seen in the news this morning, Prosus (AEX:PRX) has announced its intention to acquire Stack Overflow for 1.8 billion dollars. This is tremendously exciting news for our employees, our customers, our community members, and for our shareholders, and I will share a bit more about what it all means in this post.\n\n\n\nProsus is one of the world’s leading technology investors with stakes in companies such as Tencent, Brainly, BYJU’s, Codecademy, OLX, PayU, Remitly and Udemy.  Their massive scale and reach improves the lives of around a fifth of the world’s population. Prosus’s mission is to build leading companies that empower and enrich communities, as demonstrated by the many community-focused and EdTech companies they work with. This makes Prosus the perfect company to acquire Stack Overflow, and Stack Overflow the ideal investment in their focus on the future of workplace learning and collaboration. It allows us to continue to operate as an independent company with our current team and with the backing of a global technology powerhouse. \n\n\n\nOnce this acquisition is complete, we will have more resources and support to grow our public platform and paid products, and we can accelerate our global impact tremendously. This might look like more rapid and robust international expansion, M&A opportunities, and deeper partnerships both on Stack Overflow and within Stack Overflow for Teams. Our intention is for our public platform to be an invaluable resource for developers and technologists everywhere and for our SaaS collaboration and knowledge management platform, Stack Overflow for Teams, to reach thousands more global enterprises, allowing them to accelerate product innovation and increase productivity by unlocking institutional knowledge.\n\n\n\nProsus is a long-term investor and loves what our company and community have built over these last 13+ years. They are impressed by the SaaS transformation the company has been on since the launch of Stack Overflow for Teams and especially over the last two years. Prosus recognizes our platform’s tremendous potential for impact and they are excited to launch and accelerate our next phase of growth.\n\n\n\nHow you use our site and our products will not change in the coming weeks or months, just as our company’s goals and strategic priorities remain the same. As the acquisition is finalized, and we continue to partner with Prosus, I will keep you all posted through my regular quarterly blog posts and Teresa Dietrich, our Chief Product and Technology Officer, will do the same in her quarterly community blog posts.\n\n\n\nI want to conclude by thanking all of you for your contributions over the years. Whether you asked or answered a question on our site or simply copy and pasted code, whether you once found a job on Stack Overflow or you’re one of the hundreds of thousands of users of Stack Overflow for Teams. We could not have achieved this milestone without you.\n\n\n\nThis milestone is just the beginning. Since 2008, our public platform has helped developers and technologists over 50 billion times. That’s just us getting started, and I can’t wait to continue to update you on what’s next.\n    Tags: announcement, company, prosus, stack overflow",
        "url": "https://stackoverflow.blog/2021/06/02/prosus-acquires-stack-overflow/"
    },
    {
        "title": "Announcing the launch of Collectives™ on Stack Overflow",
        "content": "When I joined Stack Overflow in early 2020, one of the things that drew me to the role was the tremendous depth and breadth of our technical community. We know that getting specific, expert knowledge about a technical product or service is challenging.  We also know that building communities, engaging with developers and supporting them at scale can be a challenge for organizations. Over the past year, our Reach & Relevance team has been heads down working on a new initiative to enhance the experience on Stack Overflow for both our users and organizations (specifically open source organizations and companies that build products and services for technologists).\n\n\n\nCreating and managing relevant content while attracting users, both initially and on an ongoing basis, are challenges that we believe Stack Overflow has spent nearly a decade working to solve. By helping organizations address these challenges, we help our Community access the specific in-depth knowledge of the people directly building and supporting  these technologies.\n\n\n\nWe believe that we are uniquely positioned to help technology organizations and their users engage directly while identifying where and how to best engage to deliver value to those users. Today, I’m happy to announce the Beta release of a new product called Collectives™ on Stack Overflow, launching with Google Cloud and Google’s Go Language as our first customers.\n\n\n\nOur users leverage questions and answers millions of times a day. This product empowers the organizations connected to these technologies to more directly support the communities that have grown around various topics, bolstering the quality and health of our content in a way that benefits our users as well.\n\n\n\nProduct Led: What problem are we solving?\n\n\n\nWe know that engineers at tech organizations have a wealth of knowledge about their technologies and, while some currently participate on Stack Overflow, we identified an opportunity to incentivize, simplify and highlight that participation. An organization’s expertise, when included with the community’s knowledge, can provide a more in-depth and complete understanding of how to better use a language, leverage a service, or troubleshoot a technology so that others with the same issue have a higher level of confidence in the solution provided.\n\n\n\nWhen talking to organizations already represented on Stack Overflow via tags of their technologies, we’ve also learned that there is a strong appetite to contribute their specific knowledge to Stack Overflow. Organizations want to have deeper interactions and provide a better experience to current and potential users of their products and services—something they can’t do with any of our existing products. \n\n\n\nThrough the last year, we have conducted extensive product research with moderators, users and potential customer organizations to identify new ways to add value for each to our existing platform while limiting the change to how things already work on Stack Overflow.  We found that users and moderators want to hear from and engage with experts at the organizations who build and support the technologies that they use regularly, and we learned how they want to engage with those experts.  \n\n\n\nCollectives features\n\n\n\nCollectives is a new set of spaces on Stack Overflow where content related to certain technical languages, products, or services can be grouped together. It’s a place for users who regularly interact with this content to collaborate, and for the organizations who help build or maintain this technology to share their expertise. Collectives are defined by a set of specific tags relating to the technologies that  an organization builds, supports and has an authority over.  It aggregates all content for those interested in these technologies and gives them some special handling of content posted in those tags. This content includes questions and answers as well as new long-form content related to the organization’s products and services. The technology organization doesn’t own the tag, but it has the ability to organize and highlight information it feels is valuable.\n\n\n\nEach participating organization will have a Collectives page, which acts as its “home” on Stack Overflow. Questions and answers will continue to belong to the Stack Overflow community, but the Collectives page will aggregate all of the relevant content from the associated tags. Users can join any Collectives page, participate in its leaderboard based on their contributions to its associated content, and find the users that are Admins or Recognized Members of a Collective. \n\n\n\nWith this launch we are creating a new Collectives-specific user type: Recognized members are either employees of an organization, part of its Developer Recognition Program, or users selected by the organization from within the Stack Overflow community that are knowledgeable about the organization’s technologies. These users will have a badge identifying them when they post/edit a question, provide an answer, or write an Article that is associated with a collective through its tags.  They will also have the ability to recommend an existing answer within their Collective, highlighting that, from their perspective, this is a recommended way of solving the problem. \n\n\n\nRecognized Members of a collective will also have the ability to contribute a new type of content to our network. They can  create longer form content within a collective which we call an Article. We first introduced this feature within our Teams product last year where we have seen strong adoption and usage. Articles give Recognized Members the opportunity to provide deeper knowledge and insights through how-to-guides, knowledge articles, or announcements. Initially Articles can only be posted by Admins and Recognized Members of a Collective, but we’re planning to release a feature that would allow any member of a collective to submit an Article to the collective for review in the near term.\n\n\n\nOur launch customers\n\n\n\nWe knew early on that we wanted to balance our Collectives between open source and commercial technologies to reflect the diverse landscape that our users work within everyday.  Our target was to launch with an organization of each to demonstrate our commitment to that balance from the start.  I am so pleased to announce that our first two Collectives are Google Cloud and Google’s Go Language. \n\n\n\n“The technical community is the heart of our Google Cloud mission and everything we build and create is grounded in helping them quickly build technologies that push the boundaries of their imaginations,” said Amr Awadallah, Vice President of Cloud Developer Relations at Google. “Ensuring that Google Cloud developers have the information they need to build is embedded in everything we do. Google Cloud’s Collective on Stack Overflow will help us make information more accessible and ignite our technical community so we can all innovate faster.”\n\n\n\n“Go was born from the idea that modern open source programming languages should make it easier to build simple, reliable, and efficient software,” says Steven Francia, Product and Strategy Lead for Go Language at Google.” As more developers adopt Go to build their ideas and contribute to its iterations, it feels only fitting to take the same open source approach to technical knowledge sharing with Stack Overflow. Collectives™ will change how we are able to help technologists understand, implement, and scale Go, as well as collaborate with their peers.”\n\n\n\nWe designed Collectives to be a win-win for our clients and our community. Organizations get an opportunity to help improve the health and detail of content being created around their technologies, and users have more opportunity to find relevant and accurate information they can use to solve problems and be recognized for their contributions. \n    Tags: announcements, company",
        "url": "https://stackoverflow.blog/2021/06/23/collectives-stack-overflow/"
    },
    {
        "title": "Unpacking the user research behind Collectives™",
        "content": "This week we launched a new initiative: CollectivesTM on Stack Overflow. For over a year now, I’ve led our Product Research efforts on this project. In this post I want to share some of the valuable feedback we’ve collected from community members of our site, how their input shaped what we launched, and what we hope to launch in the near future.\n\n\n\nBefore I dive in, here are some key things to know:\n\n\n\nWe’ve collected a lot of feedback from users and moderators on the site, as well as potential customers. We’ve spent over a hundred hours in 1-on-1 interviews with users and potential customers who have generously given their time to research sessions. We’ve also collected thousands of survey responses, and spent a lot of time reading through feature requests and feedback about past projects on Meta. While we wanted a representative set of feedback, we had a focus on engaging with active, highly contributing Stack Overflow members and moderators. In particular we had a panel of 12 users and moderators who met with us consistently for the last year, and whose feedback has been invaluable.This isn’t the end of us collecting feedback – this is still a Beta release. We will continue iterating on these features based on new feedback and insights. I encourage you all to continue sharing feedback, and if you’re interested, to also opt-in to research participation in your email settings so my team and I can contact you for more detailed feedback.\n\n\n\nBackground and context\n\n\n\nWhen the idea of companies having ‘public teams’ or ‘spaces’ was first brought up, my mind went to all the ways it could possibly go wrong. But I was also really curious about whether there was any genuine value that organizations could add for our users. So this sparked our first big research and design effort: a 5-day design sprint, attended by a wide range of teams from across the company; product management, community management, product design, engineering, data, product research, and more. \n\n\n\nWhile Stack Overflow needs paid products in order to operate, we want to do this by adding value to the community, not changing things for the worse. So we settled on the following mission statement for our design sprint: “How might we enable companies to build relationships with the Stack Overflow community in a way that improves Stack Overflow as a resource for developers?”\n\n\n\nDuring the design sprint, there were a few things we settled on early:\n\n\n\nWe should aim to not change the guidelines around what is on topic for Stack Overflow. This means we should be thinking about organizations who are technology providers, and who likely already have technologies with active tags on Stack Overflow.In order for organizations to add value, they would need to directly participate in Q&A in some form – not as a channel for customer support, but as a way for technology providers to share their knowledge in a productive way.While so much of our work has been focused on tearing down the barriers to entry for newer users, this would be an ideal project to also focus on where we can add features for more engaged users: what new ways could they participate?\n\n\n\nWe eventually came to a potential solution (Collectives) which we felt adhered to these criteria, and addressed our initial design sprint mission. The concept consisted of a few parts, including: badges on user cards for verified employees/topic experts, a way for technology providers to indicate an existing answer represented best practice, and some kind of page for an organization to showcase their relevant  tags and other pertinent information.\n\n\n\nEarly Feedback\n\n\n\nThe first time we researched these concepts with users (as part of the 5-day design sprint), we learned a lot. One common theme that emerged was that these concepts could help instill trust in an answer, help answer-seekers get to solutions quicker, and potentially help with the issues of outdated answers and identifying canonical answers when it came to duplicates. On the other hand we were cautioned to be careful with not changing things like sort order, so we wouldn’t hurt the democratised nature of the site. \n\n\n\nA couple of other highlights from these early research sessions included:\n\n\n\nWhen it came to verified employees/topic experts, our research participants saw value here, but only if we maintained relevance. It was critical that these badges were scoped; they should only appear when a user participated on tags which they actually had expertise in. We also got positive feedback about the fact this would be a great way to recognize members on the site who continually contribute their expertise to certain topic areas. On the flip side, we learned that the word ‘verified’ had the wrong connotations (thus beginning a near 18 month struggle for us on what to call this role, with at least 15 different potential names…). Verified reminded participants of social media, and we have no desire to become a social media platform.The idea of technology providers being able to mark existing answers on the platform as representing best practice was very popular in research. Some users pointed out that this could potentially be a useful way of designating a canonical answer when handling duplicates. Back then we were calling this concept ‘endorsed answers’, which was not a popular term, and one that non-native English speakers felt was particularly unclear (we weren’t having a good run with copywriting!). So we renamed this to ‘recommended answers’, and this is the one part of the concept that hasn’t changed significantly since our design sprint.\n\n\n\nAt the end of the design sprint, we were still just scratching the surface of what we needed to learn from Stack Overflow users. We had a million questions about how these features may help or hurt the community, what would make a good collective, what additional features might make this idea more complete, etc. So we began a series of what we called ‘research sprints’, which were essentially intensive blocks of focused research, aiming to address our biggest open questions and hypotheses.\n\n\n\nKey findings: Articles\n\n\n\nThe appetite for longer form content was something we’d heard in the past, but also dug into as part of our research sprints. For example, 23.1% of responses to a survey we ran of visitors to Stack Overflow (n=1010) said they believed how-to guides would be a positive addition to the site. We also know that plenty of contributors have tried to make content that would really be better suited to an article fit into a Q&A format. Overall, the feedback we got through surveys and interviews was that, with the right guardrails, this could be a positive addition to the site.\n\n\n\nSome users were cautious because of a project that we had sunsetted a few years ago called Documentation. There were several issues we heard about when it came to Documentation, but the ones brought up by our users most often were the influx of poor quality or repetitive content, as well as issues introduced by users unfairly being able to gain reputation. These were, of course, problems we were keen not to repeat. So that brought us to our first key decision on this feature: at the time of launch we are limiting Article creation to Recognized Members of a collective. However, we are planning on launching a review process where any member of a collective can submit Articles that will then be reviewed by the Recognized Members of that collective. \n\n\n\nIn our customer research, something that we discussed was that in order to make this review process successful, customers should be clear about the type and style of Article that would make a good addition to the collective. Hopefully this should go some way to start addressing the first issue we saw with Documentation, helping to raise the bar quality-wise and ensuring that we aren’t just seeing repetition of existing help docs and documentation. \n\n\n\nThe other factor when it came to quality was making sure voting was part of the mix. In our initial designs we only had an upvote-style button to signal good quality. But through research we heard that users didn’t want to see upvotes without downvotes. So we added a downvote option in, mirroring Q&A. Which brought us to the other problem we heard about with Documentation: reputation…\n\n\n\nI’ll be honest in saying that rep was a topic we got extremely mixed reactions on. Nearly everyone we spoke to had a different take on how we should handle Article rep. So unfortunately, we haven’t found (and probably won’t find) a solution that everyone loves. Some users proposed a new bucket of rep for Article contributions, some encouraged us to offer more rep for Article creation to reflect the added effort it takes to write an Article, and others didn’t think rep should be part of the feature at all.\n\n\n\nKey findings: Customer research\n\n\n\nAnother topic we discussed at length with users was how organizations would interact on the platform. We spoke to some who had attempted to facilitate developer support on Stack Overflow before, and to users who had seen these efforts unfold. Some of the key things we learned from these discussions were that participation from organizations still had to be deeply technical, not be promotional, and perhaps most importantly, we needed organizations to be consistently active to actually see a positive community impact.\n\n\n\nThis spurred several rounds of research with potential customer partners. We aimed to understand if they would be willing to make this kind of commitment, and if so, how we could facilitate ongoing participation with this initiative. \n\n\n\nThis research led to two things. First, helping our team clearly understand what type of organization we wanted to work with: ones that would take the time to understand the site, ensure they were putting dedicated resources towards participation, and didn’t see it as purely an outlet for marketing. \n\n\n\nThe second was that we would need to build out dashboards to help Recognzed Members target where to participate on the site. There’s obviously a million ways someone could contribute and we wanted to help make sure Collectives would enhance the community, and fill in the gaps. Part of the dashboards we designed include curated lists to help focus participation, e.g. one of the lists is ‘questions over 30 hours old without an answer’. We hope these curated dashboards will help our customers enrich their community on the site.\n\n\n\nKey findings: Moderation\n\n\n\nBesides customers and users, there was also another group we were keen to speak to: Stack Overflow Moderators. We were lucky enough to be able to consistently interview several mods throughout our discovery process. These interviews brought a unique perspective to our designs, and helped us consider rules, guidelines, and community health, as well as assess possible abuse vectors. \n\n\n\nSome key topics we covered with participating Stack Overflow moderators were how moderation of new features should be handled, and whether there should be any new rules. One big takeaway from these interviews was that the mod team should moderate the majority of new features, with the option to pull in a Community Manager from our staff where they feel appropriate. \n\n\n\nOn the topic of new rules, we didn’t end up adding much. It was agreed that the new content types should still adhere to the existing Stack Overflow rules, licenses, and on-topic guidelines. However, the one thing we were encouraged to do was to provide our customers with guidelines and help docs to ensure their expectations about community norms and rules are set. We’ve done many demos and sessions with our launch customers, and have written several new help docs, and will continue adding to this as the product evolves.\n\n\n\nThere were dozens more topics we discussed in research, including: our ongoing saga with what to name the new roles and features, how to handle potentially off-topic questions, how to prevent vote fraud, assessing several new content types, possible incentives other than rep, notifications, and so much more. The time and energy that users and moderators have put into sharing their opinions and giving these concepts careful thought and consideration is amazing. If we had launched this initiative without any feedback it would have looked very different, and I am personally really happy about just how much we have learned from community members over the last year and a bit.\n\n\n\n\n\n\n\nCheck out the Go Language Collective and the Google Cloud Collective.\n\n\n\nFor those who want to understand what Product Research looks like at Stack Overflow: Through qualitative and quantitative research, we work to understand the needs, motivations, and pain points of the community and of customers to help guide the direction of our products. This is both in terms of what products should be built, but also how they should be executed. We see ourselves as advocates for the users, and often partner with Community Management, Product Management, Product Design, and Data.\n    Tags: collectives, community, user research",
        "url": "https://stackoverflow.blog/2021/06/25/user-research-behind-collectives/"
    },
    {
        "title": "Communities are a catalyst for technology development",
        "content": "In June, I wrote to announce that Prosus, one of the world’s leading technology operators and investors, had agreed to acquire Stack Overflow. Today, I’m pleased to say that the deal has been finalized. This is a tremendous milestone for our company and community, a testament to the hard work and dedication that have built Stack Overflow over the last 13+ years. \n\n\n\nWe’re excited to continue working towards our existing goals and priorities with no changes to our focus on creating and maintaining a vibrant community and our core SaaS business model. With Prosus, we can accelerate plans and be even more ambitious about scaling our public and private platforms.\n\n\n\nOver the last quarter, we revisited our mission statement to reflect our unwavering commitment to knowledge sharing and consolidated the many versions that have surfaced over the last several years into one:\n\n\n\nEmpower the world to develop technologythrough collective knowledge.\n\n\n\nWe, and Prosus, understand that our commitment to spreading knowledge and building community is the engine of our success. Democratizing information is the only way to empower learners to develop the future of technology. We hope to further invest in the community so an even wider group can benefit from it – technologists in countries around the world who are all on their unique learning journeys.\n\n\n\nPublic Platform and Community\n\n\n\nQ2 was a time of strong growth for our public platform. We saw more new accounts being created than ever, with April, May, and June trending at or above our highest levels from last year. Part of the credit here certainly goes to our public platform and community teams, which continue to push improvements to the user experience and work to ensure our sites are becoming more welcoming, inclusive, and diverse. But there are also macro trends at work. \n\n\n\nAs we join Prosus’s edtech portfolio, we do so alongside companies like Udemy, Brainly, and Codecademy. The number of people around the globe seeking careers as software developers is increasing. So too is the number of professions, from finance to life sciences to climate studies, where writing code is not the primary task, but is fundamental in transforming those professions to become more automated and to drive innovation.  \n\n\n\nAs our community grows, we must continue to invest in supporting it. As I’ve outlined to all our employees, keeping the community at our center is a core value. We’re pleased to announce that we’ve recently hired a new VP of community, Philippe Beaudette. Philippe has a storied career, beginning in the days of AOL chat rooms, through the early days of Wikipedia, and most recently at Reddit. He brings a great wealth of experience in building safe, inclusive communities where users feel empowered to express their curiosity and share their knowledge. We’re thrilled that Philippe, with his deep community background, will be hyper focused on working closely with the community to help make the Stack Exchange ecosystem even more vibrant. You can read his blog post on our upcoming roadmap and listen to a podcast interview with him below.\n\n\n\n\n\n\n\nSpeaking of hiring, we have over 100 open roles across our company. If you want to be part of a high growth organization that works to accomplish a powerful mission at global scale, take a look and see if there is an opportunity available that speaks to you. \n\n\n\n“We want to communicate through the work that we’re doing and not create more meetings, more time spent figuring out where to look or who to ask. Stack Overflow for Teams plays a big role in InnerSource because it helps us document all these answers that are needed for engineers to move quicker. Stack Overflow helps on unblocking engineers, and that’s a big thing we didn’t use to have.”Rocio Montes, Staff Software Engineer, Intuit\n\n\n\nProduct\n\n\n\nQ2 saw the launch of a new product, Collectives™ on Stack Overflow, which aims to increase value for our users, community, and clients by organizing Q&A and Articles around a certain technical topic, for example a programming language or cloud services platform. We had two great customers come onboard to help us launch this product: Google Cloud and Google’s Go Language, and we will be announcing many more Collectives in coming months. Our approach to development is product-led AND community-driven. By learning from and serving our community, we can be a force multiplier for companies that want to empower users of their technology. \n\n\n\nThe two Collectives we’ve launched for Google Cloud and GOLang are reaching hundreds of millions of Stack Overflow users.\n\n\n\nStatistics from the Google Cloud and GOLang Collectives. August 2021.\n\n\n\nWe’re excited for this new approach to organizing knowledge and community on Stack Overflow, and have already seen over 10,000 users sign up to follow our Collectives. I believe that Collectives will help our community to organize and share knowledge around clusters of technology, for example the wide array of development happening in the blockchain space. We recently ran a survey on this topic, and got some fascinating results. There are Stack Exchanges focused on Bitcoin, Ethereum, Cardano, Iota, EOS.IO, Tezos, and Monero. I’m sure more will emerge as this space continues to grow.\n\n\n\n\n\n\n\nCollectives is part of our Reach and Relevance product offerings, and we’ve had an incredible start to this line of business in 2021. Earlier this year we combined our Advertising and Talent products under one umbrella. We moved away from discrete hiring to focus more on advertising and brand awareness. We are seeing tremendous traction in this space, with firms like AWS, JP Morgan Chase, and Accenture coming on board for brand awareness campaigns.\n\n\n\nSome of Stack Overflow’s recent brand awareness campaign clients\n\n\n\nJust as there are an ever growing number of new users signing up for the public platform, there is a steady increase in the number of organizations that want to reach developers. Some are looking to hire great talent, others want developers to try their product, and others simply want developers to use their platform, tools, or ecosystem. We can help them do it all, and we do it while respecting developer’s privacy and avoiding invasive tracking.\n\n\n\nAs I’ve written before, Predictable and Reliable Financial Performance is one of our strategic priorities. In Q2 we introduced another new product, sponsored podcasts, and our content marketing business is on track to more than double in size over last year. Put together, Advertising and Collectives delivered an exceptional quarter, the biggest in the company’s history.\n\n\n\n“The number of daily searches stood out as a healthy sign of people changing their behavior and coming to Stack Overflow for answers. Anecdotal evidence showed that even at this early stage, many actually found what they were looking for and therefore gained value without actively participating. Even the SMEs, who had to put in some extra effort up front, reported noticeable time savings, specifically when a ’hot topic’ had a good SO answer they could just point people to instead of repeating the answer on Slack”Tzach Zohar, System Architect, Skai\n\n\n\nQ2 also saw continued traction towards our other strategic priority for 2021: Product-led Transformation. After our launch of our Freemium Teams tier in Q1, we saw a steady stream of thousands signups and users trying out the Teams product. From storied innovators like Xerox to rising unicorns like Doctlib, we continue to see an ever growing cohort of organizations leveraging Stack Overflow for Teams in a range of use cases to ultimately innovate faster through knowledge sharing and collaboration.\n\n\n\nOne key metric we focus on as we evaluate how our users see value in our Teams product is  something we call Knowledge Reuse. While the number of questions and answers added to a Team are meaningful, we believe the true value is best quantified by understanding how often users are able to quickly find a solution to the problem at hand. On our public site, we note how many people a particular user has reached with their answers. It’s incredible to realize that the contributions of an individual can help tens, even hundreds of millions of others learn and grow.\n\n\n\n\n\n\n\nThe same outsized impact happens within private Teams. At companies like Xerox, Doctolib, and Unqork, knowledge is reused hundreds of times a month. That’s hundreds of emails or chat messages avoided, time saved for the person asking the question and for their colleagues. \n\n\n\nOne of our most viewed questions on Stack Overflow is a question that asks “What is a NullPointerException, and how do I fix it?” That was asked 12 years and 7 months ago. It has 31 different answers or solutions provided. That question has been viewed 3.2 million times. That’s 3.2 millions times that knowledge was reused. We have one piece of knowledge on our own internal instance that’s had more than 1,000 views in the past two years – How do I submit a Salesforce Case?\n\n\n\n\n\n\n\nAnother major impact Teams can have is to break down silos within an organization. Great solutions may not come from the teammate or department you expect. We continue to use Teams internally, where it helps us learn, share, and grow. There are great conversations happening across legal, marketing, sales, product, and engineering. Wisetech Global tells us that at their company all hands, Stack Overflow for Teams has been used to help discuss and debate the best ways to implement some of the company’s core mantras and values. “We have recently been running a program where we’re taking a number of the mantras that we hold dear in the business and we’ve been amplifying that to the global audience,” explains Ian Larsen, GM of software operations. “We’ve been using Stack Overflow for Teams as a discussion forum. It’s a place for people to raise questions, get additional clarity, or just discuss the nuances. So I think that has been great.”\n\n\n\n“We have a highly complex and proprietary tech stack and have recently expanded rapidly. Our senior engineers were spending a lot of their very valuable time answering the same questions to different people. Having our own Stack Overflow (for Teams) setup means they only have to answer it once and can provide code samples, details descriptions etc. It also has the benefit of this knowledge being available outside of our time-zone’s working hours so our engineers in the US and Asia can get quick, detailed answers without having to wait until our UK office opens. It has significantly helped boost our productivity”Global Cyber Security Provider\n\n\n\nDiversity & Inclusion\n\n\n\nA year ago I made a commitment to include updates on our diversity and inclusion progress in these quarterly posts. We are making a significant investment in DEI (diversity, equity and inclusion) at the company. We are compiling and preparing to share DEI metrics with employees, evolving our hiring practices, rolling out inclusion training to all employees, and we are in the process of hiring a Director of DEI to lead these efforts. We’ve also committed to a quarterly DEI newsletter compiled by our growing number of affinity groups collectively, which is launching this week.\n\n\n\nOver the last three months, we’ve also hosted panels featuring employees and external experts open to the full company on issues and experiences facing our Asian & Pacific Islander community and our LGBTQIA+ community. Hearing shared and individual experiences was eye opening, and I truly believe learning about others’ experiences makes us a stronger, more thoughtful organization in the long run.\n\n\n\nThere is so much work to be done, but we’re continuing to take steps towards a diverse and inclusive culture that we believe sets the tone for the community we foster online.\n\n\n\nConclusion\n\n\n\nAs we look out to the second half of 2021, there are many big opportunities we are considering. How can we leverage the global scale of Prosus to expand our business and bring a broader cohort of users, from around the world, onto our public platform? How do we enable beginner developers to leverage Stack Overflow so they become engaged participants, not just casual visitors? What kind of strategic partnerships and alliances are possible with other edtech companies, leveraging our scale and their expertise so that Stack Overflow can offer a wider variety of options for finding solutions and learning new skills? \n\n\n\nThe completion of our deal with Prosus isn’t the only exciting news I get to share today. Today we published our annual Developer Survey. It contains many fascinating insights, but one in particular stood out to me. For the rising cohort of coders under the age of 18, online resources like videos, websites, and blogs are more popular than books and school combined, a statistic that doesn’t hold for any of our other age cohorts. Overall the developer profession is full of new joiners, with more than 50% indicating they have been coding for less than a decade, and more than 35% having less than five years in the trade.\n\n\n\nSo much of what drives us is the desire to empower this new generation of developers and technologists. The resources available to us through this acquisition and the continued growth of our product and public platform give me great confidence that we will continue to unlock new potential, and that we will grow Stack Overflow into an enduring global brand with a vibrant community that continues to empower the world to develop technology through collective knowledge.\n    Tags: announcements, community",
        "url": "https://stackoverflow.blog/2021/08/02/q3-2021-ceo-blog-post-communities-catalyst/"
    },
    {
        "title": "Strong teams are more than just connected, they are communities",
        "content": "We’ve officially entered the last quarter of 2021. The three months since my last update have been some of the most momentous since I joined the company as CEO two years ago. We completed the Prosus acquisition, welcomed our highest volume of new customers for both Stack Overflow for Teams and Advertising, launched a new Collective on the public platform, and announced Matt Gallatin as our new Chief Financial Officer.\n\n\n\nThe past two years have been an incredible journey, 80% of which I’ve spent as a fully-remote CEO. When I reflect on the most important moments, I think about our Stackers and Community—I’m truly inspired by their resilience. Given many concurrent issues—the ongoing pandemic, polarized political environments, and challenging social issues—there’s a lot going on in people’s lives. Over the past year in particular, we’ve gotten glimpses into each other’s homes, supported each other through illness and loss, pushed ourselves to have uncomfortable conversations, learned from our failures, and celebrated wins. \n\n\n\nOne of my biggest learnings is that organizations and leaders have a responsibility to ensure people are heard, to build high levels of trust and enable them to show up authentically— all so they can do their best work. I’m a firm believer in the idea that building connections strengthens teams and empowers people to be successful in their roles. I’ve learned that while work connects us, a true team is a living, breathing entity. We must feed and nurture it to build high-trust connections. No one can bring only part of themselves to work and be their best. Companies play a critical role creating an environment that’s supportive. I’m grateful for the resilience of our Stackers and Community through these dynamic times. It’s a true privilege to be entrusted to lead such a passionate team and the community we’re building together.\n\n\n\nPublic Platform and Community\n\n\n\nAs our environments change, so does the community’s approach to technology. We did deep dives into two topics that saw incredible growth of late: cloud computing and cybersecurity. We learned that nearly 90% of surveyed developers say their organization increased usage of the cloud over the last year. On the public platform, we saw about four years worth of average annual growth of cloud questions in the span of just three months at the start of lockdown last year.\n\n\n\n\n\n\n\nThe pandemic had a similar impact on cybersecurity questions. Our recent research showed that security-related activity across the public platform appeared to be tied to major breaches. That is, until recently. The volume of security-related questions on Stack Overflow at the start of lockdown exceeded that of any year in our history.\n\n\n\n\n\n\n\nWe also saw exceptional growth in three core areas when it comes to the public platform community. Monthly active users are up 7% over last year at this time, and we’re seeing monthly sign ups tracking ahead of our plan with an increase of 44% over this time last year. Lastly, we’re continuing to invest in improving our moderator experience, and we’re starting to see it pay off. Moderator satisfaction is at 83%, the strongest it’s been in the past year. While we continue to focus on making the public platform a welcoming place for all, this is a promising indicator that we’re making impactful decisions.\n\n\n\nFrom a product perspective, we updated our Privacy Policy, made changes to Review Queues, and introduced high-contrast mode for people who need a bit more contrast. These are all aligned with our goal of making Stack Overflow a more inclusive community. We also completed our annual Community-A-Thon, where our employees dedicate time to increasing their engagement with the community on the public platform. \n\n\n\nFinally, we launched our first-ever physical product. It started as an April Fool’s joke. We told everyone that tried to copy and paste on Stack Overflow that their copying and pasting was limited unless they purchased The Key. Panic set in for the 1 out of every 4 users who copies something within five minutes of hitting Stack Overflow. Once people caught on to the joke, we were flooded with requests to actually purchase The Key. The joke is officially over. The Key is real, and it sold out in six hours! We opened pre-orders and nearly 9,000 units have been sold to-date, with the remaining shipping later this year. All our proceeds are going to digitalundivided, a non-profit that leverages data, programs, and advocacy to catalyze economic growth for Black and Latinx women entrepreneurs in tech. It’s amazing to see this impact from our community.\n\n\n\nProduct update\n\n\n\nWe’re also seeing a shift within organizations as teams solidify their remote or hybrid work strategies. We’re hearing from technology leaders more and more that agile transformation is becoming a top priority and onboarding continues to be a challenge as they scale their teams. On top of that, a recent survey also revealed that nearly 70% of U.S. workers said their level of burnout has worsened throughout the pandemic. All of these challenges compounded are creating more urgency for Stack Overflow for Teams. We welcomed our highest volume of new customers for both Stack Overflow for Teams and Advertising in the last quarter. We also had our highest ever gross revenue retention (GRR) for Teams in our mid-market segment last quarter.\n\n\n\n“Technical teams typically face an adoption hurdle,” said Tzach Zohar, a systems architect at Skai. “But because Stack Overflow is already second-nature for developers, the transition to Stack Overflow for Teams was easy.” \n\n\n\n\n\n\n\nAs customers onboard, they continue to share their experiences with their peers, earning us recognition on G2 across nearly every segment for the 11th consecutive quarter.\n\n\n\n\n\n\n\nWe’re continuing to work with customers to build communities on Stack Overflow through our Reach & Relevance products, which consists of banner ads, tag sponsorships, podcast, the newsletter, and blog sponsorships, and finally Collectives™ on Stack Overflow. We launched a new Collective—GitLab—and surpassed 20,000 members across all Collectives. Collectives on Stack Overflow are communities where developers can directly engage with technology organizations and find resources they need when they need them in one place.\n\n\n\n\n\n\n\nOur goal is to give developers direct access to the resources they and subject matter experts that can help them find answers when they need them. Our customers can also get deeper insights into who is interacting and engaging with their content and technologies on Stack Overflow. For every technology vendor we work with to launch a Collective, our goal is to do the same with an open source partner.\n\n\n\nDiversity, Equity, & Inclusion\n\n\n\nWe’ve rolled out a few new initiatives internally over the last few months, including our first DEIB-dedicated (Diversity, Equity, Inclusion, and Belonging) quarterly newsletter, a calendar of important days with educational materials, and new tools to help us measure DEI metrics within Stack Overflow, and DEI-related competencies for our performance reviews framework to help hold us accountable. We’re ramping up regular programming to help scale and replicate the success of the Asian and Pacific Islander and LGBTQ+ panels we hosted last quarter. There’s always work to be done, but we’re making steady progress towards a more diverse and inclusive Stack Overflow within our organization and across our platform.\n\n\n\nLooking ahead\n\n\n\nWith the Prosus acquisition complete, we’re excited to accelerate our plans for international growth and expansion. We’re cautiously moving forward with optional return to office plans in New York City and London and continuing to hire remote employees all over the globe.\n\n\n\nThis month, Comparably named Stack Overflow as one of the highest-rated companies for overall happiness, compensation, and perks and benefits. We’ve already filled over 180 roles in 2021 thus far and are currently recruiting for over 70 open roles (and more being added daily) across nearly every department and time zone. With more than 80% of Stackers permanently remote, we’re also finding creative ways to stay supportive and connected long-term.\n\n\n\n\n\n\n\nAs we sprint towards the end of 2021, we’re focusing on the foundational priorities that got us here: operational scale and repeatability, Stacker growth and development, and community health and growth. The Prosus acquisition is allowing us the flexibility and resources to scale our team faster so that we can reinforce our foundation, serve our community at scale, and prepare for takeoff in the year ahead. \n    Tags: ceo quarterly post",
        "url": "https://stackoverflow.blog/2021/10/27/strong-teams-are-more-than-just-connected-they-are-communities/"
    },
    {
        "title": "Our new and enhanced Microsoft Teams integration",
        "content": "It’s been nearly two years since Stack Overflow for Teams launched its integration with Microsoft Teams. As one of our inaugural integrations, we worked closely with Microsoft to form a meaningful partnership that paves the way for future Stack Overflow for Teams integrations. \n\n\n\nSince that launch, scores of our customers have used it to get faster access to knowledge within their existing workflows. We’ve even seen a 137% increase in the MS Teams usage over the past six months within our Enterprise customers. \n\n\n\nTo make this integration even more helpful to users, we’ve been working hard to update it. Since the original launch, we’ve collected feedback from our customers about the most valuable functionalities within Microsoft Teams. Thanks to our product and engineering teams, we’re updating this integration to make the native Stack Overflow for Teams experience available to users directly within Microsoft Teams.\n\n\n\nWith new features and tweaks to the integration, we’re sure that the new and improved Version 2 will come in handy. Below you’ll find additional context around the evolution of this integration and how it might be useful to your organization!\n\n\n\nAn integration is born\n\n\n\nAccording to Harvard Business Review,  a “collaborative overload trap” is when people schedule and participate in more meetings to be more productive, but these meetings displace focus time and can make employees less productive. That same study noted that “it can take us as many as 23 minutes to get fully back on task after [an] interruption.”\n\n\n\nPart of the problem could be too many apps, which can contribute to burnout, wasted time, and a general energy drain that permeates the whole company. When fragments of knowledge are stuck in random chat channels in Slack or MS Teams, or hidden away on Google Drive, employees waste time and energy hunting for the disparate information they need. \n\n\n\nThese interruptions and delays can have real impacts on an organization’s bottom line. IDC estimates that Fortune 500 companies lose around $31 billion a year by failing to share knowledge within their organization.\n\n\n\nLarge organizations use multiple business applications to help teams collaborate and coordinate their work: chat applications,homegrown tools, project management, and code repositories, just to name a few. Once they cross that threshold into too many tools, these platforms that are meant to boost productivity actually become a burden. \n\n\n\nWe created the Microsoft Teams integration to minimize the knowledge-hunting problem that can lead to context-switching and ultimately burnout.\n\n\n\n“Stack Overflow for Teams integration with Microsoft Teams is nice because this is mostly where I do my day-to-day work. I don’t have to leave Microsoft Teams to go to another site.” – Brandon Camerer, Senior User Experience Designer, CloudFit Software\n\n\n\nSolving for collaborative overload\n\n\n\nMicrosoft Teams is an integral part of many business operations. Our integration with Microsoft Teams removes interruptions and accelerates development time. \n\n\n\nSpecifically, the Stack Overflow for Teams integration provides quick access to answers and solutions, knowledge retention for future reuse, and awareness of new or updated information. You never have to leave Microsoft Teams to find the information you need. \n\n\n\nMicrosoft uses both Microsoft Teams and Stack Overflow for Teams to improve communication and reduce repetitive and distracting pings. \n\n\n\n“With the integration between Microsoft Teams and Stack Overflow, I’m just super excited to have one place where I can see my questions in an area where I already do a lot of my work today.”\n\n\n\nLaura MacLeod, Program Manager, Developer Services Division at Microsoft\n\n\n\nHow it works\n\n\n\nThe v2 of this integration provides the features you already love, with new enhancements that make your workday better. Let’s look at what’s new:\n\n\n\nMinimize context switching \n\n\n\nAt Stack Overflow, we’ve always emphasized the importance of avoiding context switching. With this integration, you never have to leave Microsoft Teams to access your Stack Overflow for Teams knowledge. Our first version of the integration enabled the channel bot action to search all of Stack Overflow for Teams. Search results were then displayed within the channel for quick access to everyone in the channel.\n\n\n\nWith v2, there’s even less context switching:\n\n\n\nWith the message extension feature, a user can search the Stack Overflow for Teams knowledge base, from within a chat channel in Microsoft Teams. The integration provides the best fitting match, and the user is then free to share it with the entire channel. With the Personal App feature, users  can have the native experience of Stack Overflow for Teams without leaving Microsoft Teams. They’ll have the ability to quickly view bookmarked, followed, and personal Questions along with personal Articles. Users can now reuse existing knowledge before tapping into teammates by viewing a list of Questions or Articles within a channel’s tab. This knowledge can be filtered by tags that are applicable to the channel. \n\n\n\nSearch the knowledge base via the message extension\n\n\n\nQuick access to knowledge from Stack Overflow for Teams within a channel’s tab. \n\n\n\nKnowledge capture \n\n\n\nA key facet of the Stack Overflow for Teams integration with Microsoft Teams is the ability to capture knowledge directly from Microsoft Teams. This helps users from having to search through long chat threads for critical knowledge. Users can ask questions in the channel bot and receive the best matching result directly within their Microsoft Teams chat. We also prompt users to ask a question on Stack Overflow for Teams if there are no existing matches to a question they’ve searched. \n\n\n\nNow, we’ve made the knowledge capture functionality stronger through: \n\n\n\nConverting posts within Microsoft Teams to a question within Stack Overflow for Teams to reuse the knowledge in the future. An ask modal displays within Microsoft Teams to capture additional detail and help to minimize the need to switch between applications. If a user needs help filling out all of the details within the question, teammates can chime in and finish asking the question.\n\n\n\nNew ask modal\n\n\n\nPersonal application\n\n\n\nThis integration now provides a personal oasis of knowledge tailored to a user within a personal app. The personal app links directly to important knowledge including bookmarks, followed Questions, and a user’s own Questions and Articles. This quick access to solutions helps users resolve technical issues even faster now. \n\n\n\nA native Stack Overflow for Teams experience with a user’s personal app\n\n\n\nAutomated notifications of new or updated knowledge\n\n\n\nOur Microsoft Teams integration keeps users up-to-date with automated notifications any time something is updated within the Stack Overflow for Teams instance. Users can set up tag-based push notifications to share new questions, answers, comments, and Articles directly within Microsoft Teams. They can also preview new knowledge related to a Tag without leaving Microsoft Teams. Lastly, users can create new notifications or edit existing notifications quickly by interacting with the channel bot within Microsoft Teams. \n\n\n\nWant to try version 2 of the Microsoft Teams integration? \n\n\n\nDownload it today or, if you’re not already a customer, contact us to learn more about it. \n    Tags: microsoft teams, stack overflow for teams",
        "url": "https://stackoverflow.blog/2021/11/02/our-new-and-enhanced-microsoft-teams-integration/"
    },
    {
        "title": "GitLab launches Collective on Stack Overflow",
        "content": "Today, we’re pleased to announce the launch of the GitLab Collective on Stack Overflow. Collectives™, which launched in June, is a new offering that creates a set of spaces where content related to certain languages, products, or services is grouped together on Stack Overflow. These spaces make it easier for users to discover and share knowledge around their favorite technologies.  \n\n\n\nWith the launch of its Collective, GitLab will continue to build on the collaboration that already exists with the community of developers and contributors using its platform.  \n\n\n\n“Community is at the core of GitLab’s mission. With more than 1 million active license users and a contributor community of more than 2,400 people, we have a strong community aligned with our mission – to create a world where everyone can contribute,” said Brendan O’Leary, Senior Developer Evangelist at GitLab.\n\n\n\n“GitLab’s Collective on Stack Overflow aligns with our mission. This new space will help us to expand our open source collaboration so contributors and developers can share and learn about version control, CI/CD, DevSecOps, and all-remote workflows. We believe the GitLab Collective will be a place where we can discover feedback and create opportunities for the GitLab community to contribute to Stack Overflow’s community.”\n\n\n\nGitLab’s Collective is defined by a set of specific tags related to the company’s technology such as ‘gitlab’ and ‘gitlab-ci’. Users who join the collective can easily find the best answers and get in-depth technical product information about GitLab’s platform and application through how-to guides and knowledge articles. They can also see how they stack up on the leaderboard, and top contributors can be selected by GitLab as Recognized Members, users the company approves to respond to questions or recommend answers.  \n\n\n\n\n\n\n\nWe launched Collectives on Stack Overflow with Google Cloud and Go Language earlier this summer, and have already seen thousands of community members joining in. The contributions of the Collectives’ community, taken together, can help the millions of curious question askers who visit Stack Overflow, as well as users looking for a solution to a problem or a way to improve their skills. GitLab’s efforts to expand the pool of open source collaborators aligns with our mission, to empower the world to develop technology through collective knowledge. \n    Tags: collectives, gitlab",
        "url": "https://stackoverflow.blog/2021/09/22/gitlab-launches-collective-on-stack-overflow/"
    },
    {
        "title": "A deeper dive into our May 2019 security incident",
        "content": "Back in May 2019, we had a security incident that was reported on this blog. It’s been quite some time since our last update but, after consultation with law enforcement, we’re now in a position to give more detail about what happened, how it happened, and what we did to address the underlying issues that allowed the incident to occur.\n\n\n\nSetting the scene\n\n\n\nOn May 12th, 2019, at around 00:00 UTC, we were alerted to an unexpected privilege escalation for a new user account by multiple members of the community. A user that nobody recognised had gained moderator and developer level access across all of the sites in the Stack Exchange Network. Our immediate response was to revoke privileges and to suspend this account and then set in motion a process to identify and audit the actions that led to the event.\n\n\n\nAfter initial discovery, we found that the escalation of privilege was just the tip of the iceberg and the attack had actually resulted in the exfiltration of our source code and the inadvertent exposure of the PII (email, real name, IP addresses) of 184 users of the Stack Exchange Network (all of whom were notified). Thankfully, none of the databases—neither public (read: Stack Exchange content) nor private (Teams, Talent, or Enterprise)—were exfiltrated. Additionally, there has been no evidence of any direct access to our internal network infrastructure, and at no time did the attacker ever have access to data in Teams, Talent, or Enterprise products.\n\n\n\nWalking in the attacker’s shoes\n\n\n\nIn order to understand how the privilege escalation and subsequent exfiltration of source code occurred, we needed to be able to trace the attacker’s accesses to our sites prior to the culmination of the attack. Fortunately, we have a database containing a log of all traffic to our publicly accessible properties—this proved invaluable in identifying activity associated with the attacker. Using the account identifier that had been escalated, we were able to use the IP address and other identifying information to correlate traffic to a candidate set of rows. This amounted to well over 75,000 rows of data that we then set out to categorise. Based upon that categorisation, we were able to further filter out rows to those that were deemed “interesting.” Coupled with other information from our customer support team and various other sources of log data, we came up with a timeline of events. This is quite detailed but it’s here because we’d like to bring attention to the amount of time the attacker took to understand our infrastructure and gradually escalate their privilege level to the point at which they could exfiltrate our source code.\n\n\n\nTimeline\n\n\n\nTuesday April 30th, 2019\n\n\n\nThe attacker starts probing our infrastructure, in particular parts of our build/source control systems and web servers hosting some of our development environments.\n\n\n\nWednesday May 1st\n\n\n\nThe attacker continues probing our public network and attempts to access employee-only rooms in Stack Exchange Chat—notably our SRE room. They get “access denied.”\n\n\n\nAdditionally a person claiming to be one of our Enterprise customers submits a support request to obtain a copy of source code for auditing purposes. This request is rejected because we don’t give out source code and, additionally, the email cannot be verified as coming from one of our customers. It is flagged for further investigation by our support team.\n\n\n\nNext, the attacker creates a Team on Stack Overflow on one device and sends an email invite to another account, which is accepted using another device. \n\n\n\nThursday May 2nd\n\n\n\nThe attacker visits a number of Meta posts associated with our Teams product and publicly available case studies related to Enterprise published on stackoverflow.com.\n\n\n\nAnother support ticket is raised following up on the previous one, but this time with a spoofed email address of an actual customer. Details were apparently harvested from the case studies above. An automated reply is sent to the customer (because of the spoofed address), and we are quickly notified that it is not a legitimate request.\n\n\n\nFriday May 3rd\n\n\n\nSupport request is denied. Attacker continues probing public facing infrastructure, including viewing user profiles of support personnel dealing with their support ticket. \n\n\n\nSaturday May 4th\n\n\n\nAttacker accesses a URL to attempt to download a ZIP file containing Stack Overflow source code from our GitHub Enterprise instance but is redirected to login. We later discover that the repository URL is inadvertently referenced in a public GitHub repo containing some of our open source code. \n\n\n\nSunday May 5th\n\n\n\nThis is a busy day. Attacker starts with further probing of our dev environments and a little later a login request is crafted to our dev tier that is able to bypass the access controls limiting login to those users with an access key. The attacker is able to successfully log in to the development tier. \n\n\n\nNext, the attacker starts probing a number of internal URLs that we later find are documented in our Enterprise support portal but is unable to access many of them due to an insufficient level of privilege.\n\n\n\nOur dev tier was configured to allow impersonation of all users for testing purposes, and the attacker eventually finds a URL that allows them to elevate their privilege level to that of a Community Manager (CM). This level of access is a superset of the access available to site moderators. \n\n\n\nAfter attempting to access some URLs, to which this level of access does not allow, they use account recovery to attempt to recover access to a developer’s account (a higher privilege level again) but are unable to intercept the email that was sent. However, there is a route on dev that can show email content to CMs and they use this to obtain the magic link used to reset credentials. This is used and the attacker gains developer-level privileges in the dev environment. Here they are also able to access “site settings”—a central repository of settings (feature flags) that configure a lot of functionality within the site.\n\n\n\nMonday May 6th\n\n\n\nAnother busy day—the attacker resumes with access to the dev tier. While they are browsing around and understanding what their new found privilege gives access to, they are also browsing production to harvest more information about the Stack employees that work on the Teams product. In addition, they use their freshly created Teams instance in production to try some admin-level functionality in a “safe” environment as well as trying to use impersonation on production. Impersonation is not compiled into production binaries, so all of these requests result in HTTP 404 responses.\n\n\n\nAfter some time spent investigating URLs on dev, the attacker accesses site settings again and stumbles upon a setting that contains credentials of a service account with access to our TeamCity instance. Historically, this was used for accessing the TeamCity REST API from within the Stack Exchange Network’s code base and, while the functionality was removed a long time ago, the credentials remained and were still valid.\n\n\n\nUsing the credentials the attacker attempts to login to TeamCity (which at the time was accessible from the internet) and is granted access. This user has never logged in interactively before and a misconfiguration with role assignments means the user was immediately granted administrative privileges to the build server.\n\n\n\nA significant period of time is spent investigating TeamCity—the attacker is clearly not overly familiar with the product so they spend time looking up Q&A on Stack Overflow on how to use and configure it. This act of looking up things (visiting questions) across the Stack Exchange Network becomes a frequent occurrence and allows us to anticipate and understand the attacker’s methodology over the coming days.\n\n\n\nWhile browsing TeamCity, the attacker is able to download build artifacts containing binaries and setup configuration scripts for our Enterprise product. From here, they browse more questions on Stack Overflow—including configuring IIS and migrating data from our Teams product to an Enterprise instance, among many other questions related to our Teams products.\n\n\n\nFor their final act of the day, the attacker attempts to gain access to a build agent within our data center but is unable to connect because they would need VPN access to do so.\n\n\n\nTuesday May 7th\n\n\n\nAttacker browses questions related to setting up and configuring Enterprise, and they investigate more site settings.\n\n\n\nWednesday May 8th\n\n\n\nAttacker immediately logs into TeamCity and continues browsing the administrative sections of the site. They stumble across a diagnostics section that allows browsing of the build server’s file system—this yields a plaintext SSH key used by build agents to obtain source code from GitHub Enterprise. Within minutes, this was used to clone several key repositories (gathered from VCS roots configured in TeamCity).\n\n\n\nThis process of gradually cloning continues throughout the day, and the attacker browses questions on Stack Overflow related to the build of .NET projects. Over the course of the day, they manage to get their hands on our local development setup scripts (called `DevLocalSetup`) and wikis related to operating our production environment.\n\n\n\nLater, they attempt to directly login to GitHub Enterprise using the web interface and the service account credentials that were used to access TeamCity. Fortunately, login to our GitHub instance is protected by 2FA and the service account is not in the relevant AD groups that permit access to it.\n\n\n\nThursday May 9th\n\n\n\nAttacker pulls latest copies of all the repositories they had previously cloned.\n\n\n\nThe attacker attempts to use an Azure-based VM to connect to our VPN using the service account credentials that were used to access TeamCity, but the attempts to login fail because service accounts are not permitted to access the network in this way.\n\n\n\nThey continue to browse Stack Overflow for details on building and running .NET applications under IIS as well as running SQL scripts in an Azure environment.\n\n\n\nFriday May 10th\n\n\n\nAttacker pulls latest copies of all repositories they had previously cloned and browses configuration settings in our TeamCity builds.\n\n\n\nThey continue viewing Stack Overflow and Server Fault questions around IIS and .NET applications.\n\n\n\nSaturday May 11th\n\n\n\nThis is the day that the attacker manages to escalate their privileges across the Stack Exchange Network. Once again, the attacker pulls the latest copies of source code and immediately starts to investigate build logs and configurations.\n\n\n\nFrom an Azure VM, the attacker changes Git username mappings in TeamCity to make it look like the build service account (which the SSH key is mapped to) is another account in audit logs. They then create a project in TeamCity, switch off versioned settings for that project (which audits changes to Git), and starts to configure the project with build configurations.\n\n\n\nSeveral different builds are attempted. Initially, they attempt to create a copy of databases that are used to configure our local environments from a network share but are unable to upload to any externally accessible locations. After that they attempt the same thing with some of our internal NuGet packages, but this attempt also fails.\n\n\n\nAfter failing to upload files they create a public gist on GitHub that contains the SQL needed to elevate permissions across the Stack Exchange Network. After several attempts, they are able to craft a build that executes this as a SQL migration against the production databases housing data for the Stack Exchange Network. \n\n\n\nImmediately they attempt to clean up any evidence of the attack by removing builds and history. Fortunately, we have a “trash can” for TeamCity configuration and are later able to recover these builds to understand what aspects of the attack each build was responsible for.\n\n\n\nSunday May 12th\n\n\n\nShortly after execution of the SQL, we were notified of the odd activity by the community and our incident response team started investigating.\n\n\n\nAt this point, we did not know the extent of the attack so initial remediation focused on removal of privileges and credentials. Further investigation led us to the builds that ran on TeamCity and the compromised TeamCity account which was immediately disabled, followed by bringing TeamCity offline entirely.\n\n\n\nOnce we discovered that the escalation path involved dev and the use of site settings to acquire credentials, we committed code to remove those paths—notably, the tool used to view an account recovery email and the site settings used to compromise the TeamCity service account. Additionally, all affected accounts were removed or had their credentials reset. At this point, the initial incident is considered to be dealt with and emails are sent to engage a secondary response team for forensics and further fixes on Monday.\n\n\n\nMeanwhile, the attacker attempts to access user impersonation on production (functionality isn’t present in production builds) and also tries to access TeamCity (which is now offline) but both attempts fail. However, they continue to be able to pull source code (at this time we were not yet aware they had access to Stack’s source code).\n\n\n\nMonday May 13th\n\n\n\nAttacker pulls source code again. Whilst doing this, they are viewing questions on Stack Overflow on how to publish and consume NuGet packages, how to build .NET codebases, and how to delete repositories on GitLab.\n\n\n\nThey attempt to access TeamCity repeatedly, but it is still offline.\n\n\n\nSecondary response team starts work. We start by pulling traffic logs to understand what happened. Given that the attacker had access to dev, we rotated the access keys used for that environment and began rotating any secrets that were exposed from site settings or TeamCity. In order to allow us to build fixes to production, the TeamCity service is brought online but, this time, only inside the firewall. We ascertained that dev access checks were missing from some login routes, allowing the attacker to replay a login from prod and successfully gain access to dev—these checks are then added. Additionally, we add write-only access to secrets on site settings, closing the vulnerability that enabled the attacker to retrieve credentials from this UI. We also discover that many secrets stored in the build server are not marked as secrets (this obfuscates them in the UI)—so anybody could view them. These are updated appropriately as part of the rotation process.\n\n\n\nMeanwhile the attacker continues to pull source code—at this point, we’re still unaware that they have a valid SSH key for GitHub. They keep trying to access TeamCity—we can see this because the traffic is still hitting our load balancer and landing in our logs. They continue viewing Stack Overflow questions, this time related to refreshing many Git repos programmatically (surprise!) and creating SQL databases.\n\n\n\nSecondary response team investigation continues into the following day.\n\n\n\nTuesday May 14th\n\n\n\nEarly in the day, the attacker pulls the latest source code again and continues trying to access TeamCity (now available from inside our network only and inaccessible to the attacker).\n\n\n\nDuring our continued analysis of the attacker’s traffic, we find evidence of access to the SSH key used by the build server. We immediately revoke the key and investigate any attempts to use it. We were able to dump all SSH and HTTPS traffic logs from GitHub and found indications that the key was used outside of our network. We make the decision to immediately move GitHub behind the firewall in case the attacker has more than just SSH access. It’s worth noting that once an SSH key has been added to a GitHub account, if the raw key material is exposed, the key can be used without any form of 2FA involved. The same is true for personal access tokens which are provisioned when cloning using HTTPS + 2FA.\n\n\n\nWe begin auditing for any commits that were not pushed by a Stack employee, but find nothing untoward. We also begin an audit of all repositories for any secrets that are not injected at build time and instruct the team that owns each repository to move secrets into the build process and to rotate them. Additionally, we begin auditing all third party systems for unauthorised access (we find no evidence of access).\n\n\n\nWe contract an external security vendor to audit and double check our methodology and all available data as well as assist us in the investigation.\n\n\n\nThursday 16th May\n\n\n\nAuditing continues and secret rotation propagates across the various affected systems. We start to categorise traffic that resulted in inadvertent PII access—we don’t see any evidence that the attacker was actively seeking personal data, but want to be able to notify affected users if we can.\n\n\n\nA blog post is published notifying our community of the breach.\n\n\n\nAttacker has little activity today, limited to viewing Q&A around SQL databases in Azure.\n\n\n\nFriday 17th May\n\n\n\nAttacker continues viewing Q&A, this time around SQL and certificates. No other activity of note.\n\n\n\nWe continue to categorise the traffic to find any PII access.\n\n\n\nA blog post is posted with an update, including intent to notify an estimated 250 users who had their PII accessed.\n\n\n\nSaturday 18th May\n\n\n\nAttacker continues viewing Q&A, this time around removing git remotes. No other activity of note. \n\n\n\nWednesday 22nd May\n\n\n\nUsers affected by PII leaks are notified.\n\n\n\nThursday 23rd May\n\n\n\nOur secondary investigation concludes but we produce a set of remediations to address underlying issues that led to the attack happening; more details on that below.\n\n\n\nRemediations\n\n\n\nThis incident brought to light shortcomings in how we’d structured access to some of our systems and how we managed secrets, both at build time and in source code. During the investigation, we made a number of short-term changes to address some of these shortcomings:\n\n\n\nMove build and source control systems behind the firewall, requiring valid VPN credentials to access. Most of our engineers are remote so these systems were originally on the Internet for ease of access. Our GitHub Enterprise instance was already using 2FA.Removal of default group assignments from TeamCity. This was an accidental misconfiguration from many years ago that was never reverted and meant all newly created users inherited administrative privileges. Administrative privileges in TeamCity can browse the server’s file system where things like SSH keys are stored in plain text.Bad secret hygiene—we had secrets sprinkled in source control, in plain text in build systems and available through settings screens in the application. We made sure all secrets were removed from source code, rotated, and then securely added to build systems or made available at runtime to the application. All secrets are now write-only—once set, they cannot be read except by the application or specifically authorised employees behind the firewall.Access to support documentation for our Enterprise product was limited to authorised users of that product.Metrics and alerting around privilege escalation in production. Any escalation to developer level access now notifies a group of people that can validate the escalation is legitimate.Hardening code paths that allow access into our dev tier. We cannot take our dev tier off of the internet because we have to be able to test integrations with third-party systems that send inbound webhooks, etc. Instead, we made sure that access can only be gained with access keys obtained by employees and that features such as impersonation only allow de-escalation—i.e. it only allows lower or equal privilege users to the currently authenticated user. We also removed functionality that allowed viewing emails, in particular account recovery emails.All employees were made to change their passwords in case of a compromise of those credentials. This was a “just in case” safety measure—no employee credentials were found to be compromised or used during the incident.\n\n\n\nWe also made plans for some slightly longer term projects to address larger issues that were brought to light by the incident:\n\n\n\nWe gave higher priority to an existing project to replace our VPN with a system that mandates 2FA and restricts access to secure zones within our network based upon role membership. Although this was not an attack vector during the incident we wanted to further harden ingress points into our network. This has been put in place since last year.Moving away from secrets that are injected at build time to using a runtime secret store. This is part of a larger project to better handle configuration management in our data center environments. In our Azure environments, we already use KeyVault and AppConfig to do this.Migrating our CI/CD pipeline to break apart the build and deploy components. This is an on-going effort to migrate away from a TeamCity process that builds and immediately deploys our code to using GitHub Actions to create artifacts and Octopus Deploy to manage deployment. This allows us to have deterministic builds and better manage deployment permissions.Moving to use SSO and 2FA on as many third-party systems as we can. We’re actively moving to Okta Workplace Identity and using it for any third-party systems that our employees need to access.Better role-based access control—one of the things we discovered was that diagnosing why a particular user gained privileges in a specific system was made difficult by the culmination of years of group nesting and difficult to understand security group assignments. We have tooling being built to better manage this process.On-going training to ensure employees are aware of and can identify phishing techniques. This is especially important for our Customer Success team that routinely deals with support emails.\n\n\n\nAdvice to others\n\n\n\nThis incident reminded us about some fundamental security practices that everyone should follow:\n\n\n\nLog all your inbound traffic. We keep logs on all in-bound connections. This enabled all of our investigations. You can’t investigate what you don’t log.Use 2FA. That remaining system that still uses legacy authentication can be your biggest vulnerability.Guard secrets better. TeamCity has a way to protect secrets, but we found we weren’t using it consistently. Educate engineers that “secrets aren’t just passwords.” Protect SSH keys and database connection strings too. When in doubt, protect it. If you must store secrets in a Git repo, protect them with git-crypt  or Blackbox .Validate customer requests. The more unusual a request from a customer, the more important it is to verify whether or not the request is legitimate.Take security reports seriously. We’re grateful that our community reported suspicious activity so quickly. Thank you!\n\n\n\nWrap-up\n\n\n\nThere’s a lot to digest here, but we wanted to give a good overview of how an incident like this starts out and use it as an opportunity to inform other companies and sites on how these things unfold. The more that we are prepared for and anticipate events like this, the better protected we all will be against future events of this nature.\n\n\n\n\n\n\n\nWe are not able to comment on any other details related to the attacker due to ongoing investigations. If there is anything that you would like to discuss please do so on our Meta Stack Exchange feedback post.\n\n\n\nThanks for listening!\n\n\n\nStack Engineering Team <3\n    Tags: security",
        "url": "https://stackoverflow.blog/2021/01/25/a-deeper-dive-into-our-may-2019-security-incident/"
    },
    {
        "title": "Stack Overflow for Teams is now free forever for up to 50 users",
        "content": "I’m excited to announce the launch of our Free plan on Stack Overflow for Teams starting today.\n\n\n\nWhat you need to know\n\n\n\nOur private knowledge sharing and collaboration platform, Stack Overflow for Teams, is now free for up to 50 users. No credit card is required to start your Team, and it’s free forever.Our Free plan includes ChatOps integrations to Slack and Microsoft Teams.We have invested in a guided onboarding process to help admins and users experience value quickly and efficiently.Our Basic customers now get access to single sign-on (SSO) for an easy and secure login experience.\n\n\n\nIf you aren’t familiar with Stack Overflow for Teams, it combines the best features of the public Stack Overflow platform with features tailored for companies who need a private knowledge sharing and async collaboration platform. Check out our Product Tour page to learn more about these features. \n\n\n\nWith Stack Overflow for Teams being a flexible platform, we’ve seen customers use it for everything from helping onboard new employees, driving innersource initiatives, enabling cloud or platform migration efforts, a self-serve help center to reduce tickets, and so much more. Since launching Teams in 2018, we have added thousands of customers ranging in size and use cases including Microsoft, Expensify, Box, Instacart, and Unqork.  Developers and technologists love our Teams platform because they spend less time answering the same questions over and over again and can unblock their colleagues while reducing their own disruptions. \n\n\n\nThe open source ethos that is foundational to this network was an inspiration for our new free offering. We’re excited to enable those who are working towards a common goal to develop a collective knowledge base. I truly believe those in our technology community will find value from our free, private environment. Whether it’s in a startup, a side project, user group, open source project or hackathon, these communities can now ask questions that might be off-topic to our public site, but are essential to their knowledge base.\n\n\n\nWe know that sharing knowledge and collaboration is critical to companies and teams of all sizes. We also know people need a large enough group and time to see the impact and value of a knowledge sharing and collaboration platform like Stack Overflow for Teams. Our previous 30 day free trial of our Basic tier wasn’t long enough. Now, anyone can experience Stack Overflow for Teams free with a significantly sized group for as long as they need.\n\n\n\nWith the roll out of our new Free plan, we’ve enriched our Basic plan to now include a single sign-on (SSO) without changing the current price.  SSO allows users seamless and secure access to our critical platform anywhere, anytime across all of our paid products. \n\n\n\nIf you want to know more about all of our plans, learn more here. \n\n\n\nStart your free Team\n\n\n\nCreate a free Team by following the link, and invite with your colleagues or a group of people you’re looking to collaborate with. \n    Tags: announcements",
        "url": "https://stackoverflow.blog/2021/03/17/stack-overflow-for-teams-is-now-free-forever-for-up-to-50-users/"
    },
    {
        "title": "Building momentum in our transition to a product led SaaS company",
        "content": "I’ve just wrapped my first calendar year with Stack Overflow, through which I’ve experienced the excitement and energy of a full fourth quarter, typically the busiest and most important period for the business. 2020 was a year full of challenges unlike anything we’ve seen in a century, and I’m proud to say that we met the challenge at hand. \n\n\n\nDespite the global headwinds, we saw impressive growth in our Stack Overflow for Teams Enterprise and Advertising businesses. Our Stack Overflow for Teams Enterprise business experienced our strongest quarter in the history of the company in new customer additions and new annual recurring revenue. Advertising had its best growth year in the history of the company and its best quarter ever. Talent, which was heavily impacted by the shock of the pandemic, stabilized in the last two quarters of the year, positioning itself well for a rebound when the economy begins to more fully reopen. \n\n\n\nStack Overflow for Teams continues to broaden its customer base and forged new partnerships with the tech sector. As an example, Box, a customer that I elaborate on below, brought on Stack Overflow for Teams to improve collaboration in the “new normal” of remote, asynchronous work. And some of the world’s largest banks and telecom companies signaled their belief in the value of our product by significantly expanding their investment in their private instance of Stack Overflow.\n\n\n\nStack Overflow for Teams ‘Business’ tier user growth.\n\n\n\nWe are thrilled that our Stack Overflow for Teams product continues to drive developer and technologist productivity through rapid sharing of key internal information. Customers using Stack Overflow for Teams tell us how it’s reducing the time it takes to onboard new developers and technologists – for some by as much as 40% – and giving time back to all the people who support the new hires. Q&A is also a powerful tool for everyday productivity, and several customers have told us that their support engineers see 20-30% reduction in help tickets, allowing them to focus more on solving the root cause of the issues people are asking about. \n\n\n\nCustomers have seen a 40% reduction in the time it takes to onboard new developers\n\n\n\nI make it a point to speak to our enterprise customers on a weekly basis and I’m energized by the excitement CIOs exhibit around the acceleration of their plans in today’s fever pitched technology environment. Developer productivity in a distributed work environment, cloud transformation, DevOps, cloud security, and big data are top of mind for technology executives. There is a wealth of knowledge on these topics across Stack Overflow’s public platform, and we have seen interest in these sites continue to expand. On average, monthly signups in 2020 consistently increased by at least 20% over the year prior. Knowledge on these same topics is populating instances of Stack Overflow for Teams and driving productivity within companies all over the world.\n\n\n\nTo illustrate what’s happening with our tools, let me share a little more about our story with Box. The company went public in 2015 and has around 2,000 employees and several hundred engineers. It provides modern cloud capabilities with enterprise grade security and compliance to companies like AstraZeneca, Nationwide Insurance, Morgan Stanley, and GE.\n\n\n\nA Teams customer saw a 20-30% reduction in help tickets, allowing  their support engineers to focus\n\n\n\nIn 2019, Eddie Flaisler, the company’s head of enterprise engineering, decided there was a challenge Box needed to address. “The biggest issue we had as an engineering organization was knowledge transfer and searchability of knowledge. I think it is very common in engineering organizations that you find people have a lot of institutional knowledge, a lot of things that they keep in their head. Either it is not documented anywhere, or it is in a collection of Box notes, Google docs, Confluence pages, just all over the place.”\n\n\n\n\n\n\n\nOver the last year and a half, 650 users at Box have provided over 900 answers which have been searched and viewed thousands of times on their Stack Overflow for Teams instance. “Stack Overflow is heavily used at Box as the interface for engineering teams, in terms of how other teams, be it support, product, or marketing, can communicate with them,” explains Flaisler. \n\n\n\nIt was important that employees be able to get answers to technical questions, but engineers also needed time for focused work. Avoiding context switching was key. “If you have a question, if you have some clarification that you need, instead of overwhelming everyone on Slack or an email, there’s a queue. Questions are created, somebody is monitoring the questions and responding, and this has improved productivity across the board.”\n\n\n\nNew products and processes\n\n\n\nStarting with this blog post and going forward each quarter, we’ll be making a slight shift to the content. Community members have shared their feedback, and asked for more detail on what Stack Overflow is doing in regards to the public site, moderation, and user experience. We want to deliver that, so we are planning a new series of posts written by Teresa Dietrich, our chief product & technology officer, who thinks deeply about these topics every day. My quarterly blog posts will focus more on what’s happening with our company, our paid products and overall business. Here are several of those updates.\n\n\n\nThis month we released For You, a new personalization feature for Teams that involved collaboration across Product, Engineering, and Marketing in order to launch successfully. This feature helps customers rapidly share solutions within their organizations by keeping information fresh and prompting users to engage in building a knowledge community.\n\n\n\nWe have lowered the barrier to entry for Stack Overflow for Teams, offering customers the ability to sign up for our Basic or Business tier through a self-serve portal we launched last quarter. That led to a more than five fold increase in interest for these products in December. That same month, Stack Overflow for Teams was also presented with a Stratus award for outstanding product in the cloud collaboration category. We continue to invest in and innovate on this product, for example launching version 3 of our popular Slack integration earlier this week.\n\n\n\nIn December of 2020, we announced a new partnership with Times Bridge of India. They became an investor in our latest funding round and are working with us to expand our Stack Overflow for Teams product to the fast-growing SaaS market in India, which is expanding around 30% a year. We join a great group of Times Bridge partners, including Coursera, Airbnb and Uber, and we’re excited to begin working with entrepreneurs and innovators across this region.\n\n\n\nIn December, we also soft-launched our new process for employers with ad hoc hiring needs (companies hiring five or fewer roles, for initially shorter than six months, and with no need for more complex hiring and branding products). The new process consisted of a streamlined purchase flow for these customers that should get them on the platform and hiring fast. After a successful pilot, we began a phased launch in the United States in January. \n\n\n\nCrafting a Strong Culture\n\n\n\nStack Overflow has always focused on our culture and we are thrilled to be recognized by Built In in their Best Places to Work rankings across four different categories! Over the December break, we were also recognized as one of the Best Work-From-Home companies by PowerToFly, a women-led recruitment platform.\n\n\n\nI want to give a big thank you to our people team for their work, which made these awards possible. I also want to give a warm welcome to Debbie Shotwell, who joins our senior leadership team as the new Chief People Officer. As we enter Stack Overflow’s next phase of growth, Debbie will partner closely with me and our leadership team to lead the company’s people strategy. Debbie, who was previously Chief People Officer at Saba Software, has 20 years of experience delivering business transformation and creating innovative cultures aligned with the rapidly changing needs of the workforce. We continue to bring on top talent from the SaaS industry and have lots of open roles.\n\n\n\nWhat Comes Next\n\n\n\nLooking forward, we have some exciting announcements planned for the first half of this year. We are envisioning ways for companies to better support their tools and technologies through our public platform, driving value for the creators, but also for the consumers, who will have an easier time finding high quality answers to their questions.\n\n\n\nWe are also excited to find new ways to get Stack Overflow for Teams into the hands of more customers with a wider variety of use cases. What began as a product used solely by engineering teams has expanded to include product, product marketing, data science, product design and customer success. We want to create a version that would provide immediate value to the tens of millions of developers and technologists who visit our public sites each month. Stay tuned for some exciting news here in the coming weeks.\n\n\n\nWith the rollout of vaccination campaigns underway in many parts of the world, I am hopeful that we are turning a corner towards a brighter, healthier 2021. Remote work will continue to be the norm for most technical workers through the next several quarters, and we believe that a fundamental shift has occurred during the last year, with many companies having a far greater percentage of remote workers for the long term. Stack Overflow was created to help people from across the globe share knowledge, improve their productivity, be more agile, and drive the speed of innovation. Our mission matches the moment, and I’m excited for Stack Overflow to continue empowering developers and technologists with the tools and information they need to succeed.\n    Tags: company",
        "url": "https://stackoverflow.blog/2021/01/27/building-momentum-in-our-transition-to-a-product-led-saas-company/"
    },
    {
        "title": "Communities and Connections will power our growth in 2021",
        "content": "This is my fourth in a series of quarterly CEO blog posts. As I reflect on my first year at the company, I’m more excited than ever about our path ahead and the transformation that is underway at our company to realize our full potential and mission.\n\n\n\nI came across an interesting question on MathOverflow recently. It asked for examples of mathematical models to explain the structure of spider webs. One of the key properties of these beautiful creations is that they can avoid concentrations of stress, even when some of the threads are broken. Spider webs are a remarkable example of resilience. \n\n\n\nThis month marks my one year anniversary since joining Stack Overflow as CEO. When I left Texas in October and spent months working from our headquarters in New York, I never could have imagined the road ahead; for myself, for this company, and for the entire world. Our office in New York is empty today, our global team is working remotely, and I’m back in Texas. But our mission continues. Through all the challenges, one of the things I have observed with admiration is just how adaptable and resilient we can be as an organization and as a community. To our employees, our customers, and our community, I want to give my thanks for your perseverance. \n\n\n\nThere is a lot for our company to be proud of and we have some exciting work ahead of us. We completed an important round of fundraising while navigating an ongoing pandemic. We have seen significant growth in our Stack Overflow for Teams business  as remote, asynchronous work becomes more critical to success, and we enter Q4 with record amounts of interest in the product. We’ve found that our customers want to be able to create a Team quickly, which is why we’ve now enabled a self-serve option for our Business plan of Teams. Starting this week, you can create a new Team, invite folks, and start sharing information within minutes.\n\n\n\nDuring my first quarter with the company, we all met up in Austin, Texas to connect and plan for the upcoming year. This year, we held a company-wide virtual meetup to lay out our 2021 strategic goals and unified product strategy and vision. We have followed a unique path and approach, one that started with establishing a community, coalesced around a brand, and is now focused on building products based on what we have learnt from our users to make their lives more efficient and productive.  Below is a slide I shared with the entire company during our virtual meetup that highlights our two strategic priorities and three foundational pillars for 2021. \n\n\n\n\n\n\n\nAs I look ahead to my second year at the company, my team and I are focused on helping our global community of users and customers build and maintain connections. At Stack Overflow we are focused on creating platforms and products that help users and customers to share information, build their knowledge, and collaborate more efficiently. Whether it’s Stack Overflow, our technical Stack Exchange sites or Stack Overflow for Teams inside organizations, we are in the business of building digital communities, and the connections one finds in these groups are more essential in this increasingly remote world than ever. \n\n\n\nBuilding Bridges in the Community\n\n\n\nThe challenges we face today as a result of the pandemic are acutely felt by students and recent graduates who are trying to complete their education or find a start to their careers. We know from our Developer Survey and social media that our public site is utilized actively by students learning to code, and we wanted to learn from them as well. New York City’s Summer Youth Employment Program (SYEP) is the nation’s largest youth employment program, historically connecting NYC youth between the ages of 14 and 24 with career exploration opportunities and paid work experience each summer. Stack Overflow recently took part in SYEP’s Summer Bridge 2020, helping a cohort of young learners to get first-hand experience with the tech industry. \n\n\n\nMany of these young learners have visited our sites when they needed help with a technical problem, but not as many had taken the next step of contributing their own questions and answers. We asked them to form groups and present us with ideas for how to increase participation. We are considering their suggestions for educational content and working to make the rules of our communities more transparent and accessible. \n\n\n\nWe continue to focus on improving our working relationship with the community and to address long standing issues. We have read the letters, meta posts, and comment threads from passionate users who sincerely want to help improve our sites and to make this a place where everyone feels safe and welcome to contribute. \n\n\n\nOur users had also been asking for us to move our editor over to highlight.js. It’s open source and actively maintained, so we thought it would be a better bet for the long term than Prettify, which was discontinued in April. This is a nice example of work from our Stack Overflow for Teams group migrating over and making a difference on our public Stack Overflow website. You’ll see more interplay and mutual benefit between these two products in the future.\n\n\n\nOur community team also put tremendous effort into a Ticket Smash event, working our way through a backlog of requests, bugs, and fixes. We made it through all 631 tickets in those two weeks. The team worked on issues that our moderators escalated and got a much better understanding of what our moderators face every day. Their tireless work on behalf of the network is always awe inspiring.\n\n\n\nWe are also working hard to make our community more diverse and inclusive, and that means prioritizing racial equity efforts and taking steps to help fight racism in the tech community and beyond. On that front, our leadership team has continued to make good progress in close partnership with the company’s Black and Brown Affinity Group (BnB). The BnB group has identified a short list of companies with which we hope to partner in order to assist them in their work through in-kind contributions of our products. Internally, we are making more resources available to our employees, and we recently published a formal Diversity, Equity, and Inclusion Policy that includes an update to the company’s hiring policy. Look out for more updates in these quarterly CEO blog posts and across all of our channels.\n\n\n\nInvesting in Stack Overflow for Teams and Transforming into a Product-led SaaS Company\n\n\n\nWhat does it mean to be a product-led company? To us, it means focusing on solving users’ problems to drive adoption and engagement, creating viral growth for our products. Rather than relying heavily on sales and marketing, we deliver value to our users and provide natural avenues for them to expand their interaction with our products, in a self-serve manner. We’ve been user focused as a company since our public platform was launched over a decade ago, so this is an extension of that thinking into our product portfolio.\n\n\n\nBeing product-led means solving real problems for our users within the product and allowing data on product usage to guide our next steps on our roadmap. Putting the user journey front and center lets us leverage the strength we have as an organization – learning and feedback from our public community. We want to push the solution closer to the user, giving them the choice and allowing them to decide when it’s time to level up and add more features. \n\n\n\nOne of the best ways to understand where you can improve your products is by working to adopt them into your own daily use. Since my last quarterly blog post, we have rolled out a new powerful feature in Stack Overflow for Teams called Articles. The goal is to provide a new content type—long form prose (with Stack Overflow’s familiar principles) — that can sit side by side with shorter Q&A for developers and technologists to share policies, how-to guides, product launch retrospectives, and more. Teams can then organize Articles and Q&A into Collections, providing a single source for all knowledge on certain topics. This combination of Q&A and longer form content is a powerful mechanism for efficiently sharing comprehensive technical knowledge within organizations. You can check out these features for yourself on the new Stack Overflow for Teams Tour page for our Business tier.    \n\n\n\nWithin our company, our teams have been working to migrate information from wikis, FAQs, and other forms of documentation into our own instance of Articles. It’s given us a new perspective on how we can be most efficient and supportive when onboarding new employees, drive distributed teams to collaborate and engage employees irrespective of their location or function —- and how that process can actually result in high value documentation that helps the entire team be more connected and aligned, asynchronously. \n\n\n\nFor example, Josh Duffney, a site reliability engineer, joined the company in June of this year and began asking lots of questions on our internal instance of Stack Overflow for Teams.  Through this process, something that in the past might have been done with shoulder taps, lunchtime chats, email threads, or casual messages in a work chat, he was transforming something intangible into digital artifacts that everyone on the team could use and improve. “A lot of what I have been learning and committing to Stack Overflow for Teams is institutional knowledge. A good example is how to test our Terraform modules. I can ask that question, record the answers, and then bring a bunch of Q&A together to create an Article that documents the difference between my assumptions and the reality.” Our clients have created hundreds of Articles, and the feedback we have been getting from them will be invaluable as we work on the next version of this product.\n\n\n\nWe are especially excited for what’s to come. Our Series E investment means a large investment in our Stack Overflow for Teams product, so it can be more useful to current users and much more widely adopted. We have many exciting product innovations and announcements to come through the end of the year and into 2021, like a deeper partnership with Slack that was teased a bit at Slack Frontiers earlier this month. We are partnering with them on their Org-Wide app, which is available now for select enterprise-level customers and will be rolling out more widely soon. We are excited to continue deepening the integration between our workplace toolkits. The combination of leading synchronous collaboration tools like Slack with leading asynchronous collaboration tools like Stack Overflow is a powerful efficiency driver for developers and technologists.  \n\n\n\n\n\n\n\nAt the beginning of October, we also announced the completion of our SOC 2 Type II audit for our Enterprise tier of Stack Overflow for Teams. This reinforces that the controls we put in place match trusted requirements, including international security, and that our Enterprise customers using Stack Overflow for Teams have their data well guarded. \n\n\n\nFinally, we released Enterprise 2020.2 for Stack Overflow for Teams (Enterprise tier) which included a power-packed set of features for our Enterprise customers including Articles, Collections, User Groups, Dark Mode and Question Following.\n\n\n\nAdvertising and Talent\n\n\n\nThe third quarter saw the highest number of ads transactions on our platform in the company’s history. One of our clients during this period was Twilio, which used our Direct to Developer program to get their technical blog posts in front of programmers searching for similar topics on Stack Overflow. Following the launch of their campaign, traffic to many of these articles doubled or tripled, with the monthly readership in some cases increasing by a factor of ten. “There is tons of content that before wasn’t really getting much attention and now we see a lot of traction,” says Troy Blanchard, a senior manager on Twilio’s marketing campaign. \n\n\n\nWith Stack Overflow, Twilio was able to reach developers on their second screen, the knowledge base visited by over 100 million developers and technologists each month, many of whom visit the site multiple times a week to find help with coding questions. “It’s been this smooth journey from looking up a question on Stack Overflow to finding interesting content to learning more about Twilio. It’s hitting home with the developer audience.” \n\n\n\nI think one of the reasons Twilio’s campaign worked so well on Stack Overflow is that we share the same values when it comes to advertising. Stack Overflow ads continue to be simple. You won’t find animated GIFs, videos, or pop-ups. But for Twilio, that’s not the point. Relevance, reach, and respect for the audience are the keys to success when trying to reach programmers. The key is to have share of mind on the site most developers visit multiple times a week. “Our chief product officer asked me, are we doing stuff on Stack Overflow?” explains Blanchard. “As the product officer, he’s not asking to see a Twilio billboard every time he goes to the airport. He’s thinking, I want people to see Twilio when they are in the act of building something with code.” \n\n\n\nRegarding our Talent business, while there is still uncertainty around companies hiring in the midst of the pandemic, we have been seeing consistent and steady month-over-month growth from our low point in March. The volume of interest is increasing, a strong early indicator that the market is improving. Our team continues to find new ways to adapt to our changing market conditions. We added new features to our reporting toolkit so Talent customers can track their follower growth and new products so that companies without immediate hiring needs can continue to invest in building overall awareness and mind share for their brand among developers. And new features, like Company Awareness, allows brands to stay top of mind with developers and strengthen their candidate pipeline even when they aren’t directly listing openings.\n\n\n\nWhen I think about what’s happening with workplaces these days, it’s becoming increasingly clear that office life for most knowledge workers is unlikely to return until the summer of 2021, and even then, many big tech companies have declared that workers who have moved remote during this period can continue to operate far from cities or campuses. A recent piece in the New York Times found that a growing number of companies are delaying the reopening of their offices or allowing employees to remain remote indefinitely. According to a recent study, 73% of U.S. employees fear that returning to an office would pose a significant risk to their health.\n\n\n\nOur senior staff have been contributing to the blog, sharing advice on hiring, communication, and professional development for a distributed workforce in a remote world, sharing our own experience with these tectonic shifts across industry and labor. Luckily we have experience building communities online. The New York Times cited us as a place to learn, network, and search for new employment opportunities. And speaking of jobs, we have a new Careers page up and lots of open positions we are hiring for here at Stack Overflow.\n\n\n\nLooking to the Future\n\n\n\nStack has always been about enabling asynchronous collaboration, and the visitors who rely on us for answers come from every corner of the world. That approach is becoming increasingly valuable in a time when so many offices are closed and colleagues are working remotely from home. We have seen the move to remote reflected in usage of our sites, with many companies expanding their use of cloud services and remote deployments. \n\n\n\nFor example, May, June, and July saw the highest number of new questions being asked for AWS, Microsoft Azure, and Google Cloud Platform, with some months reaching as high as 50% more questions than the same time last year. I am also so excited to see the interest in transformational technologies continuing to accelerate on Stack on sites like Quantum Computing Stack Exchange, Artificial Intelligence Stack Exchange and Open Source Stack Exchange.\n\n\n\nOur public site has now reached a tremendous milestone, with over 20 million questions asked and answered on Stack Overflow alone. It was designed from the ground up to enable users from anywhere in the world to collaborate asynchronously in order to build a powerful repository of information.\n\n\n\nWith Stack Overflow for Teams, companies like Bloomberg, Box, and Microsoft are building incredible knowledge bases within their own organizations. I’m excited about our ongoing research into creating new meaningful and thoughtful ways for developers and technologists to connect with each other and more directly with technology companies that are building sub-communities on Stack Overflow. We have seen companies like Snowflake and Sencha move developer support from internally developed forums to Stack Overflow, an effort to meet programmers in their workflow, at the place they already visit several times a week. \n\n\n\nThere is a lot more potential we can explore when it comes to helping companies support their platforms and technology by connecting their experts with the users seeking information on our sites. Since Snowflake switched their technical Q&A to Stack Overflow in 2019, questions with its tags have grown substantially.\n\n\n\nSource: Stack Overflow Tag Trends\n\n\n\nTraditionally, a company would start with a product, build a brand around that, and see a community form around the use of their product or the spirit of their brand. At Stack Overflow, we have done just the opposite. We began with a community and a mission to democratize access to information on code. Over time, collaboration and knowledge sharing became the core of our brand. Last but not least, we built products that grew out of the foundation our community had created and out of what we learned from crafting great Q&A systems for them to use. When people ask what our story is these days, I tell them it’s quite simple: we are in the business of building great technology communities. As developers and technologists increasingly find themselves sharing knowledge and collaborating in a remote and asynchronous environment, our mission has become more important than ever. Thank you for continuing to support it.\n\n\n\nWe are happy to hear your comment below or in our discussion post on Meta Stack Exchange.\n    Tags: announcements, ceo quarterly post, community update, stack overflow for teams",
        "url": "https://stackoverflow.blog/2020/10/28/communities-and-connections-will-power-our-growth-in-2021/"
    },
    {
        "title": "Announcing the launch of our Slack V.3 integration",
        "content": "In 2018, we released an integration between Stack Overflow for Teams and Slack. It’s now one of the most popular ways for users to interact with our platform, and we have been steadily upgrading it with new functionality based on feedback from customers. We’re pleased to announce that we’re releasing version three of our Slack integration with plenty of new features  to reduce context and tool switching while streamlining the developer workflow. \n\n\n\nWith this release (available for Basic and Business today, for Enterprise in the 2021.1 release), we wanted to dig into some of the technical details of what we did. There’s a lot of great new features, and a lot of work behind the scenes to make them a reality. For reference, the integration that most people use was version two; version one was a bare-bones integration that just supported notifications (and is still used by a small fraction of Teams).\n\n\n\nThis version brings several new features that will improve your overall experience:\n\n\n\nA more secure and configurable authorization experience.Org-wide installs, so organizations with multiple Slack workspaces can add our integration to all of them at once. Ask questions directly from Slack with /stack ask. A one-click autoupdater that uses a modal dialog to make sure the app is current on all associated workspaces.\n\n\n\nAdditionally, our previous integrations were built on functionality that has since been deprecated. So the work we’ve done here sets us up to provide even more functionality in future versions. \n\n\n\nWe had originally worked with Slack to be one of their launch partners in implementing their workspace apps. When the developer preview for the feature ended, they recognized that this was the wrong path for them, and they deprecated workspace apps. While we had been planning to include features that built on workspace apps, Slack was such an incredible partner on this that we were able to pivot smoothly.They reached out and gave us a shared support channel and were incredibly responsive to our support questions. We wouldn’t have been able to implement the features in this release without them. \n\n\n\nWe had to do a fair bit of work to make sure that the new granular bot version had feature parity with what we had previously. Asking you all to upgrade only to lose functionality would have been a hard sell. \n\n\n\nIn this article, we’ll talk about how we built this new version and the path we took to ensure our new bot useful, usable, and secure. \n\n\n\nAuthentication and permissions for the granular bot\n\n\n\nOne of the primary features of the Slack integration is notifications. You can configure Stack Overflow for Teams to send a notification for a channel whenever there’s activity you are interested in. \n\n\n\nPreviously, the mechanism were used for notifications was incoming webhooks. These are URLs that we could post to whenever we wanted to send a notification to a channel. These URLs were automatically generated, so that Stack Overflow for Teams had easy access to post to any channel. \n\n\n\nWe decided to stop using incoming webhooks for a good reason: improved security. If one of these URLs returned an error, that has potential to get logged on our side. Now we (and anyone who got a hold of our logs) could spoof whatever messages they want to corporate Slack channels. For some of our more security conscious customers, this was a big no-no. They had actually asked us to disable this feature because it opened a new angle of attack.\n\n\n\nWith these updated scopes and without the incoming webhooks, we made some InfoSec teams quite happy and they were green-lighting our applications. But we still had to figure out how to get notifications sent to the right channels. Without the incoming webhook URLs, we were restricted to scopes available to our Slack bot. \n\n\n\nFor public channels, this wasn’t much of a problem. The bot just has to join all of the channels that one might want to send notifications to. We give workspace admins an opt-in setting that instructs the bot to automatically join all public channels, which has to be done one by one. It’s kind of a pain in the butt, but it worked fine on our testing environments. \n\n\n\nOnce we decided to dogfood the app and try it out on our own workspace, it broke completely. On our testing workspace, we have maybe ten channels. On our company’s workspace, we have something like 350. In stepping through these one by one and joining them, not only did it take a long time, we hit Slack’s rate limits. So we had to build a background queue on our end, which would send join messages until we saw a failure, then stop processing the queue and wait a few seconds. \n\n\n\nBut for private channels, this meant that the bot had to be manually added to a channel by a user before anyone could consider interacting with it. This may seem like an extra hassle, but it’s actually a good thing. Imagine you’ve been invited to a private channel to discuss an upcoming feature. Just revealing the name of the channel could be a massive information breach. \n\n\n\nThere’s another side effect to having to manually add the bot to channels. Imagine you have a channel with hundreds of people, something like #engineering, and you don’t want it clogged by bot spam. Admins can now exclude a bot from a channel, preventing everyone else from targeting it with notifications, no matter what their permissions, even if the channel is public. \n\n\n\nAs a result of these changes, we had to build a channel selector drop-down in Stack Overflow for Teams. This is not something we wanted to do; previously, when you were choosing which channel to send a notification to, we would send you to your Slack instance. Slack would then show you a channel selector based on your privileges. Instead, we had to create an external component that should only have access to what the bot has access to, and nothing more. Unfortunately for us, that type of scope is not currently supported by the Slack API. \n\n\n\nOur options were to request all public channels or all private channels—separate and complimentary scopes. But both scopes are all of nothing. As we talked about earlier, just displaying some of those private channel names could be a huge problem. We don’t want to do that, and our customers don’t want us to do that. So our channel browser only has the scope to access public channels. We need to do a second check on these channels to make sure that the bot has access. Once we configure this, we can then access the bot directly to post notifications. \n\n\n\nOne install to rule them all\n\n\n\nIt’s becoming more common for large companies to have multiple Slack workspaces—one workspace for C-level execs, one for the engineers, one for sales, etc. Each of those workspaces may have their own administrator. But if you’re installing an integration with an enterprise-level piece of software like Stack Overflow for Teams, you’ll likely want that to work on every workspace in your organization. If you have ten workspaces, that’s ten installs coordinated with ten admins. Org-wide installs help to reduce the administrative burden that comes with delploy app integratiosn across multipel workspaces. \n\n\n\nBut it was worse than that. Our Enterprise customers have the option of installing our software on a local or organization-controlled server, which means the endpoint that the Slack integration interacts with will be at a different URL than normal. Admins on Enterprise installs would have to manually edit this URL in the app; we provide instructions on how to do this, but still, this makes ten edits to apps to make, ten installs on ten workspaces with ten admins. That’s exhausting. \n\n\n\nWith this release, we’re introducing org-wide installs. One person—the organization admin—can install the integration on all workspaces. If Enterprise customers need to edit the endpoint, they do so on one integration app and then install that. If the organization needs to create new workspaces, then they can make it installed by default so it already has the application baked in. \n\n\n\nNow a single Teams user can be associated with multiple Slack workspaces, including multiple unconnected workspaces. Because of this, we had to change our database schema to support more than one workspace per user. Previously, we had one Slack access token associated with each Stack Overflow for Teams user. But now we store as many tokens as the user has workspaces in a single grid. \n\n\n\nThis can get complicated (and annoying) with a lot of workspaces in an org. In order to send notification DMs to Slack users when they are tagged in a question or otherwise need to be directly notified, we have to store a mapping of these users in addition to the access tokens. This is based on the email address, which lets us automatically map any users that match. \n\n\n\nIf a user has a different email address on Slack and Stack Overflow for Teams, then you can use the new `/stack connect` command in Slack. This gives you a link that will take you to the workspace’s associated team and allow you to link your user accounts. On the one hand, it’s not great for notifications because it adds a new requirement to map users. On the other hand, you can mention people on Slack when you create a question and that’s going to properly tag them on Stack Overflow for Teams. \n\n\n\nSecurity-minded Enterprise customers have some additional new options. Those worried about storing more PII on their installation or exposing their entire company mailing lists to us can turn off the mapping feature—notifications will still work. It’s as simple as a checkbox during the install process. Some might be protective of their internal information and firewall their Enterprise environment away from the rest of the internet. For them, we allow restricting their instance to outgoing-only traffic. Only notifications will work, but it still gives us the opportunity to integrate with strictly controlled environments. \n\n\n\nAsk directly from Slack\n\n\n\nFor this release, we also wanted tighter—and two-way—integration between Slack and Stack Overflow for Teams. To compliment notifications, you can now ask questions directly from Slack to help reduce context switching.  \n\n\n\n\n\n\n\nAs you can see, this command displays a modal dialog where you can create a question with all the features as if you asked it on Stack Overflow for Teams. We had to write new code to support modals, but this modal is essentially a dumb layer that interacts with Stack Overflow for Teams APIs. The only part that is doing real time work is an autocompleter for tags. Both of these functions were part of the prep code we put in place before implementing the feature; once they worked, most of the `/stack ask` feature was easy to write. \n\n\n\nWe were able to keep most of the functionality on our side and reuse the existing post insert and post validation logic. On submit, we have the barest basic validation in the modal, checking that required fields are filled in and that they have the appropriate content lengths.\n\n\n\nDespite being able to entirely reuse the existing post validation functionality, it turns out that the solution wasn’t so simple. At one point, one of the automated unit tests failed in a weird way. Like a lot of mysterious errors, it worked on the dev machine. However, the dev machine was set up for developing against Teams Basic and Business, while the failing test was being run against an Enterprise environment, which is code-wise closer to the public Stack Overflow site and therefore has much stricter rules around what a valid question is. In this case, the test was periodically failing because the “duplicate post” checks were triggering a warning if the unit tests were run in a specific order.\n\n\n\nThe validation logic that checks word counts, grammar, and more has to work inside of the modal. And any errors that come back from failed validations have to be visible in the modal. Those errors have to be one-to-one with what comes back from the Teams instance. Not to brag, but we did such a great job matching the behavior on both sides that it messed us up with a later automated test. Nice job, us. \n\n\n\nReducing friction now and forever\n\n\n\nChat programs like Slack are an integral part of the contemporary workplace—especially remote workplaces—so we want to make sure that the Stack Overflow for Teams experience integrates seamlessly into Slack. Requesting and providing information should be frictionless, and with this latest iteration of our Slack integration, we think the experience is even easier than before. Even with the challenge of building towards a changing paradigm, this is a better integration than before. \n\n\n\nOf course, this won’t be our last version. The work that we put into 3.0 will pay off in future versions, and we’ll be in a better position to implement new features. For example, we’re looking at expanding on the base functionality written for modal support to add more features within Slack, such as creating and managing notifications. \n\n\n\nWe hope you enjoyed this peek under the hood of what goes on with Stack Overflow for Teams development. It’s a product that we think will make a lot of people more productive, and we look forward to making collaboration and knowledge sharing easier than ever.",
        "url": "https://stackoverflow.blog/2021/01/26/stack-overflow-for-teams-slack-integration-v3/"
    },
    {
        "title": "Best practices can slow your application down",
        "content": "Update: I realize we didn’t add a lot of context here when telling the story of the engineering decisions we made years ago, and why we’re moving away from some of them now. This is an attempt to fix that omission.Over the past 13 years, we have progressively changed priority as a business. Early on, scaling to millions of users was our main concern. We made some tough calls, and consciously decided to trade off testability for performance. After successfully achieving that scale, much of the context has changed: we have a much faster base framework now, given all the latest improvements in the .NET world, meaning we don’t have to focus as much on the raw performance of our application code. Our priorities have since steered towards testability. We got away with “testing in production” for a long time, largely due to our (very active) meta community. But now that we’re supporting paying customers, identifying bugs early on reduces the cost of fixing them, and therefore the cost of business. Paying the accumulated tech debt takes time, but it’s already helping us get to more reliable and testable code. It’s a sign of the company maturing and our engineering division re-assessing its goals and priorities to better suit the business that we’re building for. \n\n\n\nIn software engineering, a number of fairly non-controversial best practices have evolved over the years, which include decoupled modules, cohesive code, and automated testing. These are practices that make for code that’s easy to read and maintain. Many best practices were developed by researchers like David Parnas as far back as the 1970s, people who thought long and hard about what makes maintainable high quality systems. \n\n\n\nBut in building the codebase for our public Stack Overflow site, we didn’t always follow them. \n\n\n\nThe Cynefin framework can help put our decision into context. It categorizes decisions into obvious, complicated, complex, and chaotic. From today’s perspective, building a Q&A site is a pretty well-defined—obvious—problem and a lot of best practices emerged over the past years. And if you’re faced with a well-defined problem, you should probably stick to those best practices.\n\n\n\n\n\n\n\nBut back in 2008, building a community-driven Q&A site at this scale was far from being obvious. Instead, it fell somewhere in the “complex” quadrant (with some aspects in the “complicated” quadrant, like tackling the scaling issues we had). There were no good answers on how to build this yet. There were no experts who could show us the way. There were only a handful of people out there facing the same issues.\n\n\n\nFor over a decade, we addressed our scaling issues by prioritizing performance everywhere. As one of our founders, Jeff Atwood, has famously said, “Performance is a feature.” For much of our existence, it has been the most important feature. As a consequence, we glossed over other things like decoupling, high cohesion, and test automation—all things that have become accepted best practices. You can only do so much with the time and resources at hand. If one thing becomes super important, others have to be cut back. \n\n\n\nIn this article, we walk through the choices we made and the tradeoffs they entailed. Sometimes we opted for speed and sacrificed testing. With more than a decade of history to reflect on, we can examine why best practices aren’t always the best choice for particular projects.\n\n\n\nIn the beginning…\n\n\n\nWhen Stack Overflow launched in 2009, it ran on a few dedicated servers. Because we went with the reliability of a full Microsoft stack—.NET, C#, and MSSQL—our costs grew with the number of instances. Each server required a new license. Our scaling strategy was to scale up, not scale out. Here’s what our architecture looks like now.\n\n\n\nTo keep costs down, the site was engineered to run very fast, particularly in accessing the database. So we were very slim then, and we still are—you can run Stack Overflow in a single web server. The first site was a small operation put together by less than half a dozen people. It initially ran on two rented servers in a colocation facility: one for the site and one for the database. That number soon doubled: In early 2009, Atwood hand-built servers (two web, one utility, one database) and shipped them to Corvallis, OR. We rented space in the PEAK datacenter there, which is where we ran Stack Overflow from for a long time.\n\n\n\nThe initial system design was very slim, and they stayed that way for most of the site’s history. Eventually, maintaining a fast and light site design became a natural obsession for the team. \n\n\n\nSafety’s off\n\n\n\nIf you look at the programming languages that are used today, they fall on a spectrum of high and low-level based on how much that language abstracts the bare metal functionality. On the upper end of high-level languages, you have JavaScript: memory allocation, call stacks, and anything related to native machine code is handled transparently. On the other end, you have C: allocate and free memory for variables manually, no garbage collection, and doesn’t really handle vectorized operations. High-level languages provide safety but have a lot more runtime overhead, so can be slower. \n\n\n\nOur codebase works the same way. We’ve optimized for speed, so some parts of our codebase used to look like C, because we used a lot of the patterns that C uses, like direct access to memory, to make it fast. We use a lot of static methods and fields as to minimize allocations whenever we have to. By minimizing allocations and making the memory footprint as slim as possible, we decrease the application stalls due to garbage collection. A good example of this is our open source StackExchange.Redis library.   \n\n\n\nTo make sure regularly accessed data is faster, we use both memoization and caching. Memoization means we store the results of expensive operations; if we get the same inputs, we return the stored values instead of running the function again. We use a lot of caching (in different levels, both in-process and external, with Redis) as some of the SQL operations can be slow, while Redis is fast. Translating from relational data in SQL to object oriented data in any application can be a performance bottleneck, so we built Dapper, a high performance micro-ORM that suits our performance needs.\n\n\n\nWe use a lot of tricks and patterns—memoization, static methods, and other tricks to minimize allocations—to make our code run fast. As a trade-off, it often makes it harder to test and harder to maintain.\n\n\n\nOne of the most noncontroversial good practices in the industry is automated tests. We don’t write a lot of these because our code doesn’t follow standard decoupling practices; while those principles make for easy to maintain code for a team, they add extra steps during runtime, and allocate more memory. It’s not much on any given transaction, but over thousands per second, it adds up. Things like polymorphism and dependency injection have been replaced with static fields and service locators. Those are harder to replace for automated testing, but save us some precious allocations in our hot paths\n\n\n\nSimilarly, we don’t write unit tests for every new feature. The thing that hinders our ability to unit test is precisely the focus on static structures. Static methods and properties are global, harder to replace at runtime, and therefore, harder to “stub” or “mock.” Those capabilities are very important for proper isolated unit testing. If we cannot mock a database connection, for instance, we cannot write tests that don’t have access to the database. With our code base, you won’t be able to easily do test driven development or similar practices that the industry seems to love.\n\n\n\nThat does not mean we believe a strong testing culture is a bad practice. Many of us have actually enjoyed working under test-first approaches before. But it’s no silver bullet: your software is not going to crash and burn if you don’t write your tests first, and the presence of tests alone does not mean you won’t have maintainability issues.\n\n\n\nCurrently, we’re trying to change this. We’re actively trying to write more tests and make our code more testable. It’s an engineering goal we aim to achieve, but the changes needed are significant. It was not our priority early on. Now that we have had a product up and running successfully for many years, it’s time to pay more attention to it.\n\n\n\nBest practices, not required practices\n\n\n\nSo, what’s the takeaway from our experience building, scaling, and ensuring Stack Overflow is reliable for the tens of millions who visit every day?The patterns and behaviors that have made it into best practices in the software engineering industry did so for a reason. They make building software easier, especially on larger teams. But they are best practices, not required practices. \n\n\n\nThere’s a school of thought that believes best practices only apply to obvious problems. Complex or chaotic problems require novel solutions. Sometimes you may need to intentionally break one of these rules to get the specific results that your software needs. \n\n\n\nSpecial thanks to Ham Vocke and Jarrod Dixon for all their input on this post. \n    Tags: best practices, engineering, performance",
        "url": "https://stackoverflow.blog/2021/03/03/best-practices-can-slow-your-application-down/"
    },
    {
        "title": "Introducing The Key",
        "content": "Good artists copy. Great artists steal. Greatest artists copy, then paste.\n\n\n\nSimplicity. Elegance. Form. Function. \n\n\n\nToday marks a new beginning for programmers around the world. Stack Overflow is proud to unveil our first venture into hardware, The Key™. \n\n\n\nThey say good artists copy, but great artists steal. They were wrong. Great artists, developers, and engineers copy. Then they paste. \n\n\n\nEvery day, millions of innovators and creators across the globe move society and industry forward by copy-pasting code from Stack Overflow. But for too long, this process has been stuck in the past. \n\n\n\nSay goodbye to cramped fingers, sore wrists, and wasted movement. Say hello to The Key™, a device built from the ground up to make copy-pasting code from Stack Overflow fast, painless, and fun. \n\n\n\n\n\n\n\nOur keyboard is made of 100% machine milled plastic sourced from the rarest polyurethane plants. \n\n\n\nThe switches underneath each keycap have been rigorously tested to ensure the optimal finger feel and smooth action. \n\n\n\nWhat happens when you press a keyboard? It clicks. Every day you’re working on a computer, you’re hearing thousands of clicks. Millions of clicks shape your experience each year. \n\n\n\nOur click’s volume and tone were crafted by sampling the natural wonder of song bird chirps. We run that audio data through cutting edge deep learning systems to produce a sound that is optimized to improve productivity and mood.\n\n\n\nEach key cap has been precisely etched using industrial grade lasers normally reserved for diamond cutting and quantum fusion drives.\n\n\n\nThe Key™ is compatible with virtually any computing device. From a Raspberry Pi to a high end gaming rig, cutting edge copy-paste is within your reach.\n\n\n\nFor now, The Key™ is a stand alone device, but in the future, it will unlock an ecosystem of creativity. Our R&D department is already at work on incorporating virtual, augmented, and uncanny reality into the roadmap. \n\n\n\nThe Key is available for pre-order now! Be the first to get yours.\n\n\n\nUPDATE: There has been a lot of interest in purchasing a real life version of our prank. The good news is we anticipated this might happen and we’ve been working on something along these lines. Stay tuned for more!\n\n\n\nUPDATE 2: The Key is actually, for real available for pre-order. Our original production line sold out in six hours, so please be patient. \n\n\n\n\n    Tags: April 1, double take, pasta",
        "url": "https://stackoverflow.blog/2021/03/31/the-key-copy-paste/"
    },
    {
        "title": "State of the Stack: a new quarterly update on community and product",
        "content": "January 14, 2021 marked my one-year anniversary at Stack Overflow. When I stepped into this role leading Product, Community, and Engineering, I couldn’t have imagined how 2020 would go. There have been incredible challenges, but I’m so proud of the work our teams did to help developers and technologists everywhere, and I’m excited about our plans for 2021.\n\n\n\nIn just one year, I’ve learned so much about Stack Overflow, Stack Exchange, our Teams product, and our Talent and Advertising businesses. I want to express my thanks to my colleagues, our community, and our users.  I’m so grateful for the honest and transparent feedback that gave context to our data, insights, and history.\n\n\n\nIn the quarterly blog post that follows, which is the first of an ongoing series, I’ll elaborate on what I’ve learned, what we’ve accomplished, and what we’re focused on in the future. I want to ensure we’re always keeping community at our center, and that means updating you all regularly with what we’re working on.\n\n\n\nWhat I’ve learned in my first year\n\n\n\nIn the last year, I have learned two fundamental concepts that I believe are key to why Stack Overflow and the Stack Exchange sites are successful but we don’t really talk about much (at least lately). \n\n\n\nFirst, when I think about the reasons why a Q&A site became integral to developers, technologists, and other learners, I believe it’s because we empower the efficient building of context around code, applications, services, etc. This knowledge is sourced from our  community’s expertise.  In technology, documentation and error codes cannot cover all the use cases, dimensions, and complexities that we encounter every day and often requires huge effort from a handful of folks to keep up to date. I think this paradigm extends to our non-technical sites.  So much of the information and advice in most technical articles is written for a broader audience.  Q&A allows for more specific and nuanced content.\n\n\n\nAdditionally, the value of Stack Overflow and the Stack Exchange Network for the vast majority of users is the reusability of existing Q&A content.  The best case scenario is that I find a question that has been asked and answered well. There are a lot of discussions and debates around content quality, but I think we can all agree that perfect content doesn’t have much value if it sits on a shelf where no one uses it. A high-quality question is specific not just to increase the chances of a good answer, but also so that others can quickly determine if the question is applicable to their problem. Great answers are clear, accurate, relevant, and complete. Anyone who finds the answer should be able to leverage it, not just the original asker. The questions and answers that are created and refined on the platform become a common good, shared and ideally beneficial to anyone who visits the site. \n\n\n\nThese fundamental understandings are important to both helping us improve and evolve the Public Platform, but are also foundational as we grow and scale our Teams product.  We have to understand which features, functionality, and norms are worth transfering from a huge, public, largely anonymous platform to a private platform shared with your colleagues where you are identifiable.  For example, in Teams, we found little to no use of the public site’s downvote feature.  User research informed us that colleagues are unwilling to downvote each other’s content but are willing to give private feedback.  For our launch of Articles, we replaced the downvote with a “Feedback” capability that allows private feedback to express to colleagues when you feel the information is incomplete, inaccurate, or out of date. \n\n\n\n\n\n\n\nQ4 2020 highlights and updates\n\n\n\nHere are a few of the updates we made in the final months of 2020 across the Public Platform and Stack Overflow for Teams, all of which helped inform the insights above and how we’re approaching 2021:\n\n\n\nWithin the Public Platform and across the community: \n\n\n\nWe added moderation capabilities to the Teachers’ Lounge chat room (where our mods hang out), a priority for our community managers.We started delivering pieces of a big overhaul of our long untouched Review Queues which direct users to what needs their attention and possible action.  You can now include tables in markdown language, a much-requested feature request. We announced that we are bringing back swag for users and are hard at work right now making that a reality. And finally, our Winter Bash this year had more participation than in the last several years and we even created a new hat on the fly to recognize users that found and shared ways to cheat at Hat Dash or who could pass a Stack Exchange trivia challenge.  \n\n\n\nWithin Stack Overflow for Teams, our SaaS knowledge management and collaboration product:\n\n\n\nWe launched the new Stacks Editor because many of those users are unfamiliar with Markdown. This work is the foundation of the alpha test we are doing on the Public Platform. We expanded and updated our Slack integration, which has great adoption across the Teams users. We also invested a lot of time into improving and expanding our self-serve capabilities across signups, onboarding, and product support.Just after the new year, we launched For You, a personalized feed highlighting actions to take and content that might be of interest to a user.\n\n\n\nThis work has only been possible thanks to a hardworking and dedicated team, and we’re continuing to add more people there. Last year, we kicked off recruitment to add folks across Product, Community, and Engineering (and across the rest of the company). We’re excited to be growing and adding new colleagues with diverse experiences, fresh perspectives, and the people power to drive our plans and deliver impact to our users.\n\n\n\nWe’re lucky to have an overwhelming response to our open roles and are hard at work on the hiring process. You have probably started to see some new Stack folks on the platform. Say hello if that’s the case!\n\n\n\nWhen it comes to new faces on the Community Team, we’re also in the process of dividing the team into more specialized sub-teams as we grow. This will improve focus and reduce the context switching for our existing CMs. As we grow our team, bringing new community managers into a more focused team reduces their initial scope of learning and more quickly allows them to support and deliver impact to our Community. If you are interested in joining us, check out our Work Here page for more information and open roles.\n\n\n\nLooking Ahead: 2021 and Beyond\n\n\n\nIn January, we published a deeper dive into our 2019 security incident, which got a lot of attention and was highly shared. In continuing our commitment to transparency and communication we shared our Q1 Community & Public Platform Roadmap as both a blog post and a meta post.\n\n\n\nWe continued our annual Stack Gives Back program where we donate towards a set of charities on behalf of our moderators based on their votes as a way to thank them for their contributions for the previous year. This year, we are going to continue to explore social impact initiatives in hopes of having an impact on developers and technologists everywhere, but also on making the world a better place.\n\n\n\nAnd finally, a quick update on our annual Dev Survey. Last year, we opened the Dev Survey on February 5, 2020 and released the results on May 27, 2020.  As you well know, an awful lot happened during that stretch and we learned our lesson around needing a faster turnaround between the two milestones.  This year we plan to launch the 2021 Dev Survey in or around June and have results back to everyone within 1-2 months. We’re focused on shortening the window from when the survey runs to when it’s released given how rapidly the world is changing right now. Look out for more soon.\n\n\n\nI hope you’re looking forward to our future initiatives as much as I am. I am grateful for our many users across all our products and the opportunity to provide value to you all. This is an exciting period of growth for Stack Overflow, and we wouldn’t be here if it wasn’t for our incredible community.\n    Tags: community, community update, product, stack overflow for teams",
        "url": "https://stackoverflow.blog/2021/03/10/state-of-the-stack-community-product-q1-2021/"
    },
    {
        "title": "An update on our product-led SaaS transformation",
        "content": "I’m writing this blog post to share an update on our product-led SaaS transformation, which I’ve discussed in a series of posts over the course of the last year.\n\n\n\nIt’s been a year of transformational change for all types of companies, Stack Overflow included. We are fortunate to have seen great growth from Stack Overflow for Teams, which allowed us to raise our Series E last July. We have seen steady growth from Stack Overflow Advertising. Even our Talent business—our oldest paid product, which was our only line of business negatively impacted by the pandemic—has continued to deliver value to customers looking for developer talent and developers looking for work, career changes, and more.\n\n\n\nAs we continue to navigate the pandemic, we try to use our mission as our compass. Our mission is to serve developers and technologists, and we want to ensure our public platform and our paid products are doing that always. In the spirit of continuing on our product-led transformation and realizing our mission, we are making some changes to Stack Overflow Talent.\n\n\n\nWe are realigning the Talent business to focus more on customer employer branding and company awareness needs, and moving away from job slots and direct hiring. This will tie the product closer to what we offer through Stack Overflow Advertising and is part of what we’re calling our “Reach and Relevance” strategy, allowing companies to reach and share relevant information with millions of developers and technologists. At the end of the day, this change unlocks greater value for our users and helps our customers better achieve success.\n\n\n\nWe are continuing to support all of our existing Talent products and these changes won’t affect any of our customers leveraging job slots or direct hiring products in the near-term, only their point of contact will change. As these products evolve or are sunset, customers will be notified well in advance.\n\n\n\nThese changes, however, impacted a small portion of employees within our Sales & Customer Success organization. We are highly appreciative of the hard work that went into the past decade to launch, support, and grow the Talent business. We would not be where we are today if it wasn’t for their dedication and drive, and we are doing what we can to support their transitions.\n\n\n\nWe hope our users and customers will continue to see and reap the benefits of our product-led transformation, which includes Teams’ freemium that launched just last month and new, upcoming launches as part of our Reach and Relevance strategy. We are grateful for your support over these last 12 years and look forward to continuing to serve you as best we can.\n    Tags: company",
        "url": "https://stackoverflow.blog/2021/04/07/an-update-on-our-product-led-saas-transformation/"
    },
    {
        "title": "Access broader knowledge with Unified Search",
        "content": "Customers have told us that they want to avoid context switching. If they are searching for an answer on Stack Overflow for Teams, they want to be able to see answers from across the public Stack Overflow as well. Until today, that ability was available on our Free, Basic, and Business tiers, but not for Enterprise customers. Today we released Unified Search, which allows Enterprise plan customers of Stack Overflow for Teams to search for answers from both their private instance and public content from stackoverflow.com. Now all customers, regardless of their plan, have access to this robust searching capability. \n\n\n\nThis means you can find answers to your engineering questions even if your engineers haven’t answered them in your private collaboration and knowledge sharing platform. This post will take a peek under the hood of this new feature and explain how we built this and which architectural trade-offs we dealt with along the way.\n\n\n\nMost of our visitors find questions on Stack Overflow via their search engine of choice and not by using Stack Overflow’s internal site search. While it’s hard to beat professional search engines at their game, our site search still offers a few advantages: First, it allows you to narrow down your search queries via advanced search operators. Second, our internal site search is the only way to search for private content as you’d have on Stack Overflow for Teams. Teams content is yours and most often contains confidential information that we never want to expose to public search engines.\n\n\n\nSearching for answers\n\n\n\nOur site search is powered by Elasticsearch. Our Elasticsearch cluster contains one index per site on the Stack Exchange network: stackoverflow.com has an index, superuser.com has an index, bicycles.stackexchange.com has an index, you get the idea. This Elasticsearch cluster is running on our own infrastructure in our own data center next to our web servers, SQL databases and Redis instances. Each Teams instance has it’s own private Elasticsearch cluster that’s completely separate from our public search cluster. If you’re an Enterprise-tier Teams customer, for example, you’ll have your own Elasticsearch cluster for your private content. That cluster would be running on the same infrastructure where we (or you, if you self-host your Enterprise instance) host your Stack Overflow for Teams instance.\n\n\n\nFor Teams, we offer different hosting models. Some of our Teams are hosted on stackoverflow.com (you’ll get a fancy URL for your team like stackoverflow.com/c/myteam). Those teams are running on the same server infrastructure and in the same data centers that we use to run stackoverflow.com and the entire Stack Exchange network. If your Team is hosted on stackoverflow.com, you’ve always had the option to run a mixed search when using our site search: You could run the same query against your Team’s content as well as the content on stackoverflow.com and the results would show up neatly grouped by origin:\n\n\n\n\n\n\n\nFor larger Teams, we also offer hosting your stuff outside of our own data centers: on Azure or—if you’re an Enterprise customer and prefer this—even on your own infrastructure. In both of these cases searching content from stackoverflow.com becomes a little more tricky. We can’t just run a search query against Stack Overflow’s Elasticsearch database as we do on Teams that are hosted on our own infrastructure. Elasticsearch is simply not accessible from your hosting environment.\n\n\n\nLarger Teams customers kept asking us for a way to search their own private content and content from Stack Overflow in one swoop. Sometimes you’re looking for information that might have been answered within your Team just as much as it might’ve been answered on stackoverflow.com. Being able to query both data sources from a single place would be comfortable. However, we didn’t have a trivial way of allowing this. We can’t just open up our data center for incoming connections from the cloud or our clients’ own infrastructure to allow them to access Stack Overflow’s Elasticsearch. So we needed to come up with a different way.\n\n\n\nThe discarded option: Searching via our public API\n\n\n\nStack Exchange sites offer a public API that you can use to fetch information from a site on the Stack Exchange network. The /search/advanced endpoint looks like a reasonable candidate for unified search. Whenever a user runs a site search on their Team we could send an extra HTTP request to our public API, pass the search query and show the results side by side with your local Team results.\n\n\n\nThere are several benefits to using the public-facing API.\n\n\n\nFirst: We’d be eating our own dog food. Using your own public-facing APIs within your product is a great way to make sure that your API is in fact useful, reliable, and actively maintained. Another benefit is low coupling. The only communication between our Teams instance and stackoverflow.com would go through a well-defined public API. We would end up with two systems—Teams and public Stack Overflow—that could each live and be useful on their own without relying on intimate knowledge of each other. Each system could change independently and we wouldn’t have to worry about breaking the other as long as we handle changes to the public API in a thoughtful and non-breaking way.\n\n\n\nUnfortunately, we had to take a different approach.\n\n\n\nMostly for two reasons:\n\n\n\nConfidentiality vs. abuse prevention: The content in Teams is confidential. And if you try to search for it, you’re likely using search queries that are confidential, too. Our users store private knowledge about their organisation, their products, or whatever else is important to them. We don’t want to see that information—ever. Our public API, however, needs to have a couple of mechanisms in place to prevent abuse. We see a lot of jokers out there trying to slam our API or hit it with nonsense requests. Diligent logging is a necessity to deal with these scenarios. If we sent Teams users’ requests to our public API, we’d risk having their confidential search queries end up in our logs. Sure, we could come up with ways to exclude those queries from ever being logged. But what if we accidentally missed an edge case and ended up with confidential queries in our API logs? This was a risk that was unacceptable to us and opposed to the confidentiality we promise to our customers.Lack of information & simplicity: The data returned by our /search endpoint is limited (Here’s all the data we include). While this is great for most applications, for our site search we rely on more information than we expose via our search API. Of course, we could go and expose all those required data points on our public API, but this would be bad for the API’s simplicity and usability—some data points are highly technical and related to our underlying Elasticsearch. Exposing these data points only for our own search queries would be possible but completely undermine the idea of having a public API.\n\n\n\nSoftware architecture is about trade-offs. You’ll often face multiple options with different flaws and have to pragmatically decide for the one that sucks the least. Using the public API would’ve come with some convincing benefits and part of me is still sad that we didn’t get to use this approach. But ultimately we decided to do something else:\n\n\n\nThe winning option: Setting up a new Elasticsearch cluster\n\n\n\nAfter coming to terms with the fact that the public API was not the right way to go, we found a different approach: We’d spin up a new Elasticsearch cluster that holds Stack Overflow’s questions and answers. This cluster would be queried by all cloud- and on-premise-hosted Enterprise and Teams instances for the purpose of unified search. For private content, they would query their local private Elasticsearch instances respectively.\n\n\n\n\n\n\n\nThanks to flexible cloud hosting, setting up a new Elasticsearch cluster is not nearly as daunting as it would be if we were to host one in our own data center. Since we’ve used Elasticsearch before, we got a lot of pieces in place that we need to shove our questions and answers into an Elasticsearch instance, so with a few modifications, we could reuse a lot of the data transfer code we already had.\n\n\n\nWe saw a few key benefits to spinning up a separate Elasticsearch cluster for unified search. Most importantly this approach solves the risk of accidentally leaking confidential search queries into our server logs. The unified search cluster is set up in a way that we don’t store query information, only operational metrics like the number of requests, query duration, index size, and anything else we might need. Secondly, directly querying Elasticsearch without going through a higher-level API allows us to use the same logic for querying your private Elasticsearch content as well as public stackoverflow.com content stored in the unified search cluster. It’s all just a bunch of queries to Elasticsearch’s REST API. Another benefit is a little more fundamental: With a new search cluster in the cloud, we avoid having a dependency from our cloud infrastructure into our own data center. This way we can continue to keep the most of our data center infrastructure within our perimeter without exposing it to the public internet.\n\n\n\nThere were two more than welcome side effects to this approach. The first one was rather pragmatic: Currently, we’re in the process of moving a bunch of our infrastructure into the cloud. A new Elasticsearch cluster was a self-contained and low-risk piece that we could use to gain experience with what it takes to define, provision, and maintain cloud infrastructure. The second one was more product-focused: A new search cluster allows us to do some experimentation when it comes to how we store our data without affecting our existing site search for our Stack Exchange sites. We used this to sneak in a new way of presenting search results that we’ve started experimenting with a long time ago but never fully completed: Showing search results as nested questions and answers.\n\n\n\nExperimenting with nested search results\n\n\n\nPublic search results in unified search look different than regular search results—they look a little better if you ask me but hey, I’m obviously biased.\n\n\n\nImagine you’re using our site search to figure out how to maneuver yourself out of this mess you made in your local git branch. You enter git undo commit into our search bar and see a bunch of search results coming up:\n\n\n\n\n\n\n\nThat’s what our site search looks like today. You’re likely to get reasonable results. But one thing stands out: We’re showing questions and answers as separate results. See the first and the third result? Both belong to the same question. The first one (prefixed with Q:) points to the actual question while the third result (prefixed with A:) points to one of its answers. There are moments where this works well and there are other moments where this is pretty confusing.\n\n\n\nA good while ago we came up with an idea to group search results that belong to the same question. All answer results would be displayed in the context of their respective question in a nested way. We’ve run a few internal experiments but never really got this new approach shipped because it was quite a drastic change not only to the visual representation of our search results but also to the way we store and query our data in Elasticsearch. Now that we’re moving a bunch of stuff around with unified search anyways, we decided that this might be a good occasion to get this experiment out of the door and to display the new public search results in unified search in a nested way. Our designers came up with a really neat way of presenting this information so that the relationship between questions and answers becomes much more obvious.\n\n\n\nHere’s what the new nested search results look like:\n\n\n\n\n\n\n\nThis is not only a new way of displaying search results. We changed the schema of our data stored in Elasticsearch to properly represent the relationship between questions and answers via nested document structures. We used to have a flat document structure with a separate document for each question and answer before. The nested document structure allows us to always fetch information about the question that an answer is referring to alongside the answer in a single query. This way we can display answer search results in the context of its question without having to do an extra lookup. Our hypothesis is that this new structure should give us a better search relevance but this is something we’ll have to carefully monitor and verify.\n\n\n\nChances are that this new way of querying and presenting search results is a good candidate to be used in our regular site search. Before we can do that, we have to look at query performance, relevance and number of successful searches and see if this proves to be an actual overall improvement.\n\n\n\nA smoother search experience\n\n\n\nFor the longest time, finding content from Stack Overflow when searching for answers on Teams has been exclusively available to Teams instances hosted on stackoverflow.com. The way our architecture is set up made it trivial to provide this feature to Teams customers but impossible for the more isolated hosting models that some of our Enterprise customers require. We’re happy that unified search can bring a similarly smooth search experience to our Enterprise customers and help them find questions and answers from stackoverflow.com right within their cloud or on-premise hosted Teams instances.\n    Tags: deep dive, stack overflow for teams",
        "url": "https://stackoverflow.blog/2021/04/28/a-technical-deep-dive-on-unified-search/"
    },
    {
        "title": "Accelerating Stack Overflow’s transformation",
        "content": "Here in the US there’s optimism around our ability to recover from the COVID-19 pandemic this year, thanks to our vaccination efforts. We are also seeing positive momentum in the UK, where we have our second office. After seeing vaccination sites around the city in which I am based, and reading about companies safely bringing portions of their staff back to the office, I can’t help but hope I will get to reunite face-to-face with some of our Stackers before the end of the year. But there is still considerable work to be done, especially around the world in countries like India and Brazil which continue to experience the devastating impact of COVID-19.\n\n\n\nThere is optimism within Stack Overflow right now as well. We are continuing to build momentum as the company grows. We just closed out the first quarter of 2021, and thanks to the hard work of Stackers across the board, we surpassed our most optimistic financial projections. I want to thank everyone for the effort that made this possible, and talk a little bit about what comes next. \n\n\n\nWe went into this year focused on two strategic priorities. Along with our mission and our core values, we let them guide us in all that we do. They are Product-led Transformation and Predictable and Reliable Financial Performance, both of which add value to our community and our customers by allowing us to continue to support and resource them better, and ultimately continue to make this a rewarding place to work.\n\n\n\nI am going to focus the majority of this quarterly blog on those priorities. Like we did last quarter, our chief product and technology officer Teresa Dietrich will soon share a blog post on updates to Community Health and Growth—one of the key foundations these priorities are built upon, as well as updates on our products.\n\n\n\nContinuing our Product-led Transformation\n\n\n\nA lot of SaaS-focused technology companies talk about being product-led. What does that mean? It means putting your product and user at the center of all you do, and leveraging your product to attract, activate, and retain your customers. At Stack Overflow, that means more than continuing to invest in our Stack Overflow for Teams product. It means ensuring that our focus, whether it’s on Teams or on the public platform, solves problems for our core users: developers and technologists.\n\n\n\nIn March, we announced a big milestone in our product-led transformation: a new freemium tier within Stack Overflow for Teams. Users who create a new instance of Teams can grow it up to 50 seats without paying anything, and they get access to most of the product’s key features, such as integrations with Slack and Microsoft Teams. We hoped to sign up about 2,000 new Teams during our first month of freemium, but saw over 10,000 new Teams created instead. This is a phenomenal validation of the product and the strategic work that went into this decision. \n\n\n\nTeams growth from March 15th to April 15th\n\n\n\nFor many of the top companies using Stack Overflow for Teams, interest started with individual contributors, with developers who wanted a better tool to collaborate and share knowledge. We hope that making Stack Overflow for Teams totally free for up to 50 users enables more developers to experiment with our product and prove out its value, eventually leading to broader adoption within an organization. \n\n\n\nFreemium isn’t the only product-led development we’ve made over the last few months. If a user within a free Team is looking to graduate to the next tier, we’ve made it easier than ever to do so. Since late last year, we’ve made it easier for users to educate themselves about the product and take action, such as changing tiers or activating new users within their organization. We offer them useful onramps to learn about the product, its additional tiers, and how to activate users within an organization. We’ve also created an easy path to self-serve upgrade to our Basic and Business tiers for companies who are looking for additional features (such as SSO and GitHub, Jira, and Okta integrations) as well as dedicated support.\n\n\n\nAdopting a product-led strategy doesn’t mean every instance of Teams needs to become a paying customer to be successful. There are many small startups and nonprofits that will benefit from our tools without needing to go beyond the free tier. We also hope it will be an invaluable tool to developers and cohorts of developers who are learning to code, for example. We’re eager to see what happens when educational institutions and open source projects have access to tools that allow them to build a knowledge base, craft great documentation, and collaborate asynchronously with peers around the globe. There are already millions of developers from the open source communities surrounding Linux, Python, and JavaScript learning on Stack Overflow. We hope Teams will allow contributors to better collaborate and accelerate software development for everyone. \n\n\n\nDelivering Predictable & Reliable Financial Performance\n\n\n\nThese investments in Stack Overflow for Teams are paying off. Looking forward, we are excited by our sales pipeline, which signals that the stronger than expected growth we saw during the first three months of the year is poised to continue through this year. We have also seen growth in our annual recurring revenue (ARR) and increases in our net renewal rates (NRR), two key metrics for measuring the health of a product-led SaaS company like Stack Overflow. \n\n\n\nAs we evaluated the success of Stack Overflow for Teams and our existing Advertising business, I worked with our board and senior leadership team to make a difficult decision. As I wrote recently, we have realigned our Talent business to simplify it overall and focus on areas where we have strong differentiation and tremendous potential for growth. This means focusing on employer branding and company awareness and moving away from job slots and direct hiring. It ties the product closer to what we offer through Stack Overflow Advertising and is part of what we’re calling our “Reach and Relevance” strategy, allowing companies to reach and engage meaningfully by sharing relevant information with millions of developers and technologists. As I’ve said, this change unlocks greater value for our users and helps our customers better achieve success.\n\n\n\nThe recent change to Talent means we have less transactional and more recurring revenue products, something that will increase the value we can deliver to customers and users in the future. It also makes it easy to answer a question we’ve been asked many times over the years, “How does Stack Overflow make money?” The answer is much easier than it’s been historically. We have two high growth businesses: 1) our hyper growth Teams business and 2) our high growth Reach & Relevance business.\n\n\n\nTo illustrate the opportunity in front of us with Stack Overflow for Teams alone, I want to share a quick customer story with you. We began working with Progressive Insurance in September of 2020. It was piloted with 450 seats. Since then it has grown to 1460 seats.\n\n\n\n“Stack Overflow has proven invaluable in democratizing access to information and improving cross-team collaboration within our IT organization. We’ve found that over 62% of questions asked on Stack Overflow have been answered by someone from a different team and that most questions are answered by a subject matter expert within three hours,” said James Morgan, Developer Advocate.\n\n\n\n“Our most popular questions and answers have reached well over 25% of our user base, preventing repeat questions from being asked in the first place—a huge productivity boost over the interruptive direct-message approach to answering questions we’ve traditionally employed.”\n\n\n\nProgressive Insurance is just one of many new and recent customers. As you can see from the refreshed logo section of our Teams page (which represents a small portion of the companies we work with), many of the world’s leading companies use Stack Overflow for Teams.\n\n\n\n\n\n\n\nTo 2021 and beyond\n\n\n\nI’m very optimistic about our path forward. Our Stack Overflow for Teams business and Reach & Relevance business are both growing quickly, but they also will play an important role in the year ahead. As companies continue to navigate a dynamic work environment, which is sure to include hybrid and distributed work, they will leverage our products to keep developers and technologists engaged and productive. As a company, this puts us on a positive and high value trajectory, giving us the ability to deliver clear value to our users with our Product-led Transformation and ensure that we have Predictable & Reliable Financial Performance.\n\n\n\nIt’s important to mention that those two priorities are built on three key foundations:\n\n\n\nCommunity Health & GrowthOperational Scale & RepeatabilityStacker Growth & Development\n\n\n\nPut simply: we would not be a growing and successful company without our community. We are making progress on all of those fronts as well. When it comes to the community, we averaged 200k signups per month in Q1, which is up 14% year-over-year.”. We are also making progress when it comes to our site satisfaction score, a metric the Public Platform Team tracks on a recurring basis. Like I said at the start of this post, Teresa Dietrich will be sharing more updates on the community and product front soon.\n\n\n\nGiven our outstanding performance in Q1 and increasing momentum, we have a great year ahead. Just like I call out our community above, this growth wouldn’t be possible without all our amazing Stackers who work together from around the world to serve our users. And our continued growth won’t be possible unless we continue adding to our team. There’s so much exciting work ahead. Few companies allow you to impact millions of people around the globe with your work. In our case, the work is democratizing access to all technology related knowledge so developers and technologists can innovate, build, and support the world’s technology. It’s this opportunity that personally excites me every day. We’re hiring on virtually every team, and if you’re interested, you can check out our open roles here.\n\n\n\nI look forward to keeping you updated as our company continues its high growth journey.\n    Tags: ceo quarterly post",
        "url": "https://stackoverflow.blog/2021/04/26/accelerating-stack-overflows-transformation/"
    },
    {
        "title": "Building a Jira integration for Stack Overflow for Teams",
        "content": "We just released our integration between Jira and Stack Overflow for Teams. This integration will bring your Stack Overflow questions and answers closer to your Jira workflow by allowing you to find content from your Stack Overflow Team directly within Jira as well as give you unfurled previews of Jira issues right within your Stack Overflow Team.\n\n\n\nIn this post, we take a look behind the scenes and explore how we approached building our Jira app. We’ll discuss some of the challenges, pitfalls, and lessons we learned from building this integration and look at the inner workings of our Jira app.\n\n\n\nLet’s briefly look at the features of our app to understand its functionality before discussing how we build these things:\n\n\n\nShow related questions within Jira – When you look at a Jira issue, we’ll search your Team on Stack Overflow for questions that might be relevant to the issue you’re looking at and display these questions in the right sidebar of your issue view:\n\n\n\n\n\n\n\nRelated questions shown within a Jira issue\n\n\n\nUnfurl Jira links in Stack Overflow for Teams – When posting a link to a Jira issue, we’ll show an unfurled preview of that issue right within your question or answer:\n\n\n\n\n\n\n\nAn unfurled preview of a link to a Jira issue in Stack Overflow for Teams\n\n\n\nGetting the foundations right\n\n\n\nWhen we started investigating how to build a Jira app, we found different approaches we could take: \n\n\n\nUse Jira’s REST APIUse the Atlassian Connect framework\n\n\n\nJira’s REST API is pretty extensive and gets you quite far. For our link unfurling feature, reading from the REST API would have taken care of everything we needed.\n\n\n\nHowever, we knew early on that we wanted to extend Jira’s user interface to show related questions from your Stack Overflow Team within Jira issues. Extending Jira’s user interface is something only Atlassian Connect supports, and so we decided to build our app on top of Atlassian Connect.\n\n\n\nAtlassian Connect is a framework to extend the functionality of Jira and other Atlassian products. It solves some of the tricky challenges like authentication, user interface integration, communication with Jira’s REST API, and event-based collaboration.\n\n\n\nUsing Atlassian Connect, you can host your Jira application anywhere as long as Jira is able to send HTTP calls to it. It doesn’t matter if you build your Jira app as a dedicated app or as part of a bigger application. You can host it in a datacenter, on serverless functions, or on a bunch of Raspberry Pis glued to your desk.\n\n\n\nWe built the Jira integration as part of our core Stack Overflow application. This is the application powering Stack Overflow’s public Q&A as well as our private Stack Overflow for Teams offering.\n\n\n\nAt the foundation of every Atlassian Connect-based Jira app is the app descriptor, a JSON document defining things like:\n\n\n\nThe name and description of your appThe app’s permissionsWebhook listenersUser Interface extensions\n\n\n\nThis app descriptor needs to be hosted by your application so that Jira Cloud can find it. This is what Stack Overflow’s app descriptor looks like: \n\n\n\n {\n    \"name\": \"Stack Overflow for Teams\",\n    \"description\": \"Integrate with your Stack Overflow Teams\",\n    \"key\": \"com.stackoverflow.teams\",\n    \"baseUrl\": \"https://stackoverflow.com/\",\n    \"vendor\": {\n        \"name\": \"Stack Overflow, Inc.\",\n        \"url\": \"https://stackoverflow.com\"\n    },\n    \"authentication\": {\n        \"type\": \"jwt\"\n    },\n    \"lifecycle\": {\n        \"installed\": \"integrations/jira/installed\",\n        \"uninstalled\": \"integrations/jira/uninstalled\"\n    },\n    \"modules\": {\n        \"postInstallPage\": {\n            \"url\": \"integrations/embedded/jira/post-install\",\n            \"key\": \"post-install-page\",\n            \"name\": {\n                \"value\": \"Stack Overflow for Teams - Get started\"\n            }\n        },\n        \"jiraIssueGlances\": [\n            {\n                \"icon\": {\n                    \"width\": 48,\n                    \"height\": 48,\n                    \"url\": \"https://cdn.sstatic.net/Sites/stackoverflow/img/icon-48.png?v=b7e36f88ff92\"\n                },\n                \"content\": {\n                    \"type\": \"label\",\n                    \"label\": {\n                        \"value\": \"Similar questions\"\n                    }\n                },\n                \"target\": {\n                    \"type\": \"web_panel\",\n                    \"url\": \"integrations/embedded/jira/search-glance\"\n                },\n                \"name\": {\n                    \"value\": \"Stack Overflow for Teams\"\n                },\n                \"key\": \"so-issue-glance\"\n            }\n        ]\n    },\n    \"scopes\": [\n        \"READ\"\n    ]\n}\n\n\n\nWhenever a user installs or uninstalls our application, Atlassian Connect sends a request to the respective callback URLs we define in our app descriptor. The payload of this request contains some information we need to identify your Jira instance and to ensure that future incoming requests are trustworthy.\n\n\n\nExtending Jira’s user interface is a matter of declaring `modules` within the app descriptor. Each module includes a URL and a description of where the user interface element should be located within Jira. This way, Jira can simply include the HTML views rendered by the URLs we defined in an iframe to allow us to flexibly extend Jira’s user interface.\n\n\n\nApp installation\n\n\n\nThe first thing we built for our Jira app was the app’s installation process. As this is fundamental for everything our app does, this is a natural starting point. From building previous integrations, we’ve learned that spending a lot of attention and care on the installation process will pay off early on. Getting this foundation right makes building more features on top far easier.\n\n\n\nInstalling the Stack Overflow for Teams app in Jira is a two step process. First you need to install the app in Jira, then you need to connect the app to your Stack Overflow Team. After you’ve installed the app from Atlassian’s marketplace, Jira doesn’t know which Team on Stack Overflow it should connect to, and your Team doesn’t know about it’s association with Jira. So we had to build a way to establish this connection.\n\n\n\nWhenever someone installs the Jira app, Jira will send us a notification via the `installed` webhook we registered in the app descriptor. This request will include the `SecurityContext`,an identifier for your Jira instance along with some other information used for secure communication later on.We take the `SecurityContext` and cache it in Redis for a while. After that, our Jira app will show you a prompt to Get Started with the Stack Overflow for Teams app.\n\n\n\nOn this screen, we explain that you’ll need to connect your Jira Cloud instance to a Team on Stack Overflow. We take you over to a connect page on stackoverflow.com and let Jira pass a valid and signed JWT to our site.\n\n\n\n\n\n\n\nThe connect page lets you connect Jira to one of your Stack Overflow Teams\n\n\n\nOnce you are on stackoverflow.com, we read the JWT and try to match it to one of the `SecurityContext` objects we cached in Redis. If we find a matching one, we can be certain that there was an installation initiated in your Jira instance and you can continue connecting one of your Stack Overflow Teams to your Jira instance.\n\n\n\nClicking the Connect button will take the Jira `SecurityContext` we had cached in Redis before and store it in your Team’s SQL Server database. This way, the information we need in order to talk securely between Jira and your Stack Overflow Team will be persistently stored within your Team’s database.\n\n\n\n\n\n\n\nThe sequence of installing the Stack Overflow Jira app\n\n\n\nWhenever we receive an incoming request from Jira in the future, we’ll grab the JWT from the request’s `Authorization` header and verify that it has been signed with the shared secret we stored in your Team’s `SecurityContext`. If this is the case, we can be certain that the incoming request is trustworthy, and we can continue rendering our HTML views in Jira via an iframe. When we’re sending a request to Jira’s REST API, we will fetch your Team’s `SecurityContext` and generate a valid and signed JWT that we attach to the outgoing request. Jira will do the same verification process on their end. With this mechanism in place both parties can make sure to only ever respond to requests coming from a trusted source.\n\n\n\nSearch your Team from within Jira\n\n\n\nTo show related questions from your Stack Overflow Team within a Jira issue, we had to build an endpoint that receives a search query, searches your team’s instance, and returns an HTML view with questions from your team that match this query. We would then let Jira display this HTML view in an iframe as part of the issue Glance.\n\n\n\nBuilding an endpoint that returns an HTML view is our bread and butter when building a web application like Stack Overflow. We could pass the search query via a query parameter and then run a search against your Team’s ElasticSearch index to find questions that match the given query.\n\n\n\nTelling Jira to render our HTML view in the issue sidebar was as easy as providing the URL of our new view in the app descriptor. This would make Jira take the given URL and render it in an iframe at the desired user interface location.\n\n\n\nThere was one obstacle building this feature. When Jira is resolving our HTML view, we cannot make it pass any data as part of the request. The naive approach of letting Jira pass a search query as a query parameter wouldn’t work, unfortunately.\n\n\n\nTo bypass this limitation, we came up with a two-step approach. When Jira embeds our view in an iframe, we would render a placeholder HTML view that embeds some JavaScript. When this HTML view is rendered in an iframe in Jira’s issue view, the JavaScript will fetch additional information about the issue we’re looking at using Jira’s REST API, build a search query, and send an AJAX request back to Stack Overflow with that search query. When the AJAX request returns successfully, it will take the response body — a list of matching questions rendered as HTML — and insert it into the placeholder HTML view.\n\n\n\nUnfurling Jira links\n\n\n\nAnother main feature of the Jira integration is that your Teams instance will show you an unfurled preview of your Jira issues. After you’ve activated the Jira integration for your Team, you can post a raw issue URL on a single line within a question or answer and Stack Overflow for Teams will unfurl this link for you and everyone who’s viewing this question.\n\n\n\nTo make unfurling work, we detect links on a single line when you’re writing a question or answer. We match links on a single line against a set of matchers to see if a given link is something we can unfurl. At the moment, we don’t support unfurling arbitrary links; only certain sources, like Jira or GitHub.\n\n\n\nWhen you’ve installed the Jira integration for your Stack Overflow Team, we’ll save the base URL of your Jira instance as part of the installation process. Using this information we can detect if a given link is to an issue on your Jira instance and try to unfurl it.\n\n\n\nWe parse the link to your Jira instance and try to find an `issue key` within the link URL. An issue key is a unique identifier for issues within a Jira instance. You might have seen those, they usually look like this: STACK-247.\n\n\n\nIf we’ve found an issue key, we have everything we need to make the unfurling magic happen. We take the issue key and send it over to Jira’s REST API to fetch some details for this issue. Once more, we’ll generate a proper JWT and attach it to the request to handle authentication properly.\n\n\n\nOnce we receive a response from Jira that includes the issue’s details, we can then generate an HTML representation of the unfurled link and show it as part of a question or answer.\n\n\n\nTakeaway\n\n\n\nUsing Atlassian Connect, we were able to build a Jira integration that goes beyond the limits of interacting with a third-party service via a REST API. UI integration via iframes doesn’t come without headache as you’ll easily run into issues around cross-origin communication.\n\n\n\nOnce we had solved these issues, Atlassian Connect’s building blocks of extending Jira’s UI, consuming their REST API and listening to events based on webhooks allowed us to put together an integration that seamlessly integrates Jira and Stack Overflow for Teams.\n    Tags: bulletin, integrations, jira, stack overflow for teams, stackoverflow",
        "url": "https://stackoverflow.blog/2020/03/11/building-a-jira-integration-for-stack-overflow-for-teams/"
    },
    {
        "title": "More than Q&A: How the Stack Overflow team uses Stack Overflow for Teams",
        "content": "The majority of companies are now working remotely and asynchronous collaboration is more important than ever. Companies around the globe use Stack Overflow for Teams to do just that (including those that newly adopted the platform since we made it free through June 2020). But only one company has been using Teams since its inception: us.\n\n\n\nHere’s a look at how Teams came to be, and how our whole company leverages the tool to collaborate, share and retain knowledge, and succeed in a 100% remote environment.\n\n\n\nStack Overflow was founded 11 years ago to help professional programmers find answers to their coding questions for free. This spawned a network of 170+ communities across a wide range of topics.\n\n\n\nOver the years, we developed tools and systems to help these communities grow and thrive, to incentivize collaborative behavior and ensure the knowledge is captured and easily found – regardless of when or where someone needed it. Once we built out this platform, we realized it could be a useful tool for companies to enable knowledge retention and sharing, foster internal communities, and streamline collaboration. Customers like Bloomberg and Microsoft, who were long time advertising and recruiting customers of ours, were the first to see the value of bringing a tool like this into their company. \n\n\n\nA few years ago, we formalized this idea by launching an Enterprise version of Stack Overflow for Teams. We refined the product into different tiers to meet the needs of companies of all types – Enterprise is for those who need configurability and scale or have serious security compliance needs; Business is for those who need SSO capabilities and invoicing; Basic is for those who are growing and don’t yet need advanced administrative or security features.      \n\n\n\nToday, over 1,500 organizations of all sizes use Stack Overflow for Teams. Some companies use Teams for their engineering organization while others have product teams, marketing teams, and more on the platform.\n\n\n\nNearly every employee at Stack Overflow uses Teams, and here’s how.\n\n\n\nFive ways our whole company uses Stack Overflow for Teams\n\n\n\nIn day-to-day workflows: Get answers faster.\n\n\n\nIt’s the ultimate proof of concept when our Teams instance helps our employees support our customers more efficiently. Jedd Marcus, a Sales Executive on our Enterprise team, told us of a time when a question around an integration with a customer’s homegrown identity provider (IDP) solution came up. “I asked the question on our internal Stack Overflow for Teams instance. Within 15 minutes, I had the answer from our Solutions Engineering team and was able to follow-up quickly with the client.” Marcus stressed that his first impulse had been to ask a manager. But they would have been a bottleneck, and with back to back meetings, Jedd would have waited a day for the reply. \n\n\n\nThrough sales onboarding and beyond: Continuously share knowledge on the team.\n\n\n\nWe build out questions that contain all the information that someone would need to get up-to-speed. The Product Marketing team, which is responsible for sales enablement, relies heavily on Teams to communicate information with sales team members. “We have a training kit that contains links to documents, decks, and videos that cover everything from simple product knowledge to more advanced legal contract training,” says Joy Cicman Liuzzo, Director of Product Marketing. \n\n\n\nConversations with prospects, especially in a complex sales environment like we’re in now, require dynamic resources that speak to highly-specific concerns. So the sales organization at Stack Overflow uses questions and tags to build a library of useful resources, like studies and research, to stay up on trends and provide the best insights.\n\n\n\nKevin Montrose runs our Data team and shifted request submissions to Teams early on. “We moved requests, reports, and the scheduling thereof from mailing lists and Slack to our Teams instance. It’s made it easier to collaborate with non-engineering teams, produced more durable and discoverable artifacts, and made it easier to measure our impact.”\n\n\n\nVasudha Swaminathan, Director, Product Management Teams, pointed out that it makes it easier to track, respond, and update information. And the ultimate benefit for the person answering a request: “It’s transparent, searchable, and you only need to answer a question once!”\n\n\n\nDuring explorations: Get stakeholder input across departments\n\n\n\nInstead of sending our colleagues yet another email, Teams lets us run internal campaigns to socialize changes or get stakeholders and experts involved in a project. When engineer Max Horstmann’s team recently rebuilt the internal product fulfillment API from scratch, they proactively fed bite-sized information into the platform. “We started with basics like ‘Why are we rebuilding our fulfillment API?’” Horstmann told us. “Relevant experts across product and engineering started chiming in, asking for more details and posting their follow-up questions. Some of the conversations in comments also revealed hidden obstacles, which then could get addressed early on.” Horstmann said. Rolling out the new API was anticlimactic and uneventful, just as everyone had hoped. Early knowledge sharing and collaboration was key to our success.\n\n\n\nSource and cascade customer stories: Voice of the Customer. \n\n\n\nLiuzzo, our Product Marketing leader, tells us about another time we used Teams as a transparent way of sourcing input. “Collecting input from teammates who were speaking to customers every day was a challenge.” Customer requests or feedback would be shared over email, Slack, or in our support portal. But this was a black box for the frontline teammates. Their feedback disappeared without any indication that it got passed on or was being acted on. “So we standardize the process with templates for submissions. All of it lives on Stack Overflow for Teams, so it’s transparent to everyone in the organization.”\n\n\n\nFull circle: Evolving the Teams product with feedback through Teams.\n\n\n\nThe team working on Stack Overflow for Teams is geographically spread out, so Product Leader Swaminathan says collaboration and knowledge sharing are essential. She appreciates the luxury of working on a team that doesn’t need any nudging to test its own product: “Stack Overflow for Teams continues to sit right at the center of all of it and has truly made a difference to how we operate and disseminate information.” New features get beta testers at Stack Overflow excited. “It has become such a natural part of our way of work, that the minute we release new beta features to test, we get almost instant feedback without any prompting!”\n\n\n\n\n\n\n\nWant more tips and tricks for asynchronous collaboration and communication? Tune in to a live webinar on Tuesday, May 5 at 2pm EDT for a discussion on the full tech stack our company uses to collaborate and thrive in a remote environment.\n    Tags: bulletin, stack overflow for teams, stackoverflow",
        "url": "https://stackoverflow.blog/2020/04/29/more-than-qa-how-the-stack-overflow-team-uses-stack-overflow-for-teams/"
    },
    {
        "title": "Stack Overflow for Teams has a new kind of content – Articles",
        "content": "Today, we’re excited to announce the first-ever new content type to Stack Overflow for Teams, our knowledge and collaboration SaaS product. We know that developers and technologists are often searching across multiple tools or pinging colleagues on chat to find the information they need – and even then, they’re often left with outdated or incomplete knowledge.\n\n\n\nArticles is a game-changing functionality in Stack Overflow for Teams. It brings all formats of knowledge into one place for easy building, searching and sharing. This means that team members are now able to proactively and reactively create and share knowledge.\n\n\n\nThis is a major release for us – we’re no longer relying solely on questions and answers to share knowledge. We know that the most productive teams need to share information proactively to help speed up onboarding and learning new technologies as well as provide a transparent way for members to ask questions and give answers. We believe the addition of Articles rounds out the knowledge-sharing landscape for Teams.\n\n\n\nSo how can Articles within Stack Overflow for Teams be used? There are many possibilities, as Articles allows longer-form content like documentation, policies and procedures, how-to guides, and much more. You can also link multiple questions into an Article, much like a Collection.  Anything that a technical team member needs to do their job can now be stored in Teams as an Article, a Collection (of Q&As or Articles), or an individual Q&A.\n\n\n\nNow it would have been easy for us to just enable the ability to create longer-form content and call it a day. But given our strong focus on building a product that excels at creating useful content while keeping information fresh and relevant, we believed it necessary to have some of those pieces be a part of this first Articles release. To strengthen this new content type, we have, for the first time in 12 years, updated our markdown editor to a more WYSIWYG style editor for Articles only, backed by the open source CommonMark parser, and preserving the formatting from any rich text content sources. Based on feedback from our Teams users and usage data, we have updated our content voting mechanism on Articles, to allow users to provide highly contextual, actionable and private feedback to the owners and editors of the post. All in all, this release paves the way to a lot more exciting updates around content management and creation for our Teams users.\n\n\n\nWith the addition of Articles, you can search for more types of information within Stack Overflow for Teams, find it, and get back to building great things. We know it doesn’t mean the need for chat apps goes away. In fact, we continue to invest in and support our integrations with tools like Slack and Microsoft Teams as we know how valuable those tools are for the developer and technologist workflow. Articles within Stack Overflow for Teams should make your experience within each of those platforms even better.\n\n\n\nStack Overflow revolutionized large scale knowledge sharing 12 years ago and Stack Overflow for Teams is doing the same for collaboration and internal knowledge within companies every single day. For now, Articles will only be available on Stack Overflow for Teams, Business & Enterprise. We believe that there are interesting potential use-cases worth exploring for public Stack Overflow for both Collections and Articles. We are planning to start with one feature very soon, stay tuned.  We will conduct user research and solicit feedback on these use cases and communicate our plans as they progress, since it is vital that an eventual rollout isn’t disruptive to the Public Q&A experience. \n\n\n\nIn the meantime, if you want to see Articles for yourself, read more and reach out to our team to set up a demo.\n    Tags: articles",
        "url": "https://stackoverflow.blog/2020/08/10/stack-overflow-for-teams-articles-content-collaboration-knowledge/"
    },
    {
        "title": "How we built it: our new Articles feature for Stack Overflow for Teams",
        "content": "This post offers a technical perspective on how Articles – our brand new content type – came to life. We’ll explore some of the challenges, trade-offs, and implementation details of this exciting new feature. But first, let’s take a look at articles from a product perspective, briefly describing its features and what they look like.\n\n\n\n\n\n\n\nArticles allows for the creation and sharing of long-form content within Teams. While we believe that questions and answers are still the best mechanism when soliciting “in the moment” knowledge, Articles allow users to share information with fellow team members proactively and in much greater detail. Sometimes, the narrative of how and why decisions were made adds another layer of understanding to the creation and maintenance of software. And having your longer form content in the same place as your Q&A means less context switching.\n\n\n\nArticles and Q&A share a lot of functionalities: they have tags, comments, voting scores, and are included in your Team search results. Additionally, Articles have a piece of information that we call “types”. When creating a new article, users can give it a specific type that best suits the kind of content included in that article. We highlight article types in the different contexts where articles may appear: search results, collections, or the list of articles itself. In the future, we may also use article types for enabling different behaviors and functionalities. For example, we could allow users to create custom templates for certain article types or add special notifications when articles of a particular type are created. Currently, we support the following choices for article types:\n\n\n\nKnowledge ArticleAnnouncementHow-To GuidePolicy\n\n\n\nCreating a new article (also a sneak peek into our new editor for Teams)\n\n\n\nExample of an article. You can see the article type above its title, some stats about its creation and engagement, tags, and comments.\n\n\n\nImplementation\n\n\n\nArticles data model\n\n\n\nOur first major implementation decision was the data model. Where are articles going to be stored and how are we modeling their relationships with other system entities? It was clear early on that we wanted articles to fully integrate into existing Stack Overflow for Teams features and pages. That means articles should show up in search results alongside questions and answers, be visible in users profile pages, get picked up in tag subscription digests, support comments and tags, appear in our external integrations, and generate inbox notifications. Whew! Currently, all questions, answers, and wikis are stored in a single table called Posts (if you’re interested, you can check out our database schema and even run custom queries on https://data.stackexchange.com/).\n\n\n\nAdding articles to the existing Posts table was thus the obvious choice. This decision is  particularly beneficial when you want to combine articles, questions, and answers on search results; since they’re all Posts, the logic is quite simplified. Articles thus became a *new type of post* rather than a unique entity of their own.\n\n\n\nHowever, unlike Q&A, articles had an additional piece of information we needed to build and integrate into our data model somehow: article types.\n\n\n\nArticle types: special kind of tags\n\n\n\nOur main challenge for building this feature was deciding where article types should be stored. We considered different approaches, like creating a new table and even leveraging our brand-new Collections feature for modeling types as new, pre-seeded collections. In the end, however, we settled on a simpler solution that would require less code intervention and work as-is with our existing Elasticsearch posts index: articles types as tags. \n\n\n\nSounds simple, right? Well, not just regular content tags, but *special* tags: because we needed to be able to tell, from a list of tags, which one was the article type. We also needed to make them required when creating articles and protect them from deletion. Our solution involved adding a new column to the Tags table for indicating they are an “article required tag” and creating the new article tags on-demand when articles are enabled on a given Team.\n\n\n\nThe interesting bit here is that article types are only special when rendering an article: they are treated like regular content tags both in our posts search index and when denormalized in the Posts table. Therefore, searching for all articles of a given article type is as simple as running a custom tag search. We also added support for the is:article operator, which filters search results coming from our Elasticsearch index to articles-only. If a user wanted to search for all policies of a Team, for example, they would use the query is:article [policy]\n\n\n\nAnother big advantage of adding articles as posts and types as tags is that we didn’t have to add any new fields to our post’s search index. The code that runs the public Stack Overflow service and sites is largely the same as the code that runs our private Teams. Therefore, whenever we make changes to the structure of indexed documents, we need to rebuild our indexes across all sites and Teams – a process which may take a significant amount of time and risk downtime for search. We all know how the developers react when the public Stack Overflow website is down, and we want to avoid any outages with our paying customers as well. Last but not least, adding a special field just for article types would be wasteful and confusing on sites that don’t have Articles enabled.\n\n\n\nAn indexed article in the posts index. Notice the article type alongside content tags. The PostTypeId field is set to “9”, which indicates this post is an article. The big win here was not having to change the structure of indexed documents in order to accommodate articles.\n\n\n\nSearching for all articles with the announcement type\n\n\n\nVoting and feedback\n\n\n\nJust as we allow users the ability to vote on questions and answers, we felt users should have a way to provide feedback to article authors – both praise and suggested improvements. In addition to upvotes, users can give contextualized and private feedback to the authors and editors of an article via a feature we call suggestions.\n\n\n\n\n\n\n\nWe built suggestions on top of our comments data model. Suggestions are very similar to regular post comments except that they 1) are private and 2) can have one of two types: ”article needs more details” or “is outdated”. We rewrote part of our post comments code to reflect those requirements and added new functionality so article authors could “resolve” suggestions.\n\n\n\nWe spent a decent amount of time considering different design approaches – should suggestions have their own table? Should we add them as custom flags? Adding support for private comments seemed to be a good idea, but how can we make that change in a way that makes sense across the codebase and can be reused for other things in the future? These considerations were key for reaching our final design – adding the concept of types to regular post comments, creating two comment types for the two different kinds of suggestions, and filtering those out of all SELECT queries touching the post comments table. It looks simple in hindsight, but this change alone saved us a lot of time testing, measuring and writing code that would have been necessary had we decided to create a brand new suggestions table.\n\n\n\nFinal thoughts: simplicity is key\n\n\n\nWhen I started writing this article (see what I did there?), I admit I was a bit afraid of not having many intricate, complicated things to explain. But the beauty of designing this new feature was in its simplicity. We spent a lot of time considering different possibilities, thinking about the right architecture, and making sure it was thorough, reusable, and easy to plug into all of our subsystems. Articles had to be a special content type within our existing infrastructure, not a custom foreign entity. Taking the time to carefully think that design choice through also meant less time spent building, testing, measuring, and debugging. \n\n\n\nWe started thinking about Articles from a technical perspective back in March 2020. We knew from the beginning that we wanted to keep things simple so we could iterate and incorporate feedback progressively. We could have easily fallen into the scope creep or over-engineering traps had we not taken the time to design these features with simplicity and reusability in mind.\n\n\n\nWe applied the same principles of careful thinking for designing the product itself. We knew the most important thing would be to get articles out there as soon as possible, and observe how it was being used before adding tons of new features. With that in mind, we have been dogfooding articles internally for a few weeks now, which has been a lot of fun. Many teams have migrated procedures, guides and policies from wikis and external documents into articles already, and having a single place to search and find relevant content has been a huge win and true time saver for us. Most importantly, it validated our decision to start with a simple, well rounded feature, built in a way that was easy to maintain, extend, and evolve.PS: there’s another major win that I deliberately didn’t mention here because it deserves its own blog post: articles are launching with a brand new, revamped editor. Moving all posts to CommonMark was a big part of developing this new editor, and you can learn more about it on this amazing meta post from our developer Ham. Stay tuned for more updates on the new editor and the challenges and decisions we faced while building it.\n    Tags: product, stack overflow for teams",
        "url": "https://stackoverflow.blog/2020/08/12/how-we-built-it-articles-feature-stack-overflow-teams/"
    },
    {
        "title": "Our Series E Funding – An Inflection Point to Accelerate the Realization of our Mission",
        "content": "This is an exciting inflection point in our company’s history as we accelerate the realization of our mission: to help write the script of the future by serving developers and technologists. We will do this by investing in our ecosystem of communities and products used by our customers, to solve their difficult problems as they write the next generation of digital applications.\n\n\n\nI am thrilled to start this quarter’s blog post with the very exciting news that today we announced $85 million in Series E funding for the company. This is an exciting inflection point in our company’s history as we accelerate the realization of our mission: to help write the script of the future by serving developers and technologists. \n\n\n\nThe financing round was led by GIC with participation from new investor Silver Lake Waterman with participation from our longstanding, institutional investors that include Andreessen Horowitz, Index Ventures, Spark Capital, and Union Square Ventures (USV). We are excited to partner with some of the world’s best technology investors as we embark on this next phase in our journey. A special note of thanks to our team, led by Jerry Raphael, our Chief Financial Officer, for the significant hard work that was invested in this process.\n\n\n\nStack Overflow has been a venture backed company for 12 years and our last funding round was in 2015. This investment will allow for a continuation of the work we are doing to establish the foundation for Stack Overflow’s next phase: a leader in products for developers and technologists to collaborate and share knowledge as they build the next generation of applications. \n\n\n\nAs the world’s companies go through an intense and accelerated phase of digital transformation, Stack Overflow is at the heart of this movement. The change, which ranges across almost all industries, is being propelled by the massive shift to the cloud, a focus on agility via the DevOps movement, and access to talent from around the world through distributed and remote work. This funding enables our company to add additional resources to the ecosystem of products and communities that we build to help solve difficult problems for developers and technologists. \n\n\n\n“Stack Overflow for Teams makes it easy for our developers to find the information they need quickly. It reduces the repetition of questions internally and eliminates cross-functional silos,” said Chris Thomas, Managing Director at Moody’s Analytics, a customer of Stack Overflow. “Stack Overflow for Teams helps us drive more collaboration and innovation at Moody’s Analytics, especially as we’ve gone fully remote.”\n\n\n\nOur public community and commercial products are symbiotically linked. One cannot succeed without the other, and the more one prospers, the more it can propel the success of the pair. With this funding, we will be able to invest in more people and tooling on our public platform and community management teams; in the tools, features, and platforms that support our community managers, moderators, and users. We’ve shared our roadmap for the community, and I am confident that this funding will allow us to deliver on and expand that commitment. What we learn from these communities will help us to build better, more useful products for developers, technologists, and the companies that rely on them.\n\n\n\nWhile celebrating this news, I also want to acknowledge that these are difficult, turbulent times for many. While some areas of the world now seem to be on a path to containing the COVID-19 pandemic, other regions, including our home base in the United States, are still grappling with a rapidly growing number of cases. There is reason to have hope. New York, where Stack Overflow was founded and is headquartered, has suffered tremendously, but now seems to be on a better path. As a company, we have also experienced disruption, but have now found our footing. This is thanks to the tremendous efforts of our community, our employees, our customers and the 120 million monthly developers and technologists who continue to turn to us as a trusted source of knowledge to help them to do their jobs.\n\n\n\nCommunity\n\n\n\nIn Q2, there was significant focus from our Community team, led by Teresa Dietrich, our Chief Product Officer, to improve the foundation for our moderators. Earlier this month, we introduced a new moderator agreement, our first update to this document in many years. We’re glad to see it has been well-received by the community, and we listened to moderator feedback as we worked to build a strong consensus around this document. We also launched several new avenues to engage with and enable our moderators: including a moderator council, moderator townhalls, and a moderator training platform. We have also worked to update our approach to Creative Commons licensing. We have clarified a number of longstanding open questions relating to how the CC BY-SA licensing applies to content, and have added the ability to easily determine the applicable license version for each post revision (based on its creation date) on the site and through the API.\n\n\n\nWe continue to see positive metrics around our community. April saw the largest number of new signups (260K) in Stack Overflow history, and the second quarter saw the highest number of engaged users on our platform since January of 2019. This quarter saw growth spurts on exchanges like Ask Ubuntu and 3D printing. I am personally excited by the activity in our communities around topics like machine learning and cloud computing.\n\n\n\nEngaged users on Stack Overflow 2011-2020\n\n\n\nFinally, internally at Stack Overflow, we just wrapped our first ever company Community-a-thon. The goal was to familiarize all Stack Overflow employees with the platform, to have them experience firsthand what it’s like for the average Stack Overflow user to ask and answer questions and to provide their own feedback to our Product organization. Stackers contributed over 400 questions and answers on a range of topics. We’ll be doing this again in the future, as it helps to generate a lot of great ideas across departments and strengthens the feedback loop between users and employees. When you’re building, marketing, or selling a product connected to our community, it pays to understand the foundation with high levels of empathy for users.\n\n\n\nProduct\n\n\n\nOur long term product vision is to build an ecosystem of communities and products that enable developers and technologists to solve their hardest problems — to find the solutions they need as they build the world’s next generation software applications. As a product-led company, we look at meaningful and repeatable ways to deliver value to our community of users. The foundation of our company is our public platform, visited by over 120 million unique people from around the world each month. On top of that, we have built a suite of products: Teams, Advertising, and Talent.\n\n\n\nThe pandemic has radically reshaped the way in which people around the world do their work. For many companies, when the option is available, remote work has become the norm. In this environment, we have seen a surge in demand for our SaaS collaboration product Stack Overflow for Teams. As an example, our Basic Trials for Stack Overflow for Teams have increased 10X since 2019. Employees across Engineering, Product Management, Data Science, and even Customer Success organizations need a way to ship products faster, accelerate onboarding, improve customer experience, and drive innovation by communicating and collaborating asynchronously, no matter where in the world they are working from. G2 and the DevOps Periodic Table have recognized Stack Overflow for Teams as a consistent leader in this space. \n\n\n\n\n\n\n\nGreat collaboration and knowledge sharing comes from breaking down silos between teams and departments. As an example, for our Teams product, we launched the Custom Awards feature, which is a great mechanism to build high levels of engagement within the internal communities our customers create within their companies and organizations. The feature allows customers to reward and recognize employees based on achievement of specific goals that the company cares about. \n\n\n\nOur Advertising business, which allows companies and enterprises to showcase their platforms and tools to developers and technologists, has also seen increased demand over the past quarter. We also expanded our Direct to Developers advertising to our technical Stack Exchange websites, allowing companies to reach and engage a much larger audience. This also means companies looking to reach developers and technologists who specialize in Amazon Web Services (AWS), Microsoft Azure, Google Cloud, cybersecurity, Android, or iOS, can communicate with talented technologists on sites dedicated to sharing knowledge around those specific topics. \n\n\n\nFor our Talent product, we have redesigned navigation on our Jobs board, leading to a major increase in usability and click through rates. Job listings can now be found across all our technical Stack Exchange sites, not just Stack Overflow, furthering our goal of integrating our main site with the plethora of highly active and engaged communities around other technical topics like Cloud, DevOps and Machine Learning. We will continue to invest in Jobs as developers and technologists look for work in record numbers. \n\n\n\nFor both our Talent and Advertising products, we have focused on improvements that benefit developers and technologists—making it easier to discover and find jobs and new tools and services, both of which are so vital during the current situation.  \n\n\n\nNext Steps\n\n\n\nAlong with COVID-19, another major force reshaping our world over the last three months but for the better is the Black Lives Matter movement and growing awareness around the United States and the world that more must be done to combat and dismantle systemic, structural racism. The Black and Brown (BnB) affinity group at Stack Overflow has been leading the creation of short and long term plans for our response to these issues. You can read more about that here, and you can listen to Ian Allen and Syeeda Briddell, Stack employees and co-chairs of our BnB group, who recently came onto the Stack Overflow podcast to discuss these issues. \n\n\n\nLooking to the future, I would like to detail some of the plans we have for building on our recent growth and for putting our new funding to work. Our vision for Stack Overflow for Teams is to create the world’s most powerful product for asynchronous collaboration and knowledge sharing. The foundational approach Stack Overflow built for our public sites that has served our community for over the past decade has proven to be just as effective when deployed inside of enterprises and companies large and small. Stack Overflow for Teams is a powerful alternative to traditional approaches to documentation and Wikis, a more organic and democratic approach to organizing and sharing the information and experience that exists inside your co-workers’ minds. The feedback users get from earning reputation and badges creates a flywheel effect, encouraging fresh content creation and effective moderation by incentivizing users to level up and earn expanded privileges when they contribute knowledge and curation to the system.\n\n\n\nWith so many organizations today focused on digital transformation and business continuity, the ability to quickly organize information, connect questions and answers and to collaborate on solutions is becoming increasingly valuable. Video calls via Zoom and Google Meet, emails, and chat apps like Slack and Microsoft Teams are now our primary means of communicating synchronously inside of information and technology companies. These trends were already in place when I joined Stack Overflow as CEO in October of 2019, but they have accelerated dramatically during the shutdowns and quarantine that have rippled across the globe. We believe it’s going to be critical for companies and enterprises to leverage asynchronous collaboration products like Stack Overflow for Teams to improve productivity and minimize distraction. We will continue to focus on making the product an even more indispensable part of the developer and technologist workflow while working cohesively with the above synchronous collaboration tools. \n\n\n\nThe vitality and variety of our products is a reflection of the health and breadth of our community. It’s inspiring to see the diversity of thought and technical knowledge being shared on our network — knowledge that is foundational to the world’s next generation of software applications. The more our community succeeds, the easier it will be for us to scale Stack Overflow the company. As we grow, we can hire and invest in the products and people our community needs to thrive. Neither side can prosper without the other. My commitment today is to continue down the path of transparency and accountability with our community, so that they can continue to scale Stack Overflow and our Exchanges, and we can continue to grow our business, a relationship that allows for greater collaboration and knowledge sharing across companies and communities that span the globe.\n    Tags: announcements, ceo quarterly post, community, company, funding, mission, product",
        "url": "https://stackoverflow.blog/2020/07/28/ceo-quarterly-blog-post-3-series-e-funding/"
    },
    {
        "title": "Introducing Dark Mode (beta) for Stack Overflow",
        "content": "Ed. note: Dark mode is officially out of beta! Thanks for everyone’s feedback.\n\n\n\nUpdate: Check out our article on how we made dark mode a reality.\n\n\n\nFor many years now, people have been asking us for the option to view Stack Overflow in dark mode. We know from user surveys that lots of developers visit our site multiple times a week and folks working their way through a tricky coding problem sometimes have a Stack Overflow window open all day next to their IDE. \n\n\n\nIn fact, a request for Dark Mode is the 12th most upvoted question on Stack Overflow’s Meta community (out of 41,785 questions) and the #1 most upvoted on Feature Request overall.\n\n\n\nThere are a lot of challenges to implementing dark mode across a platform like ours. We are among the 40 largest websites in the world in terms of monthly unique visitors. We also have hundreds of communities with different design aesthetics. On top of our public Q&A platform, we also have our developer profiles, job listings, product pages, and many other surfaces. \n\n\n\nDespite the challenges, this opportunity was too big to be ignored. Today, we are proud to announce the release of Dark Mode in beta for Stack Overflow. We want to share it with our community, especially our power users, and gather feedback so we can improve, iterate, and expand Dark Mode in the future. You can opt-in Dark Mode through your user preferences. You must be logged into your Stack Overflow account to get this option.\n\n\n\nFor now, we have no plans to bring dark mode to the many sites across the Stack Exchange network. Many of the designs on our sites have been around long enough that converting them to dark mode would require redoing the artwork completely. We would prefer to avoid giving anyone across our network a substandard experience and we don’t want to change those elements without the input of these communities. \n\n\n\nTomorrow, we will publish a blog post from Aaron Shekey, our design systems lead, detailing the process behind the creation of this new feature. And if you really, really like dark mode, stick around. We have something to share on Wednesday as well…\n\n\n\nEd note: If you’d like to provide feedback, please see this Meta question. \n    Tags: announcements, dark mode, new features, stackoverflow",
        "url": "https://stackoverflow.blog/2020/03/30/introducing-dark-mode-for-stack-overflow/"
    },
    {
        "title": "A message from our CEO: The Way Forward",
        "content": "Three months ago, I wrote a message to our Stack Overflow customers and community, the first of what will be regular, quarterly posts. At the time, I reflected on the fact that we were entering a new decade, a period where tremendous technological forces are reshaping the world. Since then, we have entered a new era, and societies in every corner of the globe face a historic challenge. We are reminded that for all of our advances as a civilization, nature can be a powerful force which we must adapt and innovate around.\n\n\n\nEvery Friday, since I started in October 2019, I’ve sent the company an email and brief “Fireside Chat” video with my observations on the week and our progress as we transform into a leading SaaS company. Since we went fully remote in early March, these company-wide communications have provided updates on how we are navigating the COVID-19 pandemic. Below are some of the thoughts I shared:\n\n\n\nThis is a key moment in our company’s history, as the whole world is dealing with significant uncertainty. Know that you are not alone. We are facing this situation together. \n\n\n\nReflect on other challenging times as it relates to your life and how it ultimately passed and made you into who you are as a person today. I’m confident that with your help and daily leadership, we will figure it out, solve the various problems in front of us with an agile and growth mindset, and WE WILL come out of this crisis as a stronger company.\n\n\n\nMy ask is that you stay focused on living our core values and actively connect with your team, our community, and customers.\n\n\n\nI want to share the same sentiment with our community, our customers, and the millions of developers and technologists who visit our network from around the world: Let’s all continue to take care of each other.\n\n\n\nSince late February, our newly formed leadership team has met three times a week in COVID-19 related standups. In these meetings, we ensure that we are evaluating all available data, problem solving with an agile approach, and making timely decisions on a variety of topics. We cover everything from the health and safety of our employees to how we can best support our community given our remote DNA, to how to best serve our customers with our SaaS collaboration products. \n\n\n\nThis has been a tough week at Stack Overflow, and taking care of each other is more important than ever right now. Like companies large and small, we have had to make difficult choices in order to reflect the market conditions. This week, we reduced our global workforce by approximately 15%. Most of the affected employees were furloughed, except for employees and contractors in regions where furloughs were unfortunately not an option. These actions primarily affected sales and customer success teams within our Talent business, which is dependent on the hiring environment.\n\n\n\nWe made these decisions with great care and only after assessing and leveraging all other options. We’ve paused all non-critical hiring, suspended our travel budget for all of Q2 and Q3, and cut marketing and software costs significantly.\n\n\n\nReducing our headcount was a painful but necessary decision, of no fault of the employees affected, and one that I take full accountability for as the CEO. We did this in order to ensure that we can serve our customers and community in the long-run.\n\n\n\nDespite the impact to our Talent business, we are seeing significant growth in our core SaaS business, Stack Overflow for Teams, and our Advertising business. Our Stack Overflow for Teams collaboration SaaS business is seeing strong interest from enterprises and mid-market companies to raise their remote and distributed team preparedness via collaboration and knowledge sharing software. Our Advertising business continues to show strength. As the 41st most visited website in the word, we attract over 120 million unique visitors every month, and companies want to showcase developer and technologist-centric products in an era when technology is top of mind. So our priority moving forward is to rapidly accelerate the growth of these businesses in order to welcome our colleagues back as soon as possible, and in order to help developers, technologists and teams around the world achieve new levels of collaboration and knowledge sharing. \n\n\n\nI heard some wise words recently: with a crisis like this, you can’t go around the problem, you have to go through it. As a new leadership team and rapidly transforming organization, it’s been inspiring to see us come together in a very challenging time and be highly transparent in our approach to move the organization forward. Given that, I want to focus a bit on what we are doing, as a company and community, to respond to the COVID-19 pandemic. \n\n\n\nCore Values, Mission, and Vision \n\n\n\nWith COVID-19 now a world-wide pandemic, it’s a moment in our history where humanity will step up yet again and come out stronger. Our newly defined core values have allowed our company to stay grounded as we navigate these challenging times. \n\n\n\nAdopt a customer first mindsetBe flexible and inclusiveBe transparentEmpower people to deliver outstanding resultsKeep community at our center Learn, share, and grow\n\n\n\nOur mission of helping write the script of the future—by serving developers and all technologists—guides all our initiatives across the company and is so critical during this pivotal time in history. The community of users across the entire network of Stack Exchange sites, and the content that they author and curate, serve as the foundation for all of our products and highlight the importance of having active and engaged users on a platform that encourages easier and more comprehensive knowledge sharing and collaboration. \n\n\n\nCompanies and organizations around the world are rapidly accelerating their own digital transformation journeys and Stack Overflow is at the heart of that transformation. We’re humbled to play a meaningful part in that transformation as we help solve the most difficult technology problems through our ecosystem of technical communities and SaaS collaboration and knowledge sharing products. \n\n\n\nCommunity \n\n\n\nWhile commuting and socializing has dipped in recent months, traffic to a number of our Stack Exchange sites has surged during this period, a reflection of people’s need for great answers to pressing questions. Beyond Stack Overflow and our technical Stack Exchange websites like DevOps, ServerFault (for SysAdmin and Cloud-related topics), Software Engineering, some of our other Stack Exchange websites are growing for obvious reasons. Our Biology and Medical Science sites have seen a wave of interest as people seek to understand the nature of viruses and what we can do to stop them. And there has been a massive jump in traffic on Meta Academia, up 245%, as students and teachers work to navigate this new world of remote learning \n\n\n\nIt’s also a testament to the Academia community, which responded by putting together an amazing list of resources for people whose academic workflow has been disrupted by COVID-19.  \n\n\n\n\n\n\n\nWe are seeing similar efforts across numerous Stack Exchanges, as digital communities that have existed for years—or in some cases, over a decade—come together in this moment of crisis. As these groups discussed how to tackle the new challenges facing employees, families, individuals, and organizations, they created a new chat room where users from across the Stack Exchange Network can come to to discuss issues or emotions related to the ongoing crisis.\n\n\n\nIn addition, we have worked on initial experiments aimed at adding potential content sharing and integration between Stack Overflow and other technical sites on the network, to reflect the converging technology environment as it relates to full-stack engineering, Cloud, and DevOps. \n\n\n\nAlong with the surge in traffic to our sites, we have also seen an encouraging lift in new users signing up for accounts. You can see the spike and continued lift that has been happening in 2020.\n\n\n\n\n\n\n\nProduct \n\n\n\nDespite our focus on navigating COVID-19, I do want to use this quarterly letter to highlight a number of positive, notable product releases we made during the first quarter of 2020. These are the building blocks that will help our company, community, and customers to weather this storm and to rebuild when it passes.\n\n\n\nAs many regions around the globe have asked citizens to shelter at home and companies focus on business continuity, there has been a huge spike in demand for collaboration and remote work tools—both synchronous and asynchronous. We have seen this change reflected in a spike in demand for Stack Overflow for Teams, our leading asynchronous collaboration and knowledge sharing SaaS product. As a highly-remote company, we have been using Stack Overflow for Teams at Stack Overflow for many years—to rapidly launch new products and features by breaking down silos across Product, Engineering, Sales, and Marketing. \n\n\n\nMarch was our best month ever for Stack Overflow for Teams deal volume in the history of the four year old product, with growth hitting 188% of our goal and with major enterprises joining the fold. This week, we signed a landmark multi-year Stack Overflow for Teams customer agreement, the largest commercial agreement in the history of our 12 year old company, with one of the world’s largest financial institutions to enable collaboration and knowledge sharing across 30,000 users in their global enterprise.\n\n\n\nWe have heard from many customers that Stack Overflow for Teams has become a critical asynchronous collaboration tool for their companies as they shifted their workforce entirely remote during this pandemic. “Having a well-run online community where Unqork no-code software creators can share knowledge and seek out expert advice is critical to our growth and success. We’re finding the Stack Overflow for Teams platform particularly valuable with the current remote work environment,” said Olga Gomonova, Unqork’s Head of Client Enablement. “Stack Overflow has helped make it even easier to create applications without code, and our Stack Overflow community has become an important part of our enablement and employee onboarding processes, as well as our overall knowledge management strategy.”\n\n\n\nWe also made the basic tier of Stack Overflow for Teams free until at least the middle of this summer. It was the right thing to do for big and mid-sized companies that are struggling to go remote and for companies of every size facing business continuity challenges. Within the hundreds of companies that are leveraging extended trials of Stack Overflow for Teams, we were especially excited and encouraged by the hospitals and healthcare and telemedicine companies that signed-up.\n\n\n\nWith so many new customers of all kinds, one of the key things we want to do is make sure that the products we are building integrate seamlessly with developers’ and technologists’ existing workflow to ensure high levels of productivity. In the first quarter, we announced new integrations with Github, Jira, and Microsoft Teams. \n\n\n\nOn the public platform side, we have made a number of important updates. We released a beta version of a feature that will give users more control of what they experience on our network by allowing them to report ads they don’t like, and we launched version 2.0 of our Unfriendly Robot which automatically flags unwelcoming comments. We made it possible for users to follow questions and answers that they did not author, giving folks an easy way to stay up to date with changes to posts that they are interested in. We are excited to share plans for a long-awaited overhaul to review queues. And we shipped the first in a series of changes to the “close question” experience that we hope will make life easier for moderators and more pleasant for users.\n\n\n\nTeresa Dietrich, our Chief Product Officer, published the Q2 edition of our public community roadmap. A few highlights: \n\n\n\nWe have finished the process of creating the first Pro Tempore Moderator Council. We plan to update the Moderator Reinstatement policy in May to potentially include the Moderator Council’s proposed involvement in the process. Our Community Managers have been hard at work creating content for moderator training which we have shared for feedback on the Mods Teams instance. The plan is to incorporate the feedback and then select and implement a platform for delivery of the training, which should launch in May. In June, we plan on running a Community@thon event that will encourage and provide guidance for all Stack Overflow employees (of all experience levels on the network) to spend time using our sites, posting content, and interacting with the Community. \n\n\n\nAnd of course, when it comes to changes to our Stack Overflow public site, we introduced a feature that has long been among our most requested, the ability to view Stack Overflow in dark mode. This feature has proved incredibly popular, delivering our best month of blog traffic ever, and led to a significant boost in the number of people signing up for new Stack Overflow accounts.\n\n\n\nAlong with our roadmap, we have had in-person meetings with several veteran moderators and learned a lot. We recently had a pair of moderators on the podcast to share what they are seeing in their community. We hope to continue this kind of positive dialogue with our community. During this trying time, we have seen record traffic to our blog and podcast, and we have doubled the number of podcasts and newsletters released each week to try and share important information and stay in touch with current events as the crisis continues.\n\n\n\nLater this month we will launch the results of our 2020 Stack Overflow Developer Survey. Thank you to over 65,000 people who took this year’s survey; I know you’re anxious to dig into the findings.\n\n\n\nCOVID-19 Partnerships\n\n\n\nWe recently announced that Stack Overflow is forging new partnerships to help tackle the COVID-19 crisis. We are supporting IBM by helping to promote and judge their annual Call For Code, a hackathon which will work to build tools for citizens, companies, and government agencies. We have also featured IBM staffers on our podcast and in our newsletter who are working to help educate coders in COBOL, a 60-year-old programming language that is now in high demand from government agencies trying to meet unprecedented demand for unemployment insurance. \n\n\n\nWe are partnering with the World Health Organization (WHO) to highlight some of their soon-to-launch COVID-19 technologies and platforms within our blog, newsletter, and podcast.\n\n\n\nWe are also continuing to create content that is useful for anyone looking for work right now. Whether it’s a guide for learning to work asynchronously, handling remote interviews, or a list of companies that offer free online training and certification. We’re sharing that content with individuals and organizations who are going through tough times, and partnering with organizations like Pursuit to share best practices for new and recent coders on finding work during this difficult time.\n\n\n\nMoving Forward\n\n\n\nIt has been nearly two months since New York City, where Stack Overflow is headquartered, mandated shelter-in-place. Since then, so much has changed, so many have suffered, and so many have shown incredible courage and selflessness in battling COVID-19 and to save the lives of those infected.\n\n\n\nWe are beginning to see glimmers of hope. Countries and cities that were badly impacted have started to flatten the curve. Scientists and researchers are pushing vaccines into early trials, tests that can be done rapidly and at scale are going into production, and companies large and small are finding ways to adapt to this new way of working. \n\n\n\nThe COVID-19 pandemic is a reminder that we are all connected as inhabitants of this planet and that human nature is to persevere in the face of even the most extreme adversity. I want to thank our employees who have demonstrated tremendous initiative, collaborated, and worked tirelessly to support and serve our customers and community through this difficult time.\n\n\n\nI know that the road ahead will continue to be hard for many, but I feel confident that humanity will recover. We will use technology to break down barriers, come closer together, and find better days ahead. I’m optimistic because I’ve seen every day that we are stronger as a global community than we are as individuals, and that we all have the capacity to adapt and move forward. I believe this moment will ultimately teach us that we are resilient, together. \n\n\n\nWe appreciate hearing your thoughts and feedback in the comments below. \n\n\n\nUpdate 5/12: A mention of Academia was changed to Meta Academia, where the surge in traffic occurred, and a Y-axis was added to daily signup chart for further clarity.\n    Tags: announcements, company, stackoverflow",
        "url": "https://stackoverflow.blog/2020/05/07/the-way-forward/"
    },
    {
        "title": "Q2 Community Roadmap",
        "content": "Back in February, we shared our Q1 Community Roadmap with you. In that post, we described our four roadmap themes which will continue throughout the year. In our commitment to provide transparency, we will continue to share our roadmaps each quarter. So without further ado, here is our Q2 Community Roadmap: \n\n\n\n\n  \n    \n      \n      Q2 2020\n    \n    \n      \n      April\n      May\n      June\n    \n  \n  \n    \n      Understand community\n      Publish feedback matrix\n      Site Satisfaction Survey Q2\n      Community @thon\n    \n    \n      Engage with community\n      \n        Convene pro-tem moderator council\n        CC license round 2\n      \n      \n        Update moderator reinstatement\n        Training launch\n      \n      \n        Suicide prevention\n        Moderator Town Halls\n      \n    \n    \n      Improve community feedback metrics\n      \n      Collect new user feedback\n      \n    \n    \n      Increase User Engagement\n      Dark Mode (beta) & Ultra Dark Mode\n      Email drip campaign\n      Review queue phase 2 updates\n    \n  \n\n\n\n\nUnderstand community\n\n\n\nThis month, we built out our Community Feedback Matrix to help us evaluate all the types of users and types of feedback that we collect. We will be sharing this in our April The Loop post. In May, our quarterly Site Satisfaction Survey will go out to some of our users. In June, we are planning a Community@athon event within our company to encourage employees to interact with our network and communities more. Our goal is to ensure that we have balanced, consistent feedback from across the different segments of our community and that we continue to improve community interactions and understanding throughout the company.\n\n\n\nEngage with community\n\n\n\nWhile we had hoped to have our new version of the Moderator Agreement ready to go in March, between the impact of the current Covid-19 crisis and our desire to get it right, this release has been delayed. We have had multiple rounds of feedback from internal stakeholders and a group of moderators, and we will be sharing it with the larger moderator community this month. \n\n\n\nCurrently, we are soliciting nominations for the Pro-Tem Moderator Council and will shortly move into the selection process. The members and their initial responsibilities will be announced by the end of April.\n\n\n\nWe will plan to update the Moderator Reinstatement policy in May to include the Moderator Council’s proposed involvement in the process. Our Community Managers have been hard at work creating content for Moderator training which we have shared for feedback on the Mods Teams instance. The plan is to incorporate the feedback and then select and implement a platform for delivery of the training, which should launch in May. \n\n\n\nIn June, we plan to start a series of moderator town halls to create additional opportunities for our moderators to meet with CMs and other staff in a casual way to talk about specific issues or get to know each other better. \n\n\n\nSometimes our moderators will come across content by a user where something is shared that indicates that the user may be considering taking their own life. As you can imagine, these are some of the hardest moments for anyone to encounter. Our moderator team desires to show compassion and care, and this quarter, we’re going to set aside some time to work with organizations that specialize in these interactions. Our goal is to provide a mix of tools, support, and education to ensure that the moderators have the proper guidance and options to hand these situations off to lessen the burden on their shoulders. \n\n\n\nImprove community feedback metrics\n\n\n\nThrough the development of the Community Feedback Matrix, we realized that we are not sufficiently collecting feedback from new users to our sites. In May, we plan to implement a process to solicit feedback from new users to better understand their pain points and needs. This feedback will be incorporated along with the rest of our qualitative and quantitative feedback to build our roadmap, features, and programs for the future.\n\n\n\nIncrease user engagement\n\n\n\nDue to the global Covid-19 crisis, we chose not to launch our normal April Fool’s Day prank on our users. We did launch our Beta version of Dark Mode and made what would have been our prank, Ultra Dark Mode, that was available for users for a limited time. Dark mode has been our most asked for feature for years, and we were so excited to share it with you all.\n\n\n\nWe had to push the launch of a series of educational email campaigns for new users, non-active users, question askers, and question answerers due to a technical integration bug on the vendor side for which we are still waiting for resolution. These series will be designed to take a proactive approach in providing guidance and support for all users at various stages.\n\n\n\nIn June, we plan to begin work on a series of backend and UX updates to review queues to improve the user experience for our curators in addition to backend improvements that will help us make updates more easily in the future. You will also see test improvements to the question close experience and iterations on the recently shipped Question & Answer Follow feature. \n\n\n\nWe are sharing our roadmap to create transparency with our users. As with any product development, unanticipated complications may cause our dates to slip on occasion, but we are committed to delivering these initiatives and features to you as soon as we can.\n\n\n\nWe are happy to hear your thoughts and feedback on MSE.\n    Tags: announcements, company, roadmap, stackoverflow",
        "url": "https://stackoverflow.blog/2020/04/08/q2-community-roadmap/"
    },
    {
        "title": "A Message to our Employees, Community, and Customers on Covid-19",
        "content": "As we work as a community to prepare for the impact of COVID-19, I wanted to share how Stack Overflow is addressing the current situation and the proactive steps we are taking to minimize any negative repercussions to the realization of our mission. \n\n\n\nThe safety of our employees, community, and customers are our primary concern. There are a number of measures we’re taking to ensure we manage to safely get through this situation while continuing to serve our community and customers effectively. \n\n\n\nFor our employees across our three main offices in New York, London, and Munich, we’ve asked them to begin working from home starting today, March 9th, and we have asked all employees to curtail non-essential travel for the time being. \n\n\n\nStack Overflow was born remotely. It began as a discussion across blogs and a podcast conducted on Skype. We’ve had employees working across continents for over a decade. Today, roughly one third of our employees work in locations where we don’t have a large team or physical office. \n\n\n\nWhat that means is that for Stackers, much of our day to day work on Slack, GitHub, Stack Overflow for Teams, Google Docs, and other collaboration tools will be conducted as normal. We can continue to push projects forward and be in constant contact with one another. But we recognize that not everyone has the ability to work remotely. For our staff whose work involves maintaining our offices and preparing meals, we will continue to pay and support them, and they will devote this time at home to online professional development. \n\n\n\nFor our customers, we are committed to keeping our services up and running. As many of you shift to more remote work, we hope our SaaS product— – Stack Overflow for Teams, will be a valuable tool to share knowledge, find information, and collaborate effectively while remaining safely at home. \n\n\n\nTo our community, please know that our community managers will be available if there are issues you want to discuss or challenges that arise. Let’s all work together to ensure the information and discussion across our Stack Exchange network is based on facts and science. \n\n\n\nThese are challenging and sometimes frightening times, but we feel confident that as a company and community, we can get through this together. \n    Tags: announcements, covid-19, remote work, stackoverflow",
        "url": "https://stackoverflow.blog/2020/03/09/a-message-to-our-employees-community-and-customers-on-covid-19/"
    },
    {
        "title": "The Stack Overflow Podcast is Back!",
        "content": "Before there was a Stack Overflow, there was a Stack Overflow podcast. The founders of this community and company started spitballing ideas for how to build it on weekly calls while the site was still in private beta. As Stack Overflow grew and changed over the last decade, the Podcast was a constant. That is, until May of last year, when it went on hiatus. Stack Overflow gives employees a sabbatical after five years of service, so I’m going to assume the podcast was just calling in a much needed vacation.Since I joined as Director of Content earlier this year, community members and colleagues kept asking me if it would ever be possible to bring the podcast back. Even though a new episode hasn’t been published in over a year, over a thousand people were still listening to our SoundCloud each week. It seemed clear the audience and the appetite for this ongoing conversation was still strong.So today, with a renewed energy, we’ve decided to bring it back. We’ve got three new hosts:Ben Popper, the director of content here at Stack (that’s me)Sara Chipps, the director of Public Q&A at Stack, a veteran developer, and Stack user number #4140Paul Ford: a writer and technologist who serves as CEO of Postlight, a digital product studio We’ll be chatting about what it’s like to work in software development, how folks can learn to code, and the way in which computer programming is influencing business, culture, and society. You can find and subscribe to the show on all the big audio platforms out there and we’ll be publishing a new episode each week. It went live early this morning, but it may take a little while to populate across various platforms. For now, you can find it on Spotify and Overcast. It should be everywhere soon. You can find the RSS feed here.We plan to bring on lots of interesting guests. This week, for example, we got the chance to sit down with Prashanth Chandrasekar, Stack Overflow’s new CEO, to hear about how he got into computer science and his vision for this community and company. Each week we’ll publish show notes here on the blog with links to topics we discuss. If we’re picking up where things left off, this would be episode #124. Hope you enjoy!\n\n\n\nSHOW NOTESIs it legal for source code containing undefined behavior to crash the compiler?True, you’re the boss, and the compiler works for you. But that doesn’t mean it always behaves just as you instructed. And that’s not necessarily a bad thing. Understanding the “as if” rule.What is Logo, you ask?And what about NetLogo? More wolves vs zombies please.William Chipps’ golden years – so close, and yet so far – the website.Shoutout to all the fine folks who came before us – Joel Spolsky, Jeff Atwood, Jay Hanlon, David Fullerton, Alex Miller, and Ilana Yitzhaki.\n\n\n\n\n    Tags: bulletin, podcast, stack overflow, the stack overflow podcast",
        "url": "https://stackoverflow.blog/2019/10/15/the-stack-overflow-podcast-is-back/"
    },
    {
        "title": "How Stackers ditched the wiki and migrated to Articles",
        "content": "Developers’ distaste for documentation, especially among independent contributors, is a well weathered meme in the world of software. Even Stack Overflow is not immune to this tension. “For management, an age old problem is that engineers hate to write documentation. It’s a check box on the process, something that takes time to write but that you feel no one will read it. There is this black hole syndrome where you spend hours working on something and get no feedback. I’ve heard people joke that documentation is where ideas go to die,” explains Tom Limoncelli, head of SRE. “Sometimes it feels performative. Why are we writing this? Because our policy is that we will document every service? That hurts morale, no one wants to feel like their time is wasted.”\n\n\n\nIn an effort to rethink how documentation work, we recently introduced Articles, a new type of content inside Stack Overflow for Teams that is meant to pair with our traditional questions and answers. Articles allows for longer-form documentation and prose that can sit side by side with shorter Q&A. The goal is to build a system for documentation that can be both proactive and reactive, flexible and on-demand. We decided to sit down with team leads from across Stack to learn what it’s been like to drink our own champagne, be among the first to use our own product, and how it has changed their approach to documentation. \n\n\n\nMigration and meaning on SRE\n\n\n\nChris Hunt, a site reliability engineer at Stack, had actually begun a process of reworking his team’s documentation several months before we introduced Articles. His team found itself with a fractured system that had stopped working well in several areas, a condition that often befalls documentation, even with the most well-intentioned coders. “We have three different wikis, and two of them were broken, so we couldn’t update them at all.”\n\n\n\nThe SRE team prides itself on a culture of continuous improvement. After all, it’s responsible for ensuring that Stack Overflow and our network of exchanges stay up 24 hours a day, 365 days a year. When there is even a brief outage, we hear about it, from millions of developers across social media. “In SRE, we have a culture of ‘leave things better than you found it.’ If you have an alert that’s noisy, fix the things causing the fires. If you found documentation that wasn’t helpful, update it for the next person.” \n\n\n\n“The author of 90% of our documentation doesn’t work here anymore!”\n\n\n\nSo how did Hunt and his team wind up with three wikis, two of which were broken? Often, with documentation, the issue is about the transition between different systems or different employees. “I see two common issues,” says Hunt. “One, maybe they wrote it to the best of their ability, but it hasn’t been updated in a while, and it’s no longer accurate given changes in other systems. Two, the author of 90% of our documentation doesn’t work here anymore! Now, I could take on the task of updating and migrating that information, but as every developer knows, that means I am now the owner, and I may be hesitant to take on that responsibility, especially if I’m not familiar with how and why it was originally written.”\n\n\n\nThe SRE team wasn’t alone. Erwin Alberto, who heads up our IT team, was also in the process of trying to design a new system for documentation when he learned we were creating Articles. “We had stuff all over the place. Some were in wikis, some in Google Docs, some in email. Sometimes it was on a work drive, sometimes on a personal one. At that point, even though we had hundreds, maybe thousands of pages, it’s really like having no documentation at all, because the whole point is having something that anyone on your team can find and access when they need it.” \n\n\n\nMigration\n\n\n\nAlberto had already put in the hard work of auditing existing content with his team. His advice? Start with your worst pain points first. “We were in a position where there was a lot of great expertise on the team, but a lot of it was hidden in peoples’ heads.” \n\n\n\nSo, how do you decide what’s worth migrating and what’s no longer relevant? Erwin and his team looked at what would be the most common support tickets and the Q&A on Teams that had the most engagement and traffic. This allowed them to identify the most pressing topics, and then divide them up, with team members committing to write pieces as part of their next sprints. \n\n\n\nThe IT team assigned one author for each piece on the sprint, with at least one other team member assigned to check the Article immediately after for quality control. “In a way, part of the audit of content happened in Articles.” Alberto remembers, “It was the easiest way to get visibility into the different fragments. We put them up and then edited them.” \n\n\n\nAnother way this problem is being addressed is as part of the onboarding process for new hires. Josh Duffney, another site reliability engineer, joined the company in June of this year. He began asking lots of questions on our internal instance of Stack Overflow for Teams. He was transforming something intangible into digital artifacts that everyone on the team could use and improve. “A lot of what I have been learning and committing to Teams is tribal knowledge. A good example is how to test our terraform modules. I can ask that question, record the answers, and then bring a bunch of Q&A together to create an Article that documents the difference between my assumptions and the reality.”\n\n\n\n“It really reduces the friction around contribution.”\n\n\n\nDuffney sees a big difference between the existing wikis and the system of documentation the SRE team is now working towards with Articles. “As someone who was recently onboarded, the pain points with the existing systems was that it was fractured across three wikis, and it’s in a hierarchy that is tough to navigate. As someone new, I don’t know the context of the directory structure.” With Teams, a query will surface any Q&A, Articles, or collections tagged with a topic like SRE, Talent, or legal. “Relying on search and tags is a natural fit for how we operate on the internet anyway. It really reduces the friction around contribution.” \n\n\n\nLevel Zero Support\n\n\n\nHaving done the heavy lifting of content auditing, Alberto’s team is now migrating everything to Articles. He says that he sees the combination of long form pieces and Q&A as a new level of support. “We used to have level one, which was sending a ticket to the help desk, and it was something we could easily resolve for you. Level two was a more complex problem that maybe required an engineer or specialist from a certain team to figure out. I look at this new system as a level zero.” Before sending us a ticket, folks can search Teams. If they find a question that solves the problem, great. If they need more details, they can follow links to in-depth articles or collections that bring together Q&A and article with the same tags.“\n\n\n\nThis activity is both generous and selfish. “One motivation is great support for our colleagues, call it great customer service. But another is to avoid having to answer the same question—How do I reset my password? How do I install and set up OpenVPN?—a dozen times a month,” says Alberto. “If we can teach people to look to our knowledge base first, and if the results they get are helpful, they will learn that habit, and that will free my team up for the bigger challenges that require our personal attention.”\n\n\n\nIntegration as Innovation\n\n\n\nDean Ward, a senior developer on our architecture team who heads up work on billing systems, says he looks at Articles as a chance for a fresh start. “Normally I would be getting a ping in group chat apps or I would get an email thread. Very little of that information exchange makes its way back as productive additions to the original documentation.” \n\n\n\n“I think the fact that Articles are linked to Q&A, it can drive you to keep everything fresh. It’s the little nudge. There are a lot of two way links between things,” explains Ward. For a developer, a wiki isn’t a place they want to spend time very often. “Articles, and traditional documentation, is not something you use everyday. For developers, Q&A can be something they touch every day, or a few times a week, and so that means your documentation has a much better chance of staying up to date.”\n\n\n\nBen Matthews, the engineering manager on Talent and Ads, says that even after a year on the job, he would ask a question and be directed to a piece of documentation that he never knew existed. Because knowledge was scattered across so many different platforms and so frequently exchanged in ephemeral conversations on chat or in person, he never felt confident that an answer existed or needed to be created. \n\n\n\nGiving users the chance to enter text into a box and search with tags isn’t exactly breaking new ground when it comes to functionality. But that’s not the point. “In some ways it’s obvious. It feels like table stakes,” says Matthews. “But when you layer on the connection to Q&A, the integrations so you can search, ask or answer from within a work chat or email thread, and the gamification that adds just a little more incentive to the writer, overall it adds a lot of momentum and removes a lot of friction around content creation.”\n    Tags: articles, documentation, stack overflow for teams",
        "url": "https://stackoverflow.blog/2020/09/28/migration-wiki-documentation-articles/"
    },
    {
        "title": "Scripting the Future of Stack Overflow",
        "content": "As we enter a new decade, there are tremendous forces converging—cloud computing, big data, AI, ML, and an increasingly diverse group of young coders from around the world. Every day, millions of developers visit Stack Overflow to find information they need as they push these exciting new technologies forward. There has been a massive shift since my days as a computer engineering graduate. I was fascinated by the power of languages like Perl, but had only my teachers, classmates, and a few small web forums and mailing lists as a community to support my learning. The numbers below really put into perspective the impact that our community generates and the opportunities that lie ahead:\n\n\n\nAcross Stack Overflow and the Stack Exchange network, we saw around 10 billion page views from 100+ million unique visitors over the course of 2019.In 2019, Stack Overflow added over 2.8 million answers and 2.6 million new questions, with over 1.7 million new users joining the community. There are now over 18 million questions and 27 million answers on Stack Overflow, and over 150,000 people sign up for a Stack Overflow account each month, 12 years after we started.Every day, users answer thousands of questions on topics like cloud technology, container orchestration, and machine learning. There is an ever growing trove of knowledge on Amazon Web Services, Google Cloud Platform, and Microsoft Azure.Our community members and volunteer moderators handled almost two million flags to keep inaccurate, abusive, unwelcoming, or inappropriate content off the site and in line with our updated Code of Conduct.Hundreds of thousands of engineers leveraged the power of Stack Overflow for Teams to better collaborate and ship products faster.Over 40,000 jobs were posted on Stack Overflow Jobs in 2019. We now have over 1,000,000 searchable profiles of developers who are interested in being contacted about a job on Stack Overflow Talent.Almost a million developers found new and useful tools after seeing a company advertise on one of our sites. \n\n\n\nThere are a handful of companies that are indispensable to the world of software and to our evolution to a digital society. Stack Overflow is privileged to be in this group of disruptive companies. Thanks to our founders Joel and Jeff, our employees all over the world, and the millions of community members who have contributed so meaningfully to our mission and laid the foundation for our future.\n\n\n\nThe work we do would not be possible without the contributions of our incredible community. Across Stack Overflow, hundreds of thousands of users, supported by hundreds of moderators, helped to review questions, triage answers, propose new tags, and keep the discourse respectful and on topic. The little actions taken on a daily basis add up to millions of important contributions. Alongside this tremendous activity, nuanced discussions about topics like cybersecurity, cloud server architecture, and data science are happening across our network of Stack Overflow and Stack Exchange sites. \n\n\n\nLearning from the company and community — and evolving the organization\n\n\n\nDuring my first three months at the company between October and December of 2019, I connected with all our employees around the world and spent a significant amount of time outside the office speaking with customers and community members. What became apparent in my conversations is that software development has evolved rapidly, and successful companies are evolving their own cultures and practices to keep pace.\n\n\n\nFor the modern developer, the lines between programming languages, software frameworks, cloud infrastructure, and DevOps are blurring. Developers and organizations are trying to keep up and compete (as the incumbent) or disrupt and take market share (from the incumbent) in an as-a-service digital economy. Every significant developer technology relies on coders finding answers by asking questions on Stack Overflow. But while Stack Overflow has played a massive role in empowering and enabling developers around the world to learn, write code, and build products faster, we as an organization have not kept up with the evolution of the industry.\n\n\n\nIt is critically important that we evolve our platform, community infrastructure, and culture to be more useful to our community so we continue to be a core part of a developer’s workflow. Of the ~90,000 respondents to our 2019 Stack Overflow Developer survey, 80% tagged themselves as hobbyist programmers, 60% wrote their first line of code before the age of 17, and only 10% were women. Statistics like these have significant implications on how we think about making our community more welcoming, engaging, and inclusive. The key to Stack Overflow’s future and growth are the millions of developers from around the world who find the site useful, but who haven’t yet been welcomed into the community. We need to expand our reach and engagement to ensure these developers join the conversation and push their own learning to new heights.\n\n\n\nA key part of great product development is to stay close to customers, listen, and take a thoughtful, data-driven, and research-oriented approach to building products. In our case, it is critical that we work closely with our community to listen, change, and evolve rapidly. As an example, over the past several months, we had a lot of dialog with our community about how best to enforce and evolve our code of conduct. We learned that we needed much better channels to listen to our moderators and community members. We have not evolved the existing channels of engagement for power users in our community, like Meta, or articulated how we intended to make improvements going forward. This has caused friction as our user base and business have rapidly grown. We acknowledge these issues, apologize for our mistakes, and have plans for improving in the future.\n\n\n\nIn the fourth quarter of 2019, we created a large task force made up of passionate community advocates from across the company to propose solutions to this core problem. The team’s mission is to improve our feedback loop and working relationship with our community. We added a member of our Community team to our leadership team and restructured the organization to invest in Product leadership to build Community-centric features. We are also forming a moderator council, which will include a group of users with diverse experience levels and backgrounds who can help guide our processes. We’re making hard choices and treating no assumptions as sacred in considering ways to evolve the community.\n\n\n\nMost importantly, we kicked off a key large scale community survey named Through The Loop and invited our entire community to share their suggestions, product feature requests, and ideas for how Stack Overflow should evolve more broadly. We’ve heard consistent feedback from you regarding key topics like question and answer quality, welcomingness and inclusion, and discovery for relevant questions and answers. All of this is in pursuit of new and more productive ways to work with and listen to our community in the next era of the company. We want to serve all of the millions of people who use Stack Overflow, not just those who know the most about how the site has worked in the past. To be clear, this does not mean channels like Meta will go away, but they need to grow to ensure that users are heard and responded to in a timely fashion. \n\n\n\nWe’ve completed the process of defining how our moderator council will be structured, shared an internal framework for asking coworkers tough community questions, defined the important functions that would be best served by more scalable solutions than Meta, and built outlines of our new moderator training modules. By the end of this quarter, all of these initiatives will be shared publicly with you, our users.\n\n\n\nCommunity engagement and inclusion is a top priority for Stack Overflow in 2020. Already, the team has established and released a plan for improving communication and empowering our users internally. We are experimenting to improve in areas we know need work: encouraging more question asking, reduce user to user friction, expanding inclusion, and creating a more integrated experience between Stack Overflow and other technical sites on Stack Exchange. The results of all of this work is being shared publicly through our new Loop series on the Stack Overflow blog and by subscribing to our Stack Overflow newsletter and podcast. We have seen some encouraging results: more people are asking questions, we cut the number of negative comments nearly in half, and December was our best month ever for new user signups!\n\n\n\nOur latest podcast is a conversation with Prashanth on our plans for 2020. Give it a listen. \n\n\n\nBuilding a business and serving every team\n\n\n\nAt the same time, Stack Overflow continues to grow and evolve as a business. We began with our Advertising product and then expanded to our Talent product. My first quarter helping to manage these businesses has convinced me that Stack Overflow is an underestimated and perhaps even under recognized platform for helping developers connect with companies directly either to understand their developer-centric products or to find their next role at those companies. There’s a lot we can do to raise the awareness of these capabilities.\n\n\n\nOur third line of business, Stack Overflow for Teams, is our flagship SaaS product and lets development and technical teams use the power of Stack Overflow internally to answer questions about their own code and technology. It’s becoming an invaluable part of the toolset for developers and technical workers at tech giants like Microsoft, which has over 70,000 users. It’s also used by small startups like Osso VR, which has a few dozen developers using the platform. The Enterprise version launched only two years ago and our mid-level Business tier just six months ago. Within this short period of time, Teams became the fastest growing product in our portfolio. We’re also expanding partnerships within the product. Stack Overflow for Teams integrates with lots of your favorite tools—Slack, Microsoft Teams, and Okta. Key developer workflow tools like GitHub Enterprise and Jira are coming shortly. \n\n\n\nThe way companies use Stack Overflow for Teams is fascinating, including one that hits close to home: development teams looking to ship product faster and be more responsive to their customers. This requires Engineering, Product Management, Product Marketing, and other teams to collaborate closely to not only build and ship products but also enable Sales and Customer Success teams to present accurate and up-to-date feature updates and roadmaps to prospects or customers. We recently made Stack Overflow for Teams available for free for the first 30 days, so everyone can experience the power that comes with this collaboration and knowledge sharing tool.\n\n\n\nWhat I hear time and again in conversations with our customers and community members is that the tools we built to discuss writing code can be extremely useful across many areas of an organization—in Engineering, Product Development, Product Marketing, and even People, Business Operations, Legal, Customer Success, and Sales organizations. I know developers love data so I wanted to share highlights from a study we commissioned from Forrester Consulting to assess Teams’ TEI (Total Economic Impact). They sat down with four of our enterprise-sized customers and dug deep. After weeks of interviews and number crunching, the findings prove an incredible 179% return on investment. The full study also revealed some other surprisingly huge impact for companies that use Stack Overflow Teams:\n\n\n\n$224,000 in question-asking time savings in the first year$1.1M in question-answering time savings in the first yearDecreased time to marketMore efficient onboarding for new team members\n\n\n\nThese numbers are exciting and give everyone at the company a lot of confidence that we can continue to help developers and technical workers all around the world do their daily jobs better and more efficiently. \n\n\n\nGrowing Stack Overflow\n\n\n\nIn 2020, in order to continue to fuel our growth, we’re expanding and diversifying company leadership. Just last week we announced the addition of Teresa Dietrich, who joined as our Chief Product Officer and brings great technical leadership experience from companies like McKinsey New Ventures, Namely, and WebMD. We’ve also added Adrianna Burrows to our Board. In addition to being a Stack Overflow alum, Adrianna has been a marketing leader at great companies like Microsoft, Cornerstone on Demand and is currently CMO of Payscale. I’m grateful to have their expertise to help drive the company forward. \n\n\n\nStack Overflow is already an indispensable part of the developer workflow from the perspective of our public community, but there is so much more to do for developers as they ship code. Many of the product innovations we’re excited to explore under Teresa’s leadership are the opportunities at the intersection of private and public Stack Overflow. Developers want us to be a more active part of their daily workflow. Coders already leverage public Q&A several times a day to answer their most pressing development questions, but want a more integrated and more enriching experience, especially when combined with our private Teams product. \n\n\n\nWe are already seeing many companies leverage our community infrastructure to better support their own developer communities. Sencha, Snowflake, and Mapbox have all announced efforts to use Stack Overflow as a platform for helping programmers to use their products. “We want to make it easier and faster for anyone to find answers to their questions, especially questions that others have raised without needing to wait for a reply from our team,” wrote Yaniv Markovski, head of support at Mapbox. “As a bonus, joining in on this community conversation creates a feedback loop that allows us to create better documentation and learn how we can improve our product.” We are currently exploring how we can create an exceptional experience for developers and companies to interact more directly on Stack Overflow— i.e., by creating more curated channels and spaces on Stack Overflow to interact more directly with specific communities. Stay tuned for more ideas here!\n\n\n\nAs we look forward to 2020, we plan to invest in public Q&A, expand our community, and continue to cement our place as a pillar of the software industry and broader knowledge economy. We also know that we have work to do on improving how we engage with our community, as well as continuing to strive for more diversity, inclusion, and approachability.\n\n\n\nThis is a big mandate. So as we embark on the journey this coming year, I’ve asked everyone at Stack Overflow to maintain a growth mindset (through hard work, openness to feedback, and resilience), to always operate with our “why” at the center, and to conduct every meeting as if there is a community member and customer in the room. What I ask of you—anyone reading this post—is to continue to grow with us, to give us feedback through our new feedback loops, and to continue to rely on Stack Overflow and the Stack Exchange network as the essential resource for exchanging ideas and information on technical topics.\n\n\n\nVisionary companies are guided by a mission, not just a sustainable business model, and seek out challenges that can help move humanity forward. We have the opportunity to do that at Stack Overflow, to realize our profound mission of helping write the script of the future by serving developers and technical workers. Let’s answer the most important questions in this great new era of technology, together.\n    Tags: bulletin, community, company, stackexchange, stackoverflow, vision 2020",
        "url": "https://stackoverflow.blog/2020/01/21/scripting-the-future-of-stack-2020-plans-vision/"
    },
    {
        "title": "Adding Static Code Analysis to Stack Overflow",
        "content": "As of September 23rd, 2019, we’re applying static analysis to some of the code behind public Stack Overflow, Stack Overflow for Teams, and Stack Overflow Enterprise in order to pre-emptively find and eliminate certain kinds of vulnerabilities. How we accomplished this is an interesting story and also illustrative of advancements in .NET’s open source community.But first…\n\n\n\n\nWhat did we have before static analysis?\n\n\n\n\nThe Stack Overflow codebase has been under continuous development for around a decade, starting all the way back on ASP.NET MVC Preview 2. As .NET has advanced, we’ve adopted tools that encourage safe practice like Razor (which defaults to encoding strings, helping protect against cross site scripting vulnerabilities). We’ve also created new tools that encourage doing things the Right Way™, like Dapper, which handles parameterizing SQL automatically while still being an incredibly performant (lite-)ORM.An incomplete, but illustrative, list of default-safe patterns in our codebase:\n\n\n\n\nAutomated SQL parameterization with DapperDefault encoding strings in views with RazorRequiring cross site request forgery (XSRF) tokens for non-idempotent (ie. POST, PUT, DELETE, etc.) routes by defaultHMACs with default expirations and common validation codeAdopting TypeScript—an ongoing process—which increases our confidence around shipping correct JavaScriptPrivate data—for Teams and Enterprise— is on separate infrastructure with separate access controls\n\n\n\n\nWe were safe, at least in theory, from most classes of injection and cross-site-scripting attacks.So, …\n\n\n\n\nWhat did static analysis give us?\n\n\n\n\nIn large part, confidence that we were consistently following our pre-established best practices. Even though our engineers are talented and our tooling is easy to use, we’ve had dozens of people working on Stack Overflow for 10+ years—inevitably, some mistakes slipped into the codebase. Accordingly, most fixes were just moving to doing something “the right way” and pretty minor. Things like “use our route registration attribute instead of [HttpPost]” or “remove old uses of SHA1 and switch to SHA256.”The more “exciting” fixes required introducing new patterns and updating old code to use them. While we had no evidence that any of these were exploited, or even exploitable in practice, we felt it was best to err on the side of caution and address them anyway. We added three new patterns as part of adopting static code analysis:We replaced uses of System.Random with an equivalent interface backed by System.Security.Cryptography.RandomNumberGenerator. It is very hard to prove a random number being predictable either is or isn’t safe, so we standardized on always hard to predict.We now default to forbidding HTTP redirects to domains we do not control, requiring all exceptions be explicitly documented. The concern here is open redirects, which can be used for phishing or other malicious purposes. Most of our redirects were already appropriately validating this, but the checks were scattered across the codebase. There were a few missing or buggy checks, but we found no evidence of them being exploited.We strengthened XSRF checks to account for cases where users move between unauthenticated and authenticated states. Our XSRF checks previously assumed there was a single token tied to a user’s identity. Since this changes during authentication, some of our code suppressed this check and relied on other validation (completing an OAuth flow, for example). Even though all cases did have some kind of XSRF prevention, having any opt-outs of our default XSRF checking code is risky. So we decided to improve our checks to handle this case. Our fix was to allow two tokens to be acceptable, briefly, on certain routes. Our checks run on every PR for Stack Overflow and, additionally (and explicitly), on every Enterprise build—meaning we aren’t just confident that we’re following our best practices today, we’re confident we will keep following them in the future.In terms of Open Web Application Security Project (OWASP) lists, we gained automatic detection of:\n\n\n\n\nSQL injection attacks [2017 #1]XML external entity (XEE) attacks [2017 #4]Cross site scripting (XSS) attacks [2017 #7]Insecure deserialization [2017 #8]XSRF attacks [2013 #8]Open redirects [2013 #10]\n\n\n\n\nThat wraps up what we found and fixed, but…\n\n\n\n\nHow did we add static code analysis?\n\n\n\n\nThis is boring because all we did was write a config file and add a PackageReference to SecurityCodeScan.That’s it. Visual Studio will pick it up as an analyzer (so you get squigglies) and the C# compiler will do the same so you get warnings or errors as desired.\n\n\n\n\n\n Not real code. By the time I thought to take a screenshot, we’d already fixed everything. \n\n\n\n\n\nFar more interesting is all the open source stuff that made this possible:\n\n\n\n\nIn 2014, Microsoft open sourced Roslyn, their C# and VB.NET compiler.Visual Studio 2015 ships with support of Roslyn analyzers.The authors of Security Code Scan start work in 2016.I contribute some minor changes to accommodate Stack Overflow peculiarities in 2019.\n\n\n\n\nIf you’d told me six years ago that we’d be able to add any sort of code analysis to the Stack Overflow solution trivially, for free, and in a way that contributes back to the greater developer community, I wouldn’t have believed you. It’s great to see “the new Microsoft” behavior benefit us so directly, but it’s even greater to see what the OSS community has built because of it.We’ve only just shipped this, which begs the question…\n\n\n\n\nWhat’s next with static code analysis?\n\n\n\n\nSecurity is an ongoing process, not a bit you flip or a feature you add. Accordingly there will always be more to do and places we want to make improvements, and static code analysis is no different.As I alluded to at the start, we’re only analyzing some of the code behind Stack Overflow. More precisely we’re not analyzing views or tracing through interprocedural calls—analyzing both is an obvious next step.We’ll be able to start analyzing views once our migration to ASP.NET Core is complete. Pre-Core Razor view compilation doesn’t give us an easy way to add any analyzers, but that should be trivial once we’re upgraded. Razor’s default behavior gives us some confidence around injection attacks, and views usually aren’t doing anything scary—but it will be nice to have stronger guarantees of correctness in the future.Not tracing through interprocedural calls is a bit more complicated. Technically, this is a limitation of Security Code Scan, as there’s an issue for it. That we can’t analyze views reduces the value of interprocedural analysis today, as we almost always pass user-provided data into views. For now, we’re comfortable focusing on our controller action methods since basically all user-provided data passes through them before going onto views or other interprocedural calls.The beauty of open source is that when we do come back and do these next steps (and any other quality of life changes), we’ll be making them available to the community so everyone benefits. It’s a wonderful thing to be able to benefit ourselves, our customers, and .NET developers everywhere—all at the same time.\n    Tags: bulletin, code-analysis, engineering, stackoverflow",
        "url": "https://stackoverflow.blog/2019/10/08/adding-static-code-analysis-to-stack-overflow/"
    },
    {
        "title": "The Loop #1: How we conduct research on the Community team",
        "content": "👋Hello! I’m Donna, the Community Design Lead at Stack Overflow. \n\n\n\nWelcome to CHAPTER #1 of The Loop, a new blog series from the Stack Overflow Community team. This post is a deep-dive into our research approach: what it used to be, what it is now, and how it continues to evolve. \n\n\n\nLearn more about The Loop in CHAPTER #0 (yes, our chapters are zero-based).\n\n\n\n\n\n\n\nIf you work on a product that’s ever benefited from research – whether that’s talking directly to users, analyzing experiment data, or any number of other research methods – you know how indispensable these inputs are for making the right decisions. \n\n\n\nBut how do you decide which methods to use and when? How do you know if you’re spending the right amount of time on research? How do you know when it’s time to change your research methods? \n\n\n\nThese are questions that the Community team has been grappling with, particularly in the last year. While we certainly don’t have all the answers, I’d like to share: \n\n\n\nWhat our research used to beWhat it is nowHow it continues to evolve\n\n\n\nThe early days\n\n\n\nIf you’ve been with us for a long time, you may remember when our research process looked something like this.  \n\n\n\n\n\n\n\nMeta feedback involved direct exchanges between users and staff members on Meta, a site where users discussed the site, shared ideas, gave feedback, and talked to staff. These conversations led to the Stack Overflow that many of us are familiar with, and we learned a lot while working with this small group of highly motivated users for many years. \n\n\n\nOur current approach: scrappy and mixed-method\n\n\n\nAs our community has grown, our research needs have become more complex. With 50 million people coming to the site every month – all with unique needs and backgrounds – our team and its research approach have evolved to keep up with this ever-growing complexity.  We’ve added folks to the team with specialized research skills, like UX researchers and data scientists, while people like product managers, designers, community managers, marketers, and developers contribute research as well. \n\n\n\nTogether, we conduct mixed-methods research that helps us create a holistic picture of how we’re doing. This collective research seeks to answer questions like: \n\n\n\nWhat do users need?What do customers need? Are our ideas and decisions on the right track?How are our products and features performing? \n\n\n\nThis mixed-method approach allows us to hear from a variety of inputs throughout the life cycle of a product or feature, from early conception to post-launch. \n\n\n\nHowever, our small team can’t always conduct all of the research we’d like – which is where the “scrappy” element of our research approach comes in. Generally, the greater the cost and impact of a project, the more research energy we’ll devote to it. This matrix visualizes how we might decide the amount of research that goes into a project.\n\n\n\n\n\n\n\nToday, our research process might look something like this for a high-impact, high-cost project. \n\n\n\n\n\n\n\nThink of each method as a puzzle piece, and the outcome as the completed puzzle. I’ll talk more in detail below about our methods and why we use them. \n\n\n\nMethod #1: surveys\n\n\n\nSurveys are one of our favorite sources of both qualitative and quantitative feedback. We currently use surveys for:\n\n\n\nGeneral site satisfaction. This is used to gauge trends in satisfaction and helps us identify directional improvements. We use this data to inform our roadmap. The beginning of a project. This helps us vet early ideas and point us in the right direction. We use survey data, as well as other inputs, to help us identify requirements and design.The end of a project. Once we ship, we can see how people are feeling about the new feature and identify changes for future iterations. \n\n\n\n⚠️Why surveys? Surveys are a great way to get a high volume of qualitative feedback, which we can use to understand macro trends as well as micro issues for things like usability and copy. We can also target surveys to specific audiences, so that we are gathering data from people who’d be affected by the outcome of a particular project. \n\n\n\nMethod #2: user research\n\n\n\nQualitative research helps us understand the why and how of user behavior, allowing us to get deeper insights than we might through other methods. Generally, these are semi-structured discussions that take place by video call or in writing – where we’ll talk in-depth with users about a specific topic, feature, or design. We generally conduct these throughout the beginning and middle phases of projects. We use a few different sub-methods, depending on the project: \n\n\n\nUser interviews. We have conversations with people who may be affected by a given change. Since Stack Overflow is an online community where groups of people interact with each other, our conversations are not limited to the end user. For example, if we are updating the question asking form, not only do we talk to people asking questions, but also those answering and moderating questions. Meta feedback. We monitor Meta for bug reports and small usability/copy issues after shipping changes to the site. Note that this may change based on what the next iteration of Meta looks like, as mentioned in the previous chapter of The Loop. \n\n\n\n⚠️Why user research? We get deeper insights than we might through other methods. Like surveys, we can target user research to specific audiences, and will talk to a range of groups affected by a given product change. \n\n\n\nMethod #3: quantitative data\n\n\n\nWhile qualitative data helps us understand why, quantitative data helps us understand how many. We use data analysis and A/B tests to provide insight into how our decisions scale, as well as how changes we make contribute to site usage and overall performance goals. Sub-methods include: \n\n\n\nGeneral data analysis. This is used to understand patterns in site usage across various user segments. A/B tests. We test as much as we can, particularly areas that impact core interactions on the site.\n\n\n\n⚠️Why quantitative data? Statistical analysis allows us to see how (or if) earlier research insights scale and how the changes we make impact top-line performance goals.\n\n\n\nMethod #4: secondary research\n\n\n\nToday’s Stack Overflow doesn’t exist in a vacuum. When we consider changes to the site, we want to understand the broader contexts of our users, as well as any historical insights that led us to the current state of the site. This helps ensure that we’re not reinventing the wheel or ignoring hard-learned lessons from the past. Sub-methods include: \n\n\n\nComparative site analysis. We look at other sites to understand patterns and standards that users are learning offsite. This awareness helps us understand how to make a user’s entry into Stack Overflow as seamless as possible. Archive research. We scour Meta and talk to various staff, particularly community managers and developers, to learn how and why a feature arrived at its current state. \n\n\n\n⚠️Why secondary research? We can learn from broader offsite patterns as well as research from previous iterations on the product.\n\n\n\nReflection\n\n\n\nHow we talk to and learn from our users has changed a lot over the years. By broadening our research approach, we’ve lost some of the trust and familiarity of regular, frequent exchanges with a small, passionate, and generous group of people on Meta. At the same time, we’ve brought more rigor and precision into our research approach, which means we have more confidence when making decisions. \n\n\n\nOur research approach is constantly evolving. As Sara and Juan wrote in their latest blog post, we’re expanding our research toolbelt to include a working group (a hand-selected group of folks we’ll gather feedback from regularly). We want to continue not just listening to our users, but improving how we do so. \n\n\n\nHow does your organization conduct research? How has your organization’s research changed over time, and what have you learned from these changes? \n\n\n\n\n\n\n\n✋Opt-in to our Research email list (must have a Stack Overflow account). You’ll receive invitations to participate in surveys, user interviews, and more. You’ll receive up to a few emails per year and can opt-out at any time.\n\n\n\n📖Read CHAPTER #0 of The Loop, where Sara and Juan talk about our plans to improve how we listen to users. \n    Tags: announcements, community, company, insights, stackoverflow, the loop",
        "url": "https://stackoverflow.blog/2019/12/11/the-loop-1-how-we-conduct-research-on-the-community-team/"
    },
    {
        "title": "An Interview with Stack Overflow CEO Prashanth Chandrasekar",
        "content": "“We make a huge difference in people’s lives, and it’s not to be underestimated.” – Prashanth Chandrasekar\n\n\n\nLast week the Stack Overflow podcast crew sat down with our new CEO to chat about his background in computer science and his vision for the company’s future. What follows is a lightly edited selection of that conversation. To hear the full thing, you can listen to the podcast here. Don’t forget to subscribe for future episodes!\n\n\n\nBen Popper:\n\n\n\nWelcome to the Stack Overflow podcast for the week of October 15th I’m here with my co hosts. Say hi everybody.\n\n\n\nSara Chipps:\n\n\n\nHi everybody.\n\n\n\nPaul Ford: \n\n\n\nHello.\n\n\n\nBen:\n\n\n\nAnd we’ve got a very special guest today, our new CEO. Can you introduce yourself?\n\n\n\nPrashanth Chandrasekar:\n\n\n\nThank you so much. I am very, very happy to be here and excited to join the Stack Overflow family. Quick introduction about myself. I grew up in Bangalore, India until I was about 17 years old. Grew up in a very blessed situation with my mom, who was a medical doctor and my dad, who was originally an engineer and then became an academic over time. I’m grateful that they really exposed me to technology very early on, not only through both of them, but also just by virtue of living in Bangalore, which is known as the Silicon Valley of India. \n\n\n\nSo technology has been part of my DNA for the longest time. When I was about 17, I really felt this yearning to explore my horizons and my perspective and I decided that I wanted to go abroad to continue my learning and my education and just my life in general. Very, very fortunately, I received a scholarship to study in the United States, otherwise I would not have been able to make the move. I ended up at the University of Maine in Orono, Maine, which is a very, very small town and very different from Bangalore to say the least.\n\n\n\nBen:\n\n\n\nI’m going to kick things off here because I know a little bit of this backstory, but let’s talk about that first computer that your dad brought home. He went on a trip to Hong Kong. He brought home a 486.\n\n\n\nPrashanth:\n\n\n\nActually, it was not even a 486. I think it was a 286. I clarified that with him.\n\n\n\nSarah: \n\n\n\n286 Club.\n\n\n\nPrashanth: \n\n\n\nYeah, so it was a very old computer, but he lugged that thing all the way from Hong Kong on one of his trips and he’s a fairly global traveler and he does a lot of work in national development. Fortunately for my younger brother and myself, he brought that all the way from there, and he brought a bunch of five and a quarter inch floppy disks, which had business software along with obviously, what would get us going, which were video games.\n\n\n\nBen: \n\n\n\nDefender!\n\n\n\nPrashanth:\n\n\n\nDefender was my first exposure to a computer game and I was completely hooked. \n\n\n\nIt took a long time to run things of course, but it was really eye opening. The great thing about Indian education is that they expose to kids technical topics really early on, whether that’s calculus in middle school or computer science.\n\n\n\nThey started teaching Logo and so that was the first programming language that I ever knew. I then quickly moved onto BASIC. My mom was a doctor, she had a private practice and she had lots of patients. So for my 10th grade project, I had the opportunity to build a computer program application in BASIC, and I chose to build sort of a hospital management system-\n\n\n\nPaul: \n\n\n\nThat’s fun. Just a fun cool kid thing to do. (everyone laughs)\n\n\n\nPrashanth: \n\n\n\nYeah.\n\n\n\nPrashanth: \n\n\n\nThere is something addictive about building something that actually delivers a very specific outcome with the customer that is going to benefit from it. \n\n\n\nSarah:\n\n\n\nMy big question for you is what kind of product manager was your mom? How was she as a client?\n\n\n\nPrashanth:\n\n\n\nAs a client, she is very driven and knows exactly what she wants so is not shy about sharing requirements. Very clear on exactly what the specs are. It’s great having clear direction from customers.\n\n\n\nBen: \n\n\n\nNo scope creep in this house.\n\n\n\nPrashanth: \n\n\n\nYes. Anyway, that was just a great, great introduction to computer programming somewhat early, I suppose, in my life. That obviously continued heavily into college when I studied computer engineering and got into, C, C++, and Perl and all the other languages.\n\n\n\nSarah:\n\n\n\nWhen you were using Logo, what were you using it for?\n\n\n\nPrashanth:\n\n\n\nIt was completely for drawing, really. That’s all it was. I think it was just to say how do you actually control movement of the turtle?\n\n\n\nPaul:\n\n\n\nWell, it gives kids a reaction. You get to see the computer do something.\n\n\n\nPrashanth: \n\n\n\nThis is that addictive part that I mentioned earlier on, because it gives you this sense of control, of creative control to say, I’m actually controlling this thing in a very, very binary zero-one kind of way.\n\n\n\n“Hey, move forward by 50 steps.” Okay, here you go. It actually moves forward by 50 steps. “Turn right.” Okay. That, in itself, gets you going, and I see a similar look in my kids’ eyes now, when they are actually learning how to code. My daughter’s nine years old, my son’s six years old, and they’re big code.org fans. She loves to draw and sketch. You can see the reaction in her face when she’s able to do that. \n\n\n\nI think it teaches you to be somewhat of a perfectionist and to be detail-oriented, that I think that the kids can also gain from, I think, by being exposed to it very early on, because if you are frustrated by the fact that your command actually didn’t result in the outcome that you hoped for, then you are going to keep pursuing until you actually get to the end zone, until you actually are perfecting the outcome. It’s very easy to get stuff wrong too, in computer programming, as we all know.\n\n\n\nSarah:\n\n\n\nResearchers call the phenomenon that you’re talking about with your kids, they call it eu-stress, which is euphoric stress. They call it that when it comes to gaming as well. It’s the idea of stress where you know there’s a solution and you know you can find it, so it’s not distress, which is something where you easily get discouraged. It’s euphoric stress that gets you more excited until you solve that problem, and then you’re like, “Yes!” And you get all this dopamine, this flooding in of, “Yes, I did it!” It’s really neat.\n\n\n\nPrashanth:\n\n\n\nSara, you’ve taught me something new. That’s amazing.\n\n\n\nPaul: \n\n\n\nSo we are talking to the Stack audience, they’re going to want to know things. What can we tell them? What can you tell them? \n\n\n\nPrashanth:\n\n\n\nI’ve kind of had the privilege of learning about this company for almost since its inception, because all the teams that I’ve led, especially at my time at Rackspace, have always used Stack Overflow. It’s always the default place for any engineers on our team to go get their answers quickly. So if they want to understand something about Kubernetes, they expect the answer to come from Stack Overflow. So I’ve followed the company very closely by the impact that it has very broadly for a long time and the tremendous impact that it has.\n\n\n\nThere are probably a handful of companies in the world, in our era, that has such a large impact around the world. We’re really, really blessed to have a phenomenal community of people that are willing to share so much and be open about the knowledge that there is resident in their heads and really to promote truly borderless sharing of information around these topics. That number one that makes me super excited.\n\n\n\nSo we want to make sure that people actually know about us holistically in a 360 sense, because I think people identify us as a community. I think that always, it is the heartbeat of the company. We are community first. That’s why we exist in many ways, because of our community. However, I don’t know if many people understand that we actually do so much more than provide what we do in our community. There’s so many products that hopefully our customer base and our community can leverage to make their lives better and to accelerate what they want to accomplish.\n\n\n\nWhen my appointment went public thousands of people reached out to me, either commenting on the appointment or direct messaging me or emailing me.  A bulk of them were people from the community that were all so grateful for what Stack Overflow has done for them, for their lives. I was blown away. These are folks from all around the world, all around the world. India, Africa, South America, North America.\n\n\n\nI remember this chart that made me fall in love with the company when I first saw it, which is the chart about our community across the world. 50 million community members that come every month are literally all around the world. And it’s that chart that is so high impact. I think we make a huge difference in people’s lives, and it’s not to be underestimated.\n\n\n    Tags: bulletin, podcast, Prashanth Chandrasekar, stack overflow, the stack overflow podcast",
        "url": "https://stackoverflow.blog/2019/10/21/interview-stack-overflow-ceo-prashanth-chandrasekar/"
    },
    {
        "title": "Community working group updates: February 2020",
        "content": "Last year, we announced The Loop as a way for us to share more about our product development process. You can see the subsequent updates here and here. In this post, we’d like to talk about some of the  initiatives that are  happening internally at Stack Overflow aimed at addressing and repairing our relationship with our community.\n\n\n\nWe’ve shared some of the things we are doing in order to better our communication with our community, but we haven’t said much about what’s going on behind the curtain at Stack HQ and around the world. It’s important to us that you know we’re working hard on improvements and to provide you with regular updates, even when we’re not ready to officially “ship” things.\n\n\n\nBehind the scenes, we’ve established some internal working groups to work on the problems that we’ve identified. We’ve recruited people from many different areas of the company, making sure that we involved the people with the experience and knowledge needed to come up with sustainable solutions to the problems that you’ve helped us identify and prioritize. These problems share the following four common themes:\n\n\n\nHow we work with community stakeholders on MetaHow we work with and support our volunteer moderatorsHow we can more effectively and consistently gather feedback from as many different types of users as possibleHow we can keep you all updated on the progress of these initiatives and other community-related plans\n\n\n\nBefore we dive into that, however, we want to clarify that these groups aren’t formed to make unilateral decisions and “ship” whatever they decide on into the wild. In some cases, the deliverables they have are pretty well-defined (e.g. The Loop blog posts), but in others, the goals are really more about coming up with proposals for new solutions where all of the knowledge, resources, and specialization required to execute comes together in one place. Think of them more as highly-specialized advisory groups than product teams.\n\n\n\nSo with that said, what have we been up to?\n\n\n\nSetting a course and expectations for Meta\n\n\n\nWe’ve got a broad group of folks looking at the problem of how far out of alignment we’ve become with our meta community. The folks in this group have worked with us for the longest, and many have a long history of working both with and within our meta communities. While we’re aware that meta needs attention at the functionality level, this group’s priority is getting us back into alignment with the community.\n\n\n\nThis project has unearthed a lot of very strong feelings and opinions, both internally and externally. Many in this group have close ties to people in the Meta community and feel strongly that we should be reaching out to them more and making them a bigger part of our decision making. Others have had experiences that cause them to fear the feedback they receive there. Some of them feel like they just can’t succeed in having conversations with our meta community and worry about how they’ll get their jobs done.\n\n\n\nOpinions and feelings about the best way forward are extremely valid things to consider, but the devil is in the details data, too. We’ve spent a lot of time re-examining how we look at engagement on meta in terms of the ways people participate, and how that correlates to their participation on the main site. Looking at data about meta that’s eluded us until recently (we promise we’re not ever going to call it metadata), it’s clear that our focus there needs a lot of work and better resourcing. \n\n\n\nWe all need to be on the same page about the role that meta plays in decisions, and expectations need to be set and consistently met. We’re close to being done with a plan to move forward and we’ll be sharing it with you soon. The key takeaway for now is that we’ve heard you, and we want to work our way to a place where all of us feel trust and cooperation again.\n\n\n\nWorking with and supporting our moderators\n\n\n\nThere are two teams that are exploring a couple different approaches here. \n\n\n\nFolks primarily from our community management team have been working on putting together more in-depth training for moderators. The goal of the project is to provide moderators with short courses that dive into issues that they’re likely to face as moderators. From best-practices and guidelines for identifying and handling PII (personally-identifiable information) to conflict management and resolution in online communities, our objective is to set moderators up for success and provide them with a continued path of learning.\n\n\n\n\n\nCompleted\n\n\n\nDiscovery & research: consult with active moderators and find out what kind of materials would be most helpful.Discovery on module format, use cases for discovering the availability of training content.Review of our moderator agreement to include updates surrounding our privacy policy, moderator reinstatement process, and clearer wording (currently being reviewed by legal).\n\n\n\n\n\n Upcoming\n\n\n\nInitial drafts of training modules and proposed moderator agreement shared with all moderators for feedback and discussion.\n\n\n\n\n\nAdditionally, in a recent blog post, we mentioned that we are forming a moderator council. We have determined the structure of the council, but are still working out all of the details. We are going to kick off the process soon by creating a pro-tempore council. The moderators on the pro-tempore council will help finalize and shape the permanent council’s structure. They will also help build the lines of the communication with all of the internal teams who are interested in hearing from the moderators across the network.\n\n\n\n\n\nCompleted\n\n\n\nDiscovery & research: we’ve gathered a lot of feedback from moderators around the network in large and small group settings.\n\n\n\n\n\n Upcoming\n\n\n\nDraft charter for council structure and function to be shared with all moderators for feedback and discussion.\n\n\n\n\n\nGathering diverse feedback\n\n\n\nWe’re putting a good deal of effort into making sure that we gather and analyze feedback in a way that gives us a better understanding of everyone’s perspectives, frustrations, and specific recommendations for improvement. We’re very excited with what we’re learning, even though we’ve got a ton of work left to do.\n\n\n\n\n\nCompleted\n\n\n\nAn in-person meeting with one of our Stack Overflow moderators, with many very helpful takeaways. \n\n\n\n\n\n Upcoming\n\n\n\nFast coding of free-form responses from all surveys. Problems talk to us with data much faster with more accuracy.Initial discovery for a format to facilitate more face-to-face communication between a diverse group of users and people working on community-facing products across a variety of teams.Initial discovery for a format to hold regular group conversations between folks in our community, product, and senior leadership teams with our community moderators. \n\n\n\n\n\nWe want to say a huge thank you to all of you that have participated in our surveys and interviews so far. Your feedback has been extremely valuable and we look forward to being able to interact with many more of you on a more regular basis!\n\n\n\nKeeping you updated\n\n\n\nIt’s this post! As mentioned before, we are planning to post these updates periodically. In our view, being consistent and dependable in this area is important, so some of these updates might not have a lot of meat to them as some initiatives or projects take time. But we want you to know that these initiatives are on our radar and taken seriously.\n\n\n\nIn Closing\n\n\n\nSo this is a broadly unfiltered look at where we are, directly from behind the curtains at Stack HQ. While we will always share the outcome of the important conversations and debates, we want to include you by letting you know what those conversations are. This is especially true if what we’re discussing is how we listen to and support you.  We hope we can continue moving forward here and that 2020 brings some much-needed relief and clarity to our community efforts.\n    Tags: announcements, community, the loop",
        "url": "https://stackoverflow.blog/2020/02/17/community-working-group-updates-february-2020/"
    },
    {
        "title": "Introducing Subject Matter Experts",
        "content": "One of the great secondary benefits of an open knowledge base like Stack Overflow for Teams is that anyone can contribute. When exceptional answers get voted to the top, your organization gets to identify subject matter experts. Today we’re excited to announce our new subject matter expert feature that allows domain experts to be easily recognized and acknowledged within your organization. \n\n\n\nThe new feature, available on the Business tier of Stack Overflow for Teams and coming to the Enterprise tier in 2020, allows your Team to associate a subject matter expert (SME) with a tag. Multiple Team members can be designated as SMEs for any given tag by your Team Admin. \n\n\n\n\n\n\n\nAny Team member can quickly understand who the SME(s) is for a particular tag by viewing more details about the tag. Get the information you’re looking for faster by directing your question towards the domain expert in a particular area or topic. \n\n\n\n\n\n\n\nDesignated SME(s) for a tag will receive a cap icon next to the name of the tag on their profile page for their Stack Overflow for Teams instance. \n\n\n\n\n\n\n\nCurious to know when your question has been answered by an SME? Answers from one of the SMEs associated with a tag will be called out as: \n\n\n\n\n\n\n\nWe’re really excited about this new feature since we believe it’s important to acknowledge those with special skills or knowledge in a particular topic. Subject matter experts are a wealth of knowledge, and there is so much to learn from them. This new feature makes it even easier to determine who the experts are throughout your organization. \n\n\n\nNot currently on the Business tier of Stack Overflow for Teams? Learn more about Stack Overflow for Teams and our different plans here.\n    Tags: new features, stack overflow for teams",
        "url": "https://stackoverflow.blog/2019/12/04/introducing-subject-matter-experts/"
    },
    {
        "title": "‘Tis the Season for Hats! Join Us for Winter Bash 2019",
        "content": "Around the globe, we look forward to celebrating traditions that are unique to us, our families, and our communities. The season gives us a chance to reflect, makes us smile, and helps bring us all together. \n\n\n\nThis year is a special one for the Winter Bash tradition. A hectic end of the year (that included a company-wide Meetup and a ramped-up focus on delivering improvements across other parts of our Q&A experience) means this year’s Winter Bash theme is the same as last year’s. But don’t despair, last year’s theme was awesome!\n\n\n\nWe’re continuing to bring the fun. Winter Bash 2019 showcases a wild retrospective of hats that have been featured over five years, from 2014 to 2018. You can upgrade your avatar with some of the favorite hats from the past, as well as discover a couple of changed triggers for secret ones. We wish you luck finding them all!\n\n\n\nJoin us December 9 through January 1 for Winter Bash 2019. Last year, we awarded more than 297,000 hats on Stack Overflow. This year could be the year that we hit 300K!\n\n\n\n\n\n\n\nWhether you’re new to Winter Bash or need a quick refresher, here’s how it works: \n\n\n\nAsk, answer, vote, edit, and chat to unlock fun hats and accessories you can wear on your avatar when you complete challenges on participating sites. Once you complete a challenge, a hat will appear on your profile. \n\n\n\n\n\n\n\nClick the hat and you’ll be taken to your hat box. \n\n\n\n\n\n\n\n\n\n\n\nSelect one of the hats you’ve earned, customize it to fit your avatar, and start sporting it around the site. Don’t forget to change your hats. After all, nobody likes to be seen wearing the same thing twice! \n\n\n\nHave questions? Check out our Winter Bash FAQ page for answers and more helpful information. \n\n\n\nReady, set, go find some hats!  \n    Tags: bulletin, stackoverflow, winter bash",
        "url": "https://stackoverflow.blog/2019/12/09/tis-the-season-for-hats-join-us-for-winter-bash-2019/"
    },
    {
        "title": "Sharing our first quarter 2020 community roadmap",
        "content": "Editor’s note: You can discuss this post on Meta here:  https://meta.stackexchange.com/questions/344178/the-q1-2020-community-roadmap-is-on-the-blog/344209 \n\n\n\nAs we work to improve our relationship and communications with our users, we want to share with you our community roadmap each quarter, so once every three months. Even though we are halfway through this quarter, we wanted to share with you what we are working on currently. In March, we will share our roadmap for the second quarter so that you can see what is coming.  After talks with employees, community managers, and community members, we chose four themes for our roadmap this year:\n\n\n\nUnderstand our community\n\n\n\nWe will seek to better understand our community and the user segments within it. We will work to identify the pain points and needs of our users and deliver solutions to them through our features and initiatives.By being increasingly transparent, we aim to regain trust with everyone—from brand new users to you, our most dedicated community members.\n\n\n\nEngage with our community\n\n\n\nAs we better understand our community, we will share these learnings  with the teams within the company whose decisions and actions impact you.The employees at our company come from a variety of backgrounds and seek to grow with the community. We commit to helping everyone in the company learn about all of you and the site to empower them to make better decisions.We will develop a community language, segmentation and metrics to educate the company and bring them along on the journey.\n\n\n\nImprove feedback metrics\n\n\n\nOur users have shared that they don’t feel heard by Stack Overflow. We will define a dashboard for the various types and methods of feedback and dedicate time to processes and outreach that identify ways we can be serving our users better and facilitating better two-way communications.\n\n\n\nIncrease community engagement\n\n\n\nThough our active user base continues to grow, our engagement has remained the same. What this means is that while more users are coming to the site every month, the number of users who engage meaningfully in the site does not increase proportionally.To change this dynamic, we will balance investing in improving our tools and features that benefit our long-term users with initiatives that convert new users into engaged ones.We want to build long-term impact for as many of you as we can by providing useful features that deliver value to you. If engagement is not growing with the overall user base, a lower percentage of you are getting value from these interactions each year.Working directly with targeted groups through UX research, we will identify and invest in features and tools that will improve the experience.\n\n\n\n\n\n\n\nUnderstand community\n\n\n\nIn January, we launched our quarterly site satisfaction survey.  This month, we launched our annual Developer Survey. Next month, we will be building out our Community Feedback Framework to identify all the various methods and data sources we will use to collect and analyze feedback from our users.  Our goal is to ensure that we have balanced, consistent feedback from across the different segments of our community.\n\n\n\nEngage with community\n\n\n\nIn January, we launched our monthly blog series “The Loop” to share research and feedback insights and methodology. Here you can find January and February’s posts. This month, we updated our privacy policy and shared an update on Meta.  This week we will be sharing our commitment to responding on SO Meta, SE Meta, and to our moderators through the publication of our new Meta engagement policy.  Next month, we will be launching an internal company newsletter to share community knowledge and updates with our colleagues across the whole company.  We will also be working with our moderators on our updated Moderator Agreement in March.\n\n\n\nImprove community feedback metrics\n\n\n\nElements of the improved question asking experience that was shipped to Stack Overflow last year will be rolled out to the international and network sites this week and next. This new UX provides a better question-asking flow that unifies the traditional and guided (“Ask Question Wizard”) modes and works equally well for users of all reputation and experience levels. The goal is to help users write better questions and set expectations once their question is posted. This should positively affect the question asking experience across the network, as well as give us a solid platform for potential future improvements in this area.\n\n\n\nWe are making fundamental changes to how our close question system works so that it’s a friendlier experience and more educational for post authors, while making it easier to edit and reopen closed questions, and reduce the burden on curators. Questions that get voted to be closed will be hidden, giving authors the opportunity to improve their questions in private. Our hope is to make it easier on everyone by providing clearer guidance and encouraging better questions. This project is broken down into a series of improvements that will be rolled out iteratively over the next few months, during which time we’ll be measuring to ensure each change contributes to overall question quality and to improved reopened questions. \n\n\n\nWe are hard at work putting together content for our moderator training and finding the right way to deliver our MVP version.  For more details, check out the “Working with and supporting our moderators”  section of February’s The Loop. \n\n\n\nIncrease user engagement\n\n\n\nWe are launching a series of educational email campaigns for new users, non-active users, question askers, and question answerers. These series are designed to take a proactive approach in providing guidance and support for all users.\n\n\n\nNext month we will release our Follow Questions capability (something that has been discussed by the community for years). This feature will allow users to “follow” or “unfollow” questions. You’ll be notified on new activity for questions you follow and have the ability to silence questions you no longer want to be notified about to reduce the noise you receive in your inbox.\n\n\n\nWe are sharing our roadmap to create transparency with our users.  As with any product development, unanticipated complications may cause our dates to slip on occasion, but we are committed to delivering these initiatives and features to you as soon as we can.\n    Tags: announcements, community, roadmap",
        "url": "https://stackoverflow.blog/2020/02/25/sharing-our-first-quarter-2020-community-roadmap/"
    },
    {
        "title": "Critical tools united for a better developer workflow",
        "content": "Thousands of you, developers and technologists around the world, work at organizations that use Stack Overflow for Teams to collaborate, harness knowledge, and share information. (And if you don’t, why not? You can try it for free!) Our Teams product was built in response to companies like Microsoft, Zapier, and Bloomberg asking for a way to give their technical teams a platform to share information that doesn’t get lost in email, chat threads, or wikis.\n\n\n\nWhen I joined Stack Overflow earlier this year, I joined an organization that is passionate about streamlining and improving the developer workflow. Hence the focus on bringing key integrations to Stack Overflow for Teams like Okta, Microsoft Teams, and Slack. Today, I’m happy to announce that we’re integrating Teams with two more critical tools in the modern workflow: Jira and GitHub.\n\n\n\nStack Overflow for Teams is the central source of truth for tech knowledge within an organization. By integrating with key tools, teams are able to find answers regardless of where the information lives.\n\n\n\nBy creating a centralized knowledge management ecosystem, companies are able to build a natural and sustainable culture of transparency, encouraging collaboration by improving access to information. GitHub and Jira just made sense to bring on board as we work to help developers avoid context switching and get stuff done.\n\n\n\nWe look forward to enhancing our current integrations and providing more ways for teams to collaborate, share knowledge, and find information when it’s needed most. If you haven’t already, check out Stack Overflow for Teams and our integrations with Microsoft Teams, Jira, Slack, Okta, and GitHub.\n    Tags: announcements, integrations, jira, stack overflow for teams, stackoverflow",
        "url": "https://stackoverflow.blog/2020/03/03/critical-tools-united-for-a-better-developer-workflow/"
    },
    {
        "title": "Announcing a New Tier of Stack Overflow for Teams",
        "content": "TL;DR If you’ve been using our Stack Overflow for Teams product and are part of a growing company, we’ve got exciting news. Today we’re launching a new tier, Stack Overflow for Business, that includes a lot of features customers have been asking for. You can learn more here. If you’re not familiar with what the private version of Stack Overflow can do to help your organization work smarter, read on.\n\n\n\n\n\n\n\n\n\nIt’s been nearly two decades since Tim O’Reilly coined the term inner sourcing, which advocated for applying the principles of open source development beyond the IT department, leveraging those ideas to improve communication and collaboration across corporations of varying sizes and industries. Since then software has become a critical piece of nearly every business, and in order to succeed the best companies need to draw on ideas from across their organization and find ways to ensure that the best contributions bubble to the top.\n\nHow do you crowdsource great information from within your own workforce? Stack Overflow learned a lot about community building and knowledge management in the decade we spent building our public facing website. It became a living compendium of great questions and answers for software developers. A few years ago we realized that this same structure might be valuable if turned inward, and so we began to launch private instances of Stack Overflow for clients like Microsoft and Bloomberg.\n\nThat product grew into Stack Overflow for Enterprise, now used by Fortune 500 companies across tech, finance, and telecom. A year ago we launched Stack Overflow for Teams, allowing smaller organizations to tap into this same offering. Since then we’ve signed up 1,500 customers and 30,000 users ranging from startups to universities. At Expensify, one of our early customers, our Q&A offering has become an indispensable tool for the engineering team, but it has also been adopted by the entire company in order to access knowledge on topics such as customers success and data collection.\n\n\n\n\n\nIt originally started as a place just for engineers because engineers were kind of used to it with the original Stack Overflow. But as we started to use it and see how nice it was to have a repository of information we started to see it spread to other teams so our customer support team started using it, our people success team started using it. Next thing we knew we had integrations all over the place and Stack Overflow being used across the company.\n\n\n\n\n\nAs Teams and Enterprise have grown, we’ve begun to see a few areas where we could improve the fit. In classic Goldilocks fashion, there were some customers for whom Enterprise was a bit too big, and Teams was a bit too small. So today we’re rolling out a third tier, Stack Overflow for Business, which will sit in between those two. We think it’s best suited for organizations with 50 to 1,000 users, but we’re happy to chat with anyone who is interested.\n\n\n\nAt a high level, the product will remain the same, but there are a couple of key features to note:\n\n\n\n\nSingle Sign On (SSO) Invoice or Credit Card Analytics dashboard Priority Customer Support Stayed tuned! We’re working on lots more features geared to Business users \n\n\n\n\nWhen it becomes simple for anyone in your organization to share questions and answers, and when great ideas are rewarded and recognized, it’s like creating a giant incubator that exists to grow your business. A living dialog of this kind gives managers superpowers, the ability to see around corners and anticipate what problems need fixing and what products might be used in ways the original creators never imagined. If you’re interested in learning more about your own private version of Stack Overflow, get in touch here.",
        "url": "https://stackoverflow.blog/2019/04/30/announcing-a-new-tier-of-stack-overflow-for-teams/"
    },
    {
        "title": "Our 2019 Developer Survey is Open to Coders Everywhere!",
        "content": "What languages do you want to work with next year? Are you more productive in an office or working from home? When did you write your first line of code? We want to hear from you in our annual developer survey! The survey, now in its ninth year, launches today and anyone who codes is encouraged to participate. \nTake the 2019 survey!\nThis year’s survey questions are designed to gain insight into developer career paths, programming languages and tools, working preferences, and overall opinions and feedback. There are some fun questions, too (like previous years’ tabs vs. spaces and gif vs. “jiff”)! \nWe heard you loud and clear last year when you asked for a shorter survey. We did our best to deliver without sacrificing valuable insight, and we shaved off about five minutes from last year’s survey. The survey should take about 25 minutes to complete. Survey results are used by Stack Overflow, as well as our community, and are picked up by media outlets around the world. Accordingly, we want to make sure we’re putting our best foot forward. If you have feedback as you take the survey or once you complete it, we’d love to hear it!\nKeeping with tradition, anonymized survey results will be available publicly under the Open Database License. You’ll be able to download and analyze the dataset later this year, just like we explored last year’s data in our interactive widget below to glean user feedback.\nIf you use security or ad-blocking plugins, you may see error messages\nOur third-party software provider, Qualtrics, does not work well with certain ad blockers and security software. To avoid error messages that prevent you from taking the survey, please try specifically unblocking Qualtrics in your plugin or pausing the plugin while you take the survey.\nWhat do users say about Stack Overflow?\nOn the 2018 Stack Overflow Developer Survey, we asked users what the best, worst, most exciting, and most annoying things about Stack Overflow are.\nHere are their answers.\n\nCertain survey answers are treated as personally identifiable information, and therefore excluded from the anonymized results. These questions are highlighted in the survey with a note saying, “This information will be kept private.” \nThe survey is expected to close on February 12th. If you’re a registered user who completes the survey in its entirety, you have the option to get the Census badge on Stack Overflow or a different technical site in the Stack Exchange network. (If you’re not yet a registered user, sign up here.) \nThanks in advance for your time and thoughtfulness!",
        "url": "https://stackoverflow.blog/2019/01/23/our-2019-developer-survey-is-open-to-coders-everywhere/"
    },
    {
        "title": "How the 2019 Stack Overflow Developer Survey Came to Be (And Your Last Chance to Take it!)",
        "content": "For nine years, we at Stack Overflow have fielded a survey, asking people who code about their opinions on a variety of topics, from whether they prefer a dark or light theme in their IDE to how their challenges change with experience. This is a huge project for us each year, with contributions in 2019 from product managers, our UX researcher, designers, community managers, web developers, marketers, and me, Stack Overflow’s data scientist. We learn so much each year from our Developer Survey, both from the results and the process of fielding it; right now, we have a massive Google Doc of things to do better! One lesson that stands out is how important careful preparation is. Looking back at past years, we haven’t always been as successful at this as we’d like, but we’re proud of our progress on some challenging issues including survey design, data analysis reproducibility, and using language that connects with a broader population of developers.\n\n\n\nThere were three main folks involved in the planning of the actual survey questions and how you as a respondent engage with them. The first is Anita Taylor, a product manager here at Stack Overflow who is leading the 2019 Developer Survey. “We try to incorporate as much feedback as we can from two audiences, the external developer community and internal Stack Overflow stakeholders,” Anita says. “Internally, we get input on proposed questions from dozens of Stack Overflow employees and then ask our engineers to take the survey and give us feedback. On the developer side, we did three things: reviewed direct feedback from last year’s survey, took suggestions for new questions, and got input from 1,600 developers who took a test version of the survey.”\n\n\n\nAnita also is responsible for managing the technical details of how respondents interact with our survey. We experienced a few hiccups in this area because of the third-party survey platform we use, such as geographical challenges and ad-blocker issues, and we are exploring options for future surveys.\n\n\n\nThe second main person involved in planning the Developer Survey this year is Beth Devine, Stack Overflow’s UX researcher. Beth’s deep user research experience has contributed to some significant improvements in question and survey design this year. “I was lucky to come on board with a great survey from 2018 to work from, but one of our biggest priorities this year was trimming the survey length,” says Beth. “Last year people overwhelmingly said it was too long.” It turns out this was harder than those of us planning the survey expected! “It’s a delicate balance between respecting that feedback and trying to make room for all the questions we’d like to ask,” Beth shares. “One solution was to identify questions and topics that had very consistent responses over the past few years. We realized that we weren’t learning a lot of new information, and that asking them every other year might be a better use of space. It still allows us to track trends in the data over time.” Last years’ median time to finish clocked in at almost 30 minutes. We successfully shortened it this year, without sacrificing too much, and as of today, this year’s respondents are finishing with a median time of 23 minutes.\n\n\n\nThe third main person involved in planning the 2019 survey is me, Stack Overflow’s data scientist. I worked with Beth in detail on question writing, so that our expectations for data analysis were aligned. I also used data from last year’s survey and trends in tags on our site (such as those visualized in our Trends tool) to choose which technologies to include on the survey. We wanted to include the most popular and fastest growing technologies without overwhelming the respondent with an extremely onerous list to scroll through. I used the write-in options from last year to check out technologies we may have missed, and we carefully considered which smaller or shrinking technologies we would be comfortable leaving off this year. If we cut one of your favorite technologies, a) I’m really sorry and b) please do write it in the text box!\n\n\n\n\nSo the 2019 Developer Survey is live now but for only a few more days — take it before it closes!\n\n\n\n\nThe final question on the survey this year is, “Do you have any feedback or thoughts you’d like to share?” What are people saying so far?\n\n\n\n\n\n\n\nWe’re doing our best to capture the opinions of everyone who codes, everywhere, so if you have a friend, family member, or colleague who codes but isn’t a registered Stack Overflow user, or is just getting started with coding, please send the survey their way!",
        "url": "https://stackoverflow.blog/2019/02/07/how-the-2019-stack-overflow-developer-survey-came-to-be-and-your-last-chance-to-take-it/"
    },
    {
        "title": "Recapping Stack Overflow’s First Ever Make-A-Thon",
        "content": "After an exciting end to 2018, we kicked this year off with the first “hackathon” in Stack Overflow’s 10-year history. Unlike a traditional hackathon, it wasn’t just for our developers. Any employee working on our products or directly with the Stack Overflow community was encouraged to participate, which is why we dubbed the event a “Make-A-Thon.”\nEmployees from our engineering, design, and support teams spent a full week working on projects outside of their typical day-to-day responsibilities. For our inaugural Make-A-Thon, participants brainstormed improvements to our power user and moderator experience on Stack Overflow.\nHere’s a recap of what we hoped for when we announced the Make-A-Thon, what the outcomes were, and what we learned from the experience.\nA Make-A-Thon with “Anti-Goals”\nWhile hackathon participants often hope to create working prototypes, that wasn’t a goal for our first Make-A-Thon. In fact, Design Manager and Make-A-Thon organizer Kristina Lustig used the term “anti-goal” to describe the overall sentiment towards shipping anything after the end of the week.\n“We wanted to avoid giving people at the company or anyone in our community the sense that we’d only focus on these products during a Make-A-Thon,” she said. “We were really intentional about not turning it into a ‘Wild West’ product development sprint.”\nBecause this was Stack Overflow’s first attempt at a hackathon, Lustig told us that there were two primary goals for the event. “The hope was to learn where the issues were and see how we might work them out for the next one,” she continued, “but we were also excited to give people at the company the chance to tackle the power user experience on Stack Overflow, which they had been eager to do for quite a while.”\nAccomplishments Already Affecting the Stack Overflow Experience\nThere were 13 Make-A-Thon teams with names like The Ergonomic Toadstools and The Hot Dogs. Each team presented on a wide variety of projects on January 11th, ranging from overdue bug fixes to site-wide improvements for power users such as responsive review queues. Aaron Shekey, Design Systems Lead at Stack Overflow, said that he was pleasantly surprised by how much the teams were able to accomplish during the Make-A-Thon. \n“I had some healthy skepticism at the beginning of that week but was shocked at how many quick wins we had,” he told us. “We were able to test our design system, delete a lot of old CSS, and ship some better moderator experiences all within a week.”\nAnother team worked on code fences, which allow developers to render something as code on Stack Overflow using backticks or tildes. We’ve received many requests from our community over the years to make our code syntax more consistent with other sites, many of which use CommonMark. When the team shipped code fences at the end of the week, it was widely celebrated by the community.\n\nAdditionally, the Make-A-Thon turned out to be a revelation for other participants. “There were parts of the site that I had never heard of,” Lustig said. “For example,  I had no idea how complicated translation and localization were on our sites until I saw improvements during the demos.”\nLots of Learning to Drive Our Next Make-A-Thon\nEveryone involved with our first Make-A-Thon felt that it was a success, but Lustig tells us that the issues she hoped to discover were abundantly clear by the end of the week. \n“I think people needed more advance notice about the Make-A-Thon,” she continued. “It was difficult for people like product managers to participate because they couldn’t spend a week away from upcoming releases.”\nLustig also says that she hopes for increased participation from non-technical employees that work on the product. “I’m sure there are projects that involve no code at all, that people just haven’t had the chance to think about,” she said. “We’ll be even more outspoken in the future about how the Make-A-Thon is a great opportunity to work on those things.”\nWant to participate in future Make-A-Thons? We’re hiring for roles across the company! You can check out our open positions and apply here.",
        "url": "https://stackoverflow.blog/2019/02/14/recapping-stack-overflows-first-ever-make-a-thon/"
    },
    {
        "title": "The Next CEO of Stack Overflow",
        "content": "Big news! We’re looking for a new CEO for Stack Overflow. I’m stepping out of the day-to-day and up to the role of Chairman of the Board. Stack Overflow has been around for more than a decade. As I look back, it’s really amazing how far it has come.  Only six months after we had launched Stack Overflow, my co-founder Jeff Atwood and I were invited to speak at a Microsoft conference for developers in Las Vegas. We were there, I think, to demonstrate that you could use their latest ASP.NET MVC technology on a real website without too much of a disaster. (In fact .NET has been a huge, unmitigated success for us, but you kids go ahead and have fun with whatever platform you want mkay? They’re all great, or, at least, above-average).It was a giant conference, held at the Venetian Hotel. This hotel was so big that other hotels stay there when they go on vacation. The main ballroom was the size of, approximately, Ireland. I later learned there were 5,000 developers in that room.I thought it would be a fun thing to ask the developers in the room how many of them had visited Stack Overflow. As I remember, Jeff was very much against this idea. “Joel,” he said, “That is going to be embarrassing and humiliating. Nobody is going to raise their hand.”Well, I asked it anyway. And we were both surprised to see about one-third of the hands go up. We were really making an impact! That felt really good.Anyway, I tried that trick again whenever I spoke to a large audience. It doesn’t work anymore. Today, audiences just laugh. It’s like asking, “Does anyone use gravity? Raise your hand if you use gravity.”Where are we at after 11 years? Practically every developer in the world uses Stack Overflow. Including the Stack Exchange network of 174 sites, we have over 100 million monthly visitors. Every month, over 125,000 wonderful people write answers. According to Alexa, stackoverflow.com is one of the top 50 websites in the world. (That’s without even counting the Stack Exchange network, which is almost as big.) And every time I see a developer write code, they’ve got Stack Overflow open in one of their browser windows. Oh and—hey!—we do not make you sign up or pay to see the answers.The company has been growing, too. Today we are profitable. We have almost 300 amazing employees worldwide and booked $70m in revenue last year. We have talent, advertising, and software products. The SaaS products (Stack Overflow for Teams and Enterprise) are growing at 200% a year. That speaks to the fact that we’ve recruited an incredibly talented team that has produced such fantastic results. But, we have a lot of work ahead of us, and it’s going to take a different type of leader to get us through that work. The type of people Stack Overflow serves has changed, and now, as a part of the developer ecosystem, we have a responsibility to create an online community that is far more diverse, inclusive, and welcoming of newcomers. In the decade or so since Stack Overflow started, the number of people employed as software developers grew by 64% in the US alone. The field is going to keep growing everywhere in the world, and the demand for great software developers far outstrips supply. So a big challenge for Stack Overflow is welcoming those new developers into the fold. As I’ve written:One thing I’m very concerned about, as we try to educate the next generation of developers, and, importantly, get more diversity and inclusiveness in that new generation, is what obstacles we’re putting up for people as they try to learn programming. In many ways Stack Overflow’s specific rules for what is permitted and what is not are obstacles, but an even bigger problem is rudeness, snark, or condescension that newcomers often see.I care a lot about this. Being a developer gives you an unparalleled opportunity to write the script for the future. All the flak that Stack Overflow throws in the face of newbies trying to become developers is actively harmful to people, to society, and to Stack Overflow itself, by driving away potential future contributors. And programming is hard enough; we should see our mission as making it easier.The world has started taking a closer look at tech, and understanding that software and the internet are not just tools; they are shaping the future of society. Big tech companies are struggling with their place in the world. Stack Overflow is situated at the right place to be influential in how that future develops, and that is going to take a new type of leader.It will not be easy to find a CEO who is the right person to lead that mission. We will, no doubt, hire one of those fancy executive headhunters to help us in the search. But, hey, this is Stack Overflow. If there’s one thing I have learned by now, it’s that there’s always someone in the community who can answer the questions I can’t. So we decided to put this announcement out there in hopes of finding great candidates that might have been under the radar. We’re especially focused on identifying candidates from under-represented groups, and making sure that every candidate we consider is deeply committed to making our company and community more welcoming, diverse, and inclusive.Over the years, Fog Creek Software created several incredible hits and many wonderful memories along the way. It is great to watch Trello (under Michael Pryor) and Glitch (under Anil Dash) growing into enormously valuable, successful, and influential products with dedicated leaders who took these products much further than I ever could have, and personally I’m excited to see where Stack Overflow can go and turn my attention to the next thing.",
        "url": "https://stackoverflow.blog/2019/03/28/the-next-ceo-of-stack-overflow/"
    },
    {
        "title": "The 2019 Stack Overflow Developer Survey Results Are In",
        "content": "We’ve been working hard for months, and today the Developer Survey results for 2019 are live. This year marks the ninth year we’ve published our annual Developer Survey, and nearly 90,000 developers took the 20-minute survey earlier this year.\n\n\n\n\nSee the results for yourself!\n\nWhat are some of this year’s key results?\n\n\nPython, the fastest-growing major programming language, has risen in the ranks of programming languages in our survey yet again, edging out Java this year and standing as the second most loved language (behind Rust).\nOver half of respondents had written their first line of code by the time they were sixteen, although this experience varies by country and by gender.\nWe asked respondents to think about the last time they solved coding problems with and without our site. The data indicates that Stack Overflow saves a developer 30 to 90 minutes of time per week!\n\n\nDig into the full report to learn more about developer salaries, how optimistic developers are, the best music to listen to while coding, and more.\n\n\n\n\nStack Overflow’s annual Developer Survey is the largest and most comprehensive survey of people who code around the world, but our results don’t represent everyone in the developer community evenly. We have further work to do to make Stack Overflow the welcoming, inclusive, and diverse platform we want it to be, and this is reflected in our survey sample. We are committed to building on steps we’ve taken in the past year and improving in this area this year and beyond. Some of these survey results directly guide those efforts.\n\n\n\n\nTo address these characteristics of our survey sample, we often summarize results by country or gender, highlight results for underrepresented racial/ethnic groups, or use survey weighting to correct for demographic skew. Be sure to check out where we’ve pointed out these kinds of differences.\n\n\n\n\nWe’ll make the anonymized results of this year’s survey publicly available under the Open Database License (ODbL) in May. Until then, you can access the data sets from previous years. Have questions or feedback? Head over to Meta and use the [survey-2019] tag.",
        "url": "https://stackoverflow.blog/2019/04/09/the-2019-stack-overflow-developer-survey-results-are-in/"
    },
    {
        "title": "Adios to Unfriendly Badges! Ahoy, Lifejacket and Lifeboat",
        "content": "Sometimes it’s helpful to look back at past decisions and reconsider them in a new light. As part of our ongoing efforts to make Stack Overflow more welcoming and inclusive, we’ve been looking at how our incentive systems, including reputation and badges intended to encourage positive contributions, may be building discouraging barriers instead.\n\n\n\n\n\n\n\nIn this new light, two badges stood out to us as different from the rest: Tumbleweed and Reversal. In this post, we share the reflection that led to our decision to retire the Tumbleweed and Reversal badges and introduce a pair of more encouraging badges: Lifejacket and Lifeboat.\n\n\n\n\n\n\n\n\nEradicating Tumbleweeds\n\n\n\n\nThe Tumbleweed badge is awarded to questions with zero score, no answers, no comments, and low views for a week. Recently we questioned if it was serving its purpose as a light-hearted consolation prize.\n\n\n\n\n\n\n\nBack in 2009, it was originally intended to be “sort of fun” and also kinda rare. Unfortunately, we have anecdotal evidence (including my own experience) that Tumbleweeds are not fun and, on Stack Overflow, they are no longer all that rare either:\n\n\n\n\n\n\n\n\n\n\n\nI included the Scholar badge for reference since it’s awarded the first time a user asks a question and accepts an answer. In other words, the system is working for about 200,000 users a year and failing for about 150,000. That’s sobering. What’s worse, the badge reminds people a week later that their question came up empty.\n\n\n\n\n\n\n\nStill, it could be that the badge still serves as a consolation prize. Maybe it communicates “Dust yourself off and climb back on that horse.” I suggested to Dr. Julia Silge, our resident data scientist, that we might be able to show the badge is working by looking at all questions that received one (and only one) interaction over the last year:\n\n\n\n\n\n\n\n\n\n\n\tInteractionNumber of Examples\n\n\n\n\n\tTumbleweed badge\t152,422\n\n\n\tGot a comment\t30,017\n\n\n\tGot an answer\t17,733\n\n\n\tGot a downvote\t4931\n\n\n\tGot an upvote\t407\n\n\n\n\n\n\nAs you can see, getting an upvote and only an upvote is far less common than getting a Tumbleweed. Upvoted (and downvoted) questions are likely to either get a comment or an answer as well. Obviously getting a downvote discourages an asker and other interactions encourages them. If the Tumbleweed badge is successful as a consolation prize, we’d see people who get it asking more questions on the whole. The data does not support that hypothesis; instead, people who get a Tumbleweed badge are much less likely to ask a question ever again.\n\n\n\n\n\n\nSo the Tumbleweed badge seems to be a worse consolation prize than if the system just gave out a downvote. Now you might wonder if Tumbleweed askers just have a knack for asking uninteresting questions. The data doesn’t bear out that hypothesis either.\n\n\n\n\n\n\nAskers who get one upvote tend to ask better subsequent questions and those who get a downvote tend to do worse. But people who “earn” a Tumbleweed do about as well as people who get an answer or a comment. In summary, the Tumbleweed needlessly discourages askers who might very well be asking good and interesting questions.\n\n\n\n\n\n\n\nAfter looking at the data, we decided to retire the Tumbleweed badge on Stack Overflow and the Stack Exchange network. That means everyone keeps the badges they have, but we won’t be awarding any new ones.\n\n\n\n\n\n\n\n\nLifejacket and Lifeboat to the rescue\n\n\n\n\nOnce we started thinking about badges and what purpose they serve, we considered behavior we’d like to recognize. As it happens, we test badge ideas in our annual Winter Bash event in which people pursue temporary hats to decorate their avatar. Like badges, hats can only be earned by doing something positive on the site and are triggered automatically.  One hat trigger stuck out as really interesting: Red Baron. We even reused the idea a few years later and called it Maverick. The requirement was: “answer +5 a -3 question that goes to +3”. In other words, find a misunderstood question that has promise and answer it. But that’s not always enough. Sometimes the people earning the hat also edited the question in order to help it get upvotes. (Read about how one of our users, Air, went above and beyond to get the hat.)\n\n\n\n\n\n\n\nInstead of one badge, we decided to introduce two related badges: Lifejacket and Lifeboat. These badges reward reversing the score of a negative question by answering it in a way that sheds new, positive light on the question, raising its score. It’s an answer so good it makes the question look good by association! You can think of it as like someone finding a diamond in the rough and putting a little bit of work into showing the world its hidden value. Conceptually, it’s similar to Reversal, but with a more encouraging twist in that the question itself goes from negative to positive rather than staying negative.\n\n\n\n\n\n\n\n\tNameLifejacket\n\n\n\n\n\tTriggerA user posted an answer to a question with a score of <= -2 at the time\nThe answer has a score of >=5\nThe question goes on to get a score of >=2\nDon’t count the user’s votes on the question\n\n\n\tTierSilver\n\n\n\tShort descriptionPosted answer of +5 to question with a score of -2 that then increases to +2.\n\n\n\tCategoryAnswer Badges\n\n\n\tCan it be awarded multiple times?Yes\n\n\n\tIs it retroactive?Yes\n\n\n\n\n\n\n\n\n\n\n\nThe gold version of the new badge pair is identical in concept to the silver tier; it’s just a lot harder to obtain.\n\n\n\n\n\n\n\n\n\n\n\n\tNameLifeboat\n\n\n\n\n\tTriggerA user posted an answer to a question with a score of <= -3 at the time\nThe answer has a score of >=20\nThe question goes on to get a score of >=3\nDon’t count the user’s votes on the question\n\n\n\tTierGold\n\n\n\tShort descriptionPosted answer with a score of +20 to a question with a score of -3 that then scored +3.\n\n\n\tCategoryAnswer Badges\n\n\n\tCan it be awarded multiple times?Yes\n\n\n\tIs it retroactive?Yes\n\n\n\n\n\n\n\n\n\n\n\nWe’re retroactively awarding these badges so if you’ve rescued any questions in the past, that achievement will be recognized within about 24 hours. Again, this is for all sites on the network.\n\n\n\n\n\n\n\n\nReversing Reversal\n\n\n\n\nReplacing Tumbleweed then brought us to reflect on the Reversal badge. The criteria for the Lifejacket and Lifeboat badges are tweaks of Ben Voigt’s suggestion for replacing Reversal from 2014. (Better late than never, right?) Reversal has nearly the opposite problem from Tumbleweed: it’s only been earned 304 times and takes real skill to pull off. Getting a score of 20 is not easy (there’s a separate badge for getting 25) , but it’s more difficult when the question has been downvoted to -5.\n\n\n\n\n\n\n\nReversal rewards exceptional answers, but often the question gets deleted (along with the answer) after the badge is awarded:\n\n\n\n\n\n\n\n\n\n\n\n\tReversal badges on Stack OverflowQuestion result\n\n\n\n\n\t118Deleted\n\n\n\t92Still negative score\n\n\n\t66Zero or positive score\n\n\n\n\n\n\n\n\n\n\n\nFor a badge named “Reversal”, it’s odd that the fortunes of just 22% of those questions were turned around. And 39% of those great answers are not even available anymore. One quirk of the Reversal badge is it’s more common on Meta Stack Overflow. A typical scenario is someone suggesting an unpopular feature in a question (which gets downvoted) followed by an explanation of why the feature is a bad idea (which gets upvoted). Unfortunately, the outcome for those meta questions is much worse:\n\n\n\n\n\n\n\n\n\n\n\n\tReversal badges on Meta SOQuestion result\n\n\n\n\n\t963Deleted\n\n\n\t119Still negative score\n\n\n\t31Zero or positive score\n\n\n\n\n\n\n\n\n\n\n\nIt’s an interesting badge to earn, but it’s not at all positive for the asker and I’m not sure it always encourages productive behavior. Certainly the new badges will result in all-around better content than most of the answers that trigger Reversal. As a result, we’re retiring Reversal everywhere. You’ll keep your legacy badges, of course, and if the question has been upvoted enough, earn Lifejacket and Lifeboat too!\n\n\n\n\n\n\n\n\nBadge retirement home\n\n\n\n\nWith two badges going out of service, the list of badges that are no longer awarded has grown:\n\n\n\n\n\n\n\n\nAnalytical Documentation badgesTumbleweed and Reversal\n\n\n\n\nOne of the purposes of badges is to let users show off their achievements. So we don’t want to hide retired badges. But another reason for badges is to suggest things for people to try out. Since none of these badges serve that second purpose, we’re going to place them in a “Retired Badges” section on the Badges Help Center page\n\n\n\n\n\n\n\nYou’ll also see a note at the top of each retired badge’s page.\n\n\n\n\n\n\n\n\nThank you!\n\n\n\n\nI’m excited to announce these changes because they represent a collaboration between many people over several years:\n\n\n\n\n\n\n\n\nJulia Silge’s analysis demonstrated that the Tumbleweed badge wasn’t serving its purpose.Meg Risdal is our Product Manager who led us to make these changes.Jane Willborn wrote the code.Nick Craver made sure the Lifejacket and Lifeboat triggers don’t break the site.Ben Voigt suggested the trigger we used first for Winter Bash hats and now for two new badges.A bunch of people tested those triggers on our sites and prodded us to keep considering something like these new badges. We also got a bunch of feedback about Reversal and especially Tumbleweed that helped us understand how they worked in practice. We’ve got an amazing community here!\n\n\n\n\nLead image credit – “Whitstable Lifeboat. The Oxford Town and Gown.” by andrew simon uk – licensed under CC BY-NC-SA 2.0",
        "url": "https://stackoverflow.blog/2019/06/18/adios-to-unfriendly-badges-ahoy-lifejacket-and-lifeboat/"
    },
    {
        "title": "Introducing Custom Filters",
        "content": "I’m excited to announce the public release of Custom Filters, a new way of navigating Stack Overflow and discovering questions that are relevant to you.\n\n\n\nIn the past, you had a few predetermined options on question list pages to discover content relevant to you: Newest, Active, Bounties, Votes, and Frequent. In addition to these options, we also had the Unanswered questions tab for people looking to answer questions. These options have gone untouched for a long time, leaving search as the remaining option for any non-trivial needs. These tools left a lot be desired: it was unclear what the predetermined options meant, our search syntax wasn’t easily understood by many of our users, and our tools for question discovery weren’t unified. We knew we could do better.\n\n\n\nThat’s where Custom Filters comes in. We’ve been iterating on this feature and getting feedback from users in public alpha. Today, we’re thrilled to be taking this feature out of alpha, and you can use it immediately. Here’s what you can expect:\n\n\n\n\nUnified options for question discovery\n\n\n\n\nYou now have a single unified location within the question list interface to discover questions. We’ve updated the user interface for question list pages so that our previous options for question discovery like Newest, Active, and Bounties are all in a single place. This user interface also brings in the most-used options from the previous Unanswered tab.\n\n\n\n\n\n\n\n\nFine-grained control over question discovery\n\n\n\n\nIn addition to making it easier to discover questions by consolidating predetermined options in one spot, we’ve also surfaced the filter and sort combinations that power these options. You can see exactly what’s going on under the hood when choosing the predetermined options. Now filters, sorts, and even tag options are available for you to adjust and modify. Not only is it easier to view the predetermined options, these different filters and sorts give you more control over what questions you see in ways that weren’t possible before.\n\n\n\n\n\n\n\n\nSaved Filters and Notifications\n\n\n\n\nWith your ability to customize searches based on filters and sorts, you can save the combinations you use most frequently with a feature called Saved Filters. Once you pick the combination of options you want, you can name it and save the filter for future use. You can access your Saved Filters on the right hand sidebar of question list pages and you will be notified when there are new questions added to your custom filters.\n\n\n\n\n\n\n\nWe’ve been working hard on this feature in partnership with the community and our alpha testers, and we want to thank everyone that has been involved during the development and feedback process. Custom Filters are available to public Stack Overflow users today, and our Stack Overflow for Teams customers will see the feature later in the year. This rollout is part of our continuing efforts to make the core Q&A experience on Stack Overflow better, and we’re looking forward to improving this feature and many more with your help. Enjoy!\n    Tags: announcements, company, engineering, stackoverflow",
        "url": "https://stackoverflow.blog/2019/07/25/introducing-custom-filters/"
    },
    {
        "title": "Get to Know Our New Code of Conduct",
        "content": "Thanks to some amazing efforts and collaboration between our veteran users and quite a few new faces that jumped in to help us with our inclusion efforts, our brand new Code of Conduct (CoC) is rolling off the press and going into effect across the network today. For those of you that haven’t been following along with announcements we’ve been making on our Meta site, we’re replacing our current ‘Be nice’ policy with a formal, far less ambiguous and way more informative Code of Conduct. \nAs far as our rules go, nothing really changes: we’re just clarifying that we don’t have space for belittling language and condescension, while more deliberately setting people’s expectations surrounding what to expect when problems are flagged. By resolving some ambiguity, we’re able to apply the rules that we’ve had for quite some time more consistently, resulting in fewer instances where it seems like we didn’t have any rules at all. That’s the gist of it, but if you’ll indulge us, we’d like to take a deeper look into how we got here.\nSocial contracts are an essential cornerstone of any collaborative project. A group’s shared expectations of how its members should treat one another not only helps their project stay on course, but also help outsiders decide if the group seems like a safe place for them to contribute. Since its inception in mid-2008, Stack Overflow and our subsequent network of Stack Exchange sites managed to flourish under a single guiding principle that everyone was expected to follow:\n.. Be nice.\nStack Overflow began with a community of folks that were avid readers and pundits of Joel On Software and Coding Horror. As the initial community had some experience interacting with one another, “Be nice” was sufficient as a beacon to pull people back from over-enthusiastically critiquing other user’s contributions. We knew what ‘nice’ meant; that caused us not to notice how ambiguous our policy was as our community ballooned from thousands to millions of people in a very short amount of time.\nGruenert and Whitaker made a very astute assertion when they said that “The culture of any organization is shaped by the worst behavior the leader is willing to tolerate.” People look at the best and the worst that a new community might offer in exchange for a contribution, and our worst began to look increasingly troublesome over time. \nWe looked at examples of things that people were reporting as making them feel unwelcome and it seemed like a bit of a paradox: phrases like “Well, that’s clearly not nice, why wasn’t that flagged and removed?” dominated conversations that we were having about it. The reality became pretty clear: even our expanded ‘Be nice’ policy simply was not specific enough to meet the needs of a much larger dynamic that our sites had grown to be. \nWhat became clear is that we needed to be way more specific about what we meant when we were asking people to be nice, how we hoped folks would react when they encountered behavior that wasn’t great, and some examples that would allow people to better embrace the intent of what the document was hoping to accomplish. \n.. Be nice, here’s how, here’s why, and here’s what to do if someone isn’t.\nReally, please, take a moment to read the new Code of Conduct now. It’s not long, it’s not wordy-and-legalese-y and in our long held tradition, we feel that it does a good job of assuming that the vast majority of folks that use our sites always have the best intentions at heart. \nBut we’re not done, not by a long shot. Our research indicates that the most problematic places on our sites tend to be free-form comments, so we’re working diligently on coming up with a way that lets users express feedback through the system; this not only ensures that users see compassionate, actionable guidance, but also helps remove the perception that there are people taking pleasure in picking at their work. \nWe’re also working on new features to help new users ask questions that are much more in line with what our active community needs in order to provide fast and accurate answers. With Stack Overflow soon turning 10, a UX audit and overhaul to help ensure users discover the right information and tools at the right time is long overdue. Our efforts in this department are perennial; there will always be room for improvements. \nOur CoC is what we call a living document. It’s designed to change over time to ensure that it remains relevant by continuing to meet the needs of our communities. Every six months or so, we plan to find out how folks feel about how things are going by asking both new and experienced users about their recent experiences on the site. There’s also a code of conduct tag folks can use on Meta Stack Exchange to ask questions about, or propose changes to the CoC. \nFinally, we’d like to thank everyone that patiently worked with us in order to come up with a code of conduct that we think will make folks feel safe about contributing, but not so formal that it feels like oppressive, humid air. If it were not for our most engaged users working in tandem with many people that we only started reaching once they heard that we were working on this, we wouldn’t have anything close to what we accomplished together. We’re sincerely lucky to have all of you.\nAnd, be nice to one another— all of you deserve nothing less than that.",
        "url": "https://stackoverflow.blog/2018/08/07/get-to-know-our-new-code-of-conduct/"
    },
    {
        "title": "IBM and Stack Overflow Partner to Support AI Developers",
        "content": "IBM and Stack Overflow are partnering to bring learning and development to the AI community. As of today, the Artificial Intelligence site on the Stack Exchange network is sponsored by IBM. The site, featuring “questions about life and challenges in a world where ‘cognitive’ functions can be mimicked in purely digital environment”, is home to over 2,200 questions and 3,200 answers. \nThe partnership aims to expand awareness of the AI industry, encourage innovation within the AI space, and help developers solve complex problems in the field. \nWe spoke with Peter Moskovits, Program Director of Worldwide Developer Advocacy at IBM, on the partnership’s impact on the AI developer community. \nThe Importance of Online Communities to Developers\n“As one of the world’s largest open source contributors, IBM has a lot of respect and appreciation for fellow developers”, says Moskovits. “In addition to speaking at conferences, meetups, and running workshops, our developer advocates around the globe spend a lot of time in online communities; first and foremost on Stack Overflow. On the one hand we come to Stack Overflow to help professionals and enthusiasts who use our technologies (products or open source projects) become successful. On the other hand, we come here to learn. This perpetual learning is what makes a developer advocate’s job so desirable.”\n\nBenefits of the AI Site\n“Fostering meaningful conversations in technology communities is critical. The sheer number of AI developers and the scope they cover has reached the critical mass. Having a dedicated forum for us is a major step forward. Such a forum can help developers get answers to high-level ‘strategic’ questions (build vs. fork vs. buy) as well as very specific integration or interoperability issues.” \nAI developers face a number of challenges in their daily workload, including creating training strategies, optimizing computing power, building trust in the system, legal and moral constraints, or simply finding experienced engineers to solve those problems. Moskovits says, “Having an open discourse with our peers is what makes Stack Overflow [and the subsequent Stack Exchange sites] such a great place to hang out.” \nAdditionally, IBM’s flagship business and technology conference, Think 2019, is happening on February 12, 2019 in San Francisco. Through hundreds of labs, attendees can take deep dives into AI, cloud, data, security, and other emerging technologies. \nYou can find more information on site sponsorships in general or this specific site on Meta.",
        "url": "https://stackoverflow.blog/2018/09/13/ibm-and-stack-overflow-partner-to-support-ai-developers/"
    },
    {
        "title": "Changes to Our Privacy and Data Policies",
        "content": "Stack Overflow has always been committed to protecting your privacy and your data. The European Union’s General Data Protection Regulation has prompted us to review our policies and make sure that we are doing the right thing for all of our users worldwide.\nStack Exchange, Inc. has updated its Terms of Service, Privacy Policy and Cookie Policy for all of our sites.\n\nWe have made it easier to understand what types of data we collect and how we use your data.\nOur new Terms of Service distinguishes between public network users (those who use our public Stack Exchange Q&A sites) and private network users (those who use Stack Overflow for Teams).\nAs part of our new data-retention policy, we will now delete accounts that have been inactive for more than two years and where the user has never engaged in any meaningful activity.\nWe may send account-related email messages that are triggered by your site activity. In most cases, you can opt out.\nWith your continued permission, we will send you promotional messages based on your preferences. To see and change your opt-in preferences, manage your Email Settings. \n\nPlease read these updated terms and take your time to understand these changes. Your use of Stack Overflow’s Products and Services, including the Stack Overflow Network, is subject to these revised policies and terms.\nWhy you may see a prominent notification on stackoverflow.com or receive an email\n\nOne of the key tenets of GDPR is that information on data, privacy and cookies can’t be buried or hidden. We have to prominently call out the policies and explain what to do if you don’t agree with them. That’s why we will show an onsite notification and send emails to registered users.\nWe really, really want you to update your Email Settings. Last July, we launched an Email Settings feature that allows you to select the specific types of messages you do and do not want to receive. Most of our users still don’t know it’s there. We sincerely don’t want to email you if you don’t want to be emailed.\n\nWhy we are notifying everyone, not just EU residents\nWe believe the intentions behind the new laws are good and should apply to all of our users.",
        "url": "https://stackoverflow.blog/2018/05/21/changes-to-our-privacy-and-data-policies/"
    },
    {
        "title": "Stack Overflow for Teams is Now Available",
        "content": "It’s here. After months of designing, building, testing, and beta-ing, we’re happy to announce that as of today, Stack Overflow for Teams has launched and is available to everyone!\nThe What & Why Of Stack Overflow for Teams\nIt often feels like developers have to know everything, constantly juggling dozens of tools, languages, libraries, and frameworks. To do this, they have to be able to quickly find the information they need in order to get back to writing software. When that information is public, all you need is a quick search on Stack Overflow to turn up an answer and be on your way. But when that information is internal and private, it’s a maze of stale wikis and lost emails.\n\nStack Overflow for Teams helps bridge that gap by bringing the power of Stack Overflow Q&A to a private space just for you and your team on stackoverflow.com.  Ask and answer questions about all those proprietary, top-secret things that you can’t post to a public audience and create an accessible set of knowledge that you can come back to time and again. (No more having to re-answer the same question over and over again in chat!)  It uses the same Q&A format, organization, and experience that you know from SO to help your team easily capture, organize, and find information.\nStack Overflow for Teams doesn’t just provide you with the existing feature set of Stack Overflow, it also has new features that make it easier for new users and entire teams to use it, like guided onboarding for getting started, revamped tag watching and email notifications, and Slack integration. You can also access all of your team’s data through our API.\nBest of all, this all happens on stackoverflow.com — which your team probably already visits daily. When you search on stackoverflow.com, the private Q&A is also integrated into those search results so you can access both your private information and the wealth of knowledge from the existing community all at once. \n\nMaking Knowledge More Accessible\nOver the last two years, dozens of large companies have adopted Stack Overflow for Enterprise for their own standalone, internal knowledge sharing communities in order to make proprietary information more easily discoverable. While Enterprise works great for these large (500+ developer) organizations, we needed to do something different for smaller teams.\nAnyone who has deployed new software, particularly anything involving a knowledge sharing or community building, knows how hard it is to get users to come and show up in a new place. You need a lot of users and a lot of activity at the right time or you end up with a ghost town that nobody has any interest in. Drawing from our own experience in building hundreds of public and private communities, we built Stack Overflow for Teams to overcome many of these traditional challenges with adoption by placing the knowledge in a private space on stackoverflow.com. The combination of our onboarding tools, integrations, and hosting everything in one central location, means Stack Overflow for Teams works for any size group.\nDuring beta, we’ve seen teams as small as five and as large as 200 adopt Stack Overflow for Teams successfully. Tim Golen, Engineering Lead at Expensify, summed it up pretty well: “We needed a good way of passing down knowledge between team members, because we saw the same questions being asked over and over in our instant message channels. Almost immediately, we found that the Search function in Teams returned relevant results in a quicker, more accurate way than chat would. We anticipate Stack Overflow for Teams increasingly becoming our go-to resource for knowledge-sharing.” We see similar results not just at our other beta users, but also internally through our own usage of Stack Overflow for Teams.\nGet Started Now\nStack Overflow for Teams is available to everyone now — there’s a 14 day free-trial and after that it’s only $10/month for your first 10 users (additional users are $5/month). All you need to get started are a few teammates and questions that you know come up over and over again — we’ll guide you through the rest.\nSo go create your Team and let us know what you think! \nPS: You can read up on the prior work we did building out Teams and keep up with new developments by following the For Work tag here on the blog.",
        "url": "https://stackoverflow.blog/2018/05/03/stack-overflow-for-teams-is-now-available/"
    },
    {
        "title": "Rolling out the Welcome Wagon: June Update",
        "content": "Back in late Spring, we posted “Stack Overflow Isn’t Very Welcoming. It’s Time for That to Change.” We know it’s all too common for companies to announce they really want to do a thing, and then… not much happens. So, it is time to share the work we’ve been doing behind the scenes and how our team of data scientists, developers, long term community managers, and UX specialists will continue iterating on our plans for the future.\nDone\nShipped the “Ask a Question Wizard” prototype\n\nThis new workflow should help new askers craft questions more successfully with less stress. Each step gathers specific input that’s generally needed to help answerers. As we test it, we can expand this design to support additional question types. We’ve already done a couple rounds of user testing and are now gathering feedback from the community. You can check it out here and leave feedback on this post.\nBuilt an “Unwelcoming or snarky” comments classification app\nOur users have always been really great at flagging and removing outright abusive comments, but we’ve long struggled to deal with (or even define clearly) lower-key unpleasantness: condescension, snark, dismissiveness. We just finished our first step to change that: 57 employees provided 13,742 ratings of “fine,” “unwelcoming or snarky,” or “abusive,” on random comments on SO, and we’ll be sharing the initial results and our next steps in a separate post.\nCreated a prioritized queue of 67 other next up initiatives\nSome of these are already in active discussion with the community, like removing auto-downvotes that come with certain flags. The key here is that we will always have a next initiative to move forward for discussions, input, and implementation, so we won’t lose momentum.\nIn progress\nComment flagging improvements \nWe are working on various improvements to comment flagging to increase visibility and allow more people to participate in this critical activity.\nCommunity/civility partnerships \nWe’ve connected to individuals (researchers, academics, community managers and data scientists) from many institutions and companies that are concerned about civility on the internet. We’ve kicked off collaborations with a couple companies to build machine learning approaches that can address civility in internet scale communities. More data can train smarter analysis, so we are optimistic about these collaborations.  Machine learning isn’t a magic solution nor will it be our only avenue for partnerships, but it will be a part of our toolkit. We hope to have more to share soon.\nUpgrading our community standards\nWe are undertaking a full review of our community standards, including an overhaul of our “Be Nice” policy to evolve it into a full fledged code of conduct, which better articulates exactly what we expect and how those expectations are enforced. Our first draft is almost done and we’ll be sharing it for feedback early next week.\nOur internal framework to attack the problem\nWe’ve created a framework to help us ensure we’re being disciplined in how we define the problems and prioritize solutions.\nUnderstanding exclusion\nWe need to fully understand the scope and depth of the problem. Using data insights and UX research we are attempting to answer questions like these:\n\nWhat are the negative experiences people have had while using Stack Overflow?\nWhat are the site functions that contribute to negative feelings, expectations, and/or experiences?\nWhat are the behaviors that contribute to negative feelings, expectations, or experiences?\n\nLearn from others’ inclusion efforts\nBy engaging and working with others who are actively tackling inclusion efforts (particularly other companies dealing with internet scale communities) we want to: \n\nLearn, learn, learn. We aren’t the experts. \nInvestigate solutions from other online communities who had to address similar issues.\n\nSolve for one, extend to many\nWe believe that by focusing on excluded people we can make Stack Overflow (and the entire Stack Exchange network of Q&A sites) better for everyone. We are committed to making changes in: \n\ncommunity standards\nenforcement mechanisms\nthe software that runs the site.\n\nEngage the broad community\nWe commit to an open dialog about our goals, understanding of the problem, ideas for research and solutions and progress on both Meta and our blog.\nNext up\nWe will be providing regular updates on the work we are doing around inclusion. Soon, we’ll be sharing more details in separate posts on the Ask a Question Wizard, what we learned from our comment classifier, and our proposed new code of conduct. We’re on a long road here, but we’re excited about our progress so far. We hope you’ll stick with us for the rest of the ride.",
        "url": "https://stackoverflow.blog/2018/06/21/rolling-out-the-welcome-wagon-june-update/"
    },
    {
        "title": "Welcome Wagon: Classifying Comments on Stack Overflow",
        "content": "Last month, Joe wrote about the Welcome Wagon work that we are doing to make Stack Overflow more welcoming and inclusive. Our current work involves projects across domains from asking questions to framing community standards and more; one project we have been working on is understanding how comments are used and misused on Stack Overflow.\nWe are a data engineer (Jason) and data scientist (Julia). As folks who code for a living and use Stack Overflow, as well as work here, we have certainly experienced and witnessed unwelcoming behavior in Stack Overflow comments first hand, whether through condescension, snark, or sarcasm. Our goal with this specific project is to understanding these issues so that we can start to address them. This blog post outlines our initial findings, what we could learn with more data, and next steps.\nClassifying comments\nI (Jason) wrote The Stack Overflow Comment Evaluator 5000™, a simple application that presents you with a comment thread from a post on Stack Overflow and asks you to rate each comment in the thread as Fine, Unwelcoming, or Abusive.\nComments on Stack Overflow can already be flagged for being rude or abusive, but this flag is typically used only for the most egregious and toxic comments, which are thankfully rare. We’re looking here to characterize comments that are unwelcoming in a way that isn’t flagrant hate or abuse but would still make you think twice about participating in our community. Things we thought might fall into this category would include condescension, snark, sarcasm, and the like.\n\nWe estimated how many comments we could rate, given the number of folks we have internally and the time we would be asking of them. Then we loaded up the right number of comment threads into the application and invited all of our community managers, designers, developers, executives, site reliability engineers, and product managers to spend an hour rating comments. We had 57 participants who made 13,742 ratings on 3,992 comments.\nPrevalence of comment categories\nIf we take a majority vote on the rating of each comment (with ties going to the worse rating) comments on Stack Overflow break down like so…\n\n\n\nRating\n% of comments\n\n\n\n\nFine\n92.3%\n\n\nUnwelcoming\n7.4%\n\n\nAbusive\n0.3%\n\n\n\n \nAccording to those of us deeply involved here and familiar with Stack Overflow, about 7% of comments on Stack Overflow are unwelcoming. What did some unwelcoming comments look like? These combine elements of real comments to show typical examples.\n\n“This is becoming a waste of my time and you won’t listen to my advice. What are the supposed benefits of making it so much more complex?”\n“Step 1. Do not clutter the namespace. Then get back to us.”\n“The code you posted cannot yield this result. Please post the real code if you hope to get any help.”\n“This error is self explanatory. You need to check…”\n“I have already told how you can… If you can’t make it work, you are doing something wrong.”\n\nThis stuff isn’t profane, hate, or outright abuse, but it’s certainly unwelcoming. Looking at majority voting is one approach, but the experience of being not welcomed is not a majority vote kind of thing; it’s deeply personal. What if we looked at the distributions of the ratings by individual?\n\nAmong the 57 individuals who participated, the median result for comments that are neutral or fine was 93.2% and the median result for unwelcoming comments was 6.5%. We can see from this graph that there is considerable variety in people’s experience of the site with respect to the comments they saw; the histograms have a broad shape. Take a look at just the distribution for the unwelcoming ratings. Four of us didn’t find anything unwelcoming, and three of us thought that in excess of 1 in 5 comments were unwelcoming. This speaks to the variability of experience; for example, what an experienced, professional developer from a privileged background finds unwelcoming may not be the same as for a more junior, or less privileged developer.\nWhat can we learn from our initial rating task?\nIn this first attempt at rating comments, we have been able to measure the prevalence of unwelcoming comments, as perceived by experienced Stack Overflow community members/employees, as well as how much that varies. This first group of raters includes people from underrepresented groups in tech such as women, people of color, gay folks, and trans folks. We do not see evidence that having an identity in one or more of these groups led to an individual labeling comments as unwelcoming at a higher rate, at least not among the small group of ~60 participants in our initial task. It is possible that we would see a statistical difference with a larger sample size of raters.\nThere are enough comments in this first rating task for us to assess whether unwelcoming comments are more prevalent on questions or answers on Stack Overflow. Let’s compare all the comments from the month the rated comments were drawn from, along with the rated comments.\n\nThe proportions of comments that were classified as fine by the raters are consistent on questions and answers with the population of comments overall. We see a shift for the comments classified as unwelcoming or abusive, however; those comments are more prevalent on questions than answers, with a relative percentage shift of almost 10%. When we think through what is contributing to unwelcoming comments in our community and what to do next, this is important to keep in mind. Indeed, the dynamics at play here are part of why we are revamping our workflow for new askers.\nWe also would like to look at how much this sample of raters agree with each other with some measure of inter-rater reliability. You might guess from the histogram of rating distributions that the inter-rater reliability is not going to be high; we labeled comments as unwelcoming at different rates. Given the kind of rating data we have (not every person saw every comment) we can use Krippendorff’s alpha to measure reliability; this is a measure that ranges from zero (nobody agrees) to one (perfect agreement). For comments that were rated by at least three people, Krippendorff’s alpha for this initial dataset is 0.39. This would be too low for qualitative research in an academic study like those done in the social sciences. If you have been around Stack Overflow a long time, you might be interested to know that this is much better than the reliability for the comment classification project done using Amazon Mechanical Turk about 5 years ago.\nWhat does a reliability measure like this mean? It reflects the real diversity in how we all experience the Stack Overflow community, based on our experiences and personalities. People who work at Stack Overflow agree more about what is unwelcoming than the Mechanical Turk workers did, but even the 60 or so of us do not agree enough that we could code comments reliably enough to be used in academic work. What this diversity of thought does not mean, to be clear, is that it is hopeless to address issues in how comments are being used for our community as a whole. We can take what we are learning here and move forward.\nImpact of unwelcoming comments\nSo about 7% of comments on Stack Overflow are unwelcoming, depending on who you ask. What does that mean? First of all, this is not good enough for us. Stack Overflow is a place for developers to help each other; our goal is to be a professional space that makes our industry, our profession, and yes, the internet a better place. Everyone who codes should feel welcome to participate here.\nSecond of all, a prevalence between 5% and 10% can have a big impact on a community. Let’s sketch out a back-of-the-napkin estimate. If a typical developer visits Stack Overflow once or twice a week to solve a problem, the question they visit has an answer, and each post (question and answer) has two comments (keep in mind that comments are more visible to visitors than answers), we would conservatively estimate that a developer visiting Stack Overflow would see 1 to 3 condescending, unwelcoming comments every single month of their coding lives. Will one unwelcoming comment a month drive everyone away? Clearly not, as Stack Overflow still works for many. But it will convince some that it’s not worth it to contribute here, and the next month’s comment will convince a few more, and so on. And this only considers the readers of these comments; those who the comments are directed at will naturally feel more dramatic effects.\nSo, where does that bring us now?\n\nThis is the first step for us in addressing how comments are used at Stack Overflow, and we are exploring options for moving forward. We believe strongly both that human moderators are key and that human-in-the-loop machine learning can offer us powerful tooling.\nIt takes care to be understood well online, and people have different reactions to the same words. Remember that many more people than the post owner may read your comments, so write for posterity and make a conscious effort. When you see unwelcoming behavior, please flag it.\nWe at Stack Overflow want to more clearly frame our expectations around our community standards. Watch for updates about the evolution of our “Be Nice” policy into a fully articulated code of conduct.\nWe will be fielding this comment classification task more broadly soon, in order to learn more about how our community understands interaction via comments. Look for further work from us on this in the near future.",
        "url": "https://stackoverflow.blog/2018/07/10/welcome-wagon-classifying-comments-on-stack-overflow/"
    },
    {
        "title": "Stack Overflow is 10!",
        "content": "Ten years ago, a lot was happening. Barack Obama and John McCain were running for U.S. president. Lehman Brothers’ collapse triggered a global financial crisis. The second iPhone came out – with 3G speeds, y’all! Tweens everywhere were deciding if they were on Team Jacob or Team Edward. Kanye West convinced everyone that what sunglasses had been lacking were venetian blinds. \nAnd on September 15, 2008, Stack Overflow’s public beta went live.\nStack Overflow’s home page in 2008\nSince then, 9.3 million users have provided 25 million answers to 16 million questions. Every 5.1 seconds, someone takes time out of their day and posts an answer, to help a complete stranger on the internet. And since 2007, those answers have been found 12.3 billion times by developers in need. We estimate that’s saved developers roughly 3.1 billion hours.\n\nBut the big numbers don’t tell the real story. Every one of those times someone finds help is a developer who nails their initial project at their first job. Or a teenager who finishes her first project – the one that makes her realize she wants to be a developer when she grows up. \nThat’s Stack Overflow’s real impact. That’s how your efforts to help each other – to share what you know – have made a genuine difference.\n\nSo, to the 9.3 million of you who’ve joined us along the way, thank you. And to those of you who are new, welcome. We can’t wait to develop the rest of our future together.",
        "url": "https://stackoverflow.blog/2018/09/27/stack-overflow-is-10/"
    },
    {
        "title": "Exciting Leadership Announcements",
        "content": "It’s been an exciting 2018 for Stack Overflow. In late spring, we launched our Welcome Wagon initiative to make the network more welcoming. In May, we shipped Stack Overflow for Teams and made our knowledge-sharing platform accessible to teams of any size. And September marked our 10th anniversary, which celebrated the 25 million answers to 16 million questions that have been viewed 12.3 billion times by developers.\nWe’ve grown the ways that we serve developers, and we’re growing our Executive team to support these initiatives as well our ever-expanding community. The team has two new members, and one of our long-time executives has a new role.\nOur CTO, David Fullerton, was promoted today to President and CTO. This promotion recognizes David’s hard work and contributions over eight years (!) at Stack Overflow. David worked his way up through the ranks here. He started at Fog Creek as an intern; he spent years as a developer and then as a team lead at Stack Overflow before becoming CTO. He’s accomplished a lot and through it all, he’s demonstrated incredible servant leadership — a value that guides everyone at Stack Overflow. He’s the best person to help our company grow and evolve while remaining rooted in our mission to serve all the world’s developers.\nWe also have a new VP of Engineering, Mary Ferguson. With David in his new role, our Engineering team is in great hands under her leadership. Mary joined Stack Overflow at the end of September after spending over three years at Etsy, most recently as their VP of Engineering. She’s also had senior technology roles at Amplify Learning and Katzenbach Partners. Her career has been distinguished by the common goal of organizing engineering teams to keep them happy, healthy, and diverse. This is in exact alignment with Stack Overflow’s values embracing servant leadership and growing an inclusive and diverse organization.\nLast but not least, I joined the company in June. Hi! I’m Khalid El Khatib, Stack Overflow’s VP of Marketing and Communications. I’m responsible for our marketing and advertising initiatives and for communicating company announcements externally and internally (like this one).\nI came to Stack Overflow from a company called GLG. Before that I worked at Teach For America and at an advertising agency. In addition to my day jobs, I’ve long contributed to publications like PAPER, VICE, and OUT on art, culture, and LGBTQ issues. The common thread through my career is that everything successful I’ve worked on (website redesigns, app launches, even articles that have gone viral) was in large part thanks to brilliant engineers. I’m thrilled to be working alongside so many today and to help amplify their voices here. More than anything, I’m excited to be a part of what Stack Overflow is doing — helping developers write the script of the future. It’s a bonus to have fantastic colleagues like David and Mary.\nThe three of us are deeply committed to growing Stack Overflow in a way that’s consistent with our mission and values and to making sure our community is at the heart of everything we do.\nSo, congratulations to David! Welcome, Mary! And more from me soon.",
        "url": "https://stackoverflow.blog/2018/10/12/exciting-leadership-announcements/"
    },
    {
        "title": "Welcome Wagon: Community and Comments on Stack Overflow",
        "content": "This past summer, we wrote our first blog post about comments on Stack Overflow, focusing on our initial work rating comments internally at Stack Overflow and what we learned. Since then, we’ve fielded this comment rating task more broadly in our community. This blog post shares some of what we are learning.\nEngaging our community\nI (Jason) wrote a web application that presents a user with a comment thread from a post on Stack Overflow and asks the user to rate each comment in the thread as fine, unwelcoming, or abusive. Our first blog post shared results from when we asked employees at Stack Overflow, including developers, product managers, and executives, to rate comments. In August, we rolled out our new Code of Conduct, along with new flags for comments that align with these categories, one flag for rude/abusive and one flag for unfriendly/unkind. This fall, we extended our comment classification task beyond our employees to our larger community. We invited individuals from three groups to rate comments.\n\nModerators on Stack Overflow and other Stack Exchange sites\nIndividuals who responded to our blog post in April, indicating they want to help make Stack Overflow more welcoming\nA sample of registered users from our general research list (you can opt in/out of our research list in your Stack Overflow email settings)\n\nTo log in to this web app and record data, each user needed a Stack Overflow account, so users had to make an account if they didn’t have one already. We asked participants to invest at least one hour in rating comments, and to not work for more than 20 minutes at one sitting.\nWhat kind of response did we get? Overall, there were 525 users who spent at least 15 minutes or more rating comments. They made 253,807 ratings of 40,358 distinct comments. How many users and comment ratings did we have, for each kind of user?\n\n\n\n\n\tTypeUsersComment Ratings\n\n\n\n\n\tEmployee4613,300\n\n\n\tWelcome Project7935,849\n\n\n\tModerator100103,661\n\n\n\tResearch List300100,997\n\n\n\n\nThe moderators demonstrated their enormous commitment to our community through this project, as they do consistently day in, day out; moderators who participated in this project rated an average of over 1,000 comments each. Folks who responded to our blog post expressing interest in welcome/inclusion on Stack Overflow also invested a great deal of time, rating over 500 comments each.\nWe see can see this visually by looking at the cumulative distribution functions for each kind of user; this kind of plot shows, for each number of comment ratings, the percentage of users who rated that many comments or lower.\n\nIf you’re not used to interpreting this kind of graph, take a look at x = 1000, the location on the x-axis that corresponds to 1,000 comments. The line for the moderators is the lowest, indicating that more moderators submitted more comment ratings compared to the other groups.\nGroup differences\nDifferent kinds of people experience Stack Overflow in different ways. If we look at all the ratings made by the different types of users aggregated, how do the different kinds of groups perceive these comments on Stack Overflow?\n\n\n\n\n\tTypeFineUnwelcomingAbusive\n\n\n\n\n\tEmployee91.8%7.7%0.4%\n\n\n\tModerator95.0%4.8%0.2%\n\n\n\tResearch List95.6%4.3%0.1%\n\n\n\tWelcome Project96.6%3.3%0.1%\n\n\n\n\nThe highest rates of unwelcoming comments were identified by the internal employees at Stack Overflow, followed by Stack Exchange moderators. We trust and support our moderators, and in this specific project, moderators demonstrated their understanding of unfriendly and unwelcoming behavior in comments.\nRegular registered users from our research list perceived the next lowest rate of unfriendly comments, and users who responded to our blog post about making Stack Overflow more welcoming found the lowest rates of unfriendly comments of all. How can we interpret this? We specifically invited users who may not consider themselves active participants in our community in order to gain outside perspective, but then these users saw the lowest rates of unwelcoming behavior.\nA possible explanation is that we are seeing a real effect of deep experience with our site; it appears the more invested an individual is here at Stack Overflow, the more sensitive they are to problematic behavior. What do these unfriendly comments look like? The following combine elements of real comments to show typical examples.\n\n“Why do you want to do this? You have conflated at least three problems here.”\n“It will be very hard to help you with such a trivial bug. It could come from any line in your code, and we have to guess.”\n“How exactly is this going to solve my problem?!”\n“You don’t understand how to use this site. Here nobody codes for you; read the docs and then show us.”\n“What are you actually trying to achieve? Please learn how to use a debugger.”\n\nOur project showed that the more deeply an individual is connected to Stack Overflow (as an employee, or a moderator), the more they are likely to see problems in comments like these. This effect is robust to comparing groups who were shown the same comments, who rated the same number of comments, and other analytical approaches.\nIndividual differences\nWhat do the distributions of ratings for each individual look like?\n\nEach individual did not rate the same set of comments and worked for different lengths of time, so we expect variability in the results for each individual. Overall, the median percentage of perceived unwelcoming comments per individual was 3.5%, quite a bit lower than the median percentage for employees of 6.5%.\nTo understand how much agreement there is between raters, we can again look at Krippendorff’s alpha, a measure that ranges from zero (nobody agrees) to one (perfect agreement). This measure accounts for the number of raters, so we can compare agreement among employees to the groups with more raters. What is Krippendorff’s alpha, for comments that were rated by at least three people?\n\nThese values for alpha are low compared to what social scientists would use to draw reliable conclusions based on the ratings; social scientists look for values close to 0.8 or more. Notice that Stack Overflow employees rated more comments as unwelcoming than other groups but agreed with each other about what is unwelcoming and abusive at higher rates at the same time. The rate of agreement among moderators and registered users was lowest (although still much higher than for people unfamiliar with Stack Overflow), and the rate of agreement for the users who volunteered to help make Stack Overflow more welcoming was a bit higher. Remember that these were the users who rated the lowest overall levels of unfriendliness; some spot-checking indicates these users identified only the clearest examples of problematic text.\nAnother factor that impacts interactions on Stack Overflow is reputation. Do we see any difference in how raters perceived unwelcoming behavior with their own reputation? This can help us understand if “power users” (distinguished from moderators) may be driving problems with site culture.\n\nThere is no clear evidence in this plot for a relationship, indicating that high-reputation users perceive unfriendly behavior at about the same rate as low-reputation users. We have seen effects similar to this before, for example, in our annual Developer Survey. When asked what the worst or most annoying thing about Stack Overflow is, developers of all experience levels and self-reported activity levels on Stack Overflow mentioned issues with harsh interactions and site culture.\nAll together, this begins to paint a complex and interesting picture of who understands unwelcoming behavior and in what ways. Moderators and high-reputation users are just as likely, or even more likely, to identify unwelcoming comments compared to new users. Stack Overflow employees identify more comments as problematic and agree with each other more about what is a problem compared to the other kinds of users in this project.\nNext steps\nSo where do we go from here? For starters, we as employees learned that we don’t always perceive problems in the same way as other members of our community. We will keep this in mind as we move forward with plans to make Stack Overflow a better place for developers to learn and share knowledge.\nWe plan to use this dataset to investigate how comments are used on questions and answers, toward users of different experience levels, in different communities, and more. Look for more blog posts on these issues in upcoming months. We will continue to use the results from this project in product changes on Stack Overflow, as well as directly using appropriate subsets of this data in machine learning models. Also, in 2019 we will release this dataset (comment IDs, comment ratings, and anonymized/randomized rater ID) upon request so that other people in our community and beyond can explore this data for themselves.\nAll of this would not be possible without the investment of time and energy of the individuals who participated in this project, and we want to acknowledge each of you who volunteered to help us understand this aspect of our site better. Thank you, for your care and time. Community is central to our identity at Stack Overflow, and we are committed to making Stack Overflow a healthy, inclusive place for developers to learn and share knowledge.",
        "url": "https://stackoverflow.blog/2018/12/04/welcome-wagon-community-and-comments-on-stack-overflow/"
    },
    {
        "title": "10 Years of Stack Giving Back",
        "content": "In 2009, Stack Overflow’s three employees (or associates, as they were then called) were inspired to end the year by giving back. To recognize our amazing community of moderators, we made small contributions to six nonprofits.\nSince then, we’ve donated over $350,000 through what we’ve dubbed Stack Overflow Gives Back. This year, we’re celebrating the initiative’s 10th anniversary (along with the 10th anniversary of our company!).\nThis month our 577 incredible community moderators selected from five charities to which we will donate $100 on their behalf (that’s $57,000!). Our sites literally couldn’t succeed without these incredible volunteers, so we’re proud to be able to give a little back to some wonderful causes in thanks for all their efforts.\nToday, we’re celebrating each of the organizations and highlighting how these contributions may impact each one:  \nCrisis Text Line – $7,700 donation \nA series of high-profile and heartbreaking deaths this year brought much-needed attention to mental health issues. We recognize that there’s a lot of stigma around talking about mental illness, and that’s why we’re happy to support a nonprofit that’s leveraging technology to do something about it.\nCrisis Text Line provides free, 24/7 confidential support for those in crisis, whether it’s depression, anxiety, eating disorders, bullying, or suicidal thoughts. Crisis Text Line acts as a simple support resource, while using data to make us better and to improve communities. \nOur donation to the organization this year will support about one month of the technology required to keep the platform up and running.\nDoctors Without Borders – $19,000 donation\nOur community of moderators is incredibly global, and Stack Overflow is used by people all over the world. Doctors Without Borders is one of the world’s most robust efforts to provide medical aid where it’s needed most. The nonprofit has reach into more than 70 countries around the world. They do everything from providing emergency response and access to healthcare to advocating for medical care and research.\nDoctors Without Borders impacts everything from Ebola outbreaks and the ongoing HIV/AIDS crisis, to the malnutrition that affects over 20 million children. Few organizations are able to tackle so many issues and touch so many people as Doctors Without Borders.\nElectronic Frontier Foundation – $12,800 donation\nA lot of legislation was passed in 2018 all over the world, and not all of it was great for a free and open internet. Fortunately, organizations like The Electronic Frontier Foundation (EFF) are monitoring legislation and court cases in order to fight the good fight.\nEFF is the leading nonprofit defending digital privacy, free speech, and innovation. They champion these things through impact litigation, policy analysis, grassroots activism and technology development. The foundation works to ensure that rights and freedoms are enhanced and protected as our technology grows.\nPursuit  – $6,800 donation\nOver the past year, Stack Overflow has taken big steps to make the site more welcoming and inclusive. This is why we’re especially excited about Pursuit, a non-profit that welcomes 200+ people into coding and tech every year.\nPursuit partners with tech companies to create new pathways for high-need, high-potential employees by training their blue-collar and non-traditional workers to become software engineers. Over a four-year Fellowship, Fellows spend 10 or 12 months in intensive training, followed by three years of one-on-one career support. The Fellowship’s Graduates’ average annual salaries have quadrupled, going from about $18,000 a year to $85,000. \nSea Legacy – $11,400 donation\nIntellectual curiosity drives many of our contributors. There are a number of excellent nonprofits working to combat climate change and save our planet, and Sea Legacy is doing just that by relying on people’s intellectual curiosity to catalyze change. The nonprofit works to create healthy and abundant oceans by producing powerful media and art that gives people hope.\nSea Legacy is a collective of some of the most experienced and renowned photographers, filmmakers, and storytellers, working together on behalf of our oceans. Their important and ambitious work is on display in their popular Instagram. And their Instagram is a key part of their bold goal: to engage one billion people in ocean conservation. They’ve already reached a potential audience of 1.8 billion people, which is the advertising equivalent of $16.8 million.\n\nWhile we’re super excited to be giving back to these impactful nonprofits, it’s also important that we recognize the tools and organizations that help our Engineering and IT teams do their jobs everyday. This year, we donated $1,000 to each of the following organizations Powershell Summit OnRamp; OpenSSL Foundation; HAProxy; LetsEncrypt; Free Open Ghost.\n\nWe are thrilled to be supporting so many important and impactful organizations, but more than anything we’re feeling very grateful for our moderators and our community. They contribute so much to Stack Overflow, which contributes so much to the world. We (Stack Overflow’s now more than three employees, who are no longer called associates) are humbled to be giving a little something back on their behalf.\nCheers to an incredible 2018 and an exciting New Year!\n    Tags: announcements, company, stackoverflow",
        "url": "https://stackoverflow.blog/2018/12/20/10-years-of-stack-giving-back/"
    },
    {
        "title": "State of the Stack 2019: A Year in Review",
        "content": "A loooong time ago, we used to post an annual “State of the Stack” update on the company and community. Then at some point it became an infographic which was… listen, everyone was doing infographics in 2011. Now it’s 2019, the company has grown and changed in so many ways, so we’re bringing this tradition back and taking a look at how far we’ve come while being open and honest about how much work we have left to do.\n2018 was a big year! Some stats:\n\nAcross all of Stack Overflow and the Stack Exchange network, we saw 9+ billion pageviews from 100+ million users over the course of the year. \nStack Overflow alone had over 2.5 million answers and 2 million new questions, with over 1.6 million new users joining the community. \nOur community members and volunteer moderators handled almost 2 million flags, to keep abusive, unwelcoming, and inappropriate content off the site, and apply our updated Code of Conduct.\nOver 40,000 jobs were posted on Stack Overflow Jobs. We now have over 900,000 searchable profiles of developers who are interested in being contacted about a job on Stack Overflow Talent.\nAnd we launched Stack Overflow for Teams, a new way for developers to use the power of Stack Overflow Q&A inside their organization. Thousands of organizations are already using it to help their teams share knowledge and ship faster.\n\nAll of this matters because Stack Overflow exists to help everyone who codes learn and share their knowledge. Every time someone finds a solution to a problem, learns something new, or finds an opportunity to grow their career on Stack Overflow, we’re all advancing that mission together.\nWe also know that we still have a lot of work to do. Stack Overflow helps a lot of people today, but it is not yet the the welcoming, inclusive, and diverse platform we want it to be. That’s something we are committed to continuing to improve on this year, but we can’t do it without your help!\nCommunity Update: Welcoming everyone who codes\nStack Overflow has never been about the company, or about any one user. It’s about bringing all the world’s developers together to learn from one another, and together creating shared artifacts that help millions of people all over the world. It’s about creating a community where everyone who codes — regardless of how they identify, where they work, or where they went to school — can participate and feel welcome.\n\nThat said, good intentions aren’t good enough and we’ve fallen short of that ideal in a lot of ways: too often people feel unwelcome, unheard, and unable to help or to find help, particularly women, people of color, and other underrepresented groups. This has to change, and it starts with us, the company, providing the tools and support that you need to help one another.\nIn May, we launched what we call the “Welcome Wagon”, an effort to identify and improve areas where we can do better. This is a collaborative effort, with our developers, user researchers, data scientists, and community managers reaching out to community members, moderators, and voices from outside the community to work together on solutions.\n\nWe’ve made a lot of progress in half a year. We rolled out a new Code of Conduct and added new flags on comments to identify both abusive and unkind comments. We added a “New Contributor” indicator to encourage people to be helpful and friendly to new users, and we’re testing a new Ask Question wizard to help guide users through asking their first question.\nBut we’re still just scratching the surface. One thing we’ve heard loud and clear from the community is that we need to also address a lot of existing bugs and community debt. These issues have accumulated over the years to lead to confusing and frustrating experiences for all of our users, and we haven’t been doing enough to prioritize fixing them.\n\nSo in 2019 we’re going to be redoubling our efforts on this, adding more devs, designers, PMs, and community managers internally (in fact, we’re hiring right now.) They’ll be split across two major initiatives: continuing the Welcome Wagon work of making Stack Overflow more welcoming and inclusive, and a newly focused effort on community improvements and expert user experience.\nBusiness Update: How does Stack Overflow make money again?\nStack Overflow has three main business lines:\n\nStack Overflow for Teams and Enterprise, our newest product, brings the power of Stack Overflow Q&A to organizations in a private, secure space just for internal teams.\nOur Advertising products help companies reach and engage the developer community with on-topic, relevant ads.\nAnd Stack Overflow Talent helps organizations reach, attract, and hire the right technical talent for their team.\n\nThe biggest expansion in our business this year by far was on Teams and Enterprise. The product idea is simple: give organizations a private version of Stack Overflow Q&A just for their team. While Stack Overflow public Q&A has been enormously successful at helping programmers share knowledge and find quick solutions to their problems, it can only ever solve a fraction of the problems professional programmers face because most programmers work on private code they can’t ask about in public. Every software team struggles with documentation and knowledge sharing, and Stack Overflow is designed to enable developers to write reusable snippets of documentation for one another in a way that doesn’t feel like a chore.\nIt probably shouldn’t be a surprise that so many customers are finding that Stack Overflow helps their team onboard more quickly, reduce knowledge silos, and ship code faster. Thousands of organizations are already using Stack Overflow for Teams and raving about it, and Stack Overflow for Enterprise is seeing success in Fortune 500 companies that range from major technology companies to the world’s largest financial service firms.\nBetween the explosive growth of Teams and Enterprise, and the continuing value of Talent and Advertising, 2018 added up to the best financial year in Stack Overflow’s 10-year history. While we’re not quite swimming in pools of cash yet, we’ve never been on better footing heading into a new year of growth.\nCompany Update: Who are all these people?\nAs the work has grown, so has the company. We now have employees in 14 different countries, working either in our offices in New York, London, Munich, and Denver, or remotely from wherever they happen to live.\nWe’ve been working hard to create a more diverse team and inclusive team internally. We’re taking a look at our policies, benefits, interview practices, and internal trainings to make sure that we’re supporting the team we have. We’re also working hard to recruit a more diverse team. Globally, the number of people working at Stack Overflow who identify as women, non-binary, or transgender is now 39% (including 42% in management and leadership, and 32% in technical roles), and 15% of US employees are from an under-represented racial or ethnic group (10% in management and leadership, and 9% in technical roles). While this isn’t where we want to be, it represents substantial growth over the past few years. In 2018, we also concluded a third-party compensation review to address any gender or racial pay gaps, and implemented a Rooney Rule for tech and leadership hiring to ensure we continue to address the gaps in our hiring.\nWe rolled out some new employee-friendly policy updates, too. For employees who have been here for more than two years, we have an extended stock option exercise window so that employees aren’t forced to exercise their options 90 days after leaving (and often pay hefty taxes) or lose them forever. We also extended our fully-paid parental leave to 16 weeks for primary caregivers and 12 weeks for secondary caregivers, and removed pro-rating in your first year (so everyone gets the full amount regardless of how recently they joined).\nIn 2018, 13 people in the company took advantage of our sabbatical policy to take an extended break to travel the world, work on a side project, learn a new instrument, or just spend time with their family. We’re very proud of our sabbatical policy, which lets any employee who has been here for five years take an extra four weeks of paid time off to rest, recharge, and spend time on things they care about. I think it’s one of the reasons why so many of our earliest employees are still with the company.\nGet Involved: Help us build the future of Stack Overflow!\n2018 was a big year for Stack Overflow, and I’m excited for what 2019 holds. Developers are shaping the future of the world, and we have a responsibility to help push that future in the direction of more openness, diversity, collaboration, and empathy. If we can do the hard work to make Stack Overflow a place where everyone who codes feels welcome and able to contribute, extend that to every company through Stack Overflow for Teams and Enterprise and Stack Overflow Talent, we can change the world for the better. And the best part is that anyone can join in and be a part of this mission.\nIf you’ve never joined the community or tried asking or answering your first question, there’s no better day than today! The community works because regular, every day programmers like you decided one day to give something back and help someone out. By treating people with empathy and respect, you’ll help us create a more welcoming and inclusive community.\nIf your company thinks knowledge sharing is a priority, give Stack Overflow for Teams a try — it’s free for the first 14 days and starts at just $10 per month (flat!) for your first 10 users. Or if you’re looking to hire developers, or reach our massive global audience of developers, try Stack Overflow Talent and Advertising.\nAnd if you’re looking for a new challenge yourself, we’re hiring, and not just developers: it takes a team to make all this happen, so we’re looking to grow everything from Sales and Customer Success to IT, Marketing, Product, Design, Finance, and more.\nFinally, if you’re already a member of the community, THANK YOU for all you do to help others. We still have a lot of work to do to make Stack Overflow the welcoming, inclusive, and diverse community we want it to be, and we can’t do it without you! So if you have ideas, suggestions, or ways we can help you in 2019, please let us know.\n    Tags: announcements, company, stackoverflow",
        "url": "https://stackoverflow.blog/2019/01/18/state-of-the-stack-2019-a-year-in-review/"
    },
    {
        "title": "El estado de Stack Overflow en español: Diciembre 2017",
        "content": "Este mes terminamos un año realmente tremendo.  Vimos la graduación de nuestro sitio en el 2017 al igual que la inauguración de nuestros moderadores oficiales.  Vimos también un crecimiento satisfactorio de nuestras preguntas por día y de nuestra membresía. Estamos muy emocionados por lo que vamos a poder realizar este año siendo que terminamos bien en el 2017.\nComo acostumbramos hacer cada mes, les presento unos detalles interesantes del mes de diciembre y también un resumen del año anterior.\nLas 5 preguntas con la cantidad más grande de respuestas del mes:\n\nConseguir índice de un objeto en un Array de objetos proporcionando un atributo del objeto – 6 respuestas\n¿Cómo extraer parte de una cadena según un patrón? – 5 respuestas\n¿Cómo ocultar la ActionBar en Android? – 5 respuestas\nUsar una variable como nombre de fichero? – 4 respuestas\nComo obtener el Texto de un Label que esta dentro de un ListView dinámico Xamarin Forms PCL – 4 respuestas\n\nLos 5 usuarios con la cantidad más grande de preguntas este mes:\n\nomaza1990 – 33 preguntas\nfran – 16 preguntas\nMiguel Espeso – 15 preguntas\nPachi – 15 preguntas\nKillpe – 14 preguntas\n\nLos 3 usuarios con la cantidad más grande de respuestas este mes:\n\nsstan – 93 respuestas\nLuis Daniel Rovira Contreras – 86 respuestas\nJorgesys – 82 respuestas\n\nCorto resumen del 2017\n\nPromedio de nuestras preguntas por día: 114 ppd\nVistazo de las visitas por mes:\n\n\n\nLugares de donde vino nuestra gente (de mayor a menor cantidad):\n\n\nMéxico\nEspaña\nColombia\nPerú\nArgentina\nChile\nVenezuela\nEcuador\nBolivia\nCosta Rica\n\n\nLa pregunta más visitada del año:\n\n\nCómo separar un String en Java. Cómo utilizar split() – vista 22,932 veces",
        "url": "https://stackoverflow.blog/2018/01/05/el-estado-de-stack-overflow-en-espanol-diciembre-2017/"
    },
    {
        "title": "How We’re Designing Channels",
        "content": "This post refers to “Channels”, a product which is now called “Teams.” This post is part of a series on how we’re making Channels, the thinking behind the product, and insight into the process. We’ve got smart people working on smart solutions, and continue looking to the community and alpha/beta testers as we iterate toward launch. Read “Why Channels”, the first post in the series for more background info.\nWorking on Channels has been like any remodeling project: You start out excited, then you pull down the wood paneling and suddenly realize you’ve got rewiring to do — solving one issue leads to even more. \nDiscovering the problems\nThe team started by interviewing developers — observation to more deeply understand their needs, the benefits and shortcomings of tools they’re using for knowledge management, and their hopes for what Channels on Stack Overflow could be.\nThis research helped us center our approach around three main principles:\n\nChannels provides a private & secure space for your team to store and share institutional knowledge,\nChannels is a feature that exists right on Stack Overflow, a familiar place where developers know the systems and already go to ask and answer programming questions,\nAnd deep integrations & notifications are essential to make sure that the right question gets in front of the right person, especially on a smaller community or team.\n\nNext, we went broad by analyzing other products and prototyping many design approaches before converging on any solution. We pulled in designers from different product teams to quickly explore a wide range of solutions.\n\nThis is where we began to discover that the new tile might not match the countertops.\nHere’s what we’ve learned so far\nNeeds in small, private spaces are very different than large, public ones\nThere are nuances to how people will use their private, work channel that differ from the public setting. Connections and relationships already exist in the physical world prior to the addition of a private Channel. Work problems are specific to coworkers who are domain experts. In public, anyone across the globe with the right knowledge can answer general programming questions. \nNot all features and rules created for public Stack Overflow are necessary in a smaller, private environment, and new features are needed that don’t yet exist. For instance on public Stack Overflow, you can’t mention anyone unless they’ve contributed in some way to the question (otherwise Jon Skeet would get pinged any time anyone had a C# question.) But in a private channel the need is different — “I want to make sure Jenny sees this question because I think she’s probably the only person in the company who can answer it well.”\n\nAlso, users need to be able to quickly identify what is private. There are updates to the UI that are necessary in order to ensure there’s no possibility of posting private info into the public space.\n\nAdding channels requires big changes to SO’s Information Architecture\nA house with more rooms needs more doors. In order to help teams easily find, share, and store institutional knowledge, we need to make our search interface and navigation (finding things by clicking around) be more intuitive. \nPutting navigation in the right place\nAdding channels into the current navigation presents challenges that didn’t previously exist, and can only be solved by rethinking the underlying site structure. \n\nThe team created several prototype navigations, narrowed to two, and tested with a group of users. This surfaced a few key issues:\n\nScalability: Horizontal navigation lacks the space for additional elements — especially multiple channels per user.\nGestalt: It’s confusing to place Channel navigation at the page top, where information is already dense. The hierarchy of information must be balanced and easy to comprehend. \nPersistence / Consistence: Because navigation creates a mental map, any design iteration that didn’t expose the existence of the channel at a top nav level created confusion.\n\nWe need a system that solved these problems well regardless of whether you’re trying to find info to help onboard a new developer to your team, or just trying to figure out how to vertically align text in CSS. \nWhile we haven’t solved all the edge cases, the design discovery gave us a clear direction to test during the alpha phase.\nOne search for all Channels\nA key path to finding content on Stack Overflow (searching for a question on Google, then clicking on a Stack Overflow Question) doesn’t work for private Q&A because Google can’t index it. That means Channels users will often need to use SO’s search when they’re looking for content that might be private… and our search has been showing its age for some time now. If our goal is to quickly help users find the most relevant results, then we need a better search experience that considers the searcher’s intent and improves the quality of the results (but I’ll let an engineer speak to those changes in a future post).\nNew integrations and notifications\nBecause Stack Overflow gets 10 million visits per day, getting questions answered hasn’t been a problem we’ve faced for a long time. The mechanics in smaller communities are different. With Channels, we had to think through how smaller teams interact and the workflows they’re already using in order to make sure the right people see the right questions. \nOur  primary learnings showed that we need to integrate with the tools teams already use (such as Slack) and enable users to create custom email notifications. We’re planning and building several integrations.\nBalancing getting users in and iterating toward a vision\nMuch of design is iteratively gaining a deeper understanding of the problems we need to be solving. Achieving a higher fidelity of understanding means repeating the process of creating and testing over and over again. Throughout the design process there’s a healthy tension between what we can build today and ship fast so that we can actually put something in front of users to make sure we’re meeting their greatest needs and a longer-term vision that guides our trajectory as the product matures. \nWe split the work into phases, and even though we’re embarrassed by some of the things we are putting in front of people, there’s reassurance that we’re building toward a future state that we all believe in. This also means that we aren’t launching into long build phases on things that we think are important, but may not be essential to our users.\n\nNext Steps\nWe’re launching Channels alpha in December and hope to be moving into public Beta in Early Spring. Look for future posts sharing our design, research, and product development process in the coming weeks.\nIn the meantime, we invite you to provide feedback or sign up to be part of our beta group as we test and grow our Channels product. If you have any questions for the team or me, feel free to drop them in the comments or ask a question about Channels on Meta. Let us know what you think.",
        "url": "https://stackoverflow.blog/2017/12/04/designing-channels/"
    },
    {
        "title": "Stack Overflow Gives Back 2017",
        "content": "One of the most lasting gestures of philanthropy is when folks give so generously of their time and hard-earned knowledge so that others may benefit from their efforts. 2017 marked the year we saw Stack Overflow surpass 15 million questions and almost 4 million more across the network. But this year also marked another milestone — making a lasting difference from our little corner of the Internet.\nEvery year we set this time aside to remember the people and organizations who desperately need our help. A few weeks ago, I contacted the 566 Moderators of Stack Exchange and asked each of them to select a charity for which we would make a $100 donation on their behalf.\nGiving Back Works!\nToday I am pleased to announce that the Giving Back program has surpassed over a quarter-million US$ in charitable donations, in our continuing efforts to provide the support these wonderful organizations need. So on behalf of the 566 Moderators of Stack Exchange, here are the charitable donations going out this year:\n\n\n\n\nCharity\n\n\n  Donation\n\n\n\n\n\nCode.org\nA non-profit organization whose vision is that every student in every school should have the opportunity to learn computer science, dedicated to expanding access and increasing participation by women and minorities (code.org)\n  $7,200.00\n\n\nInternational Association for Suicide Prevention\nAn international organization dedicated to preventing suicidal behavior and providing a forum for survivors, mental health professionals, and those affected by suicide  (iasp.info)\n  $9,500.00\n\n\nInternational Rescue Committee\nResponding to the world’s worst humanitarian crises and helping people to survive and rebuild their lives; at work in over 40 countries, more than 90% of every dollar goes directly to help refugees in desperate need (rescue.org)\n  $9,900.00\n\n\nDoctors Without Borders\nAn international medical humanitarian organization created by doctors and journalists (doctorswithoutborders.org)\n  $14,500.00\n\n\nElectronic Frontier Foundation\nDefending your rights in the digital world (eff.org)\n  $15,500.00\n\n\nTOTAL\n  $56,600.00\n\n\n\n \nAnd from our engineering and IT staff, it is important to remember some of the tools and organizations that make what we do possible:\n\n\n\n\nOrganization\n\n\n          Donation\n\n\n\n\n\nLetsEncrypt\n          $1,000.00\n\n\nPython Foundation\n          $1,000.00\n\n\nHAProxy\n          $1,000.00\n\n\nCreative Commons\n          $1,000.00\n\n\nHave I been pwned?\n          $1,000.00\n\n\n\n \nEarlier this month, equal access across the Internet took a crippling blow here in the US with the overturn of Net Neutrality. Opposition to this unfortunate turn was evident in this year’s strong show of support for organizations like the Electronic Frontier Foundation leading the fight. And with recurring themes in the news like the victims of natural disasters, mental health concerns, and growing support for under-represented groups making the headlines, it’s no wonder organizations like Doctors Without Borders, International Rescue Committee, code.org, and the IASP continue to rally such a generous outpouring of support.\nAnd to all the users of Stack Exchange, thank you… thank you… thank you! Without your passion and your generosity, none of this would be possible. It is our hope that, with your continued support, we can make a lasting difference around the world by continuing this wonderful tradition of giving back.\nSee you next year!",
        "url": "https://stackoverflow.blog/2017/12/27/stack-overflow-gives-back-2017/"
    },
    {
        "title": "Quantum Computing Site Launches with the Help of Strangeworks",
        "content": "Last week, we rolled out our latest feature designed to help tech industry leaders engage more directly with the developer community. In a partnership with Strangeworks, Stack Exchange launched the Quantum Computing Q&A site at the SXSW Convergence Keynote in Austin, TX. During his Keynote, Strangeworks Founder and CEO William “whurley” Hurley discussed how quantum computing will forever change the computing landscape with advances in fields like artificial intelligence and next-gen cryptography. To say that quantum computing will fundamentally change how we think about computers is an understatement.\n“Stack Overflow is excited to partner with Strangeworks as the patron sponsor for our Quantum Computing community,” said CEO Joel Spolsky. “This partnership will help grow this energized community and expand the knowledge base in this emerging technology.”\nThe site launched last week to 468 users, answering better than 93% of the questions posted. Access to this growing collaboration will help the next generation of developers usher in these advancements in technology. “We believe that quantum computing information should be democratized and available to all. We want to create something that can last far past us. We want to build a lasting, meaningful forum for developers”, whurley said. One of Strangeworks’ main goals is to revolutionize technology by guiding companies through the confusion and chaos of quantum computing.\nWhat Are Sponsored Sites on Stack Exchange?\nThe idea of a company sponsoring a Stack Exchange site has stirred up quite a bit of interest in our existing communities, according to Robert Cartaino, our Director of Community Development. Some of these project teams have sizeable communities of their own, so it would be amazing if we could engage these organizations to actively support our current sites — along with the financial resources they bring to finally make our Q&As more attractive for active development again.\n\nA sponsorship generally entails enabling ads relevant to the subject and affixing a small “sponsored by…” logo in the upper-right corner. We’ve modeled this program after our “tag sponsorship” feature.\n\n\nStrangeworks chose Stack Overflow as a launch partner because of the community aspect. “We wanted to build a community for quantum computing that wasn’t beholden to just us—to provide a voice that’s not tied to a specific platform. Stack Overflow is a community by developers, for developers, which is just what we were looking for. A vibrant, active community of the world’s developers”, whurley said. This brings the realities of a quantum future into the present, helping readers understand and prepare for the coming age of quantum computing.\nYou can read more about the site in last week’s meta announcement or join our Quantum Computing community!",
        "url": "https://stackoverflow.blog/2018/03/27/quantum-computing-site-launches-with-the-help-of-strangeworks/"
    },
    {
        "title": "The 2018 Developer Survey Results are Live",
        "content": "Each year, we ask the developer community about everything from their favorite technologies to their job preferences. This year marks the eighth year we’ve published our Annual Developer Survey results—with the largest number of respondents yet. Over 100,000 developers took the 30-minute survey this past January. This year, we covered a few new topics ranging from artificial intelligence to ethics in coding. \nSee the Results Here\nTop Takeaways\n\nDevOps and machine learning are important trends in the software industry today. Languages and frameworks associated with these kinds of works are on the rise, and developers working in these areas command the highest salaries.\nOnly tiny fractions of developers say that they would write unethical code or that they have no obligation to consider the ethical implications of code, but beyond that, respondents see a lot of ethical gray. Developers are not sure how they would report ethical problems, and have differing ideas about who ultimately is responsible for unethical code.\nDevelopers are overall optimistic about the possibilities that artificial intelligence offers, but are not in agreement about what the dangers of AI are.\nPython has risen in the ranks of programming languages on our survey, surpassing C# in popularity this year, much like it surpassed PHP last year.\nWhen assessing a prospective job, different kinds of developers apply different sets of priorities. Women say their highest priorities are company culture and opportunities for professional development, while men say their highest priorities are compensation and working with specific technologies.\n\nWe’ll make the anonymized results of the survey available for download under the Open Database License (ODbL) on May 30th. In the meantime, you can see the full data sets from previous years here. \nHave questions or feedback? Head on over to Meta and use the [survey-2018] tag.",
        "url": "https://stackoverflow.blog/2018/03/13/2018-developer-survey-results-live/"
    },
    {
        "title": "Jon Skeet Answers Your Questions IRL",
        "content": "In January, Jon Skeet’s rep crossed over one million. To thank him for his generous efforts and contributions, we hosted a brunch in his honor at our New York Headquarters in February. We also asked the community if they had any questions for him to answer in an IRL Q&A. \nPlease enjoy this delightful interview in which Jon discusses everything from his origin story, to overload resolution, to banana flower pants. We’re immensely grateful for Jon’s continued devotion to the Stack Overflow community, and we hope to give him another free brunch after he earns his next million rep!\n\n\n\nBy the way, we also recorded a podcast while he was here.",
        "url": "https://stackoverflow.blog/2018/05/01/jon-skeet-answers-your-questions-irl/"
    },
    {
        "title": "Pluralsight & Stack Overflow: Helping the World’s Developers Learn New Skills",
        "content": "Today we’re excited to announce a partnership with Pluralsight, the enterprise technology learning platform.\nStack Overflow’s mission has always been to the help the world’s developers; whether it’s helping them get answers to their coding problems through Q&A, or helping them build their career with Jobs. Pluralsight has many of the same goals—helping the tech community grow their skills, share their knowledge, and create progress through technology—making the partnership a win-win for all involved.\n\n\n\nThe Developer Learning Journey\nHow developers learn has grown over time. Years ago, developers would visit their university’s bookstore, check out a book, and then read up on the software or programming language they were trying to learn. While this still may happen today, the majority of developers are learning through online courses, coding bootcamps, Pluralsight, and Stack Overflow.\nOur CEO Joel Spolsky says, “What [Pluralsight CEO] Aaron and I have in common is that we both wrote books for developers. Today’s developers don’t necessarily have time to read books—they need to learn three things today that they’re going to use immediately. Pluralsight is all about building core skills that you’re going to need later on, while Stack Overflow is how you fill in those gaps of knowledge, just-in-time.”\nHow We’re Improving It\nThis partnership is two-fold—it involves integrating Stack Overflow’s Developer Story and Pluralsight’s new product, Pluralsight IQ. Between the two platforms, developers have the most comprehensive data related to their learning journeys. \n\nDeveloper Story was built to give developers a way to show off what they know and built. Incorporating things like open source projects, top questions, and articles or blog posts helps developers expand their story beyond the archaic resume elements, like education and work experience. But there’s never been a standardized way for them to show their proficiency in a programming language, for example.\nThat’s where Pluralsight IQ comes in. This product allows developers to measure their skill level in about 5 minutes in dozens of technologies. Skill IQ is a quantifiable skill level based on a percentile rating for the skill area or technology. It also includes a date of verification which matches the date they completed the assessment.\n\nIn the first phase of this partnership, developers who use both platforms will be able to share their Skill IQ on their Stack Overflow Developer Story page. Developers who add this feature to their Story will have instant third-party skills verification that allows them to showcase their knowledge.\nHow You Can Participate\nTake an assessment, add it to your Developer Story, and let us know what you think!",
        "url": "https://stackoverflow.blog/2018/02/06/pluralsight-stack-overflow-helping-worlds-developers-learn-new-skills/"
    },
    {
        "title": "Stack Exchange 2017 in Review",
        "content": "“It’s a life’s work to see yourself for what you really are and even then you might be wrong.”—Cormac McCarthy, No Country for Old Men\nYou know the old saw about how 90% of an iceberg is hidden under water? At Stack Overflow, we strive to be a reverse iceberg by sharing as much as possible about what’s going on. 2017 presents a bit of a problem since the big news is that we’ve seen a lot of interest in companies paying for private Q&A. The other two legs of our revenue tripod (ads and job placement) are stable. But it turns out Stack Overflow is best known for providing a platform for people to share knowledge with each other. So our most exciting developments didn’t get much visibility last year. \nWe offer both self-hosted and remote-hosted Enterprise instances. Both varieties are full-fledged sites that take a fair amount of investment from the customer to be successful. Smaller organizations have asked for private Q&A as well, which brings us to Channels. By hosting private Q&A for smaller teams right on Stack Overflow, we hope to simplify signup and security for them. From our experience using our own Enterprise instance, I’m excited to move to Channels in order to skip the VPN and to have notifications go right to my Stack Exchange global inbox. Many of the design changes needed for Channels will benefit the public sites as well. \n\n\n\n\n\tSiteQuestionsAnswersEditsCommentsAccepted AnswersUpvotesDownvotesReviews\n\n\n\n\n\tStack Exchange921,1441,201,7312,090,0533,983,934365,9907,802,1691,126,6991,317,965\n\n\n\tStack Overflow2,462,1372,958,6924,761,3359,513,1141,041,40616,710,6922,549,5882,638,016\n\n\n\tInternational SO134,518138,584211,904509,54559,173394,00188,297163,089\n\n\n\tTotal3,517,7994,299,0077,063,29214,006,5931,466,56924,906,8623,764,5844,119,070\n\n\n\n\nThe observant among you might notice these statistics are slightly down from 2016. One of the great things about an open Q&A network is that answers to the askers’ specific questions can be discovered by other people with the same question. So a big reason we don’t have more new questions is because we have so many existing answered questions for people to find before they ask. Most of the millions of questions asked each year are only ever seen by the handful of people who have the very rare problem asked about. (In other words, the network has a very long tail.) That said, some questions are seen by hundreds of thousands of people. Here are the top 5 viewed questions across the network asked in 2017:\n\n\n\n\n\tQuestionViewsSite\n\n\n\n\n\tWhat does \"covfefe\" exactly mean?467,235English Language and Usage\n\n\n\tIs it unethical for me to not tell my employer I've automated my job?438,343The Workplace\n\n\n\tWhy does man print \"gimme gimme gimme\" at 00:30?283,666Unix and Linux\n\n\n\tNo 'Access-Control-Allow-Origin' header is present on the requested resourcewhen trying to get data from a REST API188,548Stack Overflow\n\n\n\tWhat happens if someone becomes Excommunicado?178,090Movies\n\n\n\n\n(Full disclosure: I’ve tried to automate my job, but I haven’t achieved full covfefe.)\nQuestions are only useful if they prompt helpful answers and Stack Exchange users regularly provide just that. While most of the accumulated value of the network’s content (available under a Creative Commons licence) is spread out over millions of clear answers to obscure questions, there are a few answers that just about anyone can appreciate. Here are the top 5 answers from 2017 ordered by score:\n\n\n\n\n\tAnswerScoreSite\n\n\n\n\n\tWhy does man print \"gimme gimme gimme\" at 00:30?1948Unix and Linux\n\n\n\tBuild a digital clock in Conway's Game of Life863Code Golf\n\n\n\tWhich word begins with \"y\" and looks like an axe in this picture?831English Language and Usage\n\n\n\tShould a new employee be disciplined for not recognising a superior?643The Workplace\n\n\n\tWhy do all the C files written by my lecturer start with a #?553Stack Overflow\n\n\n\n\nThe only question to appear in both lists started as a pun based on an ABBA song, which is one reason to be thankful for 2017.\nOne of the downsides of having a bunch of popular websites built entirely from community-created content is that we attract a lot of spam. Over the years, we’ve added systems to block and slow down unwanted submissions, but some still get through. The last line of defense is flags from individual users. A few years ago, a dedicated team of users (Charcoal) built a rather remarkable early warning system called the SmokeDetector. Initially, it was just a chatbot that dropped messages about potential spam for users to flag. Over time, the system’s accuracy increased to be even better than human flaggers. So recently, the system started automatically flagging spam. The program has substantially reduced the number of times an actual human needs to look at spam and other nonsense. For more details, please see the 2017 spam report. And just so it’s clear, this was entirely a community-led development. We love giving our users agency to fix problems.\nEven when we are doing the development work, we do best when we communicate early and often with users. (This was the most important thing we learned from Documentation.) For instance, the team working on improvements to the network publishes a monthly update and takes community feedback as one important input to its priority list. I mentioned last year that we didn’t listen to potential customers who wanted to pay for an Enterprise Q&A site. A variety of organizations have successfully deployed these sites, which in retrospect shouldn’t be a surprise. It hurts to consider the opportunities we missed simply by not listening.\nAnnual events help turn a random collection of humans into a cohesive culture. As a sampling:\n\nTeX – LaTeX Stack Exchange elected representatives to the TeX Users Group.\nGraduated sites customized advertisements for the year to come. (Mathematics has some interesting submissions.) \nWe redesigned the top bar. (Ok, that only seems annual.)\nJudaism hosted “Purim Torah” questions.\nThe Stack Overflow Developer Survey results were revealed. \nWe danced like fools for April Fool’s Day.\nUsers hunted down their favorite digital skull decorations in Winter Bash 2017.\nOver $56,600 was donated in the name of our moderators. ($100 per moderator, if you are curious.)\n\nI’m not the only one posting about the year that was. Christianity has a statistics-heavy post that follows the format of this post—it’s like a fractal! There’s an introspective question on The Workplace in 2017.  If you want more adventure in your life, you might look at some of the community’s favorite Science Fiction and Fantasy questions from the past year. (I’m still waiting for the fourth quarter post!) Classicists in the house might appreciate the best Latin(!) answers of the second half of 2017. If your language preferences tend toward the programming variety, take a look at the submissions to Code Review’s 2017 community challenge: design your own programming language. The highlight for 2017 on Bricks: it became a recognized LEGO User Group.  My colleague, Shog9,  looked at question closing statistics in 2017. Thanks to the the efforts of la gente hispana, Stack Overflow en Español became a fully graduated site.\nMeanwhile Stack Overflow employees keep busy with everything from semi-regular podcasts to reaching out to companies who are hiring programmers. Our data team spent much of 2017 digging up insights from our unique data about developers. They also introduced Stack Overflow Trends to facilitate your own research and released an improved salary calculator for programmers. After years of planning, the SRE team moved to HTTPS everywhere. In addition to the Stack Exchange app, we now have a Stack Overflow mobile app for Apple and Android phones. Finally,  Jess Pardue explained how remote work really works. \nI’m not going to spin it; 2017 was not a terrific year for Stack Exchange Inc. Remember the Documentation feature I was so excited about last year? We shut it down in August. It’s still a good idea and there’s a huge opportunity, but our real strength is user-curated questions and answers. Unfortunately, we also lost a number of outstanding colleagues. (It was strictly a business decision and we miss them tremendously.) So it’s more important than ever to focus on what we do best: enable our talented communities to answer the internet’s questions.",
        "url": "https://stackoverflow.blog/2018/01/31/stack-exchange-2017-review/"
    },
    {
        "title": "Take the 2018 Developer Survey",
        "content": "It’s that time of year again—the annual developer survey is now open! This survey marks the 8th year we’ve been asking the developer community for their thoughts on everything from programming languages to career preferences. This year, we added in new questions about artificial intelligence, ethics in coding, and more. \nAs in previous years, anonymized results of the survey will be made publicly available under the Open Database License. We encourage you to download and analyze the dataset yourself when it becomes available. Throughout the survey, certain answers you give will be treated as personally identifiable information, and therefore kept out of the anonymized results file. We’ll call out each of those in the survey with a note saying “This information will be kept private.” \n\nWe’ve made this year’s survey short (and by short we mean somewhat-freaking-long), but we’ve done our absolute best to be respectful of the time you’re giving by taking the survey. If you have any questions or feedback in general, we’d love to hear it.\n\nThe survey will be open for three weeks starting today, and will tentatively close on January 26th. Users who complete the survey will be awarded the Census badge across any SE communities they belong to.",
        "url": "https://stackoverflow.blog/2018/01/08/take-2018-developer-survey/"
    },
    {
        "title": "Stack Overflow Isn’t Very Welcoming. It’s Time for That to Change.",
        "content": "We <3 and believe in Stack Overflow. But sometimes, loving something means caring enough to admit that it has a problem.\nLet’s start with the painful truth:\n\nToo many people experience Stack Overflow¹ as a hostile or elitist place, especially newer coders, women, people of color, and others in marginalized groups. \nOur employees and community have cared about this for a long time, but we’ve struggled to talk about it publicly or to sufficiently prioritize it in recent years. And results matter more than intentions.\n\nNow, that’s not because most Stack Overflow contributors are hostile jerks. The majority of them are generous and kind. Sure, a few are…  just generous, I guess? But our active users regularly express their frustration that we haven’t done more to make outsiders feel more welcome. The real problem isn’t the community — it’s us:\nWe trained users to tell other users what they’re doing wrong, but we didn’t provide new folks with the necessary guidance to do it right. We failed to give our regular users decent tools to review content and easily find what they’re looking for. We sent mixed messages over the years about whether we’re a site for “experts” or for anyone who codes. \n\nYes, we really have a problem.\nBut how do we really know that too many developers experience Stack Overflow as an unwelcoming or hostile place? Well, the nice thing about problems that relate to how people feel is that finding the truth is easy. Feelings have no “technically correct.” They’re just what the feeler is telling you. When someone tells you how they feel,  you can pack up your magnifying glass and clue kit, cuz that’s the answer. You’re done. And a lot of devs feel like Stack Overflow is an intimidating, unwelcoming place. We know because they tell us.\nStack Overflow is intended to be an inclusive place where every programmer can participate. It was one of Joel and Jeff’s earliest decisions. But it’s built on mechanics and norms that push people away if they don’t know the ins-and-outs. Too often, someone comes here to ask a question, only to be told that they did it wrong. They get snarky or condescending comments for not explaining what they’ve tried (that didn’t work). They get an answer… but the answerer gets scolded for “encouraging ‘low-quality’ questions.” They get downvoted, but don’t know why, or called lazy for not speaking English fluently. Or sometimes, everything actually goes well, and they get an answer! So they thank the poster… only to be told that on Stack Overflow, “please” and “thank you” are considered noise. All these experiences add up to making Stack Overflow a very unwelcoming place for far too many.\n\nWe’ve struggled to put our money where our <3 was. \nCaring about this isn’t new to us. Initiatives like the Summer of Love, the closing overhaul, revising the “Be Nice” Policy, and our coaching experiment all came from our desire to build a place where everyone feels welcome. But we never felt comfortable acknowledging that we had a serious problem, and we under-resourced it. Badly. Here’s why we screwed that up:\nIt was hard to accept some of the (valid) criticism, especially the idea that women and people of color felt particularly unwelcome. There’s a weird paradox with bias. Those of us who have privilege, but care deeply about reducing bias should be uniquely positioned to help, but we struggle the hardest to recognize that we are (unintentionally) biased ourselves.² As it happens, making people feel left out is a deep personal fear of mine. (There is probably a seriously repressed playground kickball thing in my past somewhere.)  Ironically, that made it harder for me to accept the possibility that something I work on could make outsiders feel unwanted. So I focused on what we were proud of: We are one of the only large sites where it’s practically impossible to find a single slur – our community takes them down in minutes. We don’t tolerate our female users being called “sweetie” or getting hit on. But we weren’t listening. Many people, especially those in marginalized groups do feel less welcome. We know because they tell us.\nWe felt protective of our current users, because we know they come here to teach, and most of them are fighters for good most of the time. \nLike all companies, we have an infinite list of things to do, but limited resources. In recent years, inclusion efforts (and other public Q&A work) have consistently been “fairly important,  like… roughly #3 on our list of priorities?” Which meant they got allocated roughly zero resources.\n\nGetting to the <3 of the problem. (Here’s where we plan to start.)\nAs of last week, we’re prioritizing this and staffing it with talented employees from our Executive, Community, Data, Design, Research, and Engineering teams. We’re listening to our community and those sharing their experiences. I want to thank those of you who’ve been vocal about the need for improvement. It hurt to hear, but we needed to hear it. \nWe’ve started with user research, and we’re keeping an open mind to all ideas. There are opportunities to work on things like reviewing site copy for inclusive language. Maybe it’s time we re-visited things like our “no pleases or thank yous’” rule. (It serves a valuable purpose by keeping signal high, but also suggests that we just might be Zuckerbots who aren’t even trying very hard to pass as actual humans). In any case, here are some areas we’re planning to focus on first:\nLet’s shift  from “don’t be an asshole” to “be welcoming.” Many people don’t realize that we already have a code of conduct (cuz we gave it a funny name). Or that it already includes concepts like “belittling language is not okay” and “Be welcoming, be patient, … and don’t expect new users to know all the rules — they don’t.” But we need to show it to all users, and empower them to help us enforce it. In the longer term, I’d like us to aim for something closer to what Jon Skeet told me about his experience attending a pride parade (as a cis straight dude): “I wasn’t just tolerated; I was made to feel like the community was actually better because I was there.”\nLet’s do something about comments. Condescension and sarcasm have been reluctantly tolerated in comments for too long. We’ll research possible feature changes, but let’s start by working with the community and our community managers to start flagging and deleting unkind comments now.\nLet’s make it easier for new users to succeed. No, I’m not shifting the blame. We set them up for failure, and our power users have been asking us to help them for ages. We’re planning to test a new “beginner” ask page that breaks the question box into multiple fields – one for each of the key things answerers need to help:\n\n“What did you want to happen?” \n“What actually happened? (Include any error details)”\n“Paste the shortest block of code that reproduces the problem. (We’ll format it!)” \n“Describe what you’ve tried so far (including searches, etc.)”\n\nLet’s stop judging users for not knowing things. (We’re a Q&A site!) It makes me sad when someone get downvoted for posting a duplicate. We should better surface them in the posting flow, but it’s not reasonable to expect askers to find dupes consistently. Users aren’t “too lazy” to search; searching takes less work than posting. \nAnd little makes me sadder than comments on answers saying, “Don’t answer questions like this – it encourages them.” Now, some questions are off-topic. (I’m genuinely sorry, but we simply can’t explain how a glass pitcher can smash through a brick wall with no apparent injuries; we are a programming site.) But it’s totally cool to answer questions without giving a grilled poop sandwich about exactly what’s allowed. It’s fine to volunteer in one way without being expected to read and enforce every rule and meta discussion since forever.\nLet’s reject the false dichotomy between quality and kindness. Quality matters because it means posts can help more people. But a larger, more diverse community produces better artifacts, not worse ones. We need to stop justifying condescension with the pursuit of quality, and we need better tools and queues to help power users trying to keep quality high.\n\nWe still <3 and are proud of what we’ve done together.\nEvery day, tens of thousands of people on SO take a break from their workday to help a stranger on the internet. And millions of times a day, someone clears a hurdle and doesn’t give up on their project thanks to solutions donated here. I’m incredibly proud of the small part I’ve gotten to play in everything this community has achieved. Our users are truly some of the most generous people on the planet. But we can do better. Together, we can make the world’s largest technical helping community one with a culture we can all truly and consistently be proud of. The kind of place that is genuinely better because you are here.\nWe’re looking for volunteers to share their experiences in chat with us and help us prioritize what to work on first. Whether you’re an active user, or someone who isn’t comfortable participating, if you’d like to  help, please fill out this one-minute survey.\n\n  ¹ This post focuses on Stack Overflow, but most of it applies to the broader Stack Exchange network as well.\n² If you’re shaking your head thinking, “not me,” I’d encourage you to take these implicit bias tests, specifically the Race IAT and the Gender-Career IAT. If you’re like me, they’re going to hurt.",
        "url": "https://stackoverflow.blog/2018/04/26/stack-overflow-isnt-very-welcoming-its-time-for-that-to-change/"
    },
    {
        "title": "Updating Navigation for Stack Overflow, Enterprise, and Stack Exchange Sites",
        "content": "This post refers to “Channels”, a product which is now called “Teams.” This post is part of a series on how we’re making Channels, the thinking behind the product, and insight into the process. Read “How We’re Designing Channels” and “Why Channels” for more background info.\nIn his post, How We’re Designing Channels, Kurtis wrote that this project required a change to Stack Overflow’s information architecture. We created several prototype navigations, narrowed to two, and tested with a group of users. This brought us to the following design direction, with content navigation on the left side:\n\nWe’re confident that this design will serve Channels users, but what about the greater Stack Overflow, Stack Exchange communities, and Enterprise? Our design explorations were guided by the following questions: \n\nHow will the new information architecture support existing Stack Overflow users? How will it impact important workflows like reviewing posts or answering questions? \nHow will this scale to Stack Overflow Enterprise and the Stack Exchange network sites? How can people transition seamlessly between Stack Overflow and other sites without having to learn new patterns?\nWhat about people using smaller screen sizes? Adding a vertical left navigation increases the page width, and how will we support people across a range of screen sizes and devices?\nIs the new information architecture inclusive and accessible? How will this impact people using screen readers or with other accessibility needs? How can we leverage this moment of change to improve the site’s accessibility?\nHow will the new information architecture scale as the site grows and changes over time? \n\nIn this post, I’ll talk about our approach to answering these questions. First, though, I want to step back and explain why it’s important for us to be thinking about these needs simultaneously.\nBackground\nYou may remember that we updated the navigation design last year. Our approach was to focus on the already complex needs of Stack Overflow, and solve Enterprise and network site solutions soon after. \nThrough that project, we learned that – despite many similar or overlapping use cases – there were major differences that were not easy to resolve. As a result, it took us longer than expected to ship navigation to network sites, and we still haven’t updated Enterprise sites.\nThis means there’s been extended or unresolved fragmentation between Stack Overflow and our other sites. This is problematic because there’s a lot of overlap between people using Stack Overflow, Enterprise, and network sites. For example, about 70% of users joining network sites already have a Stack Overflow account. \nMore generally, fragmentation means that shipping basic improvements to Enterprise and network sites becomes increasingly costly as differences accumulate over time. \nThis time, we wanted to make sure that we were considering Enterprise and network site use cases early, as well as ensuring that basic improvements like accessibility and responsiveness can benefit our 150+ communities and Enterprise clients as quickly as possible.\nHow We’re Addressing These Needs\nWe started by broadly considering use cases across our product offerings: Stack Overflow, network sites, Enterprise, and soon – Channels. This approach helps us avoid fragmentation and allows improvements to flow quickly to all of our users. I’ll explore these use cases in further detail below. \nFirst, here’s a recap of the basic design solution, with content navigation on the left side:\n \n\nNext, I’ll layer in the principles and use cases that have guided our designs so far. \nPrinciple #1: Flexibility\nThe new information architecture had to be flexible enough to support a broad range of use cases and screen sizes, including:\n\nUser has joined Stack Overflow only \nUser has joined Stack Overflow and a private channel\nUser has joined Server Fault only (or a different network site) \nUser is viewing on a tablet or mobile\n\nLet’s see what the navigation looks like for each of these use cases. \nUser has joined Stack Overflow only: \n\nUser has joined Stack Overflow and a private channel:\n\nUser has joined Server Fault only (or a different network site) :\n\nUser is viewing on a tablet or mobile:\n\nPrinciple #2: Scalability\nThe new information architecture also needed to scale reasonably over time. People should be able to expect a coherent experience as the site grows and changes. Here are some hypothetical scenarios that we can use to approximate the use cases that the information architecture needs to consider: \n\nA new product offering that is a separate entity from Stack Overflow\nA new feature on Stack Overflow \n\nNext, let’s see what the navigation looks like for these hypothetical scenarios. \nA new product offering that is a separate entity from Stack Overflow:\n\nA new feature on Stack Overflow:\n\nPrinciple #3: Accessibility\nWe know that Stack Overflow and our other sites could better support people with differing abilities. That’s why the new information architecture also needed to support our effort to make Stack Overflow accessible to all. \nWe are learning from the Inclusive Design approach, and also piloting a collaboration with the University of Washington AccessComputing initiative to identify improvements that bring our sites closer to conformance with the W3C Web Content Accessibility Guidelines 2.0 Level AA. We are also interested in hearing additional recommendations from you, if you encounter barriers that WCAG AA doesn’t address. \nWhile all of these changes may not be ready on day one, we are taking this opportunity to improve access for all of our users.\nWhat We’ve Learned So Far\nIn December, we launched Channels Alpha and kicked off research with Enterprise and high-rep Stack Overflow users. \nWe asked questions about their day-to-day workflows on Stack Overflow, showed them mockups of the new information architecture, and discussed potential disruptions to their workflows. Overall, we learned that this change caused minimal impact to their workflows. Any concerns about the extra screen width this would introduce were alleviated with knowing that the site will become responsive. \nWe’ll also be testing with network site users in the upcoming months. \nNext Steps\nWe’ll be rolling out these changes in the near future. In the meantime, please look for future posts sharing our design, research, and product process for Channels. If you have any questions for the team or me, feel free to drop them in the comments below. Note that these designs are not final, and we’ll continue to iterate as we receive feedback. Let us know what you think.",
        "url": "https://stackoverflow.blog/2018/02/08/information-architecture-navigating-stack-overflow-enterprise-stack-exchange-sites/"
    },
    {
        "title": "Podcast #112 – Please Direct All Hate Mail to Jay Hanlon c/o Stack Overflow…",
        "content": "Welcome back to the Stack Overflow podcast episode #112 recorded Thursday, July 13th at Stack Overflow HQ in NYC. Today’s hosting duties fall to Jay Hanlon as Joel is still busy alphabetizing his socks. Joining him is newly minted CTO David Fullerton, Fog Creek Community Engineer and Star Wars scholar Jenn Schiffer, and can-totally-tell-the-difference-between-Moff-and-Mon-Mothma podcast producer Jess Pardue.\nOur sponsor today is CircleCI. Build Faster. Test More. Fail Less. CircleCI’s continuous integration and delivery platform helps engineering teams of all sizes do more. Help your development team work smarter, with features like SSH into builds, first-class Docker support, and super fast builds. All with support for Linux, Android, and macOS. Starting this week, CircleCI 2.0 is generally available and features Workflows, allowing teams to build faster and fully configure their build pipelines. To learn more, go to circleci.com/stackoverflow, sign up with GitHub or Bitbucket and start building for free!\nToday’s highlights::\n\nWe are honored to have special guest Sarah Clatterbuck share her Developer Story; from generating “random” numbers in middle school to studying applied design in college and then directing the Presentation Infrastructure teams at LinkedIn. She also works with high school CS classes and sits on the board of the Girl Scouts of Northern California in order to help develop girls’ early interest in STEM fields.\nJay gets quite indignant about Jess and Jenn’s lack of Star Wars recall.\nJenn rants about how bad voice recognition really is. Her Echo Dot is cowering in fear under her bed…\nDavid ‘s new oven is weirdly specific:\nIntroducing Stack Overflow Channels! Everything you love about Stack Overflow, in a Private space just for your team. Be one of the first to try it.\nIn the News: Is it ethical to automate your job and not tell your company? Also, Jenn is definitely an anarchist…\n\nThis week’s Constitution Question is brought to you by User Diederik Hattingh via Twitter where you can follow him as@Diederik_za: “In markdown, when adding to the middle of a numbered list, do you fix the subsequent numbers?” Answer with PRO if you must correct the numbers, or CON if you think “Why bother? The syntax will straighten itself out.” Chime in using #stackoverflowpodcast on twitter. The answer that makes us chuckle, whether on the winning or losing side, will be read on next week’s podcast and win a few SO stickers.\nThis week’s winner, for the first time ever, is also the amendment proposer! It’s not rigged, we promise.\n\nCON don't use their trash can, leave it on their desk. One mans trash is another mans treasure.\n— Sharshiel Borisute (@SharshiB) June 13, 2017\n\nThanks for listening! We’ll be back next week.\nLinks and socials:\n\nFor Sarah’s awesomeness: Glimmer, Ember, Women in Tech, GS of Northern California\nConnect with Sarah on LinkedIn and twitter: @girodchatterbox\nFollow Jenn Schiffer on Twitter @jennschiffer and stop by Glitch!\nThanks again CircleCI for sponsoring.\nBTW, there are so many Mon Mothra’s…",
        "url": "https://stackoverflow.blog/2017/07/17/podcast-112-please-direct-hate-mail-jay-hanlon-%e2%84%85-stack-overflow/"
    },
    {
        "title": "Podcast #114 – Every Conference Needs a Break-Dancing Greeter",
        "content": "NOTE: We will be on podcast hiatus for the month of August. Look for new episodes in September.\nWelcome to The Stack Overflow Podcast episode #114 recorded Thursday July 27, at Stack Overflow Headquarters in NYC. Your hosts today are Assistant to Cobra Commander (and less importantly VP of Stack Overflow) Jay Hanlon, CTO David Fullerton, News Editor Ilana Yitzaki, and Stack Overflow’s own “Bananager” Kevin Montrose. Our sponsor today is Stack Overflow Jobs. No spam. No fake job listings. Find the perfect job so that you can build something awesome.\nListen today for nuggets such as:\n\nSpecial guest Saron Yitbarek joins us with her amazingly interesting and insightful Developer Story. She started with a failed attempt at learning to code, but came back, eventually founding CodeNewbie, the most supportive community of programmers and people learning to code. She also produces the Codeland tech conference and hosts the CodeNewbie Podcast. On CodeNewbie users, “Little touches… have really helped make a community that enjoys really over-the-top positivity.” She also wore a t-shirt to her wedding. Not all heroes wear capes.\nKevin’s rant is all about… Kevin. “Why? Why everything?” \nDavid bought the new Kindle Voyage. Verdict: Meh, it ain’t worth it. Just get a Paperwhite.\nIntroducing the Stack Overflow Mentorship Research Project. Tell us what you think on Meta!\n\nThis week’s Constitution question comes from Twitter user @_tbirrell. “When commenting code, comments should be inline, instead of above the line.” Vote PRO if you think that comments should be inline, and CON if you think it can be above the line. Post your answer to twitter using the Hashtag #stackoverflowpodcast, with either PRO or CON and your explanation, short but deadly, like a smurf with a black belt in krav maga. The best explanation, whether on the winning side or the losing side, will be read on next week’s podcast and win a STACK OVERFLOW STICKER, courtesy of the us.\nLast week’s winner is longtime SO contributor @MonicaCellio! Thanks Monica, you get some stuff.\n\nEr what? CON.Bananas: 🍌🍌🍌Parens: ()One makes bread, the other makes LISP. Can't you tell the difference? #stackoverflowpodcast\n— Monica Cellio (@MonicaCellio) July 24, 2017\n\nThanks everyone for listening. We’ll be back in September!\nLinks!\n\nSaron’s Awesomeness:\n\nCodeland conference\nTwitter: @CodeNewbies\ncodenewbie.org \nCodeNewbie Podcast\nMost important: the amazing wedding video\n\n\nOMTR – Kindle Voyage vs. Paperwhite\nMentorship Meta post\nIn The News: Girl Scouts and STEM\nFrom Kevin’s new business card:",
        "url": "https://stackoverflow.blog/2017/07/31/podcast-114-every-conference-needs-break-dancing-greeter/"
    },
    {
        "title": "Making Remote Work: Behind the Scenes at Stack Overflow",
        "content": "The logistics of Stack Overflow’s remote-first philosophy\nBy now you’ve probably heard about Stack Overflow’s commitment to making remote work, well… work. If not, you can read about it here, here, and a whole page of links here. Seriously, we care about it a LOT. At Stack Overflow we want to hire the best person for the job, even if that person is in Salt Lake City, Utah; Berlin, Germany; or São Paulo, Brazil. Promoting remote work promotes diversity, and we are committed to improving both.\nHowever, this isn’t going to be another article about why we believe in remote work. I’m here to tell you about how we pull the whole thing off. I manage workplace operations for the company, and a huge part of that job is making sure that our 85+ remote employees have everything that they need to get their jobs done. So here are my tips for having a successful remote infrastructure:\nHave a dedicated remote person (like me!) to be the point person for remote needs.\nThis is definitely the most important piece of the remote puzzle. You need a person whose stated job is to make sure that remote employees have a specific person for questions, concerns, and problems. When we hire a new remote employee, I tell them that they can come to me with any type of question, and I will try my best to answer it, or at least point them in the right direction. \nI get aaaaaall kinds of questions and requests. For instance, I now know how to buy and ship Belgian beer to Poland for an employee that wasn’t able to attend a work event because of a surgery. Also FYI, Uruguay has very strict restrictions on voltage of household items, so getting a crank-lever standing desk to Montevideo was fun (read: not fun).\nThere also needs to be someone on the executive team (it’s better if there is more than one someone) consistently asking “What about the remotes?” When you have a new “x,” the execs should be thinking about how that impacts all employees, including remotes.\nHave your People and Finance Teams homed in on remote needs\nCompanies will encounter a wide range of odd legalities in dealing with remote employees, especially with international folks. Did you know that in Romania if someone is going to have a home office, they have to have it inspected by a fire marshal? And in the U.S. we have a rule called “prevailing wage determination” that requires some remote employees to post a paper notice in their home for at least 10 days. (I like to think they put it in a laundry room or over the toilet.) \nIt definitely helps to have an HR department that is certified in immigration and visa issues. At Stack Overflow we are lucky enough to have a lawyer on our People Team along with other trained HR counsels for employees to go to when these issues arise. The same goes for finance departments. The taxation alone is a handful with multiple states/countries. You need an entity for each state, which requires considerable forethought. You also have to file payrolls properly and that varies depending on location. No one ever accused the IRS of being simple!\nRemote first\nWe’ve already touched on this in the other blog posts, but it bears repeating: If one person in the meeting is remote, we’re all remote. If there are 5 people in a conference room and 2 people dialing in remotely, it is very easy for the folks in the meeting room to forget about the people dialed in. You can eliminate that problem by having everyone call in, if possible. After a while it is second nature to jump on a call instead of finding a room. Currently in the Stack Overflow NYC office it is really common to walk around and see two people on a hangout even though their offices are next to each other! (It is also possible that these people are just lazy…)\nTry to recreate office fun stuff in a remote capacity\nWe have regular “Bev Bashes” and holiday parties in the offices, but what about the remotes? How do you give them fun stuff even though they are scattered all over the world?\nFor starters, we have “Remote Bev Bashes” over Zoom every Friday. The “Bev Baron” for that week (nominated by the last Bev Baron) schedules a Zoom call and sets a theme. Employees grab a beverage of their choice and just chat. You can stay for just a few minutes to say hi, or you can be a part of the entire thing. \nAdditionally, each office has a pretty fancy Holiday party in December, so we of course invite any remotes that are near the offices. If they are too far away to attend, we give a $200 stipend so that they can have their own festivities, whether it’s a really nice night out with their partners or just a big dinner for family. We don’t care as long as the employee does something yummy with it.\nDon’t forget: If you make swag (t-shirts, hats, new socks etc) make sure that you send them to the remotes too. It may seem like a lot of work (believe me, with 87 remotes, it is a lot of shipping), but it is definitely worth it!\nBring them all together\nOnce a year, we bring all of our remote employees together for a week for some much needed face-time. It’s a different city each time, and there are usually 3 days of Executive Keynotes, Tiny Talks, and many many games of Werewolf. We talk about the state of the company and new projects and teams, but we vow not to make any huge decisions or business altering plans. The focus is on camaraderie, not profits. We look forward to it all year, and it’s definitely a blast. No pressure on the person that has to plan it, right? Read: That’s also me.\nWe also have smaller mini-meetups for teams to come together when needed, but those are coordinated by the teams themselves and centered around one of our three offices.\nMake their home workspaces as awesome as the offices\nWhen a new remote employee is hired, I contact them for their furniture choices. They get their choice of the exact same desks and chairs that we have in the offices, free of charge. We want them to be as comfortable as possible, and that means if they want to stand instead of sit, no problem. Our IT dept sets them up with all of their tech, and I set them up with everything else. \nNeed a filing cabinet? Cool. You want a different type of desk that is bright pink and sings? Hey, it’s your house. We re-create the in-office set-ups as much as possible so that our remote employees never feel less valued than everyone else.\nWant to go remote yourself?\nLove remote work or the idea of it? Check out our Live + Work Anywhere job listings on Stack Overflow Jobs.",
        "url": "https://stackoverflow.blog/2017/09/29/making-remote-work-behind-scenes/"
    },
    {
        "title": "11 candidatos para la carrera de moderadores. ¿Ahora qué?",
        "content": "Me quedo impresionado por el apoyo y el interés que se ha visto en esta elección de los moderadores de SOes.  Se ve que la comunidad entiende la importancia que estos individuales elegidos tendrán en el sitio.  Para seguir explicando el proceso, les presento lo siguiente.\nEl cuestionario, ¿es realmente necesario?\nAl escribir este blog, había todavía uno que otro candidato que no había terminado su cuestionario y con solamente media hora hasta que esta etapa cerrara. ¡Que locuras!  Se planto la pregunta de si el cuestionario era un requisito para ser candidato a la carrera y muchos dijeron que lo deberíamos hacer así. La verdad es que estoy totalmente de acuerdo con esto pero no lo podemos hacer porque el sistema en donde las votaciones se cuentan no está en el mismo lugar en donde se someten los cuestionarios. El proceso de las elecciones se ha automatizado y por eso tenemos esas limitaciones.\nMí opinion personal es que si alguien no entrega su cuestionario, eso me hace dudar de las habilidades de seguir las reglas y de la seriedad de ese candidato con respecto a su entrega ha este proceso.  No tomaría en serio a esa persona y en realidad, no votaría por ella.\nAfortunadamente, esta no es nuestra situación ya que tenemos a 11 candidatos y a 11 cuestionarios. Ahora nos toca leer y escoger a los mejores.\nLas primarias y la elección final\nHabíamos dicho que si hubiesen más de 10 candidatos, tendríamos que entrar a la etapa primaria para escoger a los Top 10 para la elección final.  Esto es exactamente lo que sucedió, solamente que hubiera hecho más sentido el tener a unos 20 o tal vez unos 15 candidatos pero no…..tenemos a 11.  Suena un poco raro en tener que entrar a la etapa de las primarias por 1 solo candidato pero, ¿qué les cuento? Así esta el sistema diseñado, con solo 10 lugares para los candidatos finales.\nLo que sigue es esto:\n\nTenemos 4 días para escoger a los 10 candidatos que cumplan con lo necesario para moderar nuestra comunidad.\nAl terminar esos 4 días el sistema pondrá a los Top 10 en la elección final y empezará la elección oficial. Tendremos otros 4 días para este paso.\nLos 3 ganadores se anunciarán el primero de agosto.\n\nTodos estos pasos se describen en nuestra página oficial de elecciones. Pueden encontrar cada paso al navegar cada una de estas pestañas:\n\n\nEstamos muy cerca de tener a los moderadores oficiales para nuestra comunidad y les pido que sigan votando para sus candidatos favoritos.  No dejen que se les pase esta oportunidad de participar en esta fase tan importante de nuestro sito.\n¡Adelante!\nÚltimas noticias\nParece que uno de nuestros 11 candidatos a revocado su postulación.  Esto nos lleva a tener solamente 10 candidatos cosa que nos hace pensar en poder entrarle a la votación final.  Pero, no vamos a poder porque existe la oportunidad (aunque sea muy pequeña) de que ese candidato revoque la revocación y decida entrarle a la carrera de nuevo.  Lo se, es un poco frustrante pero bueno, así esta diseñado el sistema.\nSeguiremos con las primarias hasta que se terminen los 4 días necesarios para esta fase. Al terminar esos días estaremos listos para votar por nuestros 3 moderadores oficiales.  ¡Seguimos en marcha y con puntualidad!",
        "url": "https://stackoverflow.blog/2017/07/24/11-candidatos-para-la-carrera-de-moderadores-ahora-que/"
    },
    {
        "title": "Podcast #113 – Frustrating Miracles",
        "content": "Welcome to the Stack Overflow podcast recorded Thursday July 20 at Stack Overflow Headquearters in NYC. Your hosts today are podcast regulars Jay Hanlon, David Fullerton, and Ilana Yitzhaki, plus the quite irregular Matt Sherman (Stack Overflow Engineering Manager extraordinaire). This week’s episode is brought to you by Game of Thrones Season 5 Spoilers as well as Stack Overflow Channels. Everything you love about Stack Overflow, in a private space just for your team. Sign up today at stackoverflow.com/channels to learn more or get your team in line for the beta.\nToday’s highlights:\n\nFor this week’s Developer Story, we are proud to have Linux Academy Founder and CEO Anthony James chatting about his circuitous route from authoring the Pinehead tutorial blog as a teenager, then jumping to creativity-sapping accounting and finance roles (we all know how much Jay loves Finance) and then to his current passion “changing lives through interactive training” with Linux Academy.\nMatt’s Rant™ is about everything and nothing; basically “Computers shouldn’t work…”\nOMTR – David has a new phone with a *gasp* analog silence button.\nWe play Fake News: David Fullerton edition. Did we mention that he lives in Florida now?\nGoogle Glass is… back?\n\nNew Constitution Question, this week from our very own Jason Punyon (@JasonPunyon): When reading code, would you pronounce the parentheses in a function call as “bananas”? PRO = Yes, I would call them bananas; CON = No, Jason Punyon is bananas. Post your answer to twitter using the Hashtag #stackoverflowpodcast, with either PRO or CON and your explanation, short but insightful. The best explanation, whether on the winning side or the losing side, will be read on next week’s podcast and win a Stack Overflow Sticker, courtesy of us!\nLast week’s winner:\n\n1. Add your list item2. Fix all the other items3. Vote PRO4. Realize that you’re a good person#stackoverflowpodcast\n— Ari Porad (@ariporad) July 17, 2017\n\nThanks Ari for participating, and thank you all for listening. See you next week!\nClicky clicky:\n\nLinux Academy‘s brand new platform cloudassessments.com\nFollow Linux Academy on Twitter and Facebook (and check out our Linux job postings here!)\nSign up for Stack Overflow Channels! Reduce single-source-of-information bottlenecks by sharing any dev’s knowledge with every dev on your team.\nThe OnePlus 5\nIn the News: Google Glass",
        "url": "https://stackoverflow.blog/2017/07/24/podcast-113-frustrating-miracles/"
    },
    {
        "title": "El estado de Stack Overflow en español: Julio 2017",
        "content": "Empieza el mes de agosto y esto quiere decir que podemos compartir algunos datos del mes pasado para ver cómo nos fue. Les presento lo siguiente.\nLas 5 preguntas más visitadas del mes:\n\n¿Qué significa un ampersand en la declaración de una función? – 339 visitas\n¿Cómo solucionar errores en los enlaces? – 252 visitas\nVerificar número mayor a 50 millones – 244 visitas\n¿Cómo hacer un “hola mundo” en un paquete para ATOM? – 240 visitas\nUtilizar JNA para acceder a una funcion de una DLL (C#) desde Java? – 186 respuestas\n\nLos usuarios que hicieran la más grande contribución de preguntas del mes:\n\nEduardo Sebastian – 50 preguntas\npepito – 40 preguntas\nMNibor – 23 preguntas\nEduard – 23 preguntas\nAER – 22 preguntas\n\nLa pregunta más compartida del mes:\n\nValidar un email en JavaScript – compartida 74 veces",
        "url": "https://stackoverflow.blog/2017/08/07/el-estado-de-stack-overflow-en-espanol-julio-2017/"
    },
    {
        "title": "How Much Do Developers Earn? Find Out with the Stack Overflow Salary Calculator",
        "content": "Today, we launched the Stack Overflow Salary Calculator, a tool that allows developers and employers to find typical salaries based on experience level, location, specific technologies, and education.\nWe did this because we believe developers should be empowered with more information around job searches, careers, and salary. In fact, we know that developers want more salary information to make better choices about their careers; we have seen that ads for Stack Overflow Jobs that include salary information get 75% more clicks than ads without salary information.\nThis salary calculator is based on the comprehensive data from the Stack Overflow Developer Survey.\nThe inputs to our salary calculator are your\n\nlocation,\neducation,\nyears of professional coding experience,\nwhat kind of developer you are, and\nthe technologies you use professionally.\n\nThe reason we built the calculator with these inputs is that we found these specific characteristics to be most predictive of a developer’s salary, tabs or spaces notwithstanding. There are also more subjective ways that coders are evaluated and compensated. We at Stack Overflow have written publicly about how that happens here but we don’t take that kind of skills assessment into account in this current model.\nGeography\nOne of the biggest factors in how much a developer is paid is where she or he lives and works.\n\nFor our initial release of this calculator, we are reporting developer salaries in the United States, Canada, the United Kingdom, France, and Germany. These are countries that are important both for the Stack Overflow community at large and Stack Overflow Jobs in particular. We know there are other countries, such as India, where there are huge numbers of professional developers who contribute both to the Stack Overflow community and technology in the world in general; we are exploring the possibilities of expanding our calculator to more countries like these.\nEven within a given country, there are metro areas where developers make more than the national average. In the United States, for example, our survey results indicate that developers in San Francisco and Seattle have the highest salaries. (They have high housing prices to go along with those high salaries, but that’s beyond the scope of our salary calculator.)\nWe did not specifically ask about city or metro area on the 2017 survey, but we used IP addresses to geolocate survey respondents and delve into city-to-city differences. This is personally identifying information and therefore not available in the public release of the 2017 survey. Due to our statistical constraints, we only assigned separate predictions to cities that meet two conditions:\n\nThere were many developers who responded there.\nDeveloper salaries there are unusually extreme compared to the national average.\n\nWe are committed to improving the accuracy and granularity of this calculator. You can help us improve the calculator by confidentially sharing your salary with us in the calculator. We will use your salary information in modeling, but your salary is 100% private and will never appear on your profile or be shared with employers.\nWhich types of developers make more?\nAnother important factor in how much developers are paid is what kind of specific work they do and what technologies they work with.\n\nThis plot shows how salary depends on developer role or type, but specific technologies also affect salary. Staying current with high-demand technologies can have a big impact on salary. For example, this year, we see a significant increase in salary for developers who tell us they use React.js or AWS in their professional lives. The flip side here is that some technologies are used so broadly that they do not increase or decrease salary significantly. For example, so many developers use JavaScript that identifying yourself as a JavaScript developer isn’t a significant predictor of salary up or down.\nBuilding a model\nThe kind of model we built to predict salaries for the calculator uses multiple linear regression. The salaries were modeled on a log scale, because we found the salary distributions were log-normal (as such distributions often are) with a long tail of very high salaries.\nIn this salary calculator, we report a predicted salary for the location, education, experience, and other information you enter. We also report a 50% prediction interval. The specific statistical meaning of this interval is that we expect 50% of people with the same characteristics as you to have salaries within that range; it spans the 25th to 75th percentiles. The interval is just as important as the prediction itself (the 50th percentile), because it gives you an understanding of what the range of expected salaries could be.\nAnother characteristic of the model that can help you understand its predictions are the model’s residuals, the differences between the predicted salaries and the known salaries for the dataset we used for modeling. Let’s look at these for the countries and individual cities that are supported in this initial release of our calculator.\n\nThe residuals for the model look pretty good. You might notice that the shape of the residuals for the United States isn’t the same as the other countries; there is less variation in the residuals at high salary than at low salary. Another way to say this is that the variance of the residuals isn’t constant. This is called heteroscedasticity (say that three times fast!) and means that our dataset doesn’t quite meet the underlying assumptions of our model. That’s modeling with real-world, messy data for you! We still feel comfortable with the results of our statistical modeling and the prediction intervals that we are reporting in the calculator.\nThis plot shows residuals and fitted salaries on a log scale, but salaries in the calculator itself are reported in natural units and the appropriate local currency for each user.\nYour turn\nCheck out the Stack Overflow Salary Calculator and learn more about what developers are earning! As a developer, you can estimate the range of potential salaries for your own skills and background, add your own salary to make the calculator better, and even see specific recommended jobs relevant for you. As an employer, you can learn more about industry salary ranges and the competitive marketplace for developers’ skills.\nQuestions? Comments? Head over to Meta now.",
        "url": "https://stackoverflow.blog/2017/09/19/much-developers-earn-find-stack-overflow-salary-calculator/"
    },
    {
        "title": "¡Felicidades a nuestros 3 moderadores oficiales!",
        "content": "Es realmente increíble para mi el poder ver a este sitio lanzado, graduado, y ahora con sus moderadores. Hemos esperado desde el 2013 para tener nuestra comunidad y ahora aquí estamos, listos para continuar con mucha energía y entusiasmo.\nMe da un gran placer de poder felicitar a los ganadores de las elecciones, nuestros nuevos moderadores del sitio.  Les presento a:\n\nAlvaroMontoro\nJorgeSys\nlois6b\n\nEllos tendrán el honor de representar a nuestra comunidad y de ayudar a mantener el orden y la alta calidad de información que esperamos de nuestra gente. Ellos trabajarán muy cerca de mi y juntos ayudaremos a seguir mejorando lo existente.  Por favor denles la bienvenida a estos moderadores los cuales fueron escogidos por ustedes.\nLes dejo este enlace para que vean los resultados con más detalle. ¡Espero y lo disfruten! Con esto también me gustaría agradecerles a los otros candidatos que también decidieron entrarle a la carrera.  Ellos representan el interés de nuestra gente en seguir levantando el nombre de nuestra comunidad al querer ser parte de este equipo de moderadores.  Los respeto mucho y de nuevo les doy las gracias por su valentía y su deseo por ayudarnos a todos. Ellos son:\n\nToledano\nCarlos Muñoz\nfredyfx\ngbianchi\nIvan Botero\nPaul Vargas\nArtEze\nJoel Ibaceta\n\n¡Felicidades a los tres ganadores! Muy pronto los contactaré para juntarnos y discutir los siguientes pasos pero por ahora, disfruten su nuevo titulo.\n\nQuiero también darles las gracias a Luiggi Mendoza y a Miquel Coll quienes fueron nuestros moderadores desde casi el principio de esta jornada.  Ellos nos ayudaron tremendamente y más Luiggi siendo que por una temporada, él estuvo moderando el sitio solo.\nMiquel, gracias por tu ayuda y aunque no te hemos visto hace ya unos meses, esperamos que sigas bien y que nos puedas visitar lo más pronto posible.\nLuiggi, gracias por la ayuda que nos diste y el tiempo que tomaste para participar como un usuario y como moderador de esta comunidad.  Te aprecio las ganas con las que vigilaste las colas de reportes y los mensajes de la comunidad.  Te comportaste como todo un líder.",
        "url": "https://stackoverflow.blog/2017/08/01/felicidades-nuestros-3-moderadores-oficiales/"
    },
    {
        "title": "How You Can Use the New Stack Overflow Bot from Microsoft",
        "content": "As Joel often says, “developers are writing the script for the future,” and that is definitely the case when it comes to AI. The knowledge shared on Stack Overflow includes an ever-growing pool on AI and related topics such as machine learning, natural language processing and deep learning. From C to Lisp to Java to Python, professional developers and those learning the craft are eager to learn, share and build their careers around this important programming field.\nSo when Microsoft showed us how they were bringing AI to every developer through their platforms and tools, and asked if they could partner with us to create an AI driven experience for developers to use and learn with, we of course said yes.\nThe first step in this is Microsoft’s Stack Overflow Bot, available at https://aka.ms/stackoverflow-bot-sample, and powered by Microsoft AI. We hope developers will be inspired to use the bot’s sample code to create innovative AI experiences for Stack Overflow and share it with the community: You can play with the sample code on Github.\nWe’re passionate about creating a place for developers to engage and enable one another to drive transformative change in society. Supporting knowledge sharing and use of AI on the Stack Overflow platform will bring more opportunities for developers like you to do so, and we look forward to seeing what you build with it.\nAbout Microsoft’s AI platform:\nThe Microsoft AI platform provides productive and powerful tools, like Bot Framework, Cognitive Services, Cognitive Toolkit, Azure Machine Learning, and many more tools to allow developers to quickly infuse AI into their existing applications and solutions, and to create new intelligent experiences for their users. Powered by the robust capabilities of Azure, the Microsoft AI platform allows developers the openness and flexibility to choose the technology and deep learning framework suited for their scenario and skills.\nTo learn more about the platform and to see a demo of Microsoft’s Stack Overflow Bot, watch the livestream today (Monday, September 25) at 11:15am PT/2:15pm ET, or see the video afterwards on Microsoft’s Channel 9.",
        "url": "https://stackoverflow.blog/2017/09/25/can-use-new-stack-overflow-bot-microsoft/"
    },
    {
        "title": "El estado de Stack Overflow en español: Junio 2017",
        "content": "Llegan los números interesantes del sitio para el mes de junio y esta vez vemos el sitio Meta.  ¡Espero y encuentren lo siguiente interesante!\nLas 5 preguntas más contestadas del mes:\n\n¿Es válido realizar preguntas sin mostrar esfuerzo si no es para poner una respuesta propia al mismo tiempo? – 3 respuestas\nBuscar todas las preguntas/respuestas que he publicado en la red de Stack Exchange – 3 respuestas\nDeshabilitar cierre de preguntas recientes – 3 respuestas\n¿Qué ocurre con la pregunta “Manejar conexiones a bases de datos MySQL mediante PDO: principios básicos”? – 3 respuestas\n¿Por qué Meta Stack Overflow tiene una opción para agregar código? – 2 respuestas\n\nLos usuarios que hicieran la más grande contribución de preguntas del mes:\n\ngilberto quintero – 9 preguntas\nRubén – 8 preguntas\nMariano – 5 preguntas\nfedorqui – 4 preguntas\nAlvaro Montoro – 3 preguntas\n\nLos usuarios que tuvieron más respuestas aceptadas del mes:\n\nMariano – 8 respuestas aceptadas\nfedorqui – 4 respuestas aceptadas\nRubén – 4 respuestas aceptadas\nJuan M – 3 respuestas aceptadas\nLuiggi Mendoza – 2 respuestas aceptadas",
        "url": "https://stackoverflow.blog/2017/07/21/el-estado-de-stack-overflow-en-espanol-junio-2017/"
    },
    {
        "title": "Podcast #111 – SRE: Occasionally Maintaining Infrastructure That You Hate",
        "content": "Welcome to a very special episode of The Stack Overflow Podcast recorded Thursday, June 8 at Stack Overflow HQ in NYC. Why is this a very special episode, you ask? It’s all about Site Reliability Engineers (SRE). Joel and Jay are away (slackers) so David is running the show along with Ilana and 3 members of our very own SRE team. Tom Limoncelli, Mark Henderson, and Jason Harvey are here to discuss how we build and maintain Stack Overflow and the Stack Exchange network.\nSo much great stuff in this episode:\n\nTom’s rants are much calmer than Joel’s, but just as infuriating. Stop hiding buttons, Google!\nAlways tip your bartender and use a “USB condom“.\nTom and David are fascinated by our Ping Pong Buddy, for some reason.\nWe’re still waiting for Tom’s protocol droid. I, for one, welcome our new robot overlords.\nDifferences between Stack Overflow and other SRE teams. *cough, we’re NOT in the cloud, cough*\nSpecial SRE edition of Failure is Not an Option. (Apparently Mark is a master criminal. We’re not sure that he moved out of Australia voluntarily…)\nIn the News: How not to react when someone makes a mistake.\nOh, and btw, the SRE team is hiring!\n\nAs you know we are preparing a Constitution for Stack Overflow. This week’s question comes from listener Kase (@kasey_orourke1): Is it okay to throw things in other people’s trash cans when walking down a row of cubicles? Post to twitter #stackoverflowpodcast with PRO if you should be able to use the trash can with no stink-eyes from coworkers, and CON if you think you should keep your Doritos bags out of other people’s bins. Wittiest answer will win Stack Podcast stickers!\nLast week’s winner, for the question “Pro or Con, If I say ‘June 1st at midnight,’ am I referring to the morning of June 1st or the evening?” is @ariporad. \n\nPRO: at midnight on Jan 1st 0000 it was officially decided that the last second of the day is 11:59:59: https://t.co/2BehraIjcg\n— Ari Porad (@ariporad) May 22, 2017\n\nCongrats Ari! You win things! Watch for a Twitter DM from Ilana.\nThanks for listening! We’ll be back with new episodes in July. Until then you can catch up on our back catalog HERE.\nLinks for the lazy:\n\nJoel on Software post referenced in Tom’s rant. Short and to the point.\nWeb Pages That Suck is still a thing, albeit outdated (2015).\nOMTR – Otterbox uniVERSE and Resurgence battery cases.\nDid we mention that we’re hiring!\nBuy Tom’s Book: The Practice of System and Network Administration: Vol 1 and Vol 2\nFrom the News: via Reddit – First Day Database Destruction. Who’s fault was it, really?",
        "url": "https://stackoverflow.blog/2017/06/12/podcast-111-sre-occasionally-maintaining-infrastructure-hate/"
    },
    {
        "title": "Why Channels?",
        "content": "This post refers to “Channels”, a product which is now called “Teams.” As we continue to work on Channels, we wanted to share with you our vision, the thinking behind the product and its intricacies, and insight into the process behind developing it. Not all product problems have been solved, and we hope that we can take you along for the journey. This post is the first in a series on how we’re making Channels.\nA year and a half ago, we launched Stack Overflow Enterprise to help large organizations share internal knowledge in private, stand-alone communities. It addressed several frustrations that large companies face: manual upkeep of knowledge bases, single points of failure, inefficient employee onboarding, and overall, quite simply, wasted time. And for larger companies, it works incredibly well; the feedback we’ve gotten exceeded even our expectations. Giving developers a place to discuss proprietary information in a system they were already comfortable with proved extremely useful to our customers.\nBecause Enterprise is designed to be a self-sustaining Stack Overflow community, it works best when there are lots of people (roughly 500 technical members seems to be the magic number). However, developers on smaller teams also have problems getting answers to questions they can’t ask on public Stack Overflow. That’s why we decided to build a product specifically designed for technical teams that aren’t big enough to support a standalone community.\nUnderstanding the problem\nWhen we started developing Channels in earnest, we learned a lot more about the problems that developers are facing when sharing and maintaining internal knowledge.\nFor example, when developers need to ask their teammates questions, they tend to default to the tools that they’re already using daily: namely, chat and email. But those tools have their own problems. Chat is ephemeral and tough to search, and email is inherently limited to the people included or copied in. Both tools put a lot of strain on the few developers at a company who know the answer to a given question, and neither method excels at storage and recall.\nTools like wikis or documentation are useful, but they require a lot of upkeep, and developers aren’t necessarily visiting them on a daily basis. We heard from many people that the pain of managing their wikis and docs left them stale and outdated. More often than not, knowledge is locked up in the minds of a few individuals who find themselves repeating answers over and over every time a problem crops up.\nAs we learned more and more about the problems that developers have with knowledge management, we became more excited about Channels. Most developers are already visiting Stack Overflow on a regular basis, so including internal knowledge management feels like a natural extension of our existing product, and means they don’t have to add a new destination to their workflow. Its searchability resolves any issues with ephemerality, and its ad-hoc nature eliminates the heavy upkeep of formal documentation and wikis.\nHow Channels fits into our business\nWhile solving internal knowledge sharing problems is the primary focus of Channels, it also fits in really well with our broader business objectives: \n\nBe the best technical Q&A site – Channels plays to our strengths. Technical Q&A is our specialty, and extending it to internal knowledge sharing is a natural extension of what we do today.\nHelp developers in new ways – Not all problems are public ones, and not all code can be posted online. Channels gives developers new ways to solve their problems without leaving the site they already know and love.\nMake money – This one’s probably obvious, but as a business, we have to make money! Channels will offer a paid service that we think many companies will be excited to buy.\n\nWhat the Channels solution will be\nOnce we understood the user problems we were solving for and identified how they relate to our business objectives, we set out to determine what the fundamental pillars of the product itself would consist of. There are three key tenets of the Channels product:\n\nExists right on Stack Overflow – Channels will bring all of your knowledge sharing into one place. Whether you’re seeking a solution to a problem with a common framework or debugging an internal system, you can get it done on stackoverflow.com.\nPrivate & secure space for your team – Security is our top priority (make sure to bother Nick Craver about writing that post). Your team will be able to interact with their Channel in a secure and isolated space within the public site, where internal knowledge is completely walled off from the broader community.\nDeep integrations & notifications – Small communities require additional effort to get the right questions in front of the right person. Channels will work with the existing tools at your disposal. We plan to launch with Slack integration, an API to connect Channels to your own tools, and updated subscription options to stay up to date with the most recent changes.\n\nWhat’s next?\nThis December we’re launching the Channels alpha, where we’ll be testing an early version with a small group of companies. We plan to use this time to learn a whole lot and make sure we’re building the right product the right way.\nBy early Spring we hope to be moving into a public Beta, where organizations can create their own Channels and start using Stack Overflow to collaborate in a new way.\nIn the meantime, we invite you to provide feedback or become part of our alpha and beta group as we test and grow our Channels product. If you have any questions for the team or me, feel free to drop them in the comments or ask a question about Channels on Meta.",
        "url": "https://stackoverflow.blog/2017/11/09/why-channels/"
    },
    {
        "title": "How Stack Overflow Flipped the Switch on HTTPS",
        "content": "As of today, Stack Overflow now deploys HTTPS by default on StackOverflow.com — as well as the hundreds of Q&A communities that make up our Stack Exchange network. We now redirect all traffic to https://, and Google links will change over the next few weeks.\nSounds simple, right?\nBut getting to this point has taken years of work. Four years, to be exact.\nNick Craver, Stack Overflow architecture lead, documents this journey on his personal blog in the post, HTTPS on Stack Overflow: The End of a Long Road. He offers a detailed, comprehensive look at the technical issues that make Stack Overflow’s rollout unique, as well as the steps we took to solve them.\nNick says, “While Stack Overflow is not unique in the problems we faced along the way, the combination of problems is fairly rare. I hope you find some details of our trials, tribulations, mistakes, victories, and even some open source projects that resulted along the way to be helpful.”\n>> Read Nick’s post",
        "url": "https://stackoverflow.blog/2017/05/22/stack-overflow-flipped-switch-https/"
    },
    {
        "title": "A Dive Into Stack Overflow Jobs Search",
        "content": "About two years ago, a significant event happened at Stack Overflow: a new system, named Providence, was released. Providence would allow us to tell which technologies a visitor is interested in, and measure the “fitness” between a visitor and a job. The release of Providence marked a stepping stone in Stack Overflow’s continuous effort to be “smarter” and invest in data science, and it was only the beginning.\nAurélien Gasser, a developer on the Stack Overflow Jobs team, has detailed the long road towards building the greatest developer job search tool on the internet in his Medium post, A Dive Into Stack Overflow Jobs. It’s a deep-dive into the technology, tools, and experiments utilized by the Jobs team in search of the secret sauce that would match you with your perfect job, every time.\n“As a developer on the Jobs team, I started working on using this new power to help you find a new, better job. My adventures in doing so is what this blog post will (mostly) be about.”\n>> Read Aurélien’s post\nWhether you’re searching for a role as a C++ developer, Ruby on rails programmer, or Salesforce administrator, we have listings for you.",
        "url": "https://stackoverflow.blog/2017/05/24/dive-stack-overflow-jobs-search/"
    },
    {
        "title": "El estado de Stack Overflow en español: Mayo 2017",
        "content": "Llego la hora de compartir unos numeritos con ustedes sobre el sitio. Tenemos una buena discusión sobre otras estadísticas que pueden discutir aquí.  Este aporte es para darles un vistazo a lo que los usuarios han realizado en el mes de mayo.\n¡Espero y lo disfruten!\nLos usuarios que ganaron 3 o más medallas de oro o plata este mes:\n\nPaperBirdMaster – 4 medallas\nDev. Joel – 3 medallas\nfwBasic – 3 medallas\nFlxtr – 3 medallas\nRubén – 3 medallas\nJorge Arturo Juarez – 3 medallas\n\nLos usuarios que hicieron la contribución más grande de preguntas:\n\nomaza1990 – 42 preguntas\nEduardo Méndez – 36 preguntas\nEduardo Sebastian – 36 preguntas\nWebserveis – 25 preguntas\nUserNameYo – 24 preguntas\n\nLos 3 preguntas más vistas del mes :\n\n\nNo me funciona netflix – vista 1485 veces (¡interesante que esta haya sido la más vista!)\n\nSII(Suministro Inmediato de Información) Webservice en Facturas Recibidas – vista 381 veces\n¿Cuál es la diferencia entre echo, print, print_r, var_dump y var_export en PHP? – vista 307 veces",
        "url": "https://stackoverflow.blog/2017/06/05/el-estado-de-stack-overflow-en-espanol-mayo-2017/"
    },
    {
        "title": "Download Stack Overflow’s 2017 Developer Survey Data",
        "content": "Starting today, you can download the raw data from Stack Overflow’s 2017 Developer Survey, which received more than 64,000 responses from developers around the world. (The data file includes the 51,392 responses we considered to be sufficiently complete for publication.) You can download previous years’ results as well, from 2011 to 2016.\nWe’re always excited to share our insights about developers from the survey — such as the finding that developers who use spaces make more money than those who use tabs — and we’re eager (and curious) to see what you come up with in your own analysis. \nUsing the raw data, you’ll be able to answer questions about developers’ careers, how they learn, which tools they’re using, and what they want.\nWant more data to play with? If you want to see data related to our Stack Exchange sites, check out the Stack Exchange Data Explorer, and if you want to see how different technologies have grown and declined over time, head to Stack Overflow Trends. You can also compare our data with other sets on Google Big Query.\nIf you find something particularly interesting in your analysis of our data, let us know on Meta using the [survey-2017] tag. If you use it in an academic paper, we’d love to add it to our collection.\nHappy data diving!",
        "url": "https://stackoverflow.blog/2017/06/15/download-stack-overflows-2017-developer-survey-data/"
    },
    {
        "title": "Las celebraciones de nuestra graduación – un resumen.",
        "content": "Ha sido un mes y medio completamente feroz. La graduación de nuestro sitio nos ha causado mucha felicidad y hemos podido celebrar en Madrid y en la Cuidad de México.  Hemos tenido también la oportunidad de poder conocer a varios de nuestros usuarios en persona, cosa que para nosotros es un gran placer.  El poder visitar a estas ciudades para representar a Stack Overflow en español ha sido una experiencia que no se olvidará. Lo siguiente es un breve resumen de estos viajes recientes.\nMadrid \nLlena de gente innovadora y dedicada a su profesión, los muchachos de IronHack me presentaron sus oficinas en Madrid donde pude conocer más sobre su programa y de su intensidad al entrenar a gente interesada en el desarrollo y el diseño web.  El espacio que ocupan se localiza en la Plaza Matadero, un lugar histórico en donde en algún tiempo se llenaba de carniceros y gente que buscaba buenos trozos de carne. Ahora, el lugar acoge a varias empresas cuyo énfasis es la tecnología y el arte.\n\nEs realmente un lugar bello con edificios construidos de ladrillo y contiene espacios al aire libre para todo tipo de reuniones o eventos.  Mi primera impresión fue buena y solamente subió de intensidad al conocer más y más a la gente que acude allí para aprender y para trabajar.\n\nLas oficinas de IronHack están de lujo, a todo dar, o molonas – dependiendo de donde vivas. Es un espacio moderno, con aulas de paredes de vidrio entero y madera natural que decora las gradas y forma acentos de elegancia.  Al empezar el evento, la gente que había llegado trajo su entusiasmo y curiosidad y pudimos empezar a tiempo y con mucha energía.\n\nLos temas de las platicas fueron sobre cómo se construyo la comunidad de Stack Overflow en español, cómo conseguir trabajo en Stack Overflow, y un tiempo de Q&A con tres alumni de IronHack.  Fuimos llenos de información y experiencias por más de dos horas y al terminar, gozamos de unas buenas pizzas y cervezas. Nuestros anfitriones se comportaron con todo respeto, llenos de entusiasmo, y amabilidad lo cual me dejo sin palabras. Después, se regalaron las camisetas y otros artículos divertidos a la gente.\n\nSe que no fue un teatro solamente para impresionarnos, ellos así son con sus alumnos y con otros invitados que llegan a presentar en sus oficinas.  Fue de los más fácil el hacernos amigos y esperamos poder tener otro evento juntos en un futuro.\nLa Cuidad de México \nUna de las ciudades más grandes del mundo con una historia fascinante que no deja de impresionar, la Cuidad de México fue el segundo lugar donde nuestra comunidad decidió tener nuestra celebración.  Llegue un día antes para poder ubicarme y tantear más o menos donde ibamos a estar celebrando.  Lo que no me esperaba era la cantidad de trafico que existe allí. Había escuchado de este problemita pero en realidad no se sabe nada hasta no estar en persona.\n\nUno de los usuarios de Stack Overflow en español, Flxtr, fue el que me anduvo llevando a diferentes sitios de la ciudad para conocerla mejor. Cuando comento que nuestra comunidad esta llena de gente respetuosa, amable, y con ganas de servir no estoy exagerando. Así somos aquí, y Flxtr es un ejemplo perfecto de ello.  Él fue el que me ayudo a encontrar el lugar para la celebración y fue el que ayudo muchísimo con la organización total del evento. ¡Sin gente como él, nuestra comunidad no pudiera existir!\nEl lugar donde se tuvo la celebración lleva por nombre Avenida 9, un restaurante moderno con comida de diferentes tipos.  El espacio se reservo y nos preparamos para nuestro evento.\n\n\nTuvimos dos platicas, una mía y la otra de Konamiman, nuestro primer moderador y ahora un Core Dev de Stack Overflow. Tratamos los mismos temas que en Madrid pero esta vez, Konamiman no pudo estar con nosotros en persona y en vez nos presento su charla remotamente desde España (¡fueron las 3am para él cuando empezamos!). Todos quedamos fascinados con su platica y al terminar, nos pusimos a comer y a convivir.  El evento duro unas 4 horas.  Repartimos camisetas y otros regalos a los presentes y bueno, ¿que más les cuento? Me quede con ganas de comer más tacos pero simplemente no pude.\n\nLas celebraciones que tuvimos fueron algo realmente especial para todos nosotros.  Hubo oportunidad de expresar las gracias por el apoyo y la energía que se proporcionó al empezar el sitio.  Tuvimos también el placer de conocernos en persona y de darnos la mano.  Nuestra comunidad refleja la intensidad con la cual nos apoyamos los unos a los otros y el poder vivir un pedacito de eso con algunos de nuestros miembros fue algo que nunca se va a olvidar.\nGracias a ustedes por crear un sitio genuino de ayuda y de amistad para los desarrolladores de habla-hispana. Existe talento aquí entre nosotros que no se ha explorado a su totalidad y se que el mundo se asombrará por los que se produce en nuestros países y regiones.  Les pido que sigamos adelante con energía y furor y – como dice uno de nuestros más apreciados miembros – ¡con todo el poder 2.0!",
        "url": "https://stackoverflow.blog/2017/06/21/las-celebraciones-de-nuestra-graduacion-un-resumen/"
    },
    {
        "title": "New Stack Overflow Footer & About Pages Launch Today",
        "content": "If you go anywhere on stackoverflow.com today, you’ll notice a brand new footer, new About pages, and possibly a few other surprises we’re still testing out (not everyone will see these yet). \nBack in February, we updated our top navigation, and today’s changes follow in the footsteps of this effort. We wanted to make it easier for developers to find what they need so they can learn, share, and build their careers. We also needed to make our company information more accessible to press, and to surface our product offerings for customers. \nAs an example of why we’re prioritizing these updates, check out our old footer. It was a bit of a labyrinth:\nWe hope the new one gives you a smarter guide:\n\nWe’re excited to continue our work improving your experience with Stack Overflow; stay tuned for more changes. Ideas on what could be better or see any bugs? Please let us know on Meta using the [bug], [feature-request], or [design] tags.",
        "url": "https://stackoverflow.blog/2017/06/27/new-stack-overflow-footer-pages-launch-today/"
    },
    {
        "title": "Stack Overflow: Helping One Million Developers Exit Vim",
        "content": "This morning, a popular Stack Overflow question hit a major milestone:\n\nYou’re not alone, jclancy. In the five years since this question was asked, there have been over a million other developers who got stuck in Vim and couldn’t escape without a bit of help. Indeed, the difficulty of quitting the Vim editor is a common joke among developers.\n\n\nI’ve been told by experienced Vim users that this reputation is unfair, and I’m sure they’re right (even I’ve gotten the hang of it in the last few years). I think there are two reasons it’s easy to forget how to exit Vim: developers are often dropped into Vim from a git command or another situation where they didn’t expect to be, and they run into it infrequently enough to forget how they solved it last time.\nIn honor of this milestone, we decided to take a look at the data surrounding this question. In particular, we’ll try measuring who is most likely to get stuck in Vim as opposed to using it intentionally, and examining how that balance varies by country and by programming language.\nHow many people have been struggling to exit Vim?\nIn the last year, How to exit the Vim editor has made up about .005% of question traffic: that is, one out of every 20,000 visits to Stack Overflow questions. That means during peak traffic hours on weekdays, there are about 80 people per hour that need help getting out of Vim.\nHas the percentage of traffic it makes up changed over time? That is, have developers started learning to exit Vim on their own?\n\nIt doesn’t look like it. The question was asked in August 2012, and for a few months it got very little traffic. Then it began growing in the following two years, presumably as more sources linked to it online and it moved to the top of search engine results. It’s been relatively steady for the last two years. This doesn’t necessarily mean the same people visited it again and again, of course; it could represent relatively new programmers getting stuck in Vim for the first time.\nDifferences across countries\nAs we saw in a previous blog post, we can use Stack Overflow traffic to learn a lot about the geographical distribution of developers.\nLet’s consider what percentage of visits to Vim this question comprises within each country. In countries with a lot of experienced Vim users, we’d expect this percentage to be low. When it’s high, it indicates many users got stuck in Vim when they didn’t necessarily expect to.\n\nIt looks like developers in Ukraine, Turkey and Indonesia are getting stuck in Vim quite a bit: it makes up a larger portion of their Vim questions than in any other country. In contrast, in China, Korea and Japan the fraction going to this question is one-tenth as much. That might indicate that when developers in these countries enter Vim, they usually meant to do so, and they know how to get out of it.\nWhat kind of programmers get stuck in Vim?\nIt’s also likely that users of different programming languages will have different experiences with Vim. We can investigate this by stratifying the “Exit Vim / Total Vim” percentage across each user’s main programming technology.\nWe’ll define this based on what Stack Overflow tag they visit most often. (For instance, my most visited tag is R: it makes up 52% of my question views). It’s not a perfect measure, but it’s reliable enough to give a sense of the breakdown by language. (For this analysis, we considered only registered users with at least 100 visits to the site).\n\nThe developers who are most likely to get stuck in Vim are front-end web developers: those who primarily visit tags like JQuery, CSS, and AngularJS. They’re followed by Microsoft developers (C# and SQL Server) and mobile (Android and iOS). These developers usually work with an IDE (Visual Studio, Eclipse, Xcode, and so on), rather than a plain text editor, so it makes sense that they’re relatively more likely to get “stuck” in Vim rather than to open it intentionally.\nThe developers least likely to get stuck in Vim are those who program in C, C++, Python and Ruby. These languages make sense to me: they are a combination of low-level languages and scripting languages that are often used with a plain text editor rather than an IDE, so they have the experience to escape it without a Google search.\n\nConclusion\nI was amused when I saw this question approach a million visits, but I was also proud that I work for, and contribute answers to, a site that helps so many developers. You never know when an answer you contribute could help millions of people, whether it shares how to undo a git commit or how the yield keyword in Python works.\nIf you want to contribute yourself, we encourage you to join the world’s largest developer community, whether it’s to ask and answer questions, get your next job, or build your online presence with a Developer Story. You can also use tools like Stack Overflow Trends to learn more about what our data can tell you about software developers.\nIn any case, next time you solve your problem through Stack Overflow, remember the hundreds of thousands of users who regularly ask, answer, edit, and moderate the site to make it all possible.",
        "url": "https://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/"
    },
    {
        "title": "Raise Your Voice: Proclaim the Need for Net Neutrality",
        "content": "Because we believe all traffic on the web should be treated equally, Stack Overflow will join some of your other favorite sites from around the web including Netflix, GitHub, Reddit, and Amazon on July 12 for a day of action supporting net neutrality.\nThe goal of this day of action, organized by Fight for the Future, is to get regular friendly Internet users like you to submit your comments and concerns to the FCC about their plans to do away with net neutrality. In fact, you can do that right now by using Battle for the Net’s system or filling out a comment on the FCC’s page by clicking “Express.”\n\nWhat’s This All About?\nThe short version: A few years back, the United States Federal Communication Commission, in response to numerous complaints and concerns, implemented a set of rules that prohibit Internet Service Providers from blocking specific content providers or charging them for access to their networks. Essentially, a set of rules that prevent your ISP from double-dipping on service you’re already paying them for, or blocking access to specific websites just for the hell of it.\nIn order to do this, they had to change how ISPs were classified, moving them from a “Title I” classification to “Title II.” And now, the FCC, under a new chairman, is proposing to roll back that change, which would then allow discriminatory treatment of Internet traffic.\nThis is a complicated issue, and sadly there is a lot of misleading information about it strewn around the ‘Net. The companion discussion to this post covers many perspectives on it in great detail, so please check it out before you make up your mind! For details on the technical aspects of net neutrality, please refer to this question on our Network Engineering site.\nWhy is This Relevant to Stack Overflow?\nHey, ain’t like we’re streaming video here, right? Downloading the entire archive of questions and answers on Stack Overflow would only use about as much data as watching 10 hours of Netflix.\nBut that’s not an accident. We’ve known from the start that performance is a feature and we’ve worked really hard to make the site as fast as possible. We know that when your livelihood depends on plowing through a bunch of questions looking for an answer that works, the milliseconds add up pretty quickly.\nWe put insane amounts of time, skill and money into making it easy and fast for folks to share information with one another. It’d be a real shame if that was all for nothing because some major ISP decided to shake folks down for more money.\nAnd even if we could weather such a storm, even if it didn’t result in an Internet where interconnection disputes made even trying to run a fast site a crap-shoot, what kind of an Internet would that leave for the next programmer on a shoestring budget trying to build a fast new site? As tempting as it is to shrug and say, “I got mine,” the Internet has always worked because folks kept striving to do better – and had the opportunity to try. We owe it to the next generation to make sure that can happen.\nHow You Can help\nFirst off, you can download and read the proposed rule-change from the FCC’s website. Yes, it really has the ironic name “Restoring Internet Freedom.” It’s a little bit of a slog, but I highly encourage reading through the filing if you can spare the time – particularly the incredibly selective “Background” section.\nThen you can file a comment on the proposal. You can do this directly from the FCC’s website (or browse others’ comments first if you prefer), but I highly recommend using that site I linked to above: https://www.battleforthenet.com/ – it’s a lot less clunky, and automatically forwards your comments to your senator and representative. Which is helpful, since if you read that proposal you know that the big underlying problem we’re facing here is that the FCC is trying to work with a framework of laws that predate the Internet as we know it. Getting the folks who make the laws on board ain’t a bad idea here.\nI have Strong Opinions on this post, how it relates to Stack Overflow, and Net Neutrality in general\nGreat! Let’s hear ’em. Instead of yet another mess of blog comments that no one reads, I’ve kicked off a discussion over on Meta: – please join in!",
        "url": "https://stackoverflow.blog/2017/06/30/raise-voice-proclaim-need-net-neutrality/"
    },
    {
        "title": "Estado da Pilha Internacional – Março/2017",
        "content": "O primeiro trimestre de 2017 já caminha pro fim e o Stack Overflow em Português continua muito bem, obrigado. Cresceu bastante em 2016, começa o ano entre os 10 sites mais ativos da rede e a expectativa pra esse ano é de continuar crescendo, e ajudando cada vez mais gente, construindo ainda mais conhecimento de qualidade em língua portuguesa.\nSaímos do Carnaval à todo vapor e atingimos – pela primeira vez – a marca de 100 perguntas/dia na média das duas últimas semanas:\nMédia de duas semanas; últimos 6 meses\nOlhando o sucesso e maturidade do SOpt, uma pergunta constantemente vem à tona: E se fizermos isso por mais pessoas, não só programadores? E se criarmos outras comunidades em português? Se, em tão pouco tempo, alcançamos um sucesso tão notável com o SOpt, já ajudamos tanta gente, nada mais justo que fazer tudo de novo com alguma outra área. Tudo isso faz sentido. O problema é o outro lado da equação.\nAbrir sites internacionais dá trabalho. Muito mais trabalho que o normal para sites em inglês. Tanto tecnicamente quanto comunitariamente, manter um site em outra língua acrescenta camadas extras de trabalho, manutenção e preocupação. O desenvolvimento do Stack Overflow não é feito em paralelo ao processo de tradução, nem espera por ele antes de mandar ao ar novas funcionalidades ou ajustes. Além disso, como inicialmente não se planejavam versões em diferentes línguas, o lado técnico de como compilamos, fazemos build, e distribuimos nossos sites, também não é lá muito receptivo à internacionalização.\nIsso significa que vários desafios aparecem no caminho de manter um site como o SOpt funcionando, e atualizado. E adicionar outro site acrescenta mais lastro à esse problemas, que já se arrastam há tempos. Precisamos arrumar a casa antes de expandí-la, simples assim. Só não é muito claro como fazer isso.\nPor conta da natureza desses problemas, não podemos depender apenas de soluções técnicas. No melhor espírito Stack Exchange, vários desses problemas dependem do apoio da comunidade para serem resolvidos adequadamente, ainda que não tenhamos como dar tanto suporte quanto gostaríamos. Precisamos encontrar maneiras de tornar o trabalho de tradução muito mais eficiente e recompensador, em respeito à quem traduz. Mas também precisamos que a comunidade entenda que sem as traduções, o SOpt não existe.\nO Stack Overflow em Português é um site especial, em vários sentidos. As necessidades dele não são as mesmas que as de outros sites da rede. Nós estamos trabalhando da maneira que podemos para integrar as necessidades das comunidades internacionais ao nosso desenvolvimento, tentando diminuir a distância técnica entre o irmão mais velho, em inglês, e a plataforma que oferecemos à vocês.\nA nova barra superior está vindo, em breve. As novas abas de navegação também. Algumas pequenas mudanças no projeto de tradução estão nos planos. Nada disso é drástico, ou vai tornar tudo maravilhoso de um dia pro outro, mas são pequenos passos na direção correta, procurando dar ao SOpt o suporte que ele merece do nosso lado, e ajudando vocês a continuarem o suporte do seu.\nAlguns dados sobre Fevereiro/2017:\nPerguntas Com Mais Respostas\n1. Como posso obter um trecho especifico dentro de uma string usando PHP?\n2. PHP que retorna null campos de tabela que não estão vazios nem nulos no MySQL\n3. É possível fazer um update nas 100 primeiras linhas no sql(server)?\nPosts Mais Compartilhados\n1. Required_if com mais de um field no Laravel 5.3\n2. Xamarin Forms com Azure\n3. Storyboard Segue\nRespostas Mais Bem-Votadas\n1. O que é UX (User Experience)?\n2. O que é um código legado?\n3. Como descobrir se uma cor hexadecimal é escura ou clara?",
        "url": "https://stackoverflow.blog/2017/03/22/estado-da-pilha-internacional-marco2017/"
    },
    {
        "title": "Ya nos graduamos, ahora ¿qué sigue?",
        "content": "En pocas palabras, lo que sigue para nuestro sitio son las eleciones de nuestros moderadores. Tendremos moderadores seleccionados para el primero de agosto del 2017.\nEnlace a las elecciones.\n¿Cómo funciona esto de las graduaciones?\nBueno, es realmente simple. Aquí les contaré lo que se requiere para llegar a la selección de nuestros moderadores. Existen diferentes etapas que tendremos que pasar y superar para llegar a nuestra meta.  La selección de los moderadores es algo realmente importante para nuestro sitio.  Los moderadores son usuarios de la más alta confianza de entre la comunidad y es por eso que les damos permisos que superan a cualquier usuario normal.  Ellos trabajarán muy cerca de y en conexión con el gerente de comunidades para seguir formando lo que es sitio puede y debe ser.  Los moderadores también reciben una etiqueta de forma de diamante al lado de su nombre de usuario. Esto los designa como moderador oficial de nuestra comunidad.\nPara aprender más sobre lo que un moderador es y hace, véase esta publicación: Una teoría de moderación traducida por nuestro estimado Rubén. Allí verán lo que pensamos de esta posición y lo que podemos esperar de una persona que este interesada en aplicarse a este puesto.\nPrimera fase – el cuestionario\nEmpezando el 10 de julio hasta el 16 del mismo, tendremos nuestra primera fase donde aceptaremos preguntas de la comunidad que los candidatos tendrán que contestar.  Estas preguntas deben de ser basadas en el deseo de conocer más sobre cómo cada candidato responderá a diferentes situaciones, etc.  Recuerden que los candidatos seleccionados serán los que nos representarán y los que estarán al tanto de lo que suceda en nuestra comunidad y es por eso que estas preguntas son realmente importantes.\nDaremos una semana para aceptar estas preguntas.  Tendré yo 2 preguntas que les hare a cada candidato y aceptaré 8 de la comunidad dándonos un total de 10 preguntas para cada candidato. Al tener estas 10 preguntas, seguiremos con el siguiente paso.\nVéase esta publicación para tener un ejemplo de cómo es esta fase.\nSegunda fase – las postulaciones\nEmpezando el 17 de julio hasta el 23 del mismo, abriremos el campo a que cada usuario que le interese ser moderador pueda hacerlo de forma pública. No se vale el nominar a alguien para este puesto.  Las personas interesadas deben postularse por si mismos. Pero, habrá una pregunta en nuestro Meta para que la gente que quiera animar a otra para esta posición lo pueda hacer.  De nuevo, para que la postulación sea oficial, cada individual interesado debe postularse individualmente.\nVéase esta publicación para tener un ejemplo de cómo es esta fase.\nTercera fase – las elecciones\nEmpezando el 24 de julio hasta el 31 del mismo, tendremos nuestras elecciones oficiales.  Cada candidato tendrá que contestar las 10 preguntas y nosotros como comunidad votaremos por los candidatos que nos gusten basándonos en sus respuestas y en interacciones o experiencias que hemos tenido con ellos. Pero, ¡ojo! esto puede realizarse en dos formas. En total esta fase dura 8 días sin importar que opción sigamos.\nVéase esta publicación para tener un ejemplo de cómo es esto del contestar las preguntas.\nOpción 1: Si resulta que tenemos más de 30 candidatos (este es lo máximo que se acepta por nuestro sistema) tendremos unas elecciones primarias.  Estas elecciones servirán para reducir el número de candidatos a solamente 10 (lo máximo que se permite por nuestro sistema). Tendremos 4 días para hacer esto. Al terminar los 4 días, los top 10 seguirán al evento principal que durará 4 días también. Tendremos otra elección y los top 3 ganan la posición de moderador de SOes.\nOpción 2: Si solamente tenemos 10 o menos candidatos para nuestra elección, pasaremos a esta opción el 24 de julio.  Tendremos 8 días para seleccionar a nuestros moderadores y al terminar los días, los top 3 serán los ganadores de esta posición en nuestra comunidad.\nAnunciaremos a los ganadores el primero de agosto del 2017.\nComo pueden ver, este proceso está completamente en sus manos. Les pedimos que traten este proceso con respeto y con seriedad.  Cuando se selecciona a un moderador para el sitio, se esta seleccionando a alguien que ustedes han pedido. Será de suma importancia el participar en cada paso de este proceso.  No se vale llorar al final si no se participó anteriormente. ¡Hagamos de esta oportunidad lo más que podamos!\nTenemos entre nosotros a muchos candidatos posibles que son extremadamente dotados para poder representar los intereses de nuestros miembros.  Queremos a gente que pueda seguir con nuestra postura hacia los novatos, la calidad de preguntas y respuestas, y sobre nuestra cohesión como comunidad global.\nSi tienen alguna pregunta o duda, ya saben como conectarse conmigo. Existe el chat de nuestro sitio para platicar sobre estas cosas también. Tenemos la oportunidad de seguir haciendo de nuestra comunidad lo mejor que podamos. Usemos estas elecciones para elegir a moderadores que quieran seguir con la energía y entusiasmo que demostramos aquí.",
        "url": "https://stackoverflow.blog/2017/06/30/ya-nos-graduamos-ahora-que-sigue/"
    },
    {
        "title": "Stack Overflow Unveils the Next Steps in Computer Security",
        "content": "At Stack Overflow, keeping your information safe is our top concern. And as a community with over 40 million people each month, it has to be: Our success has made us a frequent target of attacks.\nComputer security is always evolving. Passwords are “what you know.” Smart cards are “what you have.” We decided to ask “how you do you.”\nToday we’re proud to publicly launch that latest evolution. \nThis security update is the result of years of work, requiring advances in many fields such as computer vision, AI and advanced calisthenics.\nWhy did we decide to go down this bold road? Simple: We had to adapt. We had to get better. Getting better meant thinking out of the box. Thinking outside the box meant staying ahead of the game. Brazen innovation led to whole scale paradigm shifts. We pushed the envelope. And we came to the most logical conclusion.\nAs part of our efforts to improve accessibility site-wide, the launch of Dance Dance Authentication also includes the implementation of Blink Blink Authentication and Sing Sing Authentication. \nTo set up any of these systems for your account, log in and head to Settings. \nWe are rolling this feature out to most users today, and all accounts will have access by tomorrow, April 1.\nOnline threats and their solutions are continuously evolving. The security industry is seeking experts to combat these concerns. If you’re up for the challenge, find security employment opportunities here.",
        "url": "https://stackoverflow.blog/2017/03/30/stack-overflow-unveils-next-steps-computer-security/"
    },
    {
        "title": "Introducing Channels: Private Q&A for Your Team",
        "content": "This post refers to “Channels”, a product which is now called “Teams.”\nHere’s What We’re Working on and How You Can Get Involved\nOn Stack Overflow, a question gets asked once, answered, and then becomes a central point of knowledge for thousands of others who read it on our site. But what about developers who don’t have the luxury of being public about their work? \nToday, we’re announcing Stack Overflow Channels for teams that need a dedicated, private space to share knowledge. We’re working hard on an early beta, and we want your active involvement in the product as we build it. If you’re interested in early access and product updates, sign up here!\nWhy Channels?\nWe launched Stack Overflow Enterprise last year to help large organizations share knowledge internally. Like public Stack Overflow, it uses the power of a large community: devs ask questions and other devs from across the organization answer them. \nBut as we expanded Enterprise to more and more large companies, it became clear that smaller teams also have the need to share knowledge in a private space. We realized that our platform gives us the unique opportunity to create a product specifically designed for teams who can’t sustain an entire community of their own. So a few weeks ago we began work on Channels, which will allow developers to ask and answer questions with their colleagues in a private area on Stack Overflow.\nWhat are Channels?\nStack Overflow Channels will:\n\nCreate a secure space for your engineering team to ask and answer questions about anything that needs to stay private.\nReduce single-source-of-information bottlenecks by sharing any dev’s technical knowledge with every dev on your team.\nMake it easy to find solutions to technical problems on a searchable platform where knowledge is always discoverable.\nPut institutional knowledge in a familiar place that you and your team are already visiting.\n\nStack Overflow Channels will be completely free while in beta. Although it will likely remain free for some users, we hope to use the beta to see how we can add enough value that many teams want to pay for it.\nIf you’re interested in being one of the first people to get access or just want updates about our progress, head over to this page to get involved. We’ll start inviting teams to join our beta soon.\nAnd of course, for more in-depth discussion, check out this meta post.",
        "url": "https://stackoverflow.blog/2017/07/11/introducing-channels-private-qa-team/"
    },
    {
        "title": "Now Live: Stack Overflow Developer Survey 2017 Results",
        "content": "What do developers want? And how do they get the job done? Every year since 2011, we’ve asked developers these questions (and many, many more) as part of our annual Stack Overflow Developer Survey, the largest and most comprehensive survey of developers in the world. \nMore than 64,000 developers told us this year how they learn and level up, which tools they’re using, and what employers should know about working with developers.\nOur first analysis of these results is now live. \nCheck out the findings now to see which technologies are the most popular, most loved, and most dreaded in 2017. You’ll also learn how much money different types of developers make on average, which benefits developers care about most, and how developers want their performance to be evaluated. You can even find out how developers prefer to pronounce “GIF”. Spoiler: 6% enunciate each individual letter (“gee eye eff”).\nWhy do we do this each year? As the world’s largest and most trusted community of software developers, we run this survey and share these results to improve developers’ lives: We want to empower developers by providing them with rich information about themselves, their industry, and their peers. And we want to use this information to educate employers about who developers are and what they need.\nWe learn something new every time we run our survey. This year is no exception:\n\nA common misconception about developers is that they’ve all been programming since childhood. In fact, we see a wide range of experience levels. Among professional developers, 11.3% got their first coding jobs within a year of first learning how to program. A further 36.9% learned to program between one and four years before beginning their careers as developers. \nOnly 13.1% of developers are actively looking for a job. But an additional 62.1% of developers are interested in hearing about new job opportunities. (If you’re an employer, Stack Overflow Talent can help you recruit both active and passive candidates.)\nWhen we asked respondents what they valued most when considering a new job, 53.3% said remote options were a top priority. A majority of developers, 63.9%, reported working remotely at least one day a month, and 11.1% say they’re full-time remote or almost all the time.\nA majority of developers said they feel at least somewhat underpaid. Developers who work in government and non-profits feel the most underpaid, while those who work in finance feel the most overpaid.",
        "url": "https://stackoverflow.blog/2017/03/22/now-live-stack-overflow-developer-survey-2017-results/"
    },
    {
        "title": "Nuestra comunidad, ¿funciona?",
        "content": "Al pensar en nuestra comunidad, podemos enfocarnos en ciertas características. Es normal el pensar en la correlación entre la comunidad y nuestra experiencia. Después de todo, lo que importa es lo que experimentamos, ¿no? Si resulta que nuestra estancia en SOes es buena, salimos con la idea de que realmente algo bueno está sucediendo allí.  Lo mismo si nuestra visita resulta en algo menos apetecible. Es casi imposible el divorciar nuestra experiencia con nuestra evaluación del sitio si no tomamos un poco de tiempo para analizar lo que esta pasando realmente.\nBuenos dias preciosa…\nLo que muchas veces se nos olvida es que nuestra comunidad es un organismo viviente.\n\nNo somos una cosa que se construye y se deja. Tampoco se puede planear y esperar que no cambie. Respiramos, contribuimos, crecemos, y respondemos a nuestro medio ambiente como cualquier ser viviente. Estamos hechos por varias partes importantes que necesitan interactuar efectivamente para poder hacer que esto funcione de la mejor manera posible. Nuestra situación se complica cuando agregamos diferentes nacionalidades, culturas, dialectos, y zonas de tiempo. Lo que un día funcione no determina que sea algo que nunca cambie.  Para usar una analogía, un ser humano normal no necesita usar pañales toda su vida.   Existe un tiempo para ello pero en cuanto esa temporada se va, las necesidades cambian – ¡deben cambiar! Lo mismo con nuestra comunidad.  Estamos en una temporada donde se está aprendiendo a manejar el tipo de trafico que nos está llegando. Por ahora, tenemos a muchos novatos que no siguen las normas de comportamiento por (1) flojera o (2) por falta de educación.  Vivimos en una era de “dame más, pero no esperes que contribuya nada.” Esto es exactamente lo que estamos viviendo ahora.\nHe visto publicaciones en nuestro sitio Meta donde la frustración se está viendo claramente pero les advierto que esto nunca va a parar. Más sobre esto en un poco….\nTenemos herramientas, moderadores, y miembros que nos ayudan a mantener a la comunidad ordenada. Estos sistemas funcionan, no al 100%, pero definitivamente funcionan. Estamos ahora entendiendo nuestro medio ambiente y el como se debe responder efectivamente. Llevamos menos de dos años de existencia y estamos a solo pasos de sobrepasar el sitio portugués en preguntas hechas a diario por solamente 10 preguntas aunque nos lleva 2 años más de existencia. Esto nos demuestra que existe la necesidad de lo que proveemos pero no nos dice nada sobre el comportamiento de nuestros miembros o visitantes. Esa es la parte que nos tiende a frustrar.\nContiene seres humanos\n\nSomos gente caprichosa, celosa, orgullosa, inteligente, desafiante, e innovadora. Es imposible esperar que no existan los pleitos y las interacciones “interesantes” entre nuestros usuarios. A esto me refiero cuando escribo que la frustración que se siente al moderar o disfrutar el sitio nunca desaparecerá. De niños, no se nos tiene que enseñar a pelear pero sí a tratarnos bien y muchos de los adultos no aprendieron bien esa lección. Nuestra comunidad es hecha de seres humanos por seres humanos para seres humanos. Les garantizo que vamos a seguir viendo problemitas aquí y allá. Pero, ¿qué se puede hacer al respecto?\nLo mejor que podemos hacer es modelar el comportamiento apropiado y seguir las normas del uso sancionadas por el sitio. Aunque sea molesto, esta es la mejor manera de poder cambiar la manera en que este sitio crece y se evoluciona.  ¡No hay que abandonar a los demás que también están haciendo lo mismo!\nPrueba y error\n\nDe la misma manera que el ejercicio fortalece a los músculos del cuerpo, nuestra constante atención a los patrones de comportamiento apropiados fortalecerán la dinámica de nuestra comunidad. Lograremos esto al practicar y al fallar. De nuevo les pido que sigan adelante con las acciones que nos traen más cerca de lo que queremos ser – una comunidad abierta, saludable, amistosa, informativa, y robusta. Las pruebas que se nos vengan serán como un resfriado del cual el cuerpo tiene que recuperarse. Aprenderemos juntos y lograremos nuestra meta juntos también.\n¡Adelante!",
        "url": "https://stackoverflow.blog/2017/03/24/nuestra-comunidad-funciona/"
    },
    {
        "title": "El estado de Stack Overflow en español: Marzo 2017",
        "content": "¡Casi se me escapa este mes! Lo bueno es que los números que vamos a explorar no se van a mover a ningún lugar porque forman ya parte de la historia de este sitio.  Les comparto algunos datos que resaltaron en el mes anterior.\n¡Disfruten!\nLas 5 respuestas más compartidas:\n\nfor vs while – LOOP – compartida 9 veces\n¿Cómo ordenar nombres de fichero por extensión tras leer un directorio? – compartida 9 veces\n¿Cómo funcionan las tarjetas de prueba de MercadoPago, y qué datos poner en el resto de campos que no son el número? – compartida 8 veces\n Diferencia entre int[] e Integer[] – compartida 6 veces\n¿Cómo añadir imágenes a un textarea con JavaScript? – compartida 6 veces\n\nLos Top 5 más votadas del mes:\n\nEscribir solamente una vez cada tecla, ignorando las repeticiones – 26 votos\n\n¿Como funciona el “if”? – 18 votos\n\n¿Que algoritmo de cifrado se puede usar para guardar datos en Java? – 13 votos\n¿Cómo evitar que mi programa sea plagiado? – 12 votos\nDiferencia entre int[] e Integer[] – 12 votos\n\nLos 5 miembros que tuvieron la mayor cantidad de respuestas aceptadas este mes:\n\namenadiel – ¡62 respuestas aceptadas!\nGustavo García – ¡39 respuestas aceptadas!\nA. Cedano – ¡35 respuestas aceptadas!\nJorgesys – ¡31 respuestas aceptadas!\nsstan – ¡29 respuestas aceptadas!",
        "url": "https://stackoverflow.blog/2017/04/19/el-estado-de-stack-overflow-en-espanol-marzo-2017/"
    },
    {
        "title": "Podcast #98: Scott Hanselman Is Better Than Us at Everything",
        "content": "Happy New Year and welcome to the Stack Overflow podcast #98 recorded Thursday, January 12, 2017 at the Stack Overflow Headquarters in NYC. Today’s broadcast is brought to you by Sydney, Australia. If there are any Australian listeners left after Joel’s terrible accent, thank you and we’re sorry.\nIn this episode: Joel rants about travel for the first time ever; Jay explains the Developer Survey (launched last week); and the hosts ponder the reason for Connecticut’s existence.\nThis week’s Developer Story is prolific programmer, teacher, writer, podcaster and so much more: Scott Hanselman! In his 3rd appearance on the podcast, Scott recounts some of the earliest inspirations that helped take his life from being “voted most likely to be convicted of white-collar crime” to the success that he is today. Just some of his great advice to us about helping the next generation:\n“Stuff that you might be doing alone, find a kid and do it with that kid. Include them in soldering or in chopping down a tree or putting together a square-foot garden in the backyard. Those are all gifts that we can give to people moving forward.”\nAs you know, we’re preparing a constitution for Stack Overflow. Each week, we bring you a proposal, and you, our listeners, will decide on whether that proposal becomes a part of our new constitution. This week’s question:\nIs it sufficient to close a bug as NOT REPRO or do you have to write some kind of explanation?\nListen to the opinions of the hosts, and then post your answer to Twitter using the hashtag #stackoverflowpodcast, with either PRO if yay, or CON if nay, along with your explanation. Keep it short! The funniest explanation, whether winning or losing, will be read on next week’s podcast and win an awesome Stack Overflow Sticker. We also need new amendments, so tweet us your ideas and we could name an amendment after you!\nLast week’s winner, answering the question: The Simonyi Amendment, Shall we bring back Hungarian Notation? Is:\n“YAY but only the real Hungarian notation. Semantics based instead of type based. In Hungarian instead of English.” Thanks @inka22222, you win a thing!\nWeek Links:\n\nQuark Conference India – Joel will be there if he can navigate the dropdown boxes.\nDeveloper Survey Blog Post\nOMTR – Lutron Light Switches\nNews: Atlassian buys Trello! (Also, proof that Michael Pryor was a cheerleader.)\n\nPodcast Links:\n\nTwitter: @stackpodcast\nFacebook: The Stack Overflow Podcast\nOur website is now live: http://stackoverflow.com/podcast\n\nLinks from our conversation with Scott Hanselman:\n\nListen to his podcasts, they are amazing. Seriously, Just do it. Hanselminutes.com, This Developer’s Life, Ratchet & The Geek\nAnjuan Simmons – Lending Privilege\nBabysmash.com",
        "url": "https://stackoverflow.blog/2017/01/16/stack-overflow-podcast-98-scott-hanselman-is-better-than-us-at-everything/"
    },
    {
        "title": "Buenas noticias para mayo 2017",
        "content": "Hace poco mas de un año y medio empezó el proyecto de Stack Overflow en español.  Me alegra contarles que después de seguir el crecimiento del sitio podemos esperar que nuestra comunidad se gradúe este mayo.  Falta todavía el decidir la fecha pero las circunstancias necesarias ya existen para poder movernos fuera de la etiqueta de “sitio en beta.”\nQuiero felicitarlos a todos por haber continuado con el interés necesario para poder promover y crecer nuestra comunidad.  ¡Sus esfuerzos han hecho la diferencia!  Ahora, platiquemos un poco sobre lo que va a suceder en cuanto nos graduemos.\nLos privilegios del sitio cambiarán.\nCuando un sitio esta en su fase beta, los privilegios que se permiten son muchos comparados con los que se permiten cuando un sitio se gradúa.  La razón de esto es para empoderar a los usuarios a poder participar con más facilidad en el sitio. Les comparto la siguiente tabla para mostrarles los cambios de puntuación que ocurrirán.\n\n\n\n\nBeta Privado\n\n\nBeta Publico\n\n\nGraduado\n\n\n\n\n\n1\n\n\n15\n\n\n15\n\nVotar a favor\n\n\n\n15\n\n\n15\n\n\n15\n\nMarcar como ofensivo\n\n\n\n1\n\n\n50\n\n\n50\n\nDejar comentarios\n\n\n\n1\n\n\n100\n\n\n100\n\nEditar publicaciones wiki\n\n\n\n1\n\n\n125\n\n\n125\n\nVotar en contra\n\n\n\n1\n\n\n150\n\n\n150\n\nCrear etiquetas nuevas\n\n\n\n1\n\n\n200\n\n\n200\n\nRe-etiquetar preguntas\n\n\n\n500\n\n\n750\n\n\n2000\n\nEditar publicaciones\n\n\n\n1\n\n\n500\n\n\n3000\n\nVotar para cerra\n\n\n\n2000\n\n\n2000\n\n\n10000\n\nAcesso a herramientas de moderación\n\n\n\nNo se desesperen si al momento de graduarnos, se dan cuenta que no pueden tomar las mismas acciones que antes podían. Este cambio de privilegios nos afectará a todos pero en poco tiempo podremos continuar como normal.\nElecciones para moderadores\nHemos contado con la ayuda de Konamiman, Luiggi Mendoza, y Miquel Coll como moderadores designados de nuestra comunidad. Ellos han cargado la gran mayoría de la responsabilidad de la moderación del sitio mientras otros usuarios llegaban a los puntos necesarios para ayudar a moderar también. Pero, en cuanto el sitio se gradúe, tendremos nuestra primera elección para escoger a nuestros moderadores para el sitio.  El formato lo explicaré en más detalle en cuanto lleguemos a ese tiempo. Por ahora, pueden esperar el poder nominar y votar por su candidato favorito para este importantísimo puesto.\nCelebraciones\n¡Como me encantaría celebrar con todos ustedes este gran evento en vivo!  Aunque me es imposible verlos a todos, estoy planeando dos celebraciones para festejar – una en España y otra en México. ¡Ojo! tal vez será en un lugar muy cercano de ti.\nBueno, los dejo con eso. En cuanto haya más información para compartir oirán de mi de nuevo.",
        "url": "https://stackoverflow.blog/2017/04/20/buenas-noticias-para-mayo-2017/"
    },
    {
        "title": "El estado de Stack Overflow en español: Abril 2017",
        "content": "El mes pasado casi se me acabó el tiempo para compartir nuestros números interesantes del sitio. Este mes decidí no dejar que eso pasará de nuevo así que aquí están algunos datos de interés sobre el mes de abril.\n¡Disfruten!\nLos 5 usuarios con más respuestas aceptadas:\n\nJorgesys – 40 respuestas aceptadas\nGustavo García – 36 respuestas aceptadas\nDev. Joel – 35 respuestas aceptadas\nFJSevilla – 34 respuestas aceptadas\neferion – 27 respuestas aceptadas\n\nLas Top 5 más respondidas del mes:\n\nComo evitar el caché de los archivos css y js – 8 respuestas\nAbrir una nueva pantalla, con un un onMenuItemClick y enviar datos – 6 respuestas\n¿Cómo validar en JavaScript si un objeto tiene una propiedad? – 6 respuestas\n¿Cómo concatenar dos String en Android? – 6 respuestas\n¿Cómo situar el footer siempre abajo? – 5 respuestas\n\nLos 5 preguntas más vistas del mes :\n\n\nCabecera de XML para AEAT sistema SII Suministro inmediato de informacion – vista 508 veces\n\n¿Qué es una promesa en Javascript? – vista 426 veces\nEl código más raro de javascript – vista 355 veces\nComo evitar el caché de los archivos css y js – vista 224 veces\n¿Cómo concatenar dos String en Android? – vista 221 veces",
        "url": "https://stackoverflow.blog/2017/05/04/el-estado-de-stack-overflow-en-espanol-abril-2017/"
    },
    {
        "title": "Introducing Stack Overflow Trends",
        "content": "On a typical day, developers ask over 8,000 questions on Stack Overflow about programming problems they run into in their work. Which technologies are they asking about, and how has that changed over time?\nToday, we’re introducing the Stack Overflow Trends tool to track interest in programming languages and technologies, based on the number of Stack Overflow questions asked per month. For example, we could compare the relative usage of three programming languages.\n\nHere, we can see that questions about the Python programming language have become rapidly more common over the last few years. (In data from Stack Overflow Talent we’ve seen the same expansion in companies looking for Python developers). PHP was growing for several years, but has since leveled off. Perl was never as big a presence on Stack Overflow, and questions about it have become steadily less common in the last 9 years.\nMeasuring developer interest based on Stack Overflow questions isn’t perfect: some technologies might inspire more questions among its users than others. But we’ve found it’s a simple measure that gives useful insights into the developer ecosystem. It’s especially useful for measuring changes over time: when we see a rapid growth in the number of questions about a technology, it usually reflects a real change in what developers are using and learning.\nHere we’ll share a few examples of insights we can extract from the Stack Overflow trends tool.\nJavaScript frameworks\nJavaScript open-source web frameworks show some of the most interesting patterns of growth and decline.\n\nJQuery used to be among the most popular tags on Stack Overflow (as some have humorously observed), but it has made up a smaller share of questions as newer web frameworks have been introduced. There’s been extraordinary growth of the angularjs tag (representing the first version of the framework) since 2013, then a quick shift to the angular tag (representing subsequent versions). We also see fast growth in the React library. These tags are among the most prominent JavaScript projects on the site.\nSmaller web frameworks show a brutal life cycle, where some show rapid growth then decline over the span of a few years.\n\nThe Vue.js framework have shown quick adoption (and in terms of year-over-year growth is one of the fastest growing tags on the site). Frameworks like Backbone.js, Ember.js, and more recently Meteor appear to be in the later stages of the life cycle.\nOverall, front-end web development has largely been moving away from closed-source plugins, including Adobe Flash or the now-deprecated Microsoft Silverlight. In 2016 these each made up less than .1% of Stack Overflow questions.\n\nData Science and Big Data\nTechnologies used for data science have shown particularly rapid growth over the last few years.\n\nThe R statistical programming language has shown consistent growth, as has pandas, a popular library for data science in Python. The closed source MATLAB language was growing for most of the lifetime of the site, but has more recently leveled off and may be shrinking.\nTensorFlow, Google’s open-source machine learning framework, was introduced only in late 2015, but it’s been growing at an extraordinary pace. Among the 500 largest tags, only swift3 has shown faster growth in the last year.\nSimilarly, there’s been expansion of interest in big data frameworks. We can compare several major Apache open-source projects for storing and processing large datasets.\n\nHadoop has grown since 2009, and so more recently has Hive, a query system built on top of Hadoop. Interest in Cassandra has remained steady for several years. But Spark shows the fastest surge of adoption, becoming the most asked about technology just a few years after its introduction.\nTry it yourself!\nDon’t see your favorite language, technology, or framework in this post? Use the Stack Overflow Trends tool to create your own graphs, and see what you can learn about how the developer ecosystem is changing and where it might be going in the future.",
        "url": "https://stackoverflow.blog/2017/05/09/introducing-stack-overflow-trends/"
    },
    {
        "title": "How Stack Overflow Jobs Puts Developers First",
        "content": "I’m Donna Choi, and I’m the Product Designer for the Stack Overflow Jobs team.\nI’d like to revisit and share with you our standards for developing Jobs. These are living standards—we’re constantly rethinking our approach as we talk to users about what kind of product would help them most.\nFor a little more context: part of my job involves listening to people talk about their job search. Over the last 2 years, I’ve heard developers all over the world talk about why they leave a job, what makes them happy, what frustrates them, and what they hope to find. We just finished a big research project about this that involved everything from focus groups to data analyses. We’ll share more about what we learned in the coming months, but for now I’d like to highlight the core tenets that guide the way that Jobs works.\nOur policies\n\nJobs for people who code.\nWe welcome job listings where “writing software” is a primary responsibility. We also welcome jobs for people who work closely with developers or who have strong programming knowledge. On our site, you’ll see jobs for developers, programmers, software engineers, data scientists, CTOs, designers, product managers, DBAs, sysadmins, and software testers.\n\nQuality jobs. \nAll jobs posted on our site must disclose a specific role and company.  This means you’ll never see a job listing like “Hiring Developers For Multiple Positions” or “Work at a Well-Known Startup.” You’ll be able to find a relevant job description, location, and company per listing.\n\nNo spam. \nWe require all messages to job seekers to be tied to specific job opportunities, so you’ll never receive solicitations for general representation or requests for friends and family members’ contact info. We strongly encourage companies to send personalized messages. If you decline interest in a job, the associated company must stop messaging you.\n\nYou decide who gets to contact you. \nWe treat your data the way we’d like ours to be treated. You can easily opt-in-and-out of having your Developer Story—a resume built specifically for developers—viewable by companies. Your personal information will never be shared with companies without your explicit permission, and you’ll always be hidden from your current employer.\n\nFair and inclusive jobs. \nWhen companies post jobs on our site, they join our community of developers all over the world. Job listings must not exclude people based on race, religion, gender, and other factors listed below. If a job contains language or images that contradict this policy, we’ll ask the company to remove the offending content and affirm their intent to adhere to the policy and its principles.\n* Race, ethnicity, national origin, religious affiliation, sexual orientation, sex, gender, gender identity, age, pregnancy, disability, or serious diseases.\nWhat this means to us\nOur team is passionate about creating a great job site—not just one that’s packed with smart, innovative features (although we care about too), but one that genuinely helps people find good, fulfilling jobs. Most of us can relate to feelings of frustration and anxiety during a job search. Some of us have experienced spammy job sites with dubious privacy policies, while others have experienced biased hiring practices and company cultures.\nWe aren’t so naïve to think that we can single-handedly fix these problems, but we’d like to start by sharing our standards and hearing from you. Stories from you motivate us to think beyond a product that’s “good enough.” We want to be proactive about fixing these problems and guiding our industry toward something better.\nWe’d love to hear your ideas in the comments or on Meta Stack Overflow. Thanks for reading.\nCheck out Stack Overflow Jobs for yourself to see these values in action.",
        "url": "https://stackoverflow.blog/2017/05/12/stack-overflow-jobs-puts-developers-first/"
    },
    {
        "title": "¡Stack Overflow en español se gradúa hoy!",
        "content": "Es con gran emoción y con gran entusiasmo que les anuncio que desde hoy, el 17 de mayo, el sitio de Stack Overflow en español se gradúa y forma parte oficial de la red de Stack Exchange como un sitio hecho y derecho de Stack Overflow. ¡Los felicito por su victoria!\nEl sitio lleva cuatro años desde que se propuso en nuestra Area51 por jachguate y se lanzo en estado de Beta privado en octubre del 2015.  En diciembre del mismo año, el sitio entro en su estado de Beta y hasta hoy, pudo conseguir la evaluación necesaria para ingresarse como un sitio graduado de nuestra red después de 533 días en Beta.\nMe he quedado asombrado por la manera en que han colaborado los unos con los otros.  No creo que existe otro sitio Stack Overflow que tenga la calidad y la cantidad de gente que se respete a la manera en que ustedes lo demuestran. Es muy especial que una comunidad como la nuestra, formada por gente de diferentes países y culturas, pueda juntarse bajo la bandera del mejoramiento de los desarrolladores para ofrecer información relevante y compañerismo genuino. ¡Los felicito por eso también!\nAhora que nuestro sitio se ha graduado, falta que se cierre esta página. Ya no estamos en estado Beta y nunca regresaremos al mismo.  Ahora falta que la comunidad continúe proporcionando la energía y la potencia para continuar adelante.  Les comento que ninguno de los otros sitios internacionales (aparte del ruso el cual es otro cuento que les contaré uno de estos días) ha llegado a nuestras estadísticas tan pronto como lo hicimos nosotros. Esto comprueba que lo que estamos formando es importante y singular.  No hay otra comunidad como la nuestra.  Existimos para compartir y disfrutar de amistades entre los desarrolladores mundiales de habla hispana. Este objetivo nunca debe de ser comprometido o cambiado.  Nosotros de Stack Overflow estamos apasionados por ayudar a mejorar las vidas de los desarrolladores de nuestras comunidades. Queremos que lleguen aquí para subir de nivel en todos aspectos.  Pero, eso también requiere que todos sigamos compartiendo.  La información publicada aquí seguirá siendo ofrecida gratuitamente porque así la recibimos. No comprometeremos eso.\nLo que sigue para nosotros es simple.  Ahora tendremos dos celebraciones, una en Madrid y la otra en la Cuidad de México.  La celebración en Madrid tomará lugar el 25 de mayo en las oficinas de nuestros amigos de IronHack.  Ellos nos han prestado su espacio en el cual nos juntaremos para disfrutar de charlas de nuestro único Konamiman, de alumnus de IronHack, y una presentación mía sobre nuestro sitio.  Habrá comida, bebida, y regalos. ¡Y es completamente gratis! Apúntense ya para poder asistir al evento.  La celebración en México se esta preparando ahora mismo y cuando tenga más información, se las comparto.\nMe hubiera gustado haber visitado cada una de sus ciudades pero la verdad es que no me es posible hacerlo.  Me encantaría conocerlos en persona y darles la mano pero solamente tenemos estos eventos para poder conocernos este año.  Espero y los pueda ver en Madrid o en la Ciudad de México.\nEl tercer cambio para nosotros será la elección de nuestros moderadores oficiales.  Estas elecciones se llevarán a cabo de varias semanas. Dado a que estamos planeando y terminando esta graduación y sus celebraciones, no empezaremos las elecciones hasta mas tarde en junio. El proceso es simple y les daré los pasos a seguir en cuanto estemos listos para empezar.  Básicamente, miembros de nuestra comunidad que estén interesados en moderar al sitio se podrán postular para las nominaciones.  Después, la comunidad votará por los finalistas.  Tendremos a tres moderadores que representen a la comunidad.  Los ganadores estarán completamente en sus manos.  Les queremos dar toda la oportunidad de escoger a gente que tenga buena reputación entre los usuarios, ganas de mantener el equilibrio del sitio, conocimiento sobre la estructura de nuestra plataforma, y el deseo de actuar de manera justa al enfrentarse a oposiciones.\nLa verdad es que hoy es un día muy especial para esta comunidad unida de desarrolladores de habla hispana.  Esta graduación representa una culminación de el deseo de proporcionar información importante en un lugar amistoso, moderno, y útil. Les agradezco a cada uno de ustedes el gran placer de ser administrador de este hermoso lugar y espero ver que siga creciendo el sitio mientras pase el tiempo.\n¡Adelante!",
        "url": "https://stackoverflow.blog/2017/05/17/stack-overflow-en-espanol-se-gradua-hoy/"
    },
    {
        "title": "Stack Exchange Year in Review 2016",
        "content": "I am not myself at all wise, nor have I anything to show which is the invention or birth of my own soul, but those who converse with me profit. Some of them appear dull enough at first, but afterwards, as our acquaintance ripens, if the god is gracious to them, they all make astonishing progress; and this in the opinion of others as well as in their own. It is quite clear that they never learned anything from me; the many fine discoveries to which they cling are of their own making.—Socrates from Plato’s Theaetetus\nBy almost every measure, more Stack Exchange users shared more knowledge in 2016 than any previous year. Perhaps the most direct metric is the 4.5 million answers posted across our 162 sites. We couldn’t get those answers without a stream of new questions: 3.6 million last year alone. You might argue that not all of those posts are useful and it’s true users gave out 3.6 million downvotes. But I’d respond that askers accepted 1.5 million answers as fixing their problem and 24.9 million upvotes show many more people got helpful information. We have a strong culture of continuous improvement as evidenced by 5.1 million edits and 4.4 million completed reviews. Many of last year’s 14.4 million comments, which are intended to clarify rather than be conversational, added information above and beyond the posts themselves.\nStack Overflow represented the bulk of network activity with 2.6 million questions. Our generous community of programmers provided 3.1 million answers of which 1.1 million were accepted. There were 2.4 million downvotes and 16.8 million upvotes. Seasoned users completed 2.9 million review tasks in order to keep the content looking its best. Some of last year’s 3.4 million edits were prompted by 9.9 million clarifying and annotating comments.\nIf you compare those numbers to the previous year, you might notice Stack Overflow’s numbers are flat. We think we’ve saturated our current audience and should be looking at groups who feel marginalized or poorly-served by the system today. One obvious direction is to expand into other languages:\n\nPortuguese\nJapanese\nRussian\nSpanish\n\nCollectively, our non-English Stack Overflow sites have grown from 55k questions asked in 2015 to 70k in 2016. That 26% increase indicates there’s a thirst for people to learn and share knowledge in the language they regularly use. (I know. Shocking!)\nQ&A tends to be somewhat competitive and adversarial. This means that users often get answers to their questions within minutes. But not everyone enjoys that sort of activity. So we are experimenting with another way to contribute to the art and science of programming. We call it Documentation. In its first year, users have created 21,954 examples organized in 6761 topics and representing 890 tags. Our vision of Documentation will only succeed when many developers pitch in with improving edits. So it’s encouraging that 10,238 users have contributed 49,486 approved changes (including initial submissions) to those topics. Looking ahead to 2017, we are shifting from building the technical infrastructure to building a strong community. Come help us!\n\nWe’re growing in terms of topic area too. Last year we graduated 5 sites from beta status:\n\nLaw\nMotor Vehicle Maintenance & Repair\nPhilosophy\nProgramming Puzzles & Code Golf\nPuzzling\n\nThe last two are particularly interesting as they push the boundaries of traditional Q&A. Instead of asking questions they don’t know the answers to, our puzzle sites are for people to pose challenges for others to solve. The Code Golf site has been doing this for years, so official graduation is long-awaited accomplishment.\nI’m also pleased to report that we have a site for Software Engineering. This site has been around since 2010, but you might not have known what it was about. That’s because the site was called Programmers. (And old-timers recall it started out as Not Programming Related. It’s a long story.) Besides being a better fit for the site’s community, we’ve heard from regular users that new users are more likely to grok the scope of the community.\n\nThe most viewed questions on Stack Exchange tend to reflect technology trends:\n\nHow do I get Pokemon Go to detect my phones orientation? (Gaming, 535,546 views)\nWindows 10 upgrade assistant stuck at 99% (Super User, 394,967 views)\nGraphics issues after/while installing Ubuntu 16.04/16.10 with NVIDIA graphics (Ask Ubuntu, 232,856 views)\nWhat actually happens when there is not enough oil in a car engine? (Mechanics, 216,643 views)\nRecovering from a rm -rf / (Server Fault, 191,392 views)\n\nMeanwhile, the best content according to voting tends to be more evergreen:\n\nXcode 7 error: “Missing iOS Distribution signing identity for …” (Stack Overflow, +1907)\nHow do I deal with my current employer not respecting my decision to leave? (Workplace, +623)\nIn simple English, what does it mean to be transcendental? (Mathematics, +459)\nDid I just get hacked? (Super User, +438)\nWhy is there so much fear surrounding LiPo batteries? (Electronics, +419)\n\nOnce again, our designers amaze with their thoughtful site designs. They produced twelve more last year:\n\nAviation\nBlender\nComputer Science\nCryptography\nEmacs\nEnglish Language Learners\nJapanese\nMagento\nMusic\nPuzzling\nSignal Processing\nWorldbuilding\n\n\nIf you enjoy analyzing data about the Stack Exchange network, 2016 was your year. Community member Monica Cellio wrote a tutorial about our data explorer, which is maintained by another community member, Tim Stone. A resident data scientist, David Robinson, released StackLite, a lightweight version of community data. To see it in action, consider scripting language trends on Stack Overflow. In December, we connected our data to Google’s BigQuery. People are already finding interesting results. Our data team has been posting analysis on the blog, if you crave more.\nIn addition to making user-created content more accessible, we’ve also been working on being more open about how we operate as a company. We discovered that salary transparency helps companies recruit employees, so we made our salary calculation public. Since we strive to pay developers fairly, there’s really no downside.\nThere’s no real downside to sharing our business model either. For one thing, being successful as a company means we can keep our servers running. For another, the products themselves further our larger goal of improving the computer programming profession. The Jobs product eliminates inefficiencies in the developer hiring process, so we are pleased to promote it (while improving it further). We even think our advertisements make our sites better by being respectful and relevant.\nNow I was tempted to not talk about Enterprise, which is our Q&A product for large organizations. As long as I have worked here we’ve steered people away from it because it’s so expensive and we assumed it didn’t work. But then we started hearing reports of companies hosting thriving communities sharing internal knowledge. (We probably should have guessed based on experience with smaller sites.) At any rate, Enterprise is now a product we actively support and sell to large organizations. And just to be sure it works for others, we’ve started using an internal instance to collect and preserve company lore.\nLast year we redesigned the resume which allows programmers to show off what they’ve done whether or not they are looking for work. In 2016, 278,455 users updated their Developer Story. (If you aren’t among that number, why not try it out?)\n\nLike Socrates, Stack Overflow Inc. serves as a midwife to knowledge. We don’t create informative content; we merely manage the systems that enable users to build up a corpus of knowledge. As such, we depend on users to report issues on meta. Across Stack Exchange, there were 2,365 bugs or features marked as [status-completed] in 2016. Our most popular change (by the voting) was allowing users to cancel misclicked flags. It was also the third most popular. We can’t implement all the ideas users send us, so we reluctantly rejected 322 meta posts. The most popular was my idea to hide trivial comments. (I still like the idea, but we haven’t been able to find a reliable way to evaluate the costs and benefits.) If you want more statistics about meta questions we’ve responded to, please see this spreadsheet compiled by my colleague, JNat.\nJNat also organizes our process for making small- to medium-scale changes that benefit our existing communities. Some of these changes (14 last year) help us in the Community Team do our jobs more efficiently. Others benefit our team of volunteer moderators (30). But the majority (55) are intended to help people in the community itself. For example, you can now chose which site to use for your network profile. We also support hiding sites if you don’t want the world to easily discover your obsession with 3D Printing. For those who are curious, JNat has another spreadsheet that details the changes made last year.\nHere at Stack Exchange, we have a few annual traditions:\n\nIn January, 56k developers took our annual survey. (Please take this year’s survey, if you haven’t already!)\nOn April 1, our very own Adam Lear kicked off our newest product line: indie games! Unikong is an old-school platformer that pits our highest reputation user against trolls as he attempts to tame a wild unicorn. (Pro-tip: jump off coins for greater height.)\nWe gave $50,900 to charity on behalf and at the direction of our volunteer moderators.\nOur annual Winter Bash event was a smashing success as more users than ever donned digital dome decorations.\n\n2016 marked a year of growing potential for Stack Exchange. While not everything we tried last year worked out, we’ve planted seeds that will bear fruit in 2017 and beyond. More importantly, our amazing communities continue to build (and curate) a massive collection of informative answers.",
        "url": "https://stackoverflow.blog/2017/01/26/year-in-review-2016/"
    },
    {
        "title": "Podcast #99: The Requested Operation Requires Elevation",
        "content": "Welcome to the Stack Overflow podcast #99 recorded Thursday, January 19 at the Stack Overflow HQ in NYC. Today’s podcast is brought to you by Reverse Polish notation.\n25 enter\n16 plus\nIt’s 41!\nWe actually have 2 sponsors for today:\nGrace Hopper – A program of Fullstack Academy. The Grace Hopper Program is an immersive software engineering course for women. Students only pay tuition once they secure a developer job after the program. Visit The Grace Hopper Program at www.gracehopper.com.\nGirls Who Code – A national non-profit organization dedicated to closing the gender gap in technology. They create a stronger community around girls and women that will empower the next generation to be leaders in technology. Visit www.girlswhocode.com.\nIn today’s episode, Joel complains about Excel on Mac, the hosts play Start Up or Shut Up, and surprise! The One Minute Tech Review is NOT about light switches.\n👨‍🌾\nThis week’s Developer Story is new Stack Overflow data scientist and literal rocket scientist, Dr. Julia Silge. She tells us about her Descent into programming, starting in high school with LAN parties and continuing with her tech-adjacent foray into physics and numerous post-doctorals (with the dynamics of galaxies, nbd) before starting with Stack Overflow. She has written a blog post, that came out last week, titled “Women in the 2016 Stack Overflow Survey” where she analyzes the data from last year’s survey that focuses on how women answered the questions and what are some of the characteristics specific to women on Stack Overflow. There are some surprising differences between the way men and women answered the questions.\n“One of the things that I am really most excited about, being at Stack Overflow… is having such amazing data about the worldwide community and the people who work with code and software.”\nThis week’s SO Constitution question: Is it grammatically correct to say “Data is…” or “Data are…”? Listen to the opinions of the hosts, and then post your answer to Twitter using the hashtag #stackoverflowpodcast, along with your explanation. Keep it short, but clever! The funniest explanation, whether winning or losing, will be read on next week’s podcast and win an awesome Stack Overflow Sticker. Last week’s winner, answering the question: PRO or CON: Is it sufficient to close a bug as NOT REPRO or do you have to write an explanation?\n“@StackPodcast always explain … that’s the point of SO after all.” – @racascou\nCongrats rafælcastrocouto, you win stuff!\nWe also need new amendments, so tweet us your ideas and we could name an amendment after you! Seriously, we need ideas. Give us some, please.\nThanks for listening and see you next week for our 100th episode special with @codinghorror, himself, the one and only Jeff Atwood!\nEditor’s note: American cheese is delicious! Period.\nThis Week’s links:\n\n2017 Developer Survey – Take it!\nIn The News: Popcorntime Ransomware info from Wired, France is the new tech hub?\n\nDr Julia Silge links:\n\nRecent Stack Overflow blog post\nShiny App\nJuliaSilge.com\nTidy Text Mining With R – By Julia Silge and David Robinson Click the link to buy the book!",
        "url": "https://stackoverflow.blog/2017/01/23/stack-overflow-podcast-99-the-requested-operation-requires-elevation/"
    },
    {
        "title": "Stack Overflow en Español has Graduated!",
        "content": "It’s been four years since the Spanish site was proposed in Area 51 and we’ve just proven once more that international sites offer much to the users of those communities and to our network as a whole.  I would like to announce that the Stack Overflow en Español community has graduated and will form a part of the network of sites as a full-fledged community for developers and coders around the world!\nThere have been dissenting voices over the creation of other Stack Overflow communities in the past but our answer has remained the same—we will continue to be fanatically engaged in providing opportunities to the world-wide community of developers in helping them to learn, grow, and level up. Spanish is the second most globally spoken language by native speakers and it is the official language of 20 countries. It is also the second most spoken language in the United States.  All of this made the creation of a Stack Overflow community in Spanish a wise move.\nThe Spanish community has been very patient and has shown much rigor when faced with difficulties and challenges.  Among the biggest obstacles we’ve overcome has been the integration of a single “community culture” from among the various countries represented there. Even though the language is the same, at least in theory, there are various cultural nuances that made it a challenge when trying to set a standard.  Fortunately, the community has done that and we’ve come to show that what matters is the integrity of the person and their willingness to get along with others for the good of the whole.  The language differences are overthrown by the desire to help and share our experiences and knowledge.\nThe Spanish site has also set a high standard for new and casual users.  They have taken our Be Nice policy and have raised the bar.  The goal was to create a place where people would feel welcomed and appreciated.  We wanted a community where information could be shared without getting slammed by others on the first attempt simply because they’ve never used the site before.  I know that currently our membership numbers are low compared to other network sites and that this may just be a fluke or trend that will die when large numbers of people join.  However, I don’t believe that’s the case here.  The members and the top users have all shown themselves to be respectful and kind towards new visitors and members.  They are educating others in doing the same and setting an example for all to follow.  I’m very hopeful that this will continue and extremely proud of our community for having achieved this.\nI wanted to take just a few minutes to share with you that Stack Overflow continues to grow in its efforts to help developers worldwide. We are providing opportunities that many have not experienced or known about until now. Please join us in celebrating this most important achievement by sharing with those you know about the new and official Stack Overflow en Español!\n¡Adelante!",
        "url": "https://stackoverflow.blog/2017/05/20/stack-overflow-en-espanol-graduated/"
    },
    {
        "title": "Podcast #100: Jeff Atwood Is Back! (For Today)",
        "content": "Welcome to the Stack Overflow podcast #100!! Recorded Thursday, January 26, 2017 at Stack Overflow headquarters in NYC. Today’s podcast is brought to you by the Cheeseburger. “It’s a hamburger, topped with cheese!” But the real question is: Is a cheeseburger a sandwich? The podcast is also brought to you by IBM Compose. Compose has spent the last 5 years helping developers ship applications with production grade databases. Try Compose today and get a free limited edition T-Shirt. Hurry! Quantities are limited. Visit compose.com today. (Unfortunately, t-shirts are US only.)\nCalling our guest today ‘special’ would be an understatement. He’s the co-founder of Stack Overflow (and this podcast), founder of Discourse, prolific writer and blogger at codinghorror.com, and most importantly, the subject of many internal Stack Overflow memes. It’s @codinghorror himself, Mr Jeff Atwood! Jeff and Joel chat about where we came from and where we are going, including clips from past podcasts. If you care at all about SO history, then this episode is a must-listen. You may also learn a little too much (or not enough?) about how to be a juggalo…\n\n“Ultimately, [answering] the best questions are kind-of a form of storytelling, and that is what we were trying to get to. You can go and take 5 minutes out of your day, look at some semi-interesting Stack Overflow question and share some knowledge…it’s a good feeling.”\n\nJeff Atwood\n\n“Computing is just typing words into boxes.” – also Jeff Atwood\nThis week’s SO Constitution question: When driving with a friend, is it ok to ask that friend to get out and direct you while parallel parking? Listen to the opinions of the hosts, and then post your answer to Twitter using the hashtag #stackoverflowpodcast, along with your explanation. Keep it short, but clever!\nThe funniest explanation, whether winning or losing, will be read on next week’s podcast and win an awesome Stack Overflow Sticker.\nLast week’s winner, answering the question: PRO or CON: Is it pronounced “Data is…” or “Data are…”?\n“@StackPodcast CON because it’s weird to say “Data are my favorite Star Trek character #stackoverflowpodcast” – @ethanjpeters\nThis week’s links:\n\nIBM Compose\nDiscourse\nChoosing Your Own Adventure – Coding Horror\nOMTR – Band – The app for Groups!\nHow To Be a Juggalo on WikiHow\n\nFor the record, it’s still Dalgas’ fault.",
        "url": "https://stackoverflow.blog/2017/01/30/stack-overflow-podcast-100-jeff-atwood-is-back-for-today/"
    },
    {
        "title": "Stack Overflow Podcast #104 – Jenn Schiffer Talks to Us about Fog Creek’s New Glitch",
        "content": "Welcome to the Stack Overflow Podcast #104, recorded Thursday March 9, 2017 at the Stack Overflow HQ in NYC. Today’s podcast is brought to you by Nightmare at 20,000 Feet, the classic episode of The Twilight Zone starring William Shatner. OooOOoo scary. Today’s podcast is also brought to you by Stack Overflow Jobs. In honor of Women’s History Month, Stack Overflow Jobs is showcasing opportunities at companies founded by women. Go to stackoverflow.com/jobs now to level up your career.\nOn this week’s episode, we talk to engineer, artist, tech satirist and brand new Fog Creek employee Jenn Schiffer about Fog Creek’s brand new community, Glitch, which launched today.\nAlso this week, the return of Startup or Shut Up, our game where the hosts have to guess which ridiculous companies are real, and which are fake.\nAnd as you know, we are preparing a Constitution for Stack Overflow. Last week, we asked:\nPRO or CON: Making a sandwich for yourself… do you cut it in half?\nThe results were cut perfectly in half, 50%-50%. But the winner is Andrew Wilkinson:\n\nPRO All bread products taste better when cut diagonally. True for sandwiches, toast and especially bagels.\n— Andrew Wilkinson (@andrew_j_w) March 7, 2017\n\nWe see what you did there, Andrew.\nThis week’s Constitution question:\nIf you’re writing an IF statement, and you’re comparing a variable to a constant, should you flip it so that you put the constant first?\nPost your answer to twitter using the hashtag #StackOverflowPodcast, with either PRO or CON and your explanation (in this case, PRO = yes, you flip them). The best explanation, whether on the winning side or the losing side, will be read on next week’s podcast and win a fabulous STACK OVERFLOW STICKER courtesy of the Stack Overflow Podcast.\nSubmit your ideas for future constitutional amendments, and one of them might be named after you! Post your proposed constitutional amendment to Twitter using the hashtag #StackOverflowPodcast. And if it’s non-terrible, we may feature it in a future poll.\nFollow us on Twitter.\nLike us on Facebook.\nAnd if you want to make 8-bit art, check out Jenn Schiffer’s tool. Ilana used it to draw the best dog cow thing I’ve ever seen.",
        "url": "https://stackoverflow.blog/2017/03/13/stack-overflow-podcast-104-jenn-schiffer-talks-us-fog-creeks-new-glitch/"
    },
    {
        "title": "Developers without Borders: The Global Stack Overflow Network",
        "content": "A while back I encountered a developer who shared a story of a positive experience on Stack Overflow. He’d asked a question late one Sunday on Labor Day weekend, and been delighted that he’d quickly gotten multiple responses. He said he was impressed that someone else in San Francisco was also “burning the midnight oil,” and noted it as a testament to the work ethic in Silicon Valley.\nIt was great that he’d had a positive experience, but he’d made one incorrect assumption: there was no reason to think the users who’d answered his question were also staying up late in Silicon Valley. They could be halfway around the world, where it wasn’t midnight on a holiday weekend but rather a normal Monday afternoon. Indeed, some analysis of typical answering patterns on late Labor Day Sundays indicates that was almost certainly the case!\nIt’s easy in the American tech environment to forget that Stack Overflow is a global community, and that it couldn’t have been successful otherwise. Since its start, Stack Overflow has let questions and answers pass fluidly across national borders, creating a worldwide network of programming knowledge. I thought I’d share some analyses of how global Stack Overflow is, and how we’ve benefitted from it.\nStack Overflow around the world\nWhat countries ask questions and provide answers on Stack Overflow?\n\nStack Overflow is an American company, but only 29.4% of its questions and answers have been contributed from within the US. Countries such as India, the UK, and Germany make up the next largest contributors, but about a quarter of questions and answers are contributed from the 200+ countries that each have a small (<1%) share. (The relative proportions are pretty similar if you look just at questions asked or answers provided.)\nThe Stack Overflow community has always been open to the world. It has gotten more global over its history, with the United States and the United Kingdom contributing a smaller fraction of its questions and answers each year, and India and smaller countries contributing a larger portion.\n\nQuestions across borders\nWhat does a typical weekday look like for Stack Overflow Q&A? There are about 8,000 questions asked, and 9,500 answers provided. These come from 150 separate countries, and 84.7% of answers come from a different country than the asker.\nWhat does that global exchange of knowledge look like?\n\n(You can rotate or resize the globe with your mouse). Each one of these arcs represents one user getting help from another. I’ve heard programmers refer to Stack Overflow as their “external brain”; these are its neurons.\n(Incidentally, we took several measures to anonymize the interactive visualization above to prevent the possibility of users being matched to locations, including, but not limited to, fuzzing locations and removing ones without a minimum number of distinct users.)\nSo if I ask a question from my office in the US, who might answer it?\n\nThere’s a 64.1% chance the answer would come from outside the US\nThis depends a bit on what programming language you ask about. For example, PHP questions asked in the US have a 75% chance of being answered from outside the US, while R questions have only a 54.9% chance.\nQuestions asked from non-US countries are even more likely to be answered across borders; for example, a question asked in the UK has a 89.7% chance of the answer coming from outside the UK.\n\nIt makes sense that questions flow freely across national borders, but you might expect time zones to make some difference. However, it turns out that’s a small factor in who answers your questions.\n\nJust 16.9% of answers come from a user in the same time zone as the person who asked it, and of ones that don’t, a user is almost as likely to get an answer from someone eleven hours away as someone who is three hours away. This is both because answers don’t necessarily come immediately, and because even immediate answers may come from someone working on a different schedule (for example, a question asked in the morning in New York could get answered in the evening in Mumbai).\nSeven countries\nI’ve wanted to write about the global nature of Stack Overflow’s user base for a while, but this post has a particular motivation. Last Friday, President Trump issued an executive order banning immigration to the United States from seven countries: Iraq, Iran, Syria, Libya, Sudan, Somalia, and Yemen.\nMany leaders of tech companies have expressed their outrage. Alongside many other concerns, most recognized the enormous contributions of immigrants from these countries to the American tech industry. This includes our CEO Joel Spolsky, who pointed out that developers in these seven countries make up a valued part of our userbase. I’d like to share more about how they fit in.\nIn just the last week about 125,000 developers in these seven countries visited Stack Overflow. (If you’re wondering, they visit a bit more Matlab, C#, and Android than the average country, and less R and Linux). This isn’t counting the many developers from these countries who have since emigrated elsewhere.\nUsers from these seven countries have written over 225,000 posts on Stack Overflow, including over 110,000 answers to other users’ questions.\nQuestions and answers from these seven countries have, in combination, been visited over 500 million times. If I made an interactive globe showing all the ways developers in these countries have helped others through the knowledge they contributed, it would crash your browser.\nConclusion\nThe point of this post is not to focus on these seven countries; there are hundreds of countries that make Stack Overflow the powerful resource that it is. It’s to share just how much we owe to the global community of developers, and to celebrate what’s possible when a community is built on cooperation and trust across borders.\nIf you’re a software developer, you’ve likely gotten help from questions and answers from these seven countries, even if you didn’t know it. You may have products and open source tools developed by immigrants from them. If you’ve ever used the Stack Exchange mobile app, you’ve benefitted directly from the work of a former Iranian refugee.\nSupporting that kind of global cooperation is what Stack Overflow is all about.",
        "url": "https://stackoverflow.blog/2017/01/30/developers-without-borders-the-global-stack-overflow-network/"
    },
    {
        "title": "El estado de Stack Overflow en español: Enero 2017",
        "content": "Entramos ya al segundo mes del año y la cosa sigue moviendose rápidamente. Es nuestra costumbre el compartir algunos numeritos para que se vayan dando una idea de como va todo con el sitio.\nLes presento algunos numeros interesantes del mes de enero:\nMiembros que contestaron la cantidad más grande del mes:\n\nJorgesys – ¡123 preguntas contestadas!\nguzgarcia – ¡78 preguntas contestadas!\nStefan Nolde – ¡75 preguntas contestadas!\nMarcos Gallardo – ¡53 preguntas contestadas!\nsstan– ¡48 preguntas contestadas!\n\nLas 5 respuestas más votadas a favor del mes:\n\n¿Cómo subir una aplicación al Google Play con todos los derechos de copyright? – 12 votos\nNombre de función javascript dentro de la propia función – 12 votos\nDetectar en que elemento html se ha hecho click con jQuery – 12 votos\nCómo declarar un arreglo tridimensional en java – 10 votos\nAcortar múltiples condiciones en una sola para ver si una variable coincide con algún texto – 10 votos\n\nLas “Top 5” etiquetas del mes:\n\njava – 2,438 preguntas\njavascript – 2,240 preguntas\nphp – 2,118 preguntas\nandroid – 1,940 preguntas\nc# – 1,359 preguntas",
        "url": "https://stackoverflow.blog/2017/02/07/el-estado-de-stack-overflow-en-espanol-enero-2016/"
    },
    {
        "title": "El estado de Stack Overflow en español: Febrero 2017",
        "content": "Continuamos presentando algunos números interesantes mensuales.  En esta ocasión, nos toca reportar sobre el mes de febrero. ¿Qué les parece lo siguiente?\nLas 5 preguntas más respondidas:\n\n¿Cómo generar identificadores únicos con JavaScript? – 8 respuestas\n¿Cual es la diferencia entre static y final? – 6 respuestas\nContar números negativos de un array en php – 6 respuestas\n¿Se pueden colocar mas de un id en un solo input type text? – 6 respuestas\n¿Como validar un campo en html5 sin que se recargue la pagina? – 5 respuestas\n\nLos Top 5 miembros que contestaron la cantidad más grande del mes:\n\nJorgesys – ¡94 preguntas contestadas!\namenadiel – ¡94 preguntas contestadas!\nStefan Nolde – ¡76 preguntas contestadas!\nGustavo García – ¡62 preguntas contestadas!\nx-rw – ¡53 preguntas contestadas!\n\nLos 3 miembros que hicieron la mayor cantidad de preguntas este mes:\n\nUserNameYo – 22 preguntas\nDavid – 17 preguntas\nPierro – 17 preguntas",
        "url": "https://stackoverflow.blog/2017/03/14/el-estado-de-stack-overflow-en-espanol-febrero-2017/"
    },
    {
        "title": "Does Anyone Actually Visit Stack Overflow’s Home Page?",
        "content": "Yesterday we were amused to see this post on Reddit’s sysadmin forum:\n\nOur architecture lead Nick Craver looked into this and gave a great answer, including that about 29% of the previous day’s Stack Overflow traffic was to the home page.\nFrom his perspective as a system administrator, that’s exactly the right analysis. Nick’s team has to ensure the site renders reliably and quickly, so counting the number of requests make sense. However, as a data scientist I’m more interested in how users view the site, and the vast majority of our traffic comes from automated traffic, including search engines and scrapers.\nWhen real people view Stack Overflow, how often are they visiting just questions? Who does and doesn’t visit the homepage, or other parts of the site?\nWhat pages do people view?\nIf we look at yesterday’s traffic (2017-03-08), including automated traffic, here are the most common types of page views.\n\n(Note that this is only counting pageviews, not asynchronous requests that load after a page or internal API calls; sysadmins do care about the latter).\nEach of these represents one route: typically one possible type of page. The most common include:\n\nQuestions/Show: question pages like this one, the kind of page most people associate with Stack Overflow\nHome/Index: our homepage\nUsersShow/Show: visits to a user’s profile (here’s mine)\nQuestions/ListByTag: Pages with the most recent questions from a tag, like this one\n\n\nIt does look like a lot of people are visiting the homepage, nearly as many as are visiting questions. However, that’s because we’re counting automated traffic! As a next step, I’ll take a few simple measures to remove automated traffic and include only people we think are real users. These measures won’t catch a savvy scraper who “doesn’t want to be caught”, but they easily filter out your “everyday” bot.\n\nAlmost 95% of our non-automated traffic is to question views, with only a small percentage to the home page or other views. This isn’t surprising (it’s the motivation behind the Reddit post), but it’s a good insight into typical visitor behavior.\nHow do registered visitors use the site?\nWhen I tell a software developer I work at Stack Overflow, they almost always recognize it but often admit that they don’t have an account. That’s true of most of our users; only about 15% of our daily traffic is logged in when they visit. Most developers visit Stack Overflow questions from a Google search as they solve their problems, then move on with their work.\nWe owe a lot to the community that’s registered on the site, however, because they’re responsible for our terrific set of questions and answers. As you might expect, this part of our community visits the site in a different way.\n\nWithin unregistered traffic, the percentage of traffic that goes directly to questions is up to 97%. The Reddit question was right! But a typical registered visitor, who might have answered some questions, does spend some time on the home page, as well as visiting user profiles and tag lists of recent questions.\nPower users\nWhile we’re grateful to everyone who contributes to the site, some within the community (“power users”) contribute an enormous amount of knowledge We usually represent this in terms of reputation, gained when content you’ve contributed is upvoted.\nTwo thresholds we use for user privileges are established users, who have at least 1,000 reputation, and trusted users, who have at least 20,000 reputation. To give a sense of these levels: among users who visit in a typical week, the median user with less than 1,000 rep has answered about 3 Stack Overflow questions, the median established user has answered about 50, and the median trusted user has answered about 750 (!).\nHow do power users visit the site?\n\nTrusted users (20,000+ reputation) spend about half their time viewing actual questions, and most of the other half visiting the homepage, question lists, or user pages. The home page offers suggestions of questions that are both new and likely to be relevant to you, so this makes sense. The ListByTag route is also relevant as an insight into how “power answerers” use the site; many stick to a particular tag that they’re familiar with, and watch for brand new questions they can answer.\nWe’re happy that we make the lives of developers easier, even if they’re just getting a quick solution after a search. But we’d also encourage you to join the world’s largest developer community, whether to ask and answer questions, get your next job, or build your online presence with a Developer Story. In any case, next time you solve your problem through Stack Overflow, remember the hundreds of thousands of users who regularly ask, answer, edit, and moderate the site to make it all possible.",
        "url": "https://stackoverflow.blog/2017/03/09/anyone-actually-visit-stack-overflows-home-page/"
    },
    {
        "title": "How Do Students Use Stack Overflow?",
        "content": "Since Stack Overflow was founded, we’ve described it as “a question and answer site for professional and enthusiast programmers.” It supports both experienced developers who code as part of their work, and people who are learning as part of a university curriculum.\nSo just how many of our users are students? We on the Data Team can estimate this based on what fraction of our questions come from university ISPs. In this post, I’ll share some numbers about how students (both undergraduate and graduate) use Stack Overflow, what programming languages they tend to ask about, and how this differs between schools.\nFinding students on Stack Overflow\nIn this analysis, we considered a question to be from a university if it was asked from an ISP whose name contained “University”, “College”, or “Institute of” (some manual examination showed this covered the vast majority of common cases). Not all universities have their own ISP, and students may live or work off campus, so this is probably underestimating the fraction.\nSince these results may have changed since the start of the site, we considered only questions from the years 2014 through 2016. And while Stack Overflow is a global network, our ability to recognize schools from their IP addresses is less reliable outside English-speaking countries, so we considered questions only from four countries: the United States, the United Kingdom, Canada, and Australia. These are four of the seven countries that ask the most questions.\nOverall, this dataset comprises 3.5 million questions.\nQuestions from Universities\n7.75% of questions in these countries were asked from colleges and universities. Which schools asked the most questions from each country?\n\nOne notable feature is that many of these are large research universities, where many of the Stack Overflow askers may be graduate students or other academic researchers.\nAs you might guess, the percentage of questions from universities depends dramatically on the time of year, based on whether most schools are in session:\n\nNotice that the percentage of questions coming from universities drops not only during the summer, but also at several typical school holidays: the start/end of the year (winter break), spring break in March, and Thanksgiving break at the end of November. The rate is also nicely consistent across the three years.\nWhat Tags Tend to be Asked about from Schools?\nEach Stack Overflow question comes with one or more tags describing the languages and technologies it is asking about. What tags were most likely, or least likely, to come from a university?\n\nWe can see three types of questions that tend to get asked from universities. First are languages and frameworks used in academic research, such as numpy, R and (especially) MATLAB. Next are low-level languages such as C and C++, which may be used in introductory programming and operating systems classes; my first college class was taught in C. We can also see questions about algorithms and data structures, such as “algorithm”, “loops”, “list”, and “arrays”.\nAmong the tags least likely to be asked from universities are Microsoft technologies, such as C#, .NET, WPF and SQL Server. This makes sense since those generally tend to be popular in enterprise businesses rather than educational and research contexts.\nHow can we confirm our hypothesis that some tags, such as R and MATLAB, are asked by university researchers, while others are asked by undergraduate students? Let’s look at when they’re asked from universities during the year. As we saw earlier, undergraduates generally ask questions mostly during the typical fall and spring semesters, while researchers likely work and ask year-round.\nHere are the seasonal trends for six selected tags.\n\nMany Java questions are asked from universities during the fall and spring, but they drop to barely a third of that level during the summer. C and C++ also appear to be mainly asked by students on a semester schedule. In contrast, R and MATLAB are pretty consistent throughout the year, with 25% or 40%, respectively, of their questions getting answered from universities no matter the month (with the exception of the winter break).\nBesides the distribution across the year, tags also aren’t evenly distributed among US universities. For example, in American universities, the choice of programming languages differs between public and private universities.\n\nMicrosoft technologies like C#, ASP.NET, VBA and SQL Server were more commonly asked from public universities, while cloud technologies like Heroku and AWS, as well as web frameworks like Django and Flask, were more commonly asked from private universities.\nSince I program in R, I was also curious what universities had the greatest amount of R. (So as to avoid having one student disproportionately affect their school’s tags, we measured the percentage of users who had asked from a school who had ever asked about R).\n\n(Note that Australia had only 7 universities with at least 200 askers). The most R-heavy schools included a mix of public and private research universities, and some are recognizable as having prominent statistics programs.\nThis analysis gives a sense of how students use Stack Overflow differently from professional developers. In future posts we’ll look deeper into this data, including considering how students differ in what questions they answer or visit, and examining how this relates to tags most visited on weekends. Whether you’re a student or not, you can support others’ education by signing up for Stack Overflow and contributing today.\nIf you’re a student looking for your first job, check out the latest listings for entry-level programmers.",
        "url": "https://stackoverflow.blog/2017/02/15/how-do-students-use-stack-overflow/"
    },
    {
        "title": "How Stack Overflow Redesigned the Top Navigation",
        "content": "You may have noticed that we’re sporting a new look today.\n\nWe launched this update today as part of a series of changes supporting our core mission: Make developers’ lives better. In the past year, we fully integrated our by-developers, for-developers Jobs product. We added a whole new content type — Documentation — to help you find even more solutions to your programming questions. And we added Developer Story to help developers ditch the outdated resume format.\nDuring this time, we also evolved our product development process to include more user research, allowing us to validate ideas earlier and surface more users’ voices. There’s a ton you can learn by watching people try to use a feature — things that don’t get uncovered when directly soliciting feedback. As both product and process expanded, it quickly became apparent that Stack Overflow had outgrown some of our previous design decisions.\nA Common Theme\nA pattern surfaced when talking to users: even with the addition of Jobs and Documentation to the navigation, many developers weren’t aware of the change. Digging deeper, we discovered that many weren’t really seeing the top bar at all – a “mental block” so effective that most users also couldn’t identify what the icons meant.\n\nHere’s what a few of you said:\n“When I come here I’m on a mission; I don’t care about the rest.”\n“You’re only there for 1 reason: to find the answer to your question.”\n“From my point of view, nothing above the question title exists.”\n“I scroll down and read the question.”\nThe data validated our hypothesis — of the average 9.3 million daily visits to Stack Overflow, we get fewer than 88,000 clicks to the navigation or top bar (this includes inbox, rep, profile, and search.) If you divided each individual click per visit, that’s fewer than 1% of visits navigating anywhere (and far fewer if you counted multiple clicks per visit). Our navigation is not being used by 99% of our users.\nThe common use case for millions of daily visitors is “come from Google, scroll to middle of the page to a find an answer (without seeing the nav and sometimes evening ignore the question itself), and leave. This workflow makes sense — and we love helping the world’s developers gain programming knowledge quickly — but this also means many visitors don’t benefit from everything that Stack Overflow has to offer. If they’re not aware, then we’re less effective in helping more developers share their knowledge by finding questions to answer, advance their career search, utilize Documentation, or become contributing members of our community.\nWe hypothesized that a lack of engagement with the nav was due to a combination of browsing habits, visual hierarchy, and the right-hand position of the layout. Based on research about F-shaped reading patterns and how readers’ eyes commonly move down the page, it made sense that our navigation was sub-optimal for most people.\n\nWe also hypothesized that the focal point of the page (the logo) caused many users to skip over the small top bar. Plus the nav and top bar quickly scroll out of view when moving down the page.\n\nThe product design team then did a design sprint. Each designer created their own design of the top nav and then converged to critique and identify the strongest ideas. The team then combined the best parts of their ideas into one design. The main thinking generated from the sprint:\n\n\nRemove clutter and group similar information in a way that’s more quickly parsable\nStick the navigation to the top of the page so that users who are scrolling quickly to answers or arriving from answer or comment links still have access to search or navigate the site\nUse navigation design patterns more commonly found in contemporary web apps\nDesign the navigation as shorthand for the Stack Overflow brand\n\nStack Overflow users compared the new screens against the current navigation in focus groups at three tech companies. Here’s a sampling of what we heard about the current version of the top bar:\n“I’m not even sure if the black bar is new.”\n“I logically filter out the stuff that I know I’m not looking for.”\n“Nav looks like tags — they might filter, but they don’t look like navigation. Makes you question what it is so I don’t click it and instead go back to Google that I’m familiar with.”\n“I’m signed in and I still don’t know what those (inbox, achievements) mean.”\n“Jumbled stuff at the top that you have to read and decipher.”\n“Black bar is kinda… doesn’t look like it belongs, all else is white, grey, orange.”\nAnd the new version:\n“On the current nav I didn’t know what the inbox / rep icons were, on the new one I know what every button will do.”\n“I know I can search, I know I can go to Jobs.”\n“Much more modern, this one.”\n“I like the old black bar, but I like that I know what I’m getting myself into on the new one.”\n“A lot less noise, more signal.”\n“Cleaner, more organized. Instead of jumbled stuff at top you have to read and decipher you can go to this.”\n“More standardized position that you’re used to on other sites.”\nProject Definition\nAt this point there was enough info to make the top navigation redesign an actual project. The nav is an area of the site that touches so many different use cases, user types, and metrics; it was important to tightly scope the project and clearly define the goals in advance in order to ship quickly. To mitigate scope creep, feature parity to the current navigation was the defined scope (with a few exceptions).\nPrimary goals\n\nPresent all the tools we provide for developers in a way that’s consistent with them actually discovering them\nIncrease traffic to Jobs and Documentation\nMore intuitive, updated visual design\nIncrease the number of users who sign up and gain access to more site features\n\nSecondary goals\n\nIncrease in notifications acknowledged\nIncrease or no decline in searches\nNo decline in questions asked\nAnd a handful of other important and boring metrics that we simply didn’t want to screw up\n\nThe progressive rollout plan to measure success had the following objectives:\n\nUsability tests on clickable prototype with 6 additional users to catch any major UX and functionality issues and gather qualitative insights about the new design\nA/B test with 5% of anonymous users to measure usage data\nA/B test with 10% of registered users with less than 500 reputation to measure usage data\nOpt-in for all Stack Overflow employees\nOpt-in for all users for Meta feedback and for debugging\n\nOur findings from each…\nUsability Tests\nThese tests were conducted in 1-1 recorded hangouts with 6 users who ranged from having low to high reputation.\nWhile a few participants struggled with identifying two of the icons (which were updated mid-testing), all participants successfully completed all tasks, and all participants preferred the new design over the current.\n“Looks really, really good. By far I like the new one — in the current one, you don’t notice the navigation at all, only the top bar. The (sub) tabs catch my eye before the current navigation.”\n“In the old, it is weird to me that the two bars exist separately. This one feels more natural.”\n“The new one is cleaner. Less wasted space. Things are more compact on the new one and account info is better grouped. Tabs across the top is preferable because a lot of sites have a similar flow. …much prefer the new one.”\nA/B Test with 5% of Anonymous Visitors\nThis test ran from 2016-12-01 to 2017-01-19 for about 2 million users in each A/B group. Anonymous visitors account for about 97% of all page views but only 61% of the current navigation clicks.\n\nSignups increased by 7%\nClicks to Questions increased by 163%\nClicks to Jobs increased by 160% (an expected 16% increase in overall Jobs traffic)\nClicks to Documentation increased by 229%\nClicks to Tags increased by 113%\nClicks to Users increased by 178%\nClicks to Ask Question increased by 33%\nSearches decreased by 13%*\n\n*Adjustments to the design between the anonymous test and the registered user test were made that resolved this issue and actually improved the number of searches in the next test.\nWhile some dropoff often happens after launch due to novelty effect, these increases were large enough to make us think that a good portion of the increases would be sustained after launch. Regardless, we’ll continue to measure and monitor the performance of the new top nav.\n\nA/B Test with 10% of Registered Users with Less than 500 Rep\nThis test ran from 2017-01-18 to 2017-01-30 for about 100k users in each A/B group . Registered user account for about 3% of all page views but about 44% of the current top navigation clicks.\n\nInboxes shown increased by 45%\nAchievements shown increased by 11%\nClicks to Questions increased by 51%\nClicks to Jobs increased by 99% (an expected 15% increase in overall Jobs traffic)\nClicks to Documentation increased by 113%\nClicks to Tags increased by 32%\nClicks to Users increased by 82%\nClicks to Ask Question remained the same\nSearches increased by 8%\n\nOpt-in for Stack Overflow Employees\nThis phase began Tuesday, February 1. About 100 Stack Overflow employees opted in to test the new top nav.\nOpt-in for All Users\nThis phase began 2017-02-07 to 2017-02-14. Around 1600 users opted in.\nFeedback from the Meta community has been extremely helpful. Thank you to everyone who participated! A number of bugs were fixed during this period, some feature requests were implemented and others considered or planned. For a more complete list of updates, see Des’s most recent post.\nNext Steps\nThere’s a running list of ideas we’d like to try in the near future. We plan on iterating upon the design and functionality of our new top nav in a series of A/B tests. There are also early-phase explorations into how this might roll out to international and other Stack Exchange community sites.\nThe design team is working on a cohesive design language in order to create consistent experiences across all our product areas. Some of these changes have already rolled out, and more are coming in the near future. Special thanks to Paweł Ludwiczak’s and Oded Coster’s hard work designing and implementing the new top navigation.\nAs always, we appreciate your feedback. If you have a bug or feature request — post it on Meta.",
        "url": "https://stackoverflow.blog/2017/02/14/why-stack-overflow-redesigned-the-top-navigation/"
    },
    {
        "title": "El estado de Stack Overflow en español #2",
        "content": "!Seguimos compartiendo estadísticas interestantes del mes anterior!  En este caso, llevamos en mente el mes de octubre.  Les dejo con los siguientes numeros:\nPreguntas más respondidas:\n\n¿Como agarro un JSon desde AsynTask en android?\n¿Por qué es considerado una mala práctica utilizar variables globales?\n¿Cómo mostrar productos relacionados en el carrito de la compra?\n\nRespuestas con más votos:\n\nConsulta sobre desarrollar una IA (inteligencia artificial) [cerrada]\nHackeo de sitio web\nPorque no hay “clases” en JavaScript?\n\nLa pregunta más visitada:\n\nConsulta sobre desarrollar una IA (inteligencia artificial) [cerrada]",
        "url": "https://stackoverflow.blog/2016/11/11/el-estado-de-stack-overflow-en-espanol-2/"
    },
    {
        "title": "Stack Overflow Job Search: Better, Faster, Stronger",
        "content": "Finding a job you love should be easy and hassle-free, which is how we built Stack Overflow Jobs: Personalized job matches, and no recruiter spam. We’re expanding our promise to users today with even more magic.\nStarting today, you can expect…\n\nBetter filtering options: Developers can now filter by technologies, salary, experience level, company and industry.\nFaster search engine: When a user runs a search or performs an action, only specific sections of the page refresh, saving a second or two per action.\nStronger and more specific job alerts: More filtering options allow developers to conduct better searches and set more specific job alerts.\nSorting by best matches and salary: You’ll see the best matches at the top of your search results by default. You can also sort by salary and newest.\n\nMatch Your Stack, Match Your Experience\nWork with what you know best. Our new technology filtering lets you to view jobs with tech you want to work with and exclude jobs with tech you dislike.\n\nYou can now also filter by range of experience (e.g. student, junior, mid-level, senior, lead, and manager).\n\nMoney, Money, Money & More\nWe believe job seekers should be empowered with as much information as possible when looking for a job – especially salary. It’s why we built and are always improving our own salary calculator. And it’s why we want to put salary filtering up front for search. Salary filtering lets you set a minimum annual salary and choose among ten currencies (USD, EUR, GBP, CAD, AUD, INR, SEK, PLN, CHF, DKK).\n\nWant more than just cash on hand? Look for other things to sweeten the deal with our Perks filter. See which job listings offer remote work, visa sponsorship, or relocation.\n\nCompanies You Love, Companies You… Don’t\nOur new updates allow you to see specific companies (like Stack Overflow) with open jobs or to exclude certain companies. You can also filter by industry.\n\nGet Alerts For Perfect Fits\nAlong with all these new and improved filters to help you suss out specific criteria, we’re also giving you a way to set very specific job alerts, which you can receive daily, and match alerts which you can receive weekly.\n\nFind a Job You Love Now\nCurious? Want to try it out for yourself? Head over to Stack Overflow Jobs now to search, filter, and create alerts.\nGot questions? Leave comments for us on Meta. Our community’s feedback is at the heart of what makes our products like Jobs better, faster, stronger. <3",
        "url": "https://stackoverflow.blog/2016/11/14/stack-overflow-job-search-better-faster-stronger/"
    },
    {
        "title": "Estado da Pilha Internacional – Novembro/2016",
        "content": "Alguns meses atrás eu comentei um pouco sobre o futuro do Stack Overflow Docs no nosso site. Não era um comentário dos mais animadores: “A primeira parte, sobre nós ainda não sabermos se teremos aqui também, é verdade.” mas era uma descrição verdadeira da situação. Só que, como o Tomás Barcellos notou, já se vão meses desde então. O que mudou?\nA principal mudança é que passamos de indecisos para decididos. Vamos, assim que possível, ter Documentação no SOpt. Ênfase para “assim que possível”. Há muito que precisa ser resolvido na parte técnica até que Docs esteja disponível para vocês. Os 2 principais problemas são:\n\n\nAinda somos péssimos com traduções: Os tradutores fazem um excelente trabalho mas nós continuamos jogando string atrás de string no projeto, deixando-o cada vez maior e mais complexo. Assim não há projeto de tradução que aguente. Precisamos encontrar uma maneira de organizar o projeto e fornecer contexto, para que nossos bravos tradutores não passem tanta dificuldade. Sem o trabalho dos tradutores, não há SOpt.\n\nDocs ainda não é um projeto estável: Esse é um problema associado ao primeiro. Docs é um projeto novo e, portanto, ainda sofre mudanças constantes, principalmente de interface. É basicamente inviável que um projeto desse porte consiga se manter constantemente traduzido com a ajuda de voluntários, principalmente se não damos à eles ferramentas minimamente decentes.\n\nEsses são problemas bem complicados, mas suas soluções são requerimentos absolutos para termos Docs. Caso a Documentação fosse trazida ao nosso site, no momento atual, sua interface rapidamente se reverteria ao inglês e isso é a última coisa que queremos.\nContinuamos trabalhando. A equipe de desenvolvimento tem algumas ideias sobre como oferecer uma melhor categorização de strings no nosso projeto. Nós, da equipe de comunidades, estamos pensando em formas de distribuir ainda mais a carga sobre os tradutores e revisores do site. Cada passo nos leva mais perto de termos um SOpt melhor, e mais perto de trazermos Docs até vocês.\nAntes, a pergunta era se teríamos Docs. Hoje, a pergunta é quando.\nAlgumas estatísticas de Outubro/2016:\nQuem Ganhou Mais Medalhas (prata ou ouro)\n\nMarconcilio Souza: 5 medalhas\nFlorida: 4 medalhas\nstderr: 3 medalhas\nTaisbevalle: 3 medalhas\n\nPerguntas Mais Votadas\n\nA primeira linguagem de programação\nQual a diferença entre codificação, criptografia e cálculo hash?\nO que é uma condição de corrida?\n\nPerguntas Mais Visitadas no Meta\n\nPorque uma pergunta clara e objetiva que pode ser respondido em 2 ou 3 linhas foi fechada como ampla?\nResponder o que está na pergunta? e prever o futuro!\nPorque e que “Como iterar sobre um dicionário” foi fechada?",
        "url": "https://stackoverflow.blog/2016/11/20/estado-da-pilha-internacional-novembro-2016/"
    },
    {
        "title": "Say Farewell to Winter Bash 2016!",
        "content": "Another year has ended, and with that, it’s time to put all the hats back in their boxes. Winter Bash 2016 has come to an end! Over past three weeks, we’ve had ups and downs (err bugs) with hats, but overall, it was a massive success. It appeared that there was fun to be had, and, wow, the hats looked hat-tastic on everyone.\nTime for a Fashion Show\nWe saw many creative ways to wear hats, but here are a few of our favorites:\n\nSome Stats about Hats!\nThis year, 215,960 users earned a total of 797,074 hats! The most awarded hat was our version of a participation trophy, Just Here for the Hat. This hat was awarded to all Winter Bash users on a site, once any 20 hats were unlocked on that site. A total of 269,016 of them were handed out across the network to 214,457 unique users. Some people wore the hat brilliantly:\n\nStack Overflow was the first site to unlock it. They were also able to get the hat less than 8 hours into the fun, with only 6 users. A big congratulations goes out to Language Learning, as it only took 2 users to unlock the hat, with one user having 18 of the distinct hats. In comparison, it took 11 users to unlock the hat on Software Recommendations, which was quite a team effort. All in all, 108 communities earned the trophy hat.\nThe next most common hat was I Have A Little Dreidel. It was awarded 146,403 times to 116,462 users. Because it was awarded an entire week of Winter Bash for participating on a site during any day of Chanukah, most everyone had a chance to earn it.\n\nMany of the other time-based hats were the most common across the network: Epiphany (68,013 times to 58,157 users), Mmmm Bacon (54,058 times to 45,749 users), Bûche de Noël (33,925 times to 28,770 users), and First Responder (605 times to 508 users).\n\nThe silver badge hat, 925, was handed out 54,023 times to 50,954 users. We already knew earning a gold badge was difficult, which made the gold badge hat a bit harder to earn. 24 was awarded 9,488 times to 9,266 users. Just like previous years, we had a few hats for using the mobile applications: Cutting the Cord (2,456 times to 1,932 users), and Loungin’ Around (109 times to 104 users).\nThis year, was the first year we introduced some site-specific hats. Stack Overflow has two products, Developer Story and Documentation, which are not available on the rest of the network, so we awarded hats for participating in them. The NeverEnding Story hat was awarded to 5,263 users, and What’s Up, Doc? was awarded to 3,246 users.\nIn order to offset the Stack Overflow only hats, we created two hats that were available on the rest of the network. To earn Polymath (1,934 times to 516 users) and Running Ragged (256 times to 80 users) you needed to run ragged across multiple sites, showing off your knowledge in more than one area.\n\nThe most difficult non-secret hat to earn was Maverick, which was awarded only to 17 users. This hat required users to post an answer to a -3 question, that went to +3 after the answer was posted. Many tried to get the hat, but obviously this wasn’t as easy as it appeared. The trigger was modeled after the Red Baron hat in 2014 which there are still ongoing discussions around turning into a badge.\nTime to Spill the Secrets About Hats\nWe switched things up this year when it came to secret hats. In the past, users could guess the triggers for a hat, and if correct, and the first to guess it, another hat was awarded. This year, even though hats were not awarded for guessing the triggers, that didn’t stop you from guessing or even asking. Some of the guesses were accurate, others not so much. But without further ado, here are the secret hat details (and some more stats).\nThere were a total of 14 secret hats (assuming you count both the sun and moon version of Where In The World? separately), which totaled 42 hats again, this year. Of course, the most you could earn was 41, since it was impossible to have both the sun and moon hat.\nThe most common secret hat was the solstice hat for participating on December 21, 2016. The Where In the World? Sun hat was awarded 39,078 times to 33,341 users, while the Moon version was awarded 35,784 times to 30,209 users. This was similar to last year’s Flip Flop hat, but Sklivvz got creative in how randomness was assigned.\n\nThe first secret hat awarded was This Is Fine. It was awarded to Jake on Stack Overflow less than 30 minutes into Winter Bash on December 19th. The community accurately guessed this was awarded if you have an upvoted answer on a question with a bounty, but you didn’t win the bounty. This hat was awarded 965 times to 958 users.\n\nThe next secret hat discovered (and accurately guessed by the community) was 180°. It was earned by ColleenV on English Language Learners less than an hour into Winter Bash. In order to get this hat, you needed to vote to close a question, edit it while it was closed, and then vote to reopen…basically you did a 180° on the post. A total of 186 users earned this hat 188 times.\n\nLess than 10 minutes later, Don’t Wanna Taco ‘Bout It was triggered by users who edited or suggested an edit to 5 posts in a single UTC day, without commenting on the post. The very first user to get the hat was Jamal on Code Review. In the end, it was awarded to 1,111 users 1,177 times.\n\nElementary was the next secret hat awarded. Elementary was handed out when users edited 5 questions that were posted more than a year ago. A total of 466 users earned this hat 506 times, with Kris Roofe on Stack Overflow, being the first.\n\nTwo more secret hats, 6 (3,293 times to 3,193 users) and 8,243,721 (354 times to 338 users) were earned by commenting and then cleaning up after yourself. The first hat, 6 aka Bert, was earned if 6 posts were edited by the owner after you commented on them. The second hat, 8,243,721 aka Ernie, was awarded by deleting 6 comments from under posts (not your own), that were edited by their owners after you commented on them. These two hats worked hand in hand. If you commented on 6 posts, the owner edited them, and you deleted the comments, you’d earn both hats. Jaromanda X was the first to earn 6 on Stack Overflow, with TypoCube™ being the first to earn 8,243,721 on Database Administrators.\n\nAlso awarded on the opening day of Winter Bash was my personal favorite, Blue In the Face. Users earned this hat by talking so much you were blue in the face. In other words, by posting 10 comments that earned an upvote. It was first given out to rmaddy on Stack Overflow. Overall, it was earned 2,660 times by 2,523 users. It took a few days, but the community eventually guessed this trigger.\n\nEven though it was discovered on the first day of Winter Bash, the rarest secret hat was TheyLive. It was only awarded to 133 users. To get this hat, you needed to head into the suggested edit review queue and either “Improve Edit” or “Reject and Edit” 5 times. The hat was a zombie head because the edit lived on through your improvement of the post. Emile Bergeron on Stack Overflow was the first to get the hat.\n\nThe community accurately guessed Mild Mannered, the last secret hat found on the first day of Winter Bash. Users earned this hat by posting an answer that got accepted, but received no other votes for 12 hours. In the end, this was awarded 7,299 times to 7,180 users.\n\nOn third day of Winter Bash, The Hatter was awarded. This threw people for a loop because it was seen so late after the start of hats (the lateness that was due to a bug we found). This was awarded when a user posted a positively scored question at 6:00pm in any timezone. 6:00pm was chosen because it’s the time the hatter and the March Hare are stuck at. It was given out 3,761 times to 3,715 users. Once awarded, it didn’t take long for users to guess the trigger.\n\nThe two remaining secret hats were awarded several days into Winter Bash because they involved performing some act over a period of time. Five days into Winter Bash, Trendsetter appeared. Fashionable users earned the hat by wearing 5 different hats, and by changing their hat using the hat rack on a site, on five different days. Trendsetter was awarded 1,966 times to 1,864 trendy users.\n\nThe very last secret hat earned was Like Clockwork. It was awarded if you voted between 3am and 9pm UTC (+/- 9 hours) on nine consecutive days during Winter Bash. Voting like clockwork earned you the hat, and it was earned 1,313 times by 1,211 users.\n\nThe Hat-Fanatics Leaderboard\nWinter Bash is our way to have fun at the end of the year with all our communities. Even though virtual hats have gone away, this post wouldn’t be complete without recognizing some of those who went above and beyond to earn all the hats. They are referred to as the Hat-Fanatics!\nThis year we had 4 users who earned the most hats network-wide:\n\nPlease join me in congratulating the users who earned all 41 hats across the network:\n\nAlexander O’Mara\nalecxe\nEran\nDavid\n\nAnd with that, it’s time to say so long to Winter Bash 2016. We’ll be adding more stats about hats on Meta Stack Exchange over next few days. If you have any feedback on this year’s event, please chime in on Meta Stack Exchange.\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2017/01/09/say-farewell-to-winter-bash-2016/"
    },
    {
        "title": "El estado de Stack Overflow en español Diciembre 2016",
        "content": "Se termino el año 2016 y aquí les dejo unos numeros interesantes para reflexionar sobre la actividad que vimos en diciembre.  Como siempre, se aprecian comentarios y sugerencias para mejorar las estadisticas que se comparten. \nPreguntas más respondidas:\n\nForzar salto al catch 10 Respuestas\nManera mas eficaz de comparar dos arreglos 6 Respuestas\n¿Cuál es el significado del tipo de variable que tiene el mismo nombre que su clase? 6 Respuestas (Cerrada)\nPatrones de dibujo en C 6 Respuestas\nConsulta agrupada con distintos contadores 5 Respuestas\n\nRespuestas con más votos:\n\n¿Cómo puedo enviar SMS desde una aplicación hecha en c# sin pagar API de terceros? 17 votos\n¿Como obtener siempre los mismos resultados al encriptar una cadena? 10 votos\n¿Cual es la diferencia entre position: relative, position: absolute y position: fixed? 9 votos\nRotar rueda mediante la fuerza de presión 9 votos\n¿Cómo estructurar una cita con autor en HTML5? 8 votos\n\nLas preguntas más visitadas:\n\nRotar rueda mediante la fuerza de presión Vista 244 veces\nSimplificar y generar código captcha PHP Vista 222 veces\n¿Cómo llamar a una función usando un if con dos condiciones? Vista 202 veces\n¿Cómo puedo subir una imagen de Android a un servicio ASMX? Vista 198 veces\n‘ERROR in Cannot read property ‘listLazyRoutes’ of undefined’ Angular 2 Vista 196 veces (Cerrada)",
        "url": "https://stackoverflow.blog/2017/01/05/el-estado-de-stack-overflow-en-espanol-diciembre-2016/"
    },
    {
        "title": "How We Make Money at Stack Overflow: 2016 Edition",
        "content": "I’m Nick Craver, and you may remember me from my posts about how Stack Overflow does deployment, how we do hardware, and how we built our architecture.\nWhat I haven’t explained yet, and what remains a mystery to most developers I meet, is how we make money. I want to do this now not only to answer this frequently asked question, but because it’s my and Stack Overflow’s belief that being relentlessly open and honest with our community can be nothing but good. That extends to normally sticky situations like finances, and it’s why we’ve created projects like the Stack Overflow Salary Calculator to make our salary processes transparent.\nWhy We Make Money\nFor a little more context on the timing of this post: I’m the architecture lead for Stack Overflow, and I’m writing this just after our annual company meetup. Our meetup is an awesome time for remote employees like me because I get to see people I’ve never met in person before and discuss ideas. Endlessly.\n\nIt’s also a great reminder of why we do what we do and how we go farther when we work together. I’m coming up on 6 years of my life spent building what I consider to be the best resource developers have ever had. I love making it better, every day. But I don’t build these things alone. I am insanely lucky to work with some of the best developers, sysadmins, designers, managers, marketers, sales, and all of the people who support that in the world. I don’t build Stack Overflow. We build Stack Overflow.\n\nI spent countless hours last week talking with many of these people, some of whom I’ve never spoken to before, about how we grow as a company. Much more importantly, we’re figuring out how to do it while being, for lack of a better word, honorable. I have high standards for how we behave, and I hope that’s reflected in what you think of Stack Overflow. I am extremely protective of our users. You can ask anyone who works here. It’s is my very strong belief that we have a built up a trust with the community that is not easily earned and is impossible to replace. I want to work for a company that respects that trust, and I do.\n\nWhile this is a shared, company-wide belief, historically we’ve heard concerns about how we can both respect users and make money, or that the money is just this thing we do for our VCs or because we want to keep the lights on. We want to squash that perception. Sure, money is required for sustainability. But we’re here fundamentally to help users, and we exist because you decide to let us exist. That’s why we’ve structured our monetization into a cycle that continuously improves the community, and doesn’t treat our product processes like some sort of resource extraction. How much money we make is a direct proxy for how much we are helping our users. We focus on maximizing how we help users in order to make a great business. Very few companies have done this successfully, and we take great pride in the fact that we’re one of them.\nHow We Make Money\nStack Overflow Talent & Stack Overflow Jobs\nWe help companies build their brand and source technical talent through our business products: Display Ads and Talent. These services in turn help developers find better jobs and also learn about companies in a way that is respectful to the user experience (no spammy inmail, no flash ads, etc.). We consider the developer experience in everything we do, which is what makes everything we sell as a company unique.\nIt’s a lot like questions and answers. Companies are asking for developers, and we need experts to answer the call. In order for this to work, we need people on both sides of the equation. The more companies and developers we have, the better and faster the matching we can do with developers and hopefully their dream jobs. For companies, we aim to match them with a handful of candidates that are an awesome match, not 500 candidates that barely match at all. This is where we can provide value. We want to optimize things. We don’t want to waste your time or a company’s time – there’s so much inefficiency here we aim to improve with the whole hiring process.\n\nOur position is relatively unique because we can help both companies and developers at the same time. That’s not bullshit. I believe we can do this. I believe we can be better at it than anyone else. We’re already placing thousands of candidates in thousands of jobs, but there are many more thousands of jobs waiting for the right candidates right now. One step of improving that is our Developer Story. I helped build this because I think it’s an awesome way we can improve life over resumes and CVs. It helps developers show off who they are, the things they do, and (I hope) in an approachable way that’s maintainable. It also lets you find a job. If you’re looking, or even just curious, the more complete your Developer Story is, the better chance we have of matching you to the right jobs.\n\nIf you have no interest in either, that’s perfectly okay too. While we’d love to help match you to a perfect company, we built both Jobs and Developer Story to support our core mission of serving ALL developers, including those of you who just don’t care about job searching right now. We’re working to change how companies treat developers not only through the standards built into Jobs (e.g. no spamming allowed), but also through our Developer Hiring Blog, which we created for the express purpose of improving employer and recruiter practices. And with Developer Story, we want to change the perception that developers are only as good as their last gig or a title. Developers are creators with stories to tell, whether that’s through code or blog posts they’ve written or individual teams they’ve served on or even what they’re reading right now. These products weren’t just launched to hit a bottom line; they were built to shift paradigms.\nStack Overflow Ads\nWe’re a major website, and our ads solution is a major player in how we survive. But we don’t want you to click on something you don’t care about. We want to give you something you want.\nOur goal is to give you something as relevant as humanly possible, and when that fails we’re trying to give you something as relevant as this sentient computer over here thinks is possible. I’m not sure if giving it feelings was a good idea, but we’ll see. Anyway, we’re constantly working on it. It’s our job to make the ads we need to survive also be as relevant to you as possible. We have brilliant people working on this, and a large part of it is all after an overall goal: understanding developers, so that we can serve you better.\n(So, how do we feel about ad blockers? We don’t care, and here’s why.)\nWhat are we doing with ads now? In short, we’re not adding more ads; we’re just improving what we have. We have a little more smarts about what technologies you, as a developer, like than most places do. We want to see what we can apply there to make ads always more relevant. It’ll take a little longer, but we also want to make ads load faster as well – that’s a bigger project.\nWhat we’re not doing is lowering the quality of our ads. Did you know we have a lot of unpaid inventory on Stack Overflow every month? Every time we display a “house ad” (which is what we call an ad for another site on the network) or a “community ad” (voted on by the community), we could display a paid ad. But we don’t. We don’t because if we don’t have anything even remotely good to show you, we shouldn’t.\nAnd we don’t want to use an automated system that selects some ads for us. We looked at this. It didn’t allow us the control we required to maintain the level of quality we want to maintain. We have intentionally left a lot of money on the table. Sacrificing quality is not what we want to be known for. We believe there are better ways.\nIt’s important to know that the rejection of ads we could be selling came from our ad sales team. These are the people actually making money from selling ads. And they rejected the idea because they care more about what we’re doing and what you think of us than earning more money for ourselves. Do you have any idea how fucking rare that is? Our Talent sales team that faces employers behaves the same way. All of these people care about something bigger than themselves, and that’s why I love working at this company.\nWe have a few ads that are loading slowly (thanks for the reports, meta users!). We’re tracking down the advertisers and figuring that out, helping where we can. That’s a complicated one due to how many people are involved, but we’re on it. Samo and I will be adding timing information to our sampling profiles for these items, so we can keep an eye on them in the future and alert on issues automatically. We believe ads that load slowly or are expensive diminish the user experience. Performance is a feature and anything on the page matters to us.\nI’m working with our ad sales team to ensure starting in January 2017, all of our advertisements will be HTTPS compatible. This is mostly the case today, but not guaranteed, and in the future we’ll enforce this. I don’t want them to be a blocker for anything. We’re about to move all Imgur images to https://, and enforce it. I’m also about to move all site logos and icons to https://. We’re working on that huge project… but that’s another (very long) post.\nEnterprise\nWe’re going to spend more time developing Stack Overflow Enterprise. It’s starting to gather steam, and it’s another way we can help developers behind company firewalls and our company at the same time. We have a few full-time people on this to make it happen. Enterprise environments are somewhat unique and need some specific love.\nBut, Enterprise is the same code base as stackoverflow.com. It’s the exact same git branch. And sometimes features for Enterprise are features for public Stack Overflow. For example, we’re looking at building a simple image proxy needed for HTTPS that’s just useful as an inside-the-firewall image host on Enterprise. Those client timings I mentioned earlier? Those will help us gauge bandwidth required for this adventure. It’s one big picture we’re building.\nTrust\nMaking money at a company our size requires great marketing.\nBut two years ago, I didn’t trust our marketing team. Why? Because it was brand new and I didn’t know them. I knew of other marketers and I had bad experiences. So my default assumption was roughly “all marketers are bad and want to abuse user trust for quick wins”. But it turns out that’s not true. Not here. I had to work with our team on several projects to overcome that prejudice and realize something simple: we hired some awesome marketers and they care about the same stuff I care about. Especially to Kaitlin, thanks. Our new team has put up with a lot of pushback and not fought about it. They showed us why these things are a good idea, and they convinced the smartest people I know on so many things.\nAll of our teams know that the Stack Overflow community and its trust is the most precious resource we have. We want to communicate, not alienate. And only with users we think we can help. Yes, if we’re doing it right, sometimes these things will help us as a company too. I don’t see that as a bad thing. If we can grow the company, we can build more awesome things for the world. I have so many, so many things I want to build for you. Ask me about sticking Stack Overflow in a 2U server in Europe, Asia and South America to beat the speed of light sometime.\nI saw a presentation from Adrianna (our relatively new CMO) that blew me away. I hadn’t actually met her before her talk at the meetup, but it was a hell of a first impression. They have some awesome things in the works to help us with a unified brand. While watching her present, there was a lot of “why the hell didn’t we do that four years ago?” going through my mind.\n\nMarketing, like development, is mostly about connecting the dots. I have gone from dreading interactions with “the marketers” to looking forward to them. We’ve got smart, well-intentioned people who can really help everyone involved. I’m actually psyched now.\nMini Case Study in How We Build Trust: Email\nTrusting each other and sharing values related to how we make money directly connects to how we build internal tools. Here’s the most recent example I can think of how trust is a required feature in all our products:\nSo that Architecture team I run? We’re the team that coded a new email system to communicate with our users in a consistent way (with a lot of help). Why am I saying this? Because I personally went from 100% opposed to ever building such a thing to being onboard… if we did it right. By the way, it’s just me and Samo Prelog. “Team” is a pretty strong word. It’s kind of lying at that level. Should we call it a pair? We’re really just two developers forming a miniature Justice League. …anyway, email.\nWhat’s the first thing I specced? Opt outs. That’s the very first thing we built. That’s absolutely the most important feature to us. One-click unsubscribes and a landing page for that where you can opt out of everything was non-negotiable. It’s priority #1. I’m a developer who deleted their LinkedIn account over spam years ago. If you don’t want to hear from us again, that’s just fine. I’m sorry if we bothered you in the first place and appreciate any understanding of where we’re coming from. One of my biggest apprehensions is annoying our community. Worrying about that keeps me up at night.\nWe are in the process of sending out an email now announcing Developer Story to the larger community in the hopes that we can help some percentage of developers. If that email is rejected, we’ll unsubscribe you. If you’re unresponsive to emails we send, we’ll unsubscribe you. If you mark it as spam, we’ll unsubscribe you. We want to be a good citizen here. Every new email, except for transactional emails like “Forgot your password?”, sent through this system will have three links at the bottom: a one-click unsubscribe, a direct link to manage all categories, and feedback.\nOne of the reasons we built this system the way we did (which required a lot more effort) is that if a given provider didn’t work out (we’re using SendGrid right now, so far so good!), we could be damn sure that your opt outs were carried over. We didn’t want to risk annoying users who clearly tell us they’re not interested.\nWhile we only have one category at the moment (“New Features”), we plan on adding more. But, I’m not talking about adding new email in that. We want to move all of the existing emails like community newsletters (a completely opt-in thing, if you’ve never seen them) over to this new system so you can manage it all in a very simple way, with a one-click unsubscribe we know works. Our email preferences page is, to be blunt, a total disaster.\nThis is an old artifact of growing from one site to many and it needs love. We have people working on that right now. One of our designers, Donna, is working hard to tremendously simplify this. There’s a lot of backend changes needed to support that unification and simplification. We hope to have one email address for a user and a single place you can manage all email that ever comes from Stack Overflow. If you are annoyed, it must take (at most) one to two clicks to unsubscribe from everything.\nAll communication and interaction has to reflect our respect for you. If it doesn’t, we have failed you, and we have failed ourselves. Our mission is to improve life for developers. When I lose sleep, it’s often over worrying about this. We have to deserve your trust; we have earn it.\nIf we add new categories of emails later (not just categorizing something we send today), existing users will not be opted in. Only new users will get defaults. We don’t want to be “that site.” I mean it. We intentionally designed the table schema around this.\nIf you read our Developer Story email and don’t want one, that’s absolutely fine. I hope Stack Overflow serves you in other ways, and I appreciate your time. I hope other things like Documentation and ongoing Q&A improvements help make your life easier. It really is why we’re here. It’s why I’m here.\nHow We Think About What’s Next\nThere are so many things in my head right now. I want to put a time series database in SQL Server in a Clustered Columnstore. I want to test an idea we came up with at midnight to improve consumption of developer news. I want to build several data connections that are almost there for our internal teams to save them time. I want to do a thousand things.\nI’m also excited. I’m excited about the future of Documentation. I’m excited about Developer Stories. I’m revving to go. I want to get the money part of being a company out of the way so we can build all the useful things our communities want and need. I know we can do that, and in a good way for everyone. I hope you agree. I hope my ramblings helped out what it’s like at Stack Overflow, at least a little, at least for me. If we don’t agree, that’s just fine. If you have time though, I’d appreciate if you told me why in the comments so I/we can do better.\nThanks for listening.",
        "url": "https://stackoverflow.blog/2016/11/15/how-we-make-money-at-stack-overflow-2016-edition/"
    },
    {
        "title": "It’s Hat Season…Announcing Winter Bash 2016",
        "content": "Another year is rapidly coming to an end, which means it’s time for some fun. Fun with hats! That’s right, it’s time for our annual event that brings joy to all and creates hat-fanatics everywhere… Winter Bash!\n\nStarting today through the end of the day on 8 January 2017, you’ll be able to earn and wear hats (and possibly accessories) for performing various things you already do across the Stack Exchange network.\nWait, what are hats again?\nFor those who aren’t familiar with Winter Bash and the Season of Hats, we’ve documented the long history of Hats for your viewing pleasure.\n\nUpon completing one of the many challenges while being logged on a participating site, you will be awarded the associated hat. Once you’ve earned a hat, you can visit your profile on any site to choose the item you want to wear. Just click the hat dressing up your badges section on your profile to show the dialog:\n\n\nUpon picking a hat, you can reposition and resize it to make it fit your avatar. Here is floating head as an example:\n\nBesides seeing all your hats from your profile, you can see how you stack up against the rest of the network on the Winter Bash leaderboard. Only time will tell who will be the ultimate hat-fanatic at the end of the event.\nAs always, if you’re a hater of fun and hats, you don’t need to participate or even see hats. You can opt out of hats by clicking the snowflake icon in the top bar, and then click the ‘I hate hats’ link at the bottom left. If you decide that you no longer hate hats, you can always change your mind during the season of hats.\nWhat’s new this year?\nJust like prior years, we’ve got all new hats lined up for the event this year. There are 28 total hats you can earn over the next few weeks. We’ve got some secret hats lined up with a few minor changes:\n\nA secret hat for correctly guessing a secret hat will no longer be awarded.\nThis year there are no secret hats for tormenting incessantly poking SE employees under a post. Blame our lawyers; they did not like the idea of staff being poked or tormented for hats.\n\nHats are awesome and a fun way to end the year. It’s our way of showing the communities how much we love them. We also put a lot of love into making hats fun for all. We want to give a special nod to everyone involved in putting it together:\n\nThe Marketing Design team for coming up with the beautiful design. With extra special thanks to Kalina Moniquet and Nohemi Olvera for the amazing hat images.\nOur hat-umentary team Kaitlin Pike for producing the video, David Fullerton for the idea, and Talal Sarwani for directing it.\nOur hat-velopers, Sklivvz and Oded for implementing all engineer-y stuff to get this launched.\nThe hat PM, balpha, for being our fearless hats leader again this year.\nPlus, everyone else who offered up ideas for hat triggers, designs, and assisted in getting it out the door.\n\nNow go forth and get all the hats!\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2016/12/19/its-hat-season-announcing-winter-bash-2016/"
    },
    {
        "title": "You Can Now Play with Stack Overflow Data on Google’s BigQuery",
        "content": "If you’ve ever wanted to get a statistic about Stack Overflow or your favorite Stack Exchange site, you may have used our Stack Exchange Data Explorer, aka SEDE. (This is separate from our regular “data dumps” meant for researchers and others who want to work with large chunks of the content.) Launched in 2010, SEDE is a web tool you can use to share, query, and analyze the data from our network. It’s updated weekly with all our latest changes and additions, minus a few sensitive things like people’s email addresses and voting behavior.\nWe’ve seen a lot of creative uses of SEDE, from finding out “What questions does Jon Skeet have a higher/lower score on than me?” to “Where have I ‘met’ another user?” and many other questions keeping the community up at night.\nToday, we’re thrilled to expand your ability to play with this data by working with Google and releasing it (with regular updates) on BigQuery. Anyone with a Google Cloud Platform account can use SQL queries or their favorite tool to sort, join, and analyze away.\nWhat makes BigQuery different from SEDE?\n\nGo beyond 50,000 rows (our SEDE limit). BigQuery lets you go big.\nUnlike SEDE, BigQuery comes with a REST API. You can connect all sorts of tools like Tableau, re:dash, Looker, R, and pandas to it.\nJOIN all the things: BigQuery hosts a wide variety of datasets from GitHub’s to NOAA’s weather data. You can make all sorts of useful or useless but entertaining queries across these.\n\nGo check out our dataset now and poke at it. Feel free to share your results on reddit.com/r/bigquery. You can also check out the data scientists job listings to put your creative queries to work.",
        "url": "https://stackoverflow.blog/2016/12/15/you-can-now-play-with-stack-overflow-data-on-googles-bigquery/"
    },
    {
        "title": "El estado de Stack Overflow en español Noviembre 2016",
        "content": "Casi se termina el 2016 y para los que no lo saben, ¡esto quiere decir que llevamos un poco más de un año de existencia!  Stack Overflow en español ha superado todas las expectativas y seguimos nuestro camino hacia la dominación global. Dado a que existen desarrolladores como tú que están interesados en compartir el conocimiento con otros, sabemos que tenemos un futuro brillante. \nAl momento de publicar este blog, contamos con más de 12,000 preguntas con un porcentaje de %75 de esas preguntas contestadas. Esto indica que tenemos cerca de 9,000 preguntas ya respodidas.  Estas preguntas forman la base de información que otros desarrolladores encontrarán y usarán en un futuro.  También tenemos un promedio de 73 preguntas publicadas por dia cosa que nos coloca en el undécimo lugar en la red de Stack Exchange y en el tercer lugar entre las comunidades internacionales.  Para comparar, la comunidad rusa cuenta con más de 121,000 preguntas y un promedio de 191 preguntas publicadas a diario lo cuál la coloca en el tercer lugar de la red de Stack Exchange. La comunidad portuguésa cuenta con unas 58,000 preguntas y un promedio de 88 preguntas publicadas al día lo cuál la coloca en el noveno lugar de la red de Stack Exchange.  \nPero, recuerden que los sitios ruso y portugués ambos llevan más de 3 años de existencia mientras que nosotros acabamos de cumplir nuestro primer año. ¿Piensan que podremos superarlos pronto? Yo diría que sí, claró, sin duda, “yes” en inglés. Lo importante no es el ser el sitio más grande de la red de Stack Exchange sino ser el sitío que ayude más a nuestra gente.  Esa es nuestra razón de existir, nuestra meta, lo que nos define. Les agradezco mucho su apoyo y su constante interés en ser parte de algo que eleva a nuestros desarrolladores de habla hispana. \nAhora sí, algunos numeros interesantes del mes de noviembre:\nMiembros que contestaron la más grande cantidad de preguntas:\n\nElenasys – ¡128 preguntas contestadas!\nsioesi – ¡102 preguntas contestadas!\nsstan – ¡95 preguntas contestadas!\nError404– ¡88 preguntas contestadas!\nMarcos Gallardo – ¡65 preguntas contestadas!\n\nLas 3 preguntas más compartidas del mes:\n\nValidar un email en JavaScript – compartida 128 veces\n¿Cómo puedo hacer que cada perfil tenga N número de mascotas? Cada perfil debe tener mascotas diferentes – compartida 8 veces\nMi aplicación se detiene con el error “android.support.v7.widget.AppCompatTextView cannot be cast to android.widget.EditText” – compartida 6 veces\n\nLas 3 preguntas más vistas del mes:\n\nCómo determinar si todos los dígitos de un número entero son iguales – vista 748 veces\nDesofuscar código php – vista 284 veces\n¿Los enlaces con nofollow aportan SEO? – vista 261 veces",
        "url": "https://stackoverflow.blog/2016/12/07/el-estado-de-stack-overflow-en-espanol-noviembre-2016/"
    },
    {
        "title": "Stack Overflow Gives Back 2016",
        "content": "It’s hard to believe this has been a thing for eight years now. Every year since 2009, we’ve set aside this time of year to remember the people and the organizations who desperately need our help.\nIt started with Stack Overflow LLC when three employees and three sites decided to “give back” with some charitable donations and to remember the people and projects that helped us succeed. In the next year, we grew to twenty-four employees and 130+ moderators across 38 sites, so it seemed only fitting to get our Moderators more involved in the process. An invitation went out where we offered to make a $100 donation to a selected charity on behalf of each Moderator representing their community.\nAnd a tradition was born.\nGiving back… 8 years and running!\nWow, what a ride! Since 2009, we’ve grown into a top-30 online destination with 160+ communities serving 1.3 billion page views per month. So this year with your continued support, we are able to make the following donations to charity on behalf of the 509 moderators of Stack Exchange!\n\n\n\nCharity\nDonation\n\n\n\n\nWikimedia Foundation\nDedicated to encouraging the growth, development and distribution of free, multilingual, educational content for the public free of charge. (wikimediafoundation.org)\n$8,100.00\n\n\nGirls Who Code\nWorking to close the expanding gender gap in technology and engineering, Girls Who Code provides unparalleled computer science education to equip girls with the computing skills needed to pursue 21st-century opportunities (girlswhocode.com)\n$9,000.00\n\n\nInternational Rescue Committee\nResponding to the world’s worst humanitarian crises and helping people to survive and rebuild their lives; at work in over 40 countries, more than 90% of every dollar goes directly to help refugees in desperate need (rescue.org)\n$10,300.00\n\n\nElectronic Frontier Foundation\nDefending your rights in the digital world (eff.org)\n$11,300.00\n\n\nDoctors Without Borders\nAn international medical humanitarian organization created by doctors and journalists (doctorswithoutborders.org)\n$12,200.00\n\n\nTOTAL\n$50,900.00\n\n\n\nAnd from our engineering and IT staff, it is important to remember some of the tools and organizations that make what we do possible:\n\n\n\nOrganization\nDonation\n\n\n\n\nGit and the Software Freedom Conservancy\n$1,000.00\n\n\nHAProxy\n$1,000.00\n\n\nCreative Commons\n$1,000.00\n\n\nLet’s Encrypt\n$1,000.00\n\n\nSQLAlchemy\n$1,000.00\n\n\n\nEven after eight years of “giving back”, this event continues to be my favorite at Stack Exchange. I wish I could share with you the rush that comes from watching the charity selections come racing back across my screen mere seconds after the invitations are sent. It is a sobering reminder of just how many people are out there on the other side of that keyboard while we quietly read our favorite posts. Think about it; right now there are 10s of thousands of people working tirelessly to help people they will probably never meet.\nThere’s a personal satisfaction that comes from helping someone who asks for help, but that satisfaction heightens to a genuine sense of purpose when you realize that you are creating something lasting — something that will continue to help people long after you’ve moved on.\nIn this upcoming year, it is good to remind ourselves that there are real people behind the help you find among these sites. Stack Exchange isn’t a piece of software, or even the work of the company behind it. It takes the collective efforts of a much larger community working together to make this all happen. It is the generosity of people like you who give so selflessly of their hard-earned knowledge to make this all possible.\nSo here’s to renewing that sense of purpose by doing something bigger than ourselves. And here’s to finding those small things that can make a big difference in someone else’s life, and leaving behind something lasting… for those who come after.\nCheers!",
        "url": "https://stackoverflow.blog/2016/12/21/stack-overflow-gives-back-2016/"
    },
    {
        "title": "The 2017 Stack Overflow Developer Survey is Now Live",
        "content": "We’re back for another edition of the Stack Overflow Developer Survey, the largest and most comprehensive survey of software developers on earth. Every year, we include questions about your favorite technologies, coding habits, and work preferences, as well as how you learn, share, and level up as a developer.\nWant to see how you stack up against the world’s developers? Take the survey now.\nWe’ll publish initial results for you to peruse in March. A few weeks after that, you’ll be able to download and analyze anonymized results of the survey under the Open Database License (ODbL). We look forward to seeing what you find!\nWhy We Do This\nWe estimate that responses to the 2016 survey cost 14.6 years of total developer time. That’s a lot of missed opportunities to squash bugs and ship product. So why do we do this? And more importantly, how do we pay developers back for their time spent?\nIt starts with our shared, company-wide mission: Everything we do at Stack Overflow is done to make developers’ lives better. Whether it’s through Q&A, Documentation, or finding developers better jobs, we’re single-mindedly focused on doing what’s best for the developer community, and how we can promote developers’ interests. The first step to doing this well requires knowing in detail what different developers want, what their pain points are, and how they want to share and improve their skills.\nDevelopers are generally misunderstood by non-technical managers, recruiters, and policy makers. This has led to lousy hiring practices, poor environments for development (open office concept, anyone?), and misallocation of resources. Having reliable, comprehensive survey results we can point to helps us educate companies. It also empowers developers who need more data to support their cause, whether it’s in asking for a raise to match industry standards, or because they’re pushing for a change with internal development or HR practices.\nWe also of course use the survey to improve our own policies at Stack Overflow, as well as our products for developers. We want to know if what we’re doing is working, and what you want to see improved.\nSee How You Stack Up\nLast year, we fielded responses from over 50,000 developers in 173 countries. We’re looking to break our record again this year, and we need your help. Take the survey now.\nGot questions of your own or feedback? Post in the comments below or on Meta.",
        "url": "https://stackoverflow.blog/2017/01/11/the-2017-stack-overflow-developer-survey-is-now-live/"
    },
    {
        "title": "Learn More About Your Site with the SE Data Explorer. Here’s How!",
        "content": "Have you ever wanted to get a statistic about your favorite Stack Exchange site, but been baffled by exactly how to do that? The Stack Exchange Data Explorer (SEDE) may be just what you’re looking for. SEDE was created to make it easy to query and browse the public data that we release periodically for all Stack Exchange sites, but a lack of familiarity with SQL has been a barrier to many of you who would otherwise benefit from it. Now, thanks to friend of the company and moderator extraordinare Monica Cellio, you have a tutorial to guide you in using it!\n\nFor the past several months, Monica—who writes documentation for programmers at her day job, and even holds a tag badge in technical-writing on Writers SE—has been spending some of her free time putting together a tutorial for people who are completely new to the Data Explorer or SQL. Thanks to her efforts, and those of another awesome community member, Tim Stone, the de facto maintainer of SEDE (and the SE election stats page), version 1.0 is finally live!\nThis new tutorial introduces the basic concepts of relational databases, and teaches the fundamental SQL statements that go with them. Examples all use the design of the actual Stack Exchange databases. And for those who find themselves getting really interested, digging into more advanced queries and having some trouble, well, there’s a great place nearby to get help.\nAbout the Stack Exchange Data Explorer\nIn keeping with our founding principles, all user-contributed posts are always available for reuse with minimal restrictions, and we even package up “data dumps” of all the content on Stack Exchange regularly for researchers and others who want to work with large chunks of the content.\nOf course, not everyone has the time or expertise to download massive data dumps and then install SQL locally or write custom code to get what they want. So we also provide a web UI to the same information: the Data Explorer. It’s essentially a publicly accessible copy of the databases behind the SE Q&A sites. It gets updated weekly with all the latest changes, minus a few sensitive things like users’ e-mail addresses and voting behavior.\nPeople have mined all sorts of interesting information out of SEDE. Ever been curious how much reputation you would have if the 200-points-per-day rep cap didn’t exist? Or wondered how true someone’s claim that “downvoters are ruining everything” really is? Maybe you have an idea for a new badge, and want to see how many people would meet its criteria before you propose it on meta. For all of these situations, SEDE is the answer.\nBut even though SEDE is nicer to work with than a raw data dump, it can still be pretty intimidating to new users, especially those who aren’t trained database engineers. Up until now, the Data Explorer’s own help docs have been a little thin, and mostly covered very specialized, advanced features. We’ve wanted to expand the guidance there for a while, but never quite got around to it. Then Monica rewarded our procrastination by helpfully volunteering to take on the writing.\nSo please check it out, try your hand at answering that question you’ve always had about your favorite site but never knew who to ask, and let us know what you think on meta. And again, a big thank-you to Monica and Tim for their work in creating this great guide!",
        "url": "https://stackoverflow.blog/2016/06/24/learn-more-about-your-site-with-the-se-data-explorer-heres-how/"
    },
    {
        "title": "Добро пожаловать в блог сообщества Stack Overflow на русском!",
        "content": "Всем привет! \nРад анонсировать, что с сегодняшнего дня у нас появился свой канал в блоге компании на русском языке! Мы будем использовать его для всего того, чему ранее не находилось места на Мете.\nУра!\nДа, еще вы можете подписать на RSS–канал блога: blog.stackoverflow.com/feed/ru",
        "url": "https://stackoverflow.blog/2016/06/28/welcome-stackoverflow-in-russian-blog/"
    },
    {
        "title": "Podcast #71 – A Bunch of Bald Yaks",
        "content": "Welcome to the Stack Exchange Podcast, recorded Tuesday June 28th at Stack HQ! Today’s podcast is brought to you by Eugene McCarthy for President, as well as by IBM. Try the new IBM Cloud Tools for Swift. New this week: one of those two sponsors is a real live sponsor. Bet you can’t guess which one! Anyway, your hosts today are joined by Daniel X. Moore and Gareth Wilson from the HyperDev team at Fog Creek Software.\nBut before we talk to the guests, our esteemed hosts run through some interesting tech news. (Or maybe just tech news. -Ed.) First up: .NET Core! Microsoft is trying to turn a gigantic ship around toward open-sourciness and community-friendliness. (Said ship is apparently unrelated to the arm of Microsoft that forced you to upgrade to Windows 10.) Also: did Microsoft build their own version of Trello? You decide.\nAnd now it’s time for the first and possibly only but definitely first monthly One-Minute Tech Review with Joel Spolsky! This week’s OMTR is Wallcat. It’s free. You can install it. (If you know your Apple password.) It changes the background image on your computer every day! Amazing.\nLet’s turn from tech news to Stack news. What’s shipped since our last podcast?\n\nA new and improved Stack Overflow Enterprise! It’s for big companies with lots of proprietary code who want to run private Q&A for their development teams. Companies with 1000+ developers who want this can get it by sending an email to enterprise@stackoverflow.com.\nWe updated the sitewide Terms of Service. It forbids companies from going onto Stack Overflow to scrape profile data, which protects our users from spam.\n\nOur guests have been waiting very patiently through all this, so let’s turn to them! Daniel X. and Gareth work at Fog Creek Software, the first company Joel founded. They’re currently working on HyperDev, the easiest and fastest way to get your idea developed and deployed on the internet. You can get an app up and running in less time than it takes to listen to this segment–without shaving any yaks. So go check it out! We talk about the story of the product for a long time before we remember to talk about how it actually works, but rest assured, we do eventually dig into that part.\nSo what’s next for Stack Overflow?\n\nRunning some tests on the /ask page. This hasn’t been touched since the dawn of time, more or less. The community has been discussing ideas here, so read up and weigh in!\nDocumentation. We’ll cover this in more detail next podcast.\n\nAnd that’s it for this podcast. Thanks for tuning in!",
        "url": "https://stackoverflow.blog/2016/07/05/podcast-71-a-bunch-of-bald-yaks/"
    },
    {
        "title": "Una receta para promover nuestra comunidad",
        "content": "Hablemos hoy sobre como promocionar nuestro sitio. Ya que estamos un poco mas establecidos desde que empezamos en Diciembre del 2015, necesitamos seguir creciendo con esta la dinámica cada día. Existimos para proporcionar el mejor contenido para desarrolladores globales de habla hispana.  \nLa cruel realidad es que todavía existen personas que no conocen sobre nuestra comunidad.  Es por esto que debemos correr la voz para educar e interesar a gente que pueda ver el valor de lo que se ofrece aquí gratuitamente. \nCompartir preguntas y respuestas interesantes\nThe mejor manera (y la mas fácil) de promocionar nuestro sitio es simplemente el compartir enlaces a preguntas y respuestas interesantes. La piedra angular, el sello distintivo, el fundamento de Stack Overflow es el producir Q&A del cual estamos orgullosos, el Q&A que vale la pena compartir con otros. Sabemos que lo siguiente es obvio pero así es como podemos obtener el enlace a una pregunta:\n\ncopiar el URL de la barra del navegador.\nhacer un clic derecho en el titulo de la pregunta, seleccionar Copy\nhacer un clic en el texto “compartir” y seleccionar Copy\n\nSi necesitas un URL corto, recuerda que no se requiere mas que el numero de ID de la pregunta. Así que tienes:\n\nhttp://es.stackoverflow.com/questions/15144/mejora-para-el-factorial-en-rust\n\nSe puede reducir a:\n\nhttp://es.stackoverflow.com/questions/15144\n\ny también a\n\nhttp://es.stackoverflow.com/q/15144\n\nUn URL corto se puede también copiar del la sección “compartir” debajo de cada pregunta:\n\nComo pueden ver, el hacer clic en “compartir” da la opción de compartir en Google+, Facebook, o Twitter.\nPiensa en lo pequeño, se especifico\nBien, tenemos la idea central pero falta desarrollar un poco más la estrategia. En vez de preguntar lo gigante, lo obvio, mejor preguntemos sobre lo mas pequeño. Empezemos con preguntas que sean mas fáciles de contestar, preguntas como estas:\n\n“¿Cuales son las 3 mejores conferencias que podemos patrocinar?”\n“¿Puede la comunidad Python soportar un ‘Dev Days’ como lo hace Stack Overflow?”\n“¿Cuales son los mejores 5 podcasts que se interesen en nuestro sitio?”\n\nPero, no se detengan allí. Después de tener la primera ronda de respuestas, usen esas respuestas para continuar a preguntar con mas especificidad.  \n\n¿Alguien conoce a Miguel de Icaza para poder pedirle que nos hable por medio de su Twitter?\n\nEsto requerirá mas coordinación y disciplina que preguntar una sola pregunta y esperar que el resultado máximo aparezca. Se requiere que miembros individuales quieran preguntar preguntas especificas, con pasos distintos, con una meta en mente y después cumplir con los pasos.\nSe igualará el esfuerzo con fondos\nCualquier comunidad que demuestre suficiente empeño e ideas innovativas para promover su sitio se le ofrecerá un presupuesto y recursos para ayudar a realizar esas ideas.  Piénsalo como un sistema donde igualamos fondos, excepto que igualaremos fondos con innovación, recursos, esfuerzo, e ideas de la comunidad.  Pero, tiene que nacer de su comunidad, ustedes son los expertos, no nosotros.\nEl igualar los fondos con su esfuerzo asegurará que:\n\nLos recipientes están invertidos en el mejoramiento del sitio\nLas comunidades saben que sus esfuerzos regresaran para ayudar a mejorar el sitio.\n\nAquí les dejamos unas ideas que hemos discutido por algún tiempo para su consideración:\n\nEl patrocinio de conferencias ideales. Para la mayoría de las comunidades, estas serán 2 o 3 solamente.\nEl alcance de publicaciones y bloggers ideales. Asegurar que los expertos clave sepan de nuestra comunidad.\nEl patrocinio de cosas divertidas para cada comunidad – especialmente esas cosas que tendrán mejor probabilidad de ser compartidas por las redes sociales. Por ejemplo, concursos de fotografías para los sitios de cámaras o clases de cocina para los sitios de recetas o comida. \nEl asegurarse que los evangelistas de cada comunidad tengan la oportunidad de hablar delante de los expertos de sus campos de interés. \nAnimar y participar en conversaciones de base ya existentes – cuando sea apropiado.\nTenemos acceso a diseñadores profesionales así que concursos o eventos donde regalamos calcomanías, camisetas, o otras cosas interesantes son posibles.\n\nMencionamos estos ejemplos para ayudar a motivarlos a pensar en oportunidades y maneras de como se puede convertir este sitio en uno de nivel mundial. No se demoren por nuestra cuenta. Ustedes tienen que realizar el empuje inicial.  Hay veces en que se necesita ser la voz activa y ser los que organizan los eventos. \nHemos tratado con mucho, permítanme dejarles con dos puntos clave:\n\nAlienten a la comunidad a que compartan enlaces a preguntas y respuestas destacadas o excepcionales. Si existe el sentimiento que no hay preguntas o respuestas dignas de ser compartidas, se necesitara corregir eso primero.\nEn cuanto a las promociones, **no intenten tomar al mundo entero”. Si las ideas que resultan son gigantes, están incorrectas. Se necesitara reducirlas a pedazos mas pequeños que cada miembro de la comunidad pueda ayudar a mejorar.   \n\nCuando una person le pregunta a un grupo grande de amigos, ¿Qué quieren comer? resultara una bola de indecision e inactividad. Mejor sera preguntar mas específicamente ¿Cual es un buen lugar para pedir una pizza? \nSe recibirá así una respuesta rápida y se obtendrá una panza llena en menos de 30 minutos. \nEsta publicación esta basada en esta escrita por Robert Cartaino.",
        "url": "https://stackoverflow.blog/2016/07/07/una-receta-para-promover-nuestra-comunidad/"
    },
    {
        "title": "You Can Now Download Stack Overflow’s 2016 Developer Survey Data",
        "content": "Earlier this year we released the results of our annual developer survey. With more than 50,000 responses fielded from 173 countries, it was the largest and most comprehensive survey of the programmer workforce that has ever been conducted. Now, you can analyze this year’s and previous years’ results yourself by downloading the raw data from our brand new research portal.\nOur annual surveys ask developers what they’re up to, what tech they care about most, and what they want. This year, for instance, we found that JavaScript remains the most popular programming language in the world, 46% of developers don’t have a bachelor’s in computer science or a related field, and job satisfaction is highly correlated with pushing code to production.\nWhile we like to think we know software developers better than anyone, we’re eager (and curious) to see what you come up with in your own analysis of the data. The launch of our new research site means you can compare what developers have said about the state of the programming world and workforce since 2011.\nYou’ll be able to answer questions about how technology preferences have changed over time, whether particular demographics correlate with certain developer job types, and even what programmers think of Stack Overflow.\nIf you do find something interesting while digging through the data, let us know on Meta. And if you’re ambitious enough to make it an academic paper, we’d love to add it to our collection. Finally, if you’re curious about adding even more data related to Stack Exchange sites, check out our Stack Exchange Data Explorer, designed to make it easy to query and browse the public data we periodically release for all Stack Exchange sites.\nHappy data diving!",
        "url": "https://stackoverflow.blog/2016/07/12/you-can-now-download-stack-overflows-2016-developer-survey-data/"
    },
    {
        "title": "Introducing Stack Overflow Documentation Beta",
        "content": "Today – thanks to our amazing community beta testers – we’re shipping our biggest expansion to Stack Overflow since it first launched: Documentation.\n“Together, we believe we can do the same thing for technical documentation that we did for Q&A.”\nDocumentation is community-curated, example-focused developer documentation, based on the principles of Stack Overflow.\nIf you ever wanted to contribute to Stack Overflow but weren’t sure you could, now’s your chance to give back. Whatever technologies you work with, whatever your experience level, there will never be a time your contribution is more valuable than it is today.\nSo, why will this be better than how documentation is today, exactly?\nExamples, examples, examples – show beats tell. In Stack Overflow Documentation, examples are the star of the show. Anyone can add one, so good topics will eventually have several useful examples. And much like answers on Stack Overflow, the most helpful ones will usually be voted up to be right on top.*\n\nIt’s need-driven and self-healing. The best, most diligent technical writer out there still can’t beat thousands of actual users trying to learn a function or concept while writing real code. They’ll determine what topics or examples are needed most. And whenever something fails to explain something clearly, they can ask for it to be improved.\nIt builds on what made Q&A work, but recognizes where it can be better:\n\nFamiliar elements, so you’re not starting from scratch. Voting, requesting a topic, adding examples all mirror Q&A elements (voting, asking, answering)\nMore emphasis on collaboration, and ensuring most developers can contribute. The more canonical nature of artifacts created means:\n\nMore “shared” ownership of posts and more collaboration\nSmall edits and contributions are encouraged\nEverything is reviewed by other helpers, so you can’t “break” the page trying to help\n\n\nMore recognition for more people – More collaboration means more helpers need recognition. And documentation shares a feedback and reputation system with Q&A, so contributions to either earn you reputation and privileges on both.\nYour generosity, your content. All content is covered by the same CC-SA license that SO Q&A always used. And our regular data dumps will now include Documentation content.\n“Be Nice” still applies. We know that occasionally some folks can get a little prickly, but this is who we still are:\nWhether you’ve come to ask questions, or to generously share what you know, remember that we’re all here to learn, together. Be welcoming and patient, especially with those who may not know everything you do. Oh, and bring your sense of humor. Just in case.\n\n\nSo, why does Documentation belong on Stack Overflow, exactly?\nGo back and read Jeff’s original introduction of Stack Overflow, you’ll find this pitch:\n[Stack Overflow] is by programmers, for programmers, with the ultimate intent of collectively increasing the sum total of good programming knowledge in the world. No matter what programming language you use, or what operating system you call home. Better programming is our goal.\n(emphasis mine)\nThis was a great starting place, but over the years we’ve made tweaks as we’ve learned from the community – both from direct feedback on Meta and from observing how people use Stack Overflow. We learned that our Q&A works best when you’ve got a real problem, specific to the code in front of you. By coming to terms with that, and tweaking Stack Overflow accordingly, we’ve become much better at Q&A but have left some programming knowledge out in the cold.\nDocumentation gives a home to a lot of this good content that has been turned away, or very hard to “get right” in the Q&A format. Namely, the canonical, general reference, instructional content.\nOnce word got out Stack Overflow was expanding, the developers responsible for some of our favorite tech got a little excited. The Meta community got first dibs with the private beta, but now that Documentation is live on Stack Overflow I’m pleased to announce developers from:\n<partner pics!>\n\n</partner pics!>\nwill be participating in Documentation right alongside the community. They’ll be watching to see what kind of great examples and documentation are created to inform their own work and help answer or clarify anything that needs it. They’re Stack Overflow users like everyone else, we’re all working together (to help developers everywhere), so you could see your change reviewed by a Microsoft-y or find a request from a Dropbox-er.\nReady to help?\nWhether you’ve been posting on Q&A for years, or have always wanted to give back if you could, now’s your chance. Docs today resembles Stack Overflow Q&A was right when it launched – there’s a lot of white space to fill in, and plenty of chances to “actually write the book on” your favorite tech.\nOh, and since we really want to use this launch to expand the Stack Overflow Community tent, we’ve got some silly/shiny fun to encourage folks to jump right in!\nAll users who contribute to Documentation the next four weeks:\n\nWill get a silver “Documentation Pioneer” badge\nWill be entered in a drawing to win one of 100 Stack Overflow T-Shirts\n\nLet’s go build this thing together.\n\nBrowse Documentation\nTake the tour\nJump in and handle (or make!) requests for\n\n.NET Framework or C#\nDropbox API\nPayPal\nPubNub\nTwitch\nMeteor\nXamarin iOS or Android\nTwilio\n.. or browse all tags in Documentation\n\n\n\n We literally almost called this “Stack Overflow Examples”, but then we thought about having to constantly explain that it serves the same purpose as ‘Documentation’ used to, but we didn’t call it that because the important part* of documentation is the Examples, which are central to our thing. So we stuck with the term folks know.",
        "url": "https://stackoverflow.blog/2016/07/21/introducing-stack-overflow-documentation-beta/"
    },
    {
        "title": "Estado da Pilha Internacional – Outubro/2016",
        "content": "Imagine uma comunidade online, repleta de pessoas, ideias e possibilidades. Um lugar onde pessoas se encontram, para ajudar umas às outras e dividir seu interesse em algo muito importante em suas vidas. Imagine esse lugar se tornando parte da rotina de cada membro, contribuindo para que eles aprendam mais sobre algo que eles adoram fazer. Imagine uma comunidade que incentive o debate, alimente a curiosidade e recompense a dedicação – não só com pontos mágicos de internet mas com algo mais concreto: o sentimento de descobrir algo novo, de alcançar um objetivo, de ir mais longe no seu aprendizado.\nSe você está lendo este post, é provável que não precise imaginar um lugar assim. Você já sabe que ele existe, e faz parte dele. Todos nós fazemos parte dele. Nós todos compartilhamos a responsabilidade de ajudar nossa comunidade a continuar crescendo, forte e saudável. O quão mais forte ela for, mais pessoas vamos poder ajudar.\nE é daí que nasceu o Estado da Pilha. Uma maneira de vocês poderem dar uma olhada nos bastidores e saber o que estamos pensando, quais são nossos planos e o que estamos fazendo parar apoiar vocês e todos as outras pessoas que chegam ao nosso site. Também é uma maneira de vocês poderem nos dizer como as coisas estão indo do seu lado, já que nossa comunidade é bem grande e não temos como estar de olho em tudo o tempo todo. Vamos sempre tentar dividir algumas estatísticas interessantes sobre o site, no último mês, mostrando o que aconteceu de notável no período. Tudo isso de maneira regular – provavelmente mensal – aqui no nosso blog.\nMas precisamos da sua ajuda pra transformar o Estado da Pilha em algo que seja realmente relevante para a comunidade. Que as coisas que falamos aqui realmente sejam interessantes para vocês. Então… O que você gostaria de saber? Alguma coisa em especial que gostaria de ver detalhada aqui? Não importa se é sobre o plano do site à longo prazo, ou sobre alguma coisa que estamos fazendo no momento. O importante é que seja algo que vocês gostariam de saber sobre como os sites estão indo, e o que estamos fazendo. Nós temos algumas ideias sobre como usar este espaço, mas ninguém conhece a comunidade melhor que vocês. Então, deixe sua sugestão abaixo!\nAlgumas estatísticas de Setembro/2016:\nPerguntas Com Mais Respostas\n\nComo obter valores únicos em um array JavaScript?\nO que significa o termo Fallback?\nCapturar Enter no IE usando jQuery\n\nRespostas Mais Votadas\n\nComo usar as tais tags semânticas?\nComo obter valores únicos em um array JavaScript?\nPor que é obrigatório implementar public static void main (String [] args)?\n\nPerguntas Mais Visitadas\n\nDivergência em criptografar e descriptografar em Java e C# algoritmo Aes\nComo obter valores únicos em um array JavaScript?\nPor que é obrigatório implementar public static void main (String [] args)?",
        "url": "https://stackoverflow.blog/2016/10/04/estado-da-pilha-internacional-outubro-2016/"
    },
    {
        "title": "El estado de Stack Overflow en español",
        "content": "Imaginen una comunidad en línea llena de gente, ideas, y posibilidades.  Un lugar donde los usuarios vienen a ayudarse los unos a los otros para compartir su interés en algo que es muy importante para sus vidas. Imaginen una comunidad que se convierte en parte de la rutina diaria y ayuda a cada miembro a ser mejores desarrolladores al participar en discusiones interesantes. \nSi están leyendo esto, sabrán que no es cuestión de imaginarse un lugar así. Una comunidad como esta ya existe ¡y eres parte de ella! Todos somos parte de ella.  Sabemos también que es importante el mantener a nuestra comunidad creciendo saludablemente. Lo mas fuerte que nos convertimos nos permitirá ayudar a mas personas. \nEste reporte es exactamente de lo que estamos hablando – una manera de echar un vistazo detrás de la cortina para ver lo que estamos planeando y pensando. Esta es una manera en la cual podremos compartir con ustedes algunos datos de importancia sobre nuestro crecimiento e impacto. Será una manera de contarles como va todo con la comunidad porque estos sitios son enormes y sabemos lo difícil que es el poder mantener todos los datos organizados. Compartiremos estadísticas interesantes con ustedes de mensualmente y pondremos el reporte aquí en el blog donde lo podrán encontrar fácilmente para leerlo y comentar sobre lo que vean.\nPero, antes de comenzar, nos gustaría saber cuales pasos siguientes debemos tomar – ¿cuales estadísticas les servirá conocer? ¿Que les gustaría saber, conocer, platicar o leer? Tenemos algunas ideas que queremos intentar pero nadie sabe más que ustedes lo que la comunidad necesita. Denos sus ideas sobre lo que este espacio pueda ser e intentaremos soportar sus intereses de la mejor manera posible.\nLes dejo con algunos números interesantes para el mes de septiembre del 2016:\nPreguntas más respondidas:\n\n¿Cómo puedo proteger mi código de robo?\nPython ¿Qué es mas eficiente if not == o if !=? \n¿Cual es el mejor lugar para colocar los tag  en html?\n\nRespuestas con más votos:\n\nOpiniones sobre uso de Ñ en nombre de variables en C#\nGuía de estilo para HTML, CSS y Javascript\nCoordenadas de la aguja del minutero\n\nLa pregunta más visitada:\n\n¿Cómo añadir mensaje de error en código jQuery?",
        "url": "https://stackoverflow.blog/2016/10/05/el-estado-de-stack-overflow-en-espanol/"
    },
    {
        "title": "Bringing Jobs to Stack Overflow",
        "content": "TL;DR:\nWe believe that all programmers need and deserve jobs they love. Last week, we added a Jobs tab to Stack Overflow in order to help you do just that.\nWhat’s changed?\nYou’ll no longer need to login to a separate account on a separate site in order to use Stack Overflow Jobs. This means that the family of products we’ve built with the goal of improving programmers’ lives – Q&A, Jobs, and soon-to-be Documentation – will live side-by-side on Stack Overflow.\nTim has already summed up the problem that this decision was designed to solve:\nMany of you reading this have great jobs that you love, but many more do not, and don’t realize that Stack Overflow has a product that could help get them a much better job. Some might have poked at it, but got lost in the hassle of having to sign up all over again and tell us things they thought we already knew about them.\nI already have a job I love. Why should I be interested?\nYou don’t have to be. In Tim’s words, this is our attitude toward bringing Jobs to Q&A:\nIt’s all there when you need it. For many users, it should be a lot easier having all these things in one place. For those who only choose to use Q&A, or Docs, the rest will be waiting patiently out of the way.\nIf you are interested in a new job – and based on an experiment we ran earlier this year, we learned that 40% of you are – we’d like to help you. Because even though the demand for skilled programmers is on the rise, only 1 in 3 of you told us “I love my job.”\n\nIn the last few months, we’ve focused our efforts on several key features designed to help you land the job you love.\n1. Better job matches\nAbout a year ago, we began a long-term experiment that used our machine-learning technology to surface more interesting jobs to our users. This drove a 40% increase in overall applications, which was awesome – it meant that we were making it easier for you to find and apply to jobs you found interesting.\nThis experiment taught us that we can help the programmer community by showing relevant jobs without asking anything of the user. But how could we make the experience even better? What about specific criteria that you’re looking for? How could we better empower you in your search for not just a job, but the right job?\n\nWe believe that we can serve up even better jobs if we allow you to define your own preferences for important things like tech you’d like to work with, where you’d like to work, and desired compensation. Our matching algorithm uses this information to sort the latest jobs for you, putting the best matches on top.\nTo start seeing jobs that match your criteria, just login and visit the “matches” tab.\n\n2. Better job listings\nLast year, we asked you what you care about most when looking for a new job – and this is how you responded:\n\nWe’re working hard to get more companies to provide this info in their job listings. So far, we’ve focused on tech stack – and today, about 80% of our jobs offer tech stack data. Now we’ve set our sights on compensation. Currently, about 30% of our job listings provide compensation data – but we’re working hard to bring this closer to 100%.\n3. No recruiter spam\nIf you’re a programmer, you’ve probably never tweeted this:\n\nBecause chances are high that you’ve received a message like this:\nMy associate forward me your contact info. and the hiring VP of Engineering is interested in your technical background for a senior position.\nThe company I’m working for is very successful, profitable and well funded by several top VCs. Also can you please email me your current resume in word so I can forward it to the hiring VP of Engineering so he can review it, the resume he has is a bit dated…\nThe compensation is excellent with great stock options, bonus, 401k and comprehensive package. I can call you with all the details on the position and company, please let me know the best # to call you at.\nWe’ve taken a few measures to help ensure that Stack Overflow users only receive personalized, high-quality messages from companies – and of course, only after you’ve given us explicit permission.\n\n\nOur Job Search Status feature gives you full control over who is allowed to talk to you, whether you want to hear from companies right away or not at all.\nWe limit the number of outstanding messages that a company can send. This feature helps us control generic, copy-and-pasted messages to candidates, while encouraging companies to send messages that are relevant to the unique interests and background of each user.\nWe refund company subscriptions when we receive reports about bad behavior, and all of our job listings are required to disclose a company name. Furthermore, we seek out opportunities to work with developer-friendly companies that would be appreciated by the Stack Overflow community.\n\nOkay, but how does this affect Q&A?\nhttps://i.stack.imgur.com/1Ocuw.png” alt=”jobs on stack overflow” />\nAs Jason neatly summed up:\nThat ^ is about the extent of the changes to existing Stack Overflow. There’s nothing else changing about Q&A. We aren’t going to put jobs that look like questions in the middle of a question list, or jobs that look like answers in the middle of the answers for a question, or any other dark pattern garbage. The Jobs tab will be there for you should you need it, and otherwise Stack Overflow is essentially as it was.\nWe also won’t start hassling you about things that aren’t relevant to your interests. That means we’ll only push relevant Jobs content to users who’ve indicated to us that they’re interested in looking for a job. For everyone else, it’s there when you need it.\nStack Overflow Jobs is now live\nEach of us has a different dream job. Some of us want to work quietly from home; others want to build products in offices filled with colleagues and free perks. Some of us want to make more money, while others want to push the first line of code on a product that will eventually be used by millions. Whatever it is that you’re looking for, we hope that your search starts with Stack Overflow.",
        "url": "https://stackoverflow.blog/2015/12/21/bringing-jobs-to-stack-overflow/"
    },
    {
        "title": "International Salaries at Stack Overflow",
        "content": "We got a great response to the initial publication of our salary calculator in July – over 100,000 people tried it out just in the first few days.\nToday we shipped an update to the calculator, which includes:\n\nInternational salaries\nTwo new positions: Creative Director and Data Scientist\n2016 market adjustment\nSkills now have a resolution of 0.5 (previously whole integer)\n\n\nSetting the US market salaries\nOur base salaries are updated once a year based on the best available information “market” rates. Sources we look at:\n\nIndustry reports. We purchase salary data from a third-party, aggregated by job title. This gives us rough data for e.g. Software Engineers or Graphic Designers (though it isn’t specific to startups).\nVC surveys. All of our main VCs do yearly compensation surveys (which we participate in) and then share the aggregated data with us. This is our best survey data because it’s more specific to startups, though the sample size is smaller.\nCompeting offers. For anyone hired in the previous year, we take into consideration any competing offers they received that they’re willing to share.\n\nSetting the international salaries (new!)\nAs of 2016, we also benchmark international salaries.\nOur People Team (which I lead) researches and establishes a base salary in the local currency for each country in which we have a presence. This salary is determined the same way we do it currently in the US – by researching the appropriate market rate for the country. We anchor it at skill level 1 and 4 years of professional experience.\nWe recognize that some countries have market salaries that are lower than the US – therefore when determining the local salary, we not only look at the local market, but also the “remote developer market” rate, i.e. the salary you would get if you were paid by a US company in USD.\nThe international salaries are updated yearly. If we hire someone in a new country mid-year, we’ll research and establish the base salary then.\nTry the updated Stack Overflow salary calculator…\nLooking to work internationally? Stack Overflow Jobs has postings for developers in London, Amsterdam, Singapore, and more.",
        "url": "https://stackoverflow.blog/2016/10/06/international-salaries/"
    },
    {
        "title": "Bye Bye, Bullets: The Stack Overflow Developer Story is the New Technical Resume",
        "content": "If you write code, you know that you’re more than a list of places where you worked or went to school. However you got to where you are now, what should matter is what you’ve built, and what you can do. Whether you’re currently looking for new opportunities or not — and whether you’re active on Stack Overflow or not — your Developer Story is the best way to share whatever it is that you take pride in.\nIt’s your story; tell it your way.\n\nGet yours today at s.tk/story. It only takes a few minutes, and you do NOT want some other joker snapping up the good URLs. Take it from me, stackoverflow/story/J@yH@n10n.\nTechnology has evolved. Tech resumes? Not so much.\nThe resume was invented by Da Vinci in the 15th century. It mostly served as a letter of introduction for traveling lords… and it hasn’t changed much since. What do you see when you scan the bold stuff on a resume? Employers, job titles, schools, and degrees. And a lot of small bullets. Plus maybe an other-stuff-intended-to-round-me-out-as-an-actual-human section at the bottom.\nIn the roughly five centuries since resumes were created to help nobility vouch for roadbound gentry, they’ve stayed mostly optimized for one thing: conveying the importance of your pedigree.\nThe emphasis is all on the seniority of your titles and how impressive your companies or schools have been. Which is a great way for some developers to put their best foot forward. Have a Masters in CS from Yalemouth? Cool! That’s one good signal. But it ain’t the only one. Heck, even politicians know that fancy schools are only one of many ways to signal potential:\n“It turns out it doesn’t matter where you learned code, it just matters how good you are at writing code.” — President Barack Obama\nShow, don’t just tell.\nDevelopers, fundamentally, are makers. Like designers… or architects… or jugglers! You wouldn’t hire any of them based on a list of titles or places they’d worked. (“Oh, a Senior Associate Juggler? Get her! I bet she can do those flaming sticks and stuff!”) So why hire a developer that way? Makers’ skills are conveyed by showing, not telling. Portfolios. Blueprints. This awesome juggling video.\nBe more than bullets: Your best work, front and center.\nThe Developer Story lets you share what you’ve worked on by linking to actual features you’ve worked on, blog posts, or public code. Those things shouldn’t be described in the second clause of a tiny bullet, or relegated to the “Other interests” section of a resume, to sit unassumingly next to your second-place trophy in intramural tetherball.\nThe Developer Story puts the work you’re most proud of where it belongs: at the grownup table, right alongside your roles or schools.\n\nNo reputation points? No problem. Posting answers or contributing to Documentation is one way to build up public artifacts of your coding experience, but it’s not the only way. Your Developer Story lets you show off whatever you work on. So you’ll look good, no matter how much rep you have on Stack Overflow.\nFind a job you’ll love, on your terms.\nIf you’re ready for your next challenge, the Developer Story makes it easy to learn about jobs that fit your personal criteria. And since developers are in demand, we know it’s not about finding a job — it’s about finding the right job. The same way Stack Overflow Q&A put the right answer right on top, when you fill out your profile, Stack Overflow Jobs shows you roles that match the technology or projects you want to work on. (Even if they’re not what you’re using today.) And we always put the developer in control. No spam, no BS. (Did you know that Stack Overflow Jobs actually penalizes blind messaging by employers?)\n\nAnd it’s 100% backwards-compatible with those crusty old resumes – it can still highlight fancy schools and fancy titles, and anything else you’d include on a traditional resume. So if you’re like me, and still just a little proud that you got off the waitlist and eked your way into a school above your intellectual weight class, you can still show off your alma mater off with pride.\n\nBut don’t employers just want role, schools, and keywords?\nNope. It turns out that they’ve just accepted that that’s all that they can generally get from a resume, leaving them stuck using “seven vs. eight years of JavaScript experience” to determine whom to interview. The employers we’ve shared it with love the way the Developer Story gives them real, tangible ways to understand what a candidate has actually worked on.\nIt’s not just for developers who are job hunting.\n\nHappy at your current gig, but open-minded? According to our 2016 developer survey, 63% of developers aren’t actively looking, but are open to learning about new opportunities to level up. If you’re enjoying where you are, but open to finding that perfect new challenge, the Developer Story can help you keep an eye on what’s out there, and we’ll only send you the best opportunities that match your goals.\nCompletely not interested in jobs, but proud of what you’ve made? Listen, I get it. I never want to leave my job. The Developer Story is for you, too. Like most people who make things, devs often like to share what they’ve built. So it’s designed so you can use it as your own “coding central,” even if you’re not job hunting. Just create a Developer Story, but set your job preference to “Not Interested.” You can share the features you’ve worked on, Github repos, blog posts, or even books you’d recommend. It’s your story. Tell it your way.\n\nOnce your Developer Story is beautiful, let’s work on your wardrobe.\nWe think one of the best ways to inspire other devs is by sharing some of the awesome stuff their peers are building. Or by showing a curious twelve year old what someone else who loves breaking machines can grow up to be.\nSo, for the next two weeks, if you tweet a link to your developer story, and include the #mydevstory hashtag, we’ll enter in you in a contest to win one of two hundred gen-u-ine Stack Overflow tees (50 mens and 50 women shirts each week.) And don’t forget the link to your Developer Story – we need it to contact you if you win.\nTake a minute to start your story now.\n(We hope you’ll indulge our use of Rear Admiral Hopper’s incredible biography as a case study for the images in this post. You should not take this to mean that the Rear Admiral endorses Stack Overflow in any way. You can, however, take it to mean that we endorse her. Wholeheartedly.)\n\nThanks to Abby T. Mars, Elaine Wang, Kaitlin Pike, Kit Carrau, Rachel Maleady, Taryn Pratt, and Tim Post for helping to improve this post.",
        "url": "https://stackoverflow.blog/2016/10/11/bye-bye-bullets-the-stack-overflow-developer-story-is-the-new-technical-resume/"
    },
    {
        "title": "Why Stack Overflow Doesn’t Care About Ad Blockers",
        "content": "Hi! I’m Steve Feldman, Senior Ad Ops Manager at Stack Overflow. My whole life I’ve been fascinated by advertising. Even as a kid, I wondered what a company was trying to tell me by using one word instead of another in an ad. Over time, I developed a strong (read: subjective) opinion of what makes an ad ’good,’ and what makes an ad ’bad.’ It took me many years– in fact, it wasn’t until joining the Ad Sales team at Stack Overflow– to finally figure out that the common thread shared by the best ads is relevance. Maintaining that relevance is how we’ve managed to avoid one of the biggest issues facing publishers today: ad blocking.\nWhat’s the deal with ad blockers?\n\nAt this point, it’s pretty clear that ad blocking is a big deal. A recent study suggesting the advertising industry is set to lose over $22 billion in 2015 alone as a result of ad blockers is setting off alarm bells. That is a LOT of money. Companies are scrambling to ‘fix’ the ad blocking problem, as active users of ad blocking utilities hits nearly 200 million. But it’s not just that tiny stop sign in the toolbar raising alarms. Apple caused a panic when they announced that iOS9 would permit the use of ad blockers, as many see mobile ads are an important piece of revenue for the industry.\nFirst, the ad industry went up in arms over ad blocking, offering suggestions like developing ways to deliver specific ads to users employing ad blockers. Then, they considered going after Apple when they announced iOS 9 would permit ad blockers. Later, they began asking users to turn off their ad blockers as a sign of good faith. That did not go so well for some. Finally, they prevented Ad Block Plus from attending an industry event. Through all of this, those of us at Stack Overflow sighed and shrugged our shoulders. Clearly, many in the industry just don’t get it. Publishers can’t win by forcing ads — especially low-quality ads — in people’s faces. But some in the industry do get it. Eyeo (the company behind Adblock Plus) outlined in their ‘Acceptable Ads Manifesto’ some strong ideas for how to improve digital advertising– not to mention the iAB’s L.E.A.N Ads program. While there is criticism for both of these solutions, the positive takeaway is that powerful organizations are finally moving toward addressing the problem. Reddit is proactive in their public outreach with their ads. Quartz is trying new and interesting ways to engage with users, to mixed reviews. I’m going to toot our own horn by saying that Stack Overflow started doing these things a long time ago via a numerous channels on our Meta sites for both Stack Overflow and Stack Exchange.\nAds at Stack Overflow\n\nThe display ads team grew from just two in 2012 to nine today. In that time, traffic on SO tripled, and sales have grown with it. One of the attractions for new hires on our team is the unique relationship we have with our users and the challenge that represents for a salesperson. We entered into an agreement with Stack Overflow users long ago that we wouldn’t subject them to low-quality ads. Think scantily-clad women selling flight deals, weight-loss supplement promos or wacky waving inflatable arm-flailing tube-men promoting car dealerships. But really: anything that doesn’t speak specifically to the Stack Overflow audience is not permitted. We also don’t accept rich media like animated ads, expandable ads, or video, which are the norm for most publishers today. This strict policy means we leave money on the table, but our team wants to protect Stack Overflow from those kinds of ads, as they run the risk of alienating that established trust.\nSalespeople and campaign managers on our team do much more than they do at other companies. They’re more involved with a campaign from start to finish. From explaining to a new client how reputation works to working with ad ops to suggest a shift to a new and popular tag like [tag:swift] because it is attracting many new users. This may seem irrelevant to the ad blocking debate, but it’s not. It encourages edification and awareness for people who otherwise would have little or none, which in turn breeds respect and appreciation. This works for a new member of our team much better than simply saying ‘Stack Overflow is important for reasons x, y, and z.’ And they grow to learn over time what IDEs and SDKs are, and it’s remarkable to watch. This acquisition of knowledge really just means that our team cares about keeping ads useful and relevant on Stack Overflow.\nWe don’t care!\n\nThe truth is: we don’t care if our users use ad blockers on Stack Overflow. More accurately: we hope that they won’t, but we understand that some people just don’t like ads. Our belief is that if someone doesn’t like them, and they won’t click on them, any impressions served to them will only annoy them– plus, serving ads to people who won’t click on them harms campaign performance. That focus on relevance and performance arrives early in the QA process. Whether it’s our sales people explaining that ads must have borders, or our campaign managers checking landing pages to ensure they adequately inform, we are thorough.\nAn important part of the QA process is ensuring that not just the creative, but the advertiser is relevant to our audience. Every single ad to appear on any of our sites is vetted by the operations team. We check copy and content on the ads as well as the landing pages. What we repeatedly ask ourselves in this QA process is quite simple: is this relevant to users? ‘Kiss your hosting problems goodbye’ with a provocative image is not something we want on our sites, and I’m sure our users don’t either. The purpose of this heavy QA is to ensure that our users get the most out of their experience on Stack Overflow. The content* is helpful– why can’t the ads be the same?\n\nThis ad tries to be relevant, but falls on its face. Also it’s fake. Sorry, future herpetologists.\nThe Value of Valuing User Experience\nUser experience is always on our minds. Indeed, others believe that putting user experience ahead of revenue is a path toward long-term growth for publishers. As the chief revenue office of The Washington Post said, “…the product experience has to be every bit as good as the content.” Our approach is in harmony with that belief, as we keep ads confined to certain areas, and we permit users to downvote or close ads that they don’t like.* This allows users control over their experience. QA, curating content and advertisers, and a consideration of the user experience have been successful tools preventing ad blockers from hindering our growth.\nThe recent resizing of the sidebar from the non-standard, completely made up, for reasons unknown to us 220×250 to the industry standard 300×250 went through thorough research prior to launch. The problem boiled down to this: we wanted to increase the sidebar size, but wanted to ensure that the content wouldn’t be harmed in any way. Bret and the ad server team dug in and investigated screen size of every user across the Stack Exchange network and concluded that only about 2% of users would be affected by the change. As a result, we proceeded confident that our new increase in size would be a net gain for all involved.\nStack Overflow’s mission to make the world a better place for developers remains a central tenet for the Display Ads team. Everyone on our team considers the impact on our users in most of our primary functions. This dedication to keeping content relevant and beneficial to users is what makes the Big Scary Ad Blocking Problem not so big or scary for us. We want advertising to benefit our users and be a resource, not an eyesore. We want advertising on Stack Overflow to be better for our users and advertisers than anywhere else. I’m proud of what we’ve accomplished so far, and I’m excited to see what’s next.\n*Special props to the sales support team, as they manage these functions but for the Careers sales team. This QA process used to go through the ops team on the Display Ads side, but it became too much for an army of two to handle. Sales support now consists of seven excellent support specialists.",
        "url": "https://stackoverflow.blog/2016/10/26/why-stack-overflow-doesnt-care-about-ad-blockers/"
    },
    {
        "title": "Beyond Coding Recap: Helping Emerging Developers Launch Careers",
        "content": "This summer Stack Overflow, together with a host of NYC-based tech companies, created Beyond Coding, a 10 week program for emerging developers and designers. We sought to guide students through the finer points of professional “soft” skills in order to help those lacking experience gain a foothold in the technical job market.\nHaving no idea what reaction the program would invite, we had an astounding 375 applicants from all over the world. With the program open only to those living within the New York City area, 221 students were accepted. 110 students went on to complete the course requirements, which included attending 5 out of 6 classes and passing the project-based homework assignments. Prior hard coding/design experience was required for this program, as the focus was instead on mentoring, training, and confidence building.\n\nThe Knowledge\nIn collaboration with the New York Tech Talent Pipeline, Beyond Coding included courses from Stack Overflow, Crest CC, Foursquare, Kickstarter, Tumblr, and Trello. Speakers from each company (be they developers or recruiters) shared insights and practical knowledge that they themselves wish they had known when starting out careers in the tech industry.\nEach course was catered specifically to developers and aimed to increase overall confidence; they included perfecting elevator pitches, business networking, learning how to find new resources on the job, working with data, technical communication best practices, and tech interviewing tips. The classes were designed to be highly interactive by encouraging students to discuss their ideas and projects and solicit feedback from one another.\nThe Students\nWe couldn’t have asked for a better group of students to spend the next few months with. They came from a diverse range of backgrounds and genders – 69% identified as male, 31% identified as female. Each student came to Beyond Coding for a different reason. We met graduates, career changers, self-taught techies, and part-timers looking for full-time roles just to name a few.\nAt the beginning, confidence was on the lower side, with 30% of students stating they were not confident in their ability to get hired in a technical role. At the conclusion of the program 90% of students were confident they would be hired or had already accepted a job offer.\nStudents were highly encouraged to utilize social media outlets such as LinkedIn to present their coding skills and qualifications and create a professional online presence. On Twitter, you can check out #beyondcodingNYC student conversations and photos.\n\nThe Hiring Fair\nHosted at AppNexus, the Hiring Fair was held on September 9, and was open to employers hiring entry-level technical roles. Participating employers ranged from large corporations such as Morgan Stanley, American Express, NY Times, and HBC Digital, to local start-ups including App Partner, Decoded, and Percolate.\nOver 80 students were in attendance, with around 20 students gaining “Early Bird” access by consistently attaining high marks for their homework projects. The evening was a great mix of networking, resume reviewing, and getting to see students confidently engage with employers.\nThe End Result\nThe program caught the eye of BRIC TV, a Brooklyn arts and media nonprofit, who have created this fantastic video overview of Beyond Coding and the Brooklyn Tech Triangle Internship Program, whose students were required to attend all Beyond Coding courses.\nEach student who completed the Beyond Coding program should be proud of the hard work and late nights they put in. We’ve been impressed with the caliber of everyone involved and can’t wait to hear about the new roles and internships that will be taken on in the coming months.",
        "url": "https://stackoverflow.blog/2015/10/06/beyond-coding-recap-helping-emerging-developers-launch-careers/"
    },
    {
        "title": "How We Talk About Diversity at Stack Overflow",
        "content": "We have a Diversity and Inclusion Panel (DIP) at Stack Overflow — you may have read about it in Donna’s post on Why Stack Overflow is a Good Workplace for Women. It’s a grassroots, employee-driven group with volunteers from different departments with varying levels of seniority. We’ve been working hard to make our company one of the best places to work by ensuring individuals feel welcome, valued and respected.\nThe panel was formed when a group of employees noticed that conversations were happening all over the company about diversity, or the lack thereof, both at Stack Overflow and in the tech industry. We wanted to consolidate the discussions and efforts to get everyone on the same page and make a bigger difference. DIP’s Google Group and monthly meetings served this purpose for quite some time before we decided it wasn’t enough. The conversations that we were curating were too valuable to keep to ourselves; the entire company deserved to be part of those conversations if they were interested. We needed to create a comfortable space for everyone at Stack Overflow to be able to engage with each other on diversity issues.\nOur Experiment\nRoughly once a month, we host a one-hour chat in our company-wide chat room to candidly and respectfully discuss diversity. It’s 100% internal and only for employees who are interested in participating. The chat is structured with 1-3 volunteers, who are arranged ahead of time, starting our discussion by sharing personal experiences related to diversity. Anyone can ask questions, offer support, share their own experiences, or simply observe. We chose our existing chat room because we wanted to meet people where they were already talking and eliminate speaking over each other. It would also allow us to save the conversations as artifacts that employees could read after the fact if they miss the live chat or want to re-absorb the information.\nI know the idea sounds risky. How could that possibly work? People would either be too timid to say anything of value, or make everyone super uncomfortable by oversharing, or even worse, begin to brawl in all caps. I wouldn’t even be surprised if someone cried. And this would all be in our chat history, never to be deleted.\nSpoiler: none of that has happened. The conversations have been productive and civil; the volunteers have been open-minded and allowed themselves to be vulnerable, while other participants have asked questions, offered support, and shared different perspectives. In several instances, people responded with things like, “WHAT??!! Really? I can’t believe that happened to you!” or fervently agreed that they had experienced something very similar. People have even been brave enough to ask if their own behavior was perpetuating the issue, and asked to be called out if they did something that bothered anyone.\n\nWhat We’ve Learned\nBy no stretch of the imagination do I think this would be a good idea in every workplace. Stack Overflow seems to be just the right size with the appropriate tools to make something like this work. Furthermore, people were at least willing to give it a try, and kept open minds. So we had the means to make it happen, and I think we also found a formula that heavily contributed to it being productive:\nFocus\nEach chat has a topic, like English as a Second Language, LGBT, or Parenting/ Work-Life Balance, that we discuss within the scope of working at Stack Overflow or in the workplace in general. By keeping the focus small, we are able to dig in deeper. We also have a moderator to make sure things don’t derail by slipping off-topic or becoming toxic. (So far we have not experienced the latter, but I will concede that we have been guilty of the former.)\nRespect\nThere is a lot of respect amongst peers here. I firmly believe that this idea can only work if people trust each other enough to make themselves vulnerable — there can be no hostility whatsoever. We also follow the same Be Nice Policy that we practice in our communities, and keep everything 100% internal.\nVulnerability\nThe real secret sauce, though, is that our volunteers share (very) personal experiences. By giving firsthand accounts of dealing with bias, they are bringing the issue close to home — it’s a lot easier to have empathy for experiences that are different than yours when they come from someone you care about personally and respect professionally, especially when they are putting themselves out there.\nImpact\nI don’t think DIP Chat is a silver bullet. We haven’t “fixed” diversity at Stack Overflow by any means, but it is doing us some good. Employees from different parts of the company — and all over the world — are learning from each other and strengthening relationships in a way that previously wasn’t available. For me personally, DIP Chat has changed the way I think about myself, other people, and our responsibility to each other.\nThe real reason that I think that this is working for us is that the heart of Stack Overflow is asking and answering questions. We are professional lovers of sharing knowledge, and this spirit extends beyond our Q&A sites.",
        "url": "https://stackoverflow.blog/2015/11/11/how-we-talk-about-diversity-at-stack-overflow/"
    },
    {
        "title": "Announcing Winter Bash 2015",
        "content": "Another calendar year is ending, which can mean only one thing. It’s time once again for the event that brings joy to all (with a slight helping of dismay for our friends in the southern hemisphere1): Winter Bash!\n\nStarting now and going until the end of the day on Jan. 3, 2016, you’ll once again be able to earn and show off hats for all sorts of things you’re already doing across the Stack Exchange network. As in previous years, we’re rolling out an all-new array of hats for this year’s event. (For those who are wondering, this is entirely because we on the SE team love our communities and think you deserve the best, and not at all because we forget where we store the old hats every year.)\nThat means we owe another big thank you to amazing freelance designer Elias Stein, who deftly handled the conversion of all hats from crazy vague concepts into beautiful digital reality for the third year in a row, and our very own unicorn lord balpha, who once again worked tirelessly behind the scenes to perfect the hat distribution process.\nHats, for those who don’t know, are sort of like badges, but better, because you can “wear” hats on your avatar, displaying them wherever your avatar appears, network-wide! (And thanks to a labor of love by Brian Nickel, that includes the iOS app this year!) The triggers for hats are a little different than the triggers for badges; to find out what you have to do to get some headpieces, check out the Winter Bash mini-site. There are 28 total hats you can earn over the next few weeks… that we’re telling you about. How many secret hats are there this year, you ask? You’re on your own. We’re not spilling the beanies.\nAfter you’ve earned some hats, you can visit your profile on any site to choose the hat you want to wear (or simply admire your own personal hat rack). Just click on the bobble hat adorning your badges section to bring up a dialog.\n\n(No, you can’t wear the bobble hat yourself. Your badges would get cold!)\n\nOnce you’ve picked a hat, you can resize and reposition it in the selection window to suit your avatar. Last year’s example image for this was so perfect that it just has to be reused:\n\nFinally, you don’t need to worry about tracking all this stuff yourself. You’ll get notifications about new hats via a special, Winter-Bash-only top bar inbox: .\nOf course, if you think all this is weird and don’t want any part of it, that’s okay, we won’t judge you (much). You can opt out of the event by clicking on the snowflake icon in the top bar——and then the “I hate hats” link at the bottom left of the box that pops up. (NB: the reverse is true on Stack Overflow; fans of hats on SO will have to go through the same procedure but click a link to opt in at the end.) You’re welcome to change your mind about wanting hats at any time during the event.\nJust remember, all the hats will vanish again after three weeks. Now go! Other people out there are already working on their degrees2!\n\n1: As in the past, tradition defeated accuracy in the naming decision. Hopefully some of our summertime audience will be at least partially mollified by the fact that the Winter Bash site will be available in Portuguese, Spanish, Japanese and Russian this year, thanks to the efforts of our international Community Managers.\n2: The University of Winter Bash has not been accredited by any organization recognized by the Council for Higher Education Accreditation or the United States Department of Education. Yet.\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2015/12/14/announcing-winter-bash-2015/"
    },
    {
        "title": "Stack Overflow Gives Back 2015",
        "content": "It’s that time of year again — a time when we reach out beyond the Stack Exchange community to remember the organizations and people who desperately need our help. Each year, we set aside this time and offer to make a $100 donation to charity on behalf of each moderator representing their community.\nWe’ve been doing this since almost the beginning of Stack Overflow; and still, when the call goes out to our Moderators — ”Make your charity selections now!” — the outpouring of enthusiasm for giving back grows stronger with each passing year.\nIt is a precious gift to have the means of helping someone who desperately needs it. Whether it’s an organization providing clean water, a warm blanket, or a light in the dark for families fleeing violence; these charities make it possible for another year of school in a war-torn country, while others are defending our very way of life. There is a lot of emotion and heart-felt concern in deciding which causes most need our help each year. And when violence rocks our biggest cities and millions of refugees have nowhere to go, moderators coming together to “give back” takes on an especially meaningful tone.\nBut came through, they did!\nThis year, on behalf of the 483 moderators of Stack Exchange, we were able to make the following donations to charity:\n\n\n\nCharity\nDonation\n\n\n\n\nUNICEF\nThe United Nations Children’s Fund provides long-term humanitarian and developmental assistance to children and mothers in developing countries (unicef.org)\n$5,500.00\n\n\nInternational Rescue Committee\nResponding to the world’s worst humanitarian crises and helping people to survive and rebuild their lives; at work in over 40 countries, more than 90% of every dollar goes directly to help refugees in desperate need (rescue.org)\n$6,900.00\n\n\nGirls Who Code\nWorking to close the expanding gender gap in technology and engineering, Girls Who Code provides unparalleled computer science education to equip girls with the computing skills needed to pursue 21st-century opportunities (girlswhocode.com)\n$9,500.00\n\n\nElectronic Frontier Foundation\nDefending your rights in the digital world (eff.org)\n$12,100.00\n\n\nDoctors Without Borders\nAn international medical humanitarian organization created by doctors and journalists (doctorswithoutborders.org)\n$14,300.00\n\n\nTOTAL\n$48,300.00\n\n\n\nAnd on behalf of our engineering and IT team, we also like to remember the organizations and tools that make what we do possible:\n\n\n\nOrganization\nDonation\n\n\n\n\nGit and the Software Freedom Conservancy\n$1,000.00\n\n\nHAProxy\n$1,000.00\n\n\njQuery Foundation\n$1,000.00\n\n\nOpenBSD\n$1,000.00\n\n\nSQLAlchemy\n$1,000.00\n\n\n\nWe are immensely grateful for the incredible year we’ve had at Stack Overflow. Stack Exchange was conceived out of a crazy idea that people would be inspired to create and share information online in the spirit of peers helping each other — and to see that kind of passion spill out into the real world to help others overcome real adversity is truly heart-warming.\nWith the holiday season upon us, it is a good time to reflect on what we’ve accomplished this year. With almost 100 million users visiting us each month, we are literally changing the way people work and learn. Our fellow community members are generously contributing their time, their passion, and their leadership to make these sites worth visiting and participating in.\nSo as we enter this new year, let’s tip our glasses and make 2016 the year to share in our good fortunes. It’s a year of new beginnings… so set aside some time to learn something fun, take pride in what you do, work because you love it — and most of all… enjoy!\n\nCheers!",
        "url": "https://stackoverflow.blog/2015/12/23/stack-overflow-gives-back-2015/"
    },
    {
        "title": "Podcast #70 – David Was Wrong And Jason Was Right",
        "content": "Welcome to the Stack Exchange Podcast episode #70! Today’s podcast is brought to you by the BB-8 droid. Today your hosts are joined by developer Jason Punyon, whom you may remember from way back in Podcast #21. Punyon works out of balmy Buffalo, NY. (Here’s the Buffalo sentence they talk about for a weirdly long time.)\nPunyon started working at Stack Overflow on the Careers team in June 2010 (back when Careers developers were devalued associates). His interview process involved a party and a change of pants. You should listen.\nSo why are we having Punyon on the podcast, anyway? Because of Jobs on Stack Overflow. (We talked about this last podcast, too, and Donna wrote a blog post as well.)\nAnd now, a story about how David was wrong and Jason was right! Basically, we made a wrong decision a long long time ago and built Careers as a completely separate application. When at last we decided to fix this, we thought it was more or less insurmountable, or that it would take years. But then we had our annual company meetup at a hotel in San Diego with weird showers (take our word for it) and everything changed forever… because Dalgas and Punyon put their heads together. The summary: Careers is putting on a Stack Overflow outfit. (Jason does a better job of explaining it, don’t worry.)\nThen Punyon went home and crammed years worth of work into a week. At least that’s how I think it happened. It’s live for everyone now, and you can go look at it, and it probably won’t break because we did a lot of work to make it perform better for Stack Overflow’s scale. Anyway. It’s here: http://stackoverflow.com/jobs.\nLest we make it sound like Jason singlehandedly shipped Jobs on SO, David made him recite the list of his co-conspirators from memory: Donna, Dalgas, Nick Craver, Dean Ward, Kirti Thorat, Nick Larsen, Roberta, Ana, Shog, Mike McGranahan… and if you worked on this but aren’t listed here you should go yell at Jason and not me.\nAnyway, this was a cool project for Jason, who spends most of his time interpreting whale songs (which is apparently what the data team does). It was also cool because he gets to ship it and immediately run away to parental leave – babby #2 arrives on January 8! Congratulations, Punyon family!\nSo! Is there anything else going on? There was some kind of bash going on at the time of this recording. A Winter Bash, you might say. Also, Stack Overflow en Español is in beta público, Stack Overflow на русском is graduating, and Stack Overflow スタック・オーバーフロー is continuing to flourish. And check out the new design on the Raspberry Pi site!\nThanks for joining us for Stack Exchange Podcast #70. See you next time!",
        "url": "https://stackoverflow.blog/2016/01/07/podcast-70-david-was-wrong-and-jason-was-right/"
    },
    {
        "title": "Winter Bash 2015: Hats Off",
        "content": "And here we are again, at the end of another Winter Bash, the annual Stack Exchange celebration where the hats are made up and the points don’t matter.\nWho Wore It Best?\nMost of the fun of Winter Bash is, of course, seeing the actual hats on avatars. So let’s kick off with some pictures!\n\n\n\n\n\nAnd a very honorable mention to Role-Playing Games SE’s BESW for taking the Timey Wimey hat and really running with it!\nNumbers, We Want Numbers!\nThe most commonly awarded hat this year was, of course, Every! Body! Gets! A Hat!, the hat that was automatically given to all Winter Bash participants on a site once any 20 hats were unlocked on that site. A total of 99,388 of them were distributed across the network, to 70,103 unique users. Sadly, that means the hat didn’t quite live up to its name, and a couple thousand people did not get to look like Oprah… or sport fabulous mustaches, like this fancy gentleman:\n\nCongratulations to Mathematics SE for being the first site to unlock this hat, less than 18 hours into the event! Also to Code Review SE and Blender SE for technically needing only three users each to get this hat (i.e. at the time that the hat was earned, one user had 16 or more hats, and two other users had enough hats that the first user didn’t, filling the number up to 20). The biggest “team efforts” occurred at Aviation SE and English Language Learners SE, on each of which ten users came together to get the site past the 20-hat mark. All in all, 90 communities managed to “get Oprahed.”\nNot surprisingly, the next-most-common hats were “participation hats,” given for doing little more than showing up on a given date: A New Hope was earned the most total times, at 35,329, but Sufganiyot was earned by the most distinct people, 27,050. The most common hat for an actual achievement was Cerro de Potosi, with 21,720 awarded users for earning silver badges; fortunately, our badges don’t require any destructive real-world silver mining. Actually, more people earned silver badges during the event than visited on Christmas; Cerro de Potosi edged out O Tannenbaum, which was earned 20,104 times.\nMany Explorers (4285, to be exact) used Winter Bash as an opportunity to venture to new sites, where they were welcomed with upvotes by the natives. Some 1994 of those natives may have been designated Greeters as a result.\nOn the other end of the spectrum, the rarest non-secret hat was Living in the Future, which only 42 people earned, and nobody got more than once. It was doubly challenging, requiring users to have learned enough to solve their own problems and preventing them from custom-designing questions for the purpose of the hat by requiring the question to predate Winter Bash.\nPeople were much more likely to close questions than to reopen them, with 10,015 Melpomenes going out compared to just 1556 Thalias. However, given that the only questions that can be reopened are those that have been closed in the first place, and that many closed questions never get improved to a point where reopening is appropriate, that’s not a bad showing.\nWhile many users enjoyed playing along casually, there was a strong corps of “power users” as well, as evidenced by the numerous awards of Specialist Hatsman (earned 1911 times, for earning 11 other hats; a play on “specialist batsman” from the game of cricket) and Fan-hat-ic (earned 20,469 times, for visiting on ten consecutive days; a play on our badge “Fanatic”).\nDo You Want To Know A Secret? Do You Promise Not To Tell?\nWell, actually, at this point, you can tell. There were a total of 13 secret hats this year (or 14 if you count the white and blue Flip Flop variants separately… which is highly recommended, because it results in an even 42 hats for the year).\nThe first one awarded, and first one the community figured out the trigger for, was Odinson. It ended up being awarded 1817 times, and was triggered by closing a question as a duplicate using the “dupe-hammer” privilege or voting to close a question as such that was later closed by hammer.\n\nThe first user to correctly explain Odinson was Undo. In doing so, he earned himself a second secret hat: Archimedes, the hat given out for correctly identifying another secret hat’s trigger. Veteran Winter Bashers may remember it being called Eureka in past years. This year’s only manually awarded hat, it was earned by 18 people.\nNext to fall was Hairboat’s Revenge, which was given to any user who replied to everyone’s favorite Community Manager, Jon Ericson, by answering one of his questions, commenting on one of his posts or replying to one of his comments. A total of 516 users did this, and it was apparently so fun that many did it on multiple sites; the hat was given out 614 times.\nSoon afterwards came 007, for posting an answer that received 0 comments to a question that had 0 comments and reaching a score of at least 7 for the answer. A simple reward for posting a good, clear answer to an equally clear question, it was awarded 402 times.\n\nThe final secret hat to be deciphered on day one of the event was Sun Wukong, for posting a meta question or meta answer that attracted at least five upvotes and at least five downvotes. It was a lightweight test for a moderately popular old badge request, and it was given out 165 times.\nDay two kicked off with a team of users solving Amazing Grace, another nod to one of our favorite people. By asking a bug-tagged question on a meta site, scoring at least 10 and attracting an answer that also scored at least 10, users could make themselves look like Admiral Hopper. This was one of the rarest hats, as only 30 people earned it (32 total times).\nReturning to the realm of fantastical headgear, users could get It’s Over 9000! for racking up a total of 9000 views across all of the questions they asked during Winter Bash. This turned out to be another hard one; only 48 people did it, and nobody managed it on more than one site.\n\nAfter that, things quieted down until Friday, when It’s Always 5 O’Clock Somewhere first appeared. It was awarded for asking a question at exactly 5:01 pm on Friday, though it didn’t have to be 5:01 in your local time zone, just at some standard time zone currently in use in the world. It was earned 170 times, by 167 users.\nThat was followed by another break, and then the arrival of the Flip Flop hat(s), triggered by posting or voting on Dec. 22 (the solstice). As expected, it was a pretty common one; 17,531 users got the blue and black version (13,489 distinct) while 17,446 got the white and gold (13,112 distinct).\n\nIt took until nearly the end of the event for three more secrets to be cracked. Flying Tiger was a successor to last year‘s Red Baron. The original trigger was to find a question with a score of -3 or lower, post an answer that reached a score of 5 or better, and bring the score of the question up to 3 or better. This year, the trigger was the same, except that your own votes didn’t count. Because of the natural difficulty of the hat and the late date at which the community realized the trigger, only 11 were earned (all by different users), making this the rarest hat in the history of Winter Bash!\nNext up was Cleanup Crew, which probably produced a greater variety of trigger theories than any other hat this year. It was earned by deleting ten of your own comments that were left under someone else’s post, before the author edited the post. In the end, the crew was 195 users strong, though a few of them pulled duty on multiple sites, bringing the total hat count to 198.\n\nThe last hat to be successfully solved, Edward Edwards, was awarded to users who won a bounty even though a competing answer had already met the criteria for the bounty to be automatically awarded. This was another uncommon hat, with 47 going out to 47 people.\n\nAnd now, what you’ve all been waiting for: the mystery of the Onion Knight, revealed! This hat sparked debate almost immediately, with most people split between whether it referred to the Final Fantasy job class or the Game of Thrones character (and a couple people piping up for a Dark Souls NPC). Who was right?\nNone of them! A hint midway through the event directed guessers to focus on the word “onion,” but it probably should have done a callback to 2009 and prodded them to do so “as a programmer.” The hat was meant to make people think of Tor (now a proper name of its own, but originally an acronym standing for The Onion Router), and evoke the concept of anonymity. Users who received the Onion Knight hat posted questions that received at least three anonymous feedback pseudo-upvotes from visitors who did not have full voting privileges on the site. There ended up being 369 Onion Knight hats, awarded to 361 distinct users.\n\nMad Hatters\nFinally, even though it’s not a competition and the points don’t matter, this post couldn’t be complete without declaring some winners. This year, nobody earned all of the possible hats, but three people tied for “most hats” at 39 each:\n\nThanks to everyone who got involved for another fun year!\n\n\n\n\n\nFor those who are especially interested, I’ve posted additional statistics and analysis on Meta Stack Exchange (along with more screenshots).\nHere’s to a great 2016!\n\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2016/01/06/winter-bash-2015-hats-off/"
    },
    {
        "title": "Stack Exchange Year in Review 2015",
        "content": "I think we have to enjoy what we do if we are to succeed.—John Wooden\nLooking back on the past year across the network, it strikes me that we are very fortunate that so many people take pleasure in sharing their knowledge with others. Everything we (as a company and as a community) accomplished was made possible by that singular reality.\n\nSince last year’s report, we changed our company name (back) to Stack Overflow and got an epic new logo. Partly it’s simple branding; causal visitors recognize Stack Overflow and other individual sites rather than the network as a whole. Another reason reflects the reality of our (current) goal: building programmer Jerusalem.\nThis year alone users asked 2.5 million questions and contributed 3.2 million answers on our flagship site. People gave out 16 million upvotes last year and for the fourth straight year more than a million questions were answered to the askers’ satisfaction. That’s a lot of programming puzzles solved. Not every post started as a gem of perfection (there were 2.3 million downvotes), but nearly 10 million comments and 3.4 million edits sorted many of them out. (These statistics come from public data. Feel free to look up the results for your favorite site.)\nNearly two years ago we expanded the Stack Overflow community beyond English. This year the experiment paid off: Stack Overflow em Português graduated from beta status. Building on that success, we started a Japanese-language Stack Overflow, absorbed a Stack Overflow in Russian, and Stack Overflow en Español began its beta. Non-English Stack Overflow sites collectively field 159 questions per day. None of this activity seems to have come at the expense of the English site—people just enjoy sharing knowledge using the language in which they are most comfortable.\n\nHave you ever looked at your digital collection (books, movies, music, games and so on) and realized you have titles you’ve never consumed and don’t even remember obtaining? Stack Exchange is like that except all 150 communities prove to be amazing. As a Community Manager, I’m obviously biased in my evaluation—except the quality of these sites has almost nothing to do with us. Instead credit goes to the thousands of core users who write posts, improve them and vote up the best content.\nExcluding Stack Overflow, users asked 967,039 questions and provided 1.3 million answers. Over 4 million comments helped clarify those posts and people submitted 1.6 million edits. There were 7.1 million upvotes and 1 million downvotes to rank posts and reward authors with reputation. In addition to the 3 million reviews completed on Stack Overflow, 1.5 million posts were reviewed on other sites. Askers “accepted” 402,647 answers as particularly helpful in 2015. Answers don’t just benefit the people who ask the questions either. Last year the Stack Exchange network (including Stack Overflow) racked up 8 billion page views. Nearly all of that traffic came from people searching the internet at large and discovering an answer on the network. Quantcast ranks the stackexchange.com domain (excluding the trilogy and sites with custom URLs) in the top 50 US sites.\nIn order to handle that much activity we need a massive data center, right? Well, not really. After serving faithfully for four years, we upgraded the hardware in our “New York” data center. Instead of failing over to our backup data center in Oregon (which was moved to Denver in June), the Site Reliability Engineering team updated hardware live. This requires careful planning and plenty of redundancy: 11 web servers, two SQL clusters, two Redis servers, etc. Most of the time those machines run at single-digit CPU load. We expect the new hardware to keep up with the load for the next four years.\nWe used to joke that all of our sites should be named “$topic for programmers“. But as sites and the network mature, that’s getting less true. Last year the network expanded to 17 new topics, including Woodworking, Music Fans, Health, and Law. Instead of renaming to Stack Overflow, we could have gone with Socratic University: there just aren’t many topics you can’t ask about. Several of our sites, especially the mathematically oriented ones, boast serious academic chops. Papers regularly cite posts from Theoretical Computer Science, Mathematics, MathOverflow and Physics.\nA tiny sample of the smörgåsbord of tasty content posted last year:\nGaming wins the title of most viewed question with:\n\nHow do I deliver a baby? Presumably a fair number of the 867,960 views were to figure out what game the question is about.\nWhy does “effective. Power” text crash the iPhone OS? (Apple, 448,473 views)\nHow to disable the “Get Windows 10” icon shown in the notification area (tray)? (SuperUser, 416,421 views)\n\nThe top voted answers?\n\nNew warnings in iOS9 (Stack Overflow, +812)\nOn OS X, why does sudo ls show hidden (dot) files? (Super User, +378)\nLeaving intentional bugs in code for testers to find (Programmers, +374)\n\nThe top posts by anonymous feedback:\n\nIs it ‘OK’ to use the root user as a normal user? (Apple, +783)\nHow to make Windows 10 File Explorer open “This PC” by default? (Super User, +693)\nHow do you raise an intelligent and happy daughter in a sexist world? (Parenting, +353)\n\n\nThe community team used to imagine that we could individually evaluate every site in detail. But even after hiring four more people we just can’t scale as quickly as the network has. Fortunately, our subjective evaluations of Stack Exchange sites, small and large, show they’re exceptionally committed to quality. As a result we’ve switched to objective site evaluations (Daniel Kahneman would be proud) and graduated a record number of beta sites:\n\nExpressionEngine\nMovies\nChemistry\nStack Overflow em Português\nBiology\nNetwork Engineering\nCryptography\nCode Review\nStack Overflow на русском\nRaspberry Pi\n\nOur designers worked with each of these communities to come up with pleasing designs that fit the aesthetic of each topic. In addition, WordPress Development and Skeptics got beautiful redesigns. Additionally, most sites were updated to use the Less preprocessor, polished for higher-resolution monitors and have new profile pages. This very blog got an overhaul too. We’ve been hiring designers, but not as fast as our sites are growing. So the following sites elected moderators while awaiting their designs:\n\nBlender\nComputer Science\nAnime and Manga\nMagento\nEnglish Language Learners\nJapanese Language and Usage\nSoftware Recommendations\nMusical Practice and Performance\n\nAfter five years of democratically electing moderators, it’s mind blowing that Stack Exchange is still the only major network (with the notable exception of Wikipedia) that embraces this form of self-governance. It’s a strategic advantage we wish more internet communities would adopt. We simply cannot thank our 476 volunteer moderators enough for their patience and dedication.\nAt “Stack Exchange, Inc doing business as Stack Overflow”, we think of our communities as our partners. The company’s responsibility is to provide our users with the very best platform for helping each other and creating lasting artifacts. This year, we plan to roll out some mighty big changes that we expect will improve the lives the world’s software developers. (If you are a programmer, please take our survey to help us know how to serve you better.) As with Q&A, we intend to open these features up to other domains as makes sense.\nWe aren’t finished with our existing products either. Each week, the community team asks our developers for three or so improvements often selected from the various Meta sites in the network. Some of them are small, such as allowing privileges links to be clicked without JavaScript. But we’ve also fixed highly upvoted requests such as preventing canonical questions from being deleted. JNat put together a report describing the 75 requests directly benefiting either the community or moderators. He also reports 433 community-requested features and 1,267 community-reported bugs were marked as completed in the year.\nOur users pay attention to these changes too. Feedback, whether encouraging or critical, reminds me that what happens on Stack Exchange matters to the daily lives of folks around the world. That enthusiasm and industry made 2015 our most successful year (so far).",
        "url": "https://stackoverflow.blog/2016/01/12/year-in-review-2015/"
    },
    {
        "title": "2016 Stack Overflow Developer Survey Results",
        "content": "Here at Stack Overflow, everything we build is done with the same single-minded, compulsive, fanatical obsession to serve programmers. We’re a community built by developers for developers, and each month, we serve 40 million coders looking for answers to their most pressing questions.\nBecause of this, we like to think we know software developers better than anyone — and we have the data to back up that claim. Each year since 2010, we’ve asked developers what they’re up to, what tech they care about most, and what they want.\nWith more than 50,000 responses fielded from 173 countries, this year’s Stack Overflow Developer Survey is the largest and most comprehensive survey of the programmer workforce that has ever been conducted.\nView the full results here.\nKey Findings on Technology:\n\nJavaScript remains the most popular programming language in the world.\nReact is the fastest growing technology on Stack Overflow. Swift is exploding too, and Objective-C is in decline.\nRust is the most-loved programming language. A higher percentage of developers who program with it want to continue to do so more than any other programming language.\nVisual Basic is the most dreaded language. A higher percentage of devs who program with it don’t want to continue with it more than any other programming language.\n\nKey Findings about Developers at Work:\n\n91% of developers in the workforce are “gainfully employed” either full-time, self-employed, or freelance.\n46% of developers don’t have a bachelor’s in computer science or a related field. So if you’re an employer requiring one of these degrees in order to consider a developer candidate, you may want to reconsider your strategy.\nDevelopers just want to code. Job satisfaction is highly correlated with pushing code to production. And 57% of developers told us they check-in or commit code multiple times per day.\nMake it rain! Cloud technologies like Spark and Cassandra pay better than anything else. The median salary for developers in the US who know Spark is $125k, and there are plenty of cloud devs who are making a lot more than that. (And remember, you can find jobs in Spark on Stack Overflow Jobs!)\nDon’t call programmers “rockstars” or “ninjas”. Only about 10% of devs call themselves ninjas, and 7% consider themselves rockstars.\n\nThank you to everyone who participated in our survey and shared information about yourself. We’ll be releasing the full data set in just a few weeks. Do you have ideas for what we should ask about next year? Tell us in the comments.\nOh, and one more thing. Here’s the answer to how many pennies were in that piggy bank.",
        "url": "https://stackoverflow.blog/2016/03/17/stack-overflow-developer-survey-results/"
    },
    {
        "title": "JNat and animuson: workin’ on ur problemz",
        "content": "The Community Team’s first and most important job is to help you, the users. Every day, we hang out on meta sites and in chat, watching to make sure that someone is working on your problems. Until very recently, community managers also fielded each and every request that came through our support ticketing system.\n(And before that, Jeff Atwood handled them all. The whole team@ inbox, singlehandedly.)\nOur approach to customer service via email has changed as the network has grown: we’ve tried many new processes and tools over the years to help community managers handle team@ efficiently and still have brainpower left over for the rest of their jobs. (If you’re curious about it, you can take a look at Jon Ericson’s ongoing blog series.) But still, support tickets stack up and all too often lose out to more pressing issues on the sites themselves; more and more often, we found ourselves struggling to resolve problems as they came in, much less fix them in two ways.\nSome companies respond to this problem by just giving up, hiding support emails and shunting requests into a poorly-monitored forum somewhere. We know this because we’ve repeatedly gotten emails from members of such sites, from people searching desperately to find anyone willing to help. But we don’t believe in treating our users – the people whose patronage we depend on – as annoyances to be brushed off and forgotten. So we decided to double down on our commitment to friendly and efficient user support: we’ve hired two new staff members to handle email support full-time. And we hired them from the communities they will be supporting.\nPlease join me in welcoming our two new Community Growth Operations Specialists\nKyle, aka animuson:\n\nKyle was an elected moderator on Stack Overflow, spending a significant amount of his time helping out others on the site. Some personal background:\n\nHe visited Australia for 18 days as a student, which is probably longer than you’ve ever spent in Australia (unless you live there);\nHe plays an obsessive amount (his words) of video games, and has over 100 platinum trophies on the PlayStation Network;\nHe previously worked at his county’s Election Commission, which is (unintuitively) the most non-political job one can have.\n\nJNat:\n\nJNat was a pro tempore moderator on Anime & Manga SE, contributing greatly to the health and growth of that community. Some personal background:\n\nHe studied Arts in high school and has a masters degree in Architecture and Urbanism, so it should be obvious how he ended up in operations for an internet Q&A community;\nHe’s Portuguese, so Gabe now has some assistance in supporting the needs of our Portuguese-speaking members.\nHe credits his love for anime and manga with getting him this awesome new job.\n\nYou might be thinking: “Wait. Operations Specialists? I thought they were just handling emails.” But that would be a waste of their considerable talents. Once JNat and Kyle have tackled team@, there’s no telling how many new and efficient ways they’ll find to help make our team better at supporting our communities.\nIf ever you find yourself having to contact us, it’s likely that these brave souls will be fielding your request. Feel free to say hi, or tell them what the best part of your week has been so far!",
        "url": "https://stackoverflow.blog/2015/04/22/jnat-and-animuson-workin-on-ur-problemz/"
    },
    {
        "title": "Welcoming Stack Overflow’s New CMO – Adrianna Burrows",
        "content": "The Stack Overflow team is beyond excited to welcome Adrianna Burrows as Stack Overflow’s new Chief Marketing Officer. She’s an industry veteran of everything from global product launches to partner development and she is as laser focused as we are about empowering developers.\nWe fundamentally believe that developers are writing the script for the future. The work that developers do every day is transforming industries and shaping the way we all live, work, and experience the world around us. We also believe the professional generosity of developers is unmatched; Stack Overflow wouldn’t be what it is today without the contributions of millions of developers and their desire to help one another while advancing the world’s collective programming knowledge.\nWe’re thrilled we have a veteran storyteller like Adrianna on board to help us show the world just how important we believe developers really are and what we’re doing as a company to support them. Beyond Q&A, developers can go to Stack Overflow Jobs to find opportunities targeted to their interests while connecting with recruiters (no spam allowed). We also want to make sure businesses know that the best place to source technical talent and gain insights about the developer community is through Stack Overflow Careers. We have a ton of exciting products on our roadmap, all of which support our mission to help developers learn, collaborate, and advance their knowledge and careers.\nAdrianna will drive our global branding, communications, digital marketing and demand generation – basically raising awareness about Stack Overflow and sharing with the world the industry-changing work being done by the Stack Overflow community. As part of her responsibilities, she’ll join the Stack Overflow executive team, helping support our continued expansion into services that make developers’ lives better.\nPlease join us in welcoming Adrianna to the Stack Overflow team!",
        "url": "https://stackoverflow.blog/2016/05/04/welcoming-stack-overflows-new-cmo-adrianna-burrows/"
    },
    {
        "title": "Bienvenidos al blog para Stack Overflow en español",
        "content": "¡Bienvenidos a todos a nuestro blog internacional para la comunidad de habla hispana! Hemos creado este espacio para poder comunicar y ser más abiertos en como construimos Stack Overflow en español para ustedes. Aquí, trataremos diversos temas que no son adecuados para el sitio meta.  Será un lugar donde podremos pensar en voz alta, compartir pensamientos espontáneos, o otras cosas por el estilo. Compartiremos información exclusiva que generalmente no se encontrará en otro lugar.  Esperamos que nos sigan apoyando y se unan al nuevo blog de SOes.\nEmpezando ahora, podrán las publicaciones más actualizadas a mano derecha del sitio.  Podrán también comentar como en un blog normal.  \n\nPor favor usen el siguiente enlace para suscribirse al RSS:  blog.stackoverflow.com/feed/es\n¡Nos vemos pronto!",
        "url": "https://stackoverflow.blog/2016/06/17/bienvenidos-al-blog-de-stack-overflow-en-espanol/"
    },
    {
        "title": "Stack Overflow and Andela partner to provide education beyond borders",
        "content": "Jon is a web developer and heads up developer evangelism efforts at Stack Exchange.\nWhen I think about the impact that Stack Overflow has had on the world, it’s tempting for me to think about numbers: how many active users we have, how many questions are answered in a day, how many jobs get posted on our Careers platform. These are things that I, as a developer, think about on a daily basis to measure how we’re helping programmers around the world grow. But I find that these numbers are hard to wrap my head around: it doesn’t quite give me a feel for what our work is doing. What is the quality of our impact? What does it feel like at an individual level?\nIn just a week into our new partnership with Andela, that impact is becoming clearer than it ever has before. Over the course of eight weeks, six of Stack Overflow’s developers based around the world are providing one-on-one mentorship to six new Andela developers in Lagos, Nigeria. Twice a week, the developers “meet” over video chat and cover everything from pair programming to preparing for technical interviews and sharing career advice. We chose Andela as a partner because of the amazing work they are doing training world-class developers in Africa. We have a shared commitment to remote work and providing access to tech education in underserved communities, and we are so excited to advance these goals together.\nOur initial sessions with the Andela developers have been incredible, and we’ve all been very impressed by how bright and energetic the fellows are. Marco, one of our developers has said of his mentee Bosun: “[He] is very enthusiastic and smart, and constantly reminds me of a kid in a candy store. I am very impressed by him.” It’s a testament to how thorough Andela is at finding and growing top technical talent. As we were talking about our first few sessions, Nick, another one of our developers, recalled a conversation he had with his mentee Abimbola: “the Andela program itself is pretty crazy…if you haven’t talked to your mentee about it yet, I highly recommend it and prepare to be amazed at what they go through just getting into the program.” The level of training the Andela developers gets prepares them to hit the ground running and it allows each mentee to get personalized training from their mentor. Max and Fiyin covered how we do automated testing and builds at Stack Exchange. Oded and Adeleke are going over MVPs and user-centric design. Pairs are covering everything from data structures and algorithms, solving coding challenges like N-Puzzle, to building apps targeted at the African market.\nAnother thing we’re picking up on is how everyone’s cultures intersect and what challenges we face working across so many boundaries. In just our group of twelve developers (both mentors and mentees), there are four different countries represented across different ages, genders, and races. Given our own focus on remote work, some of this comes pretty naturally to us. For example, coordinating meetings across time zones is something we’re used to, but there are some challenges unique to our partnership with Andela. For example, some of us had connectivity issues with Google Hangouts, and many of us have switched over to Skype for its reliability on Andela’s end. We quickly realized some of the things many of us as developers take for granted are larger factors in our partnership. But even with these challenges, we’re finding that individuals across the world are thinking about the same issues in the technology industry. Roberta, one of our developers based in Rio de Janeiro, Brazil brought up the following about her first few sessions with Mirabel in Lagos, Nigeria: “She also had questions and concerns regarding diversity and I think I convinced her that things are getting better and that being a programmer is super awesome. <3” We’re learning that many of the questions we think about at Stack are the same questions individuals in vastly different parts of the world are thinking about.\n\nWe’re just getting into our first few sessions with the developers at Andela, and we couldn’t be more excited to be working with such bright individuals in a truly transformative organization. Over the next several weeks, we’re going to continue to see how we can help the Andela developers grow and discover what we learn working across boundaries we’re not used to crossing. As the program reaches its end, we’ll give another update here. My sessions with my own mentee, Babajide, are something I look forward to every week, and they give me perspective on how the work Stack Exchange and Andela is doing to educate developers around the world really impacts people at the individual level. It gives richness to the numbers that I think about every day.\nIf you would like more information about our partnership with Andela, email me at jon@stackoverflow.com or reach out to me on Twitter.",
        "url": "https://stackoverflow.blog/2015/05/27/stack-overflow-and-andela-partner-to-provide-education-beyond-borders/"
    },
    {
        "title": "Introducing Beyond Coding: Free professional skills training for emerging devs in NYC",
        "content": "Today, we’re excited to announce that online registration is now open for Beyond Coding, a free new summer program designed to equip emerging computer programmers in New York City with professional skills needed to help them succeed in their first job working with code. The program, slated to launch June 11, is part of our collaboration with New York City’s Tech Talent Pipeline initiative to support the growth of the city’s tech ecosystem. And we’re thrilled to be taking part, along with some other top-notch New York startups: Crest CC, Foursquare, Kickstarter, Tumblr, and Trello.\nThis Tech Talent Pipeline initiative, which launched in May 2014, has three objectives: Work with New York companies to help close the skills gap between open jobs and candidates to fill them, provide training and educational opportunities to New York residents, and ultimately, to build a talented and diverse workforce in the tech sector.\nSince the program kicked off, we realized that while we are hiring, we’re not doing it fast enough to make a real difference for New Yorkers who want to learn to code. On the other hand, one thing that we do have (thanks to Stack Overflow) is access to a wide range of resources and knowledge that we can offer to the greater community. And several other New York startups fell into the same bucket. So we decided to team up — you know, like a less super-heroic League of Justice — and build out a formal educational curriculum for the New York tech community.\nWith nearly five open jobs for every available software developer, the need for qualified technical talent is higher than ever. In New York City alone, there are 13,000 firms hiring for highly sought-after skills, such as web development, mobile development, and user-interface design. You can see the openings for developers in New York on Jobs. To meet this demand, it’s critical to get more talented people coding, and do it fast.\nBeyond Coding’s goal is not to teach hard coding skills; it’s to ensure that anyone in this city with a passion for technology can get the mentoring, training, and support they need to succeed as a developer. The curriculum is designed to accelerate the learning curve for new programmers by attacking skills gaps that often prevent talented young developers from actually landing jobs. We’ll cover professional networking, technical communication skills, the best way to prepare for a technical interview, and what happens next: how to continue learning programming skills beyond the classroom.\nThe Beyond Coding program is open to anybody in the New York City area with an understanding of coding and is currently looking for a job as a software developer or a related role, but lacks access to tools, resources, or a professional network they need to succeed. Once the 10-week program concludes, students will receive a formal certification and be introduced to top tech companies in New York City who are hiring junior-level developers.\nThis is just one of the ways that we’re working to promote inclusion both here, and in the tech community as a whole. But we’re still figuring out how we can make a positive difference, so we welcome any feedback or ideas you may have. And if you live in New York City, are learning to code and can use a little help kickstarting your new career, you can apply at beyondcoding.io.",
        "url": "https://stackoverflow.blog/2015/05/05/introducing-beyond-coding-free-professional-skills-training-for-emerging-devs-in-nyc/"
    },
    {
        "title": "Stack Spotlight: Bethany Marzewski",
        "content": "Each month we’ll be featuring a short interview with one of our very own employees here at Stack Overflow. You’ll learn how they came to Stack Overflow, what projects they’re currently working on, and why they love working here.\nFirst up is our Marketing Manager, Customer Happiness Bethany Marzewski.\n\nName: Bethany Marzewski\nJob Title: Marketing Manager, Customer Happiness\nHow long have you been at Stack Overflow? I started on the sales team in February 2012.\nHow did you end up working at Stack Overflow?\nI first read about Stack Overflow from a Northwestern alumni email list that I’m a part of. A current Stack Overflow employee, Rachel Boyman, sent an email to the group with the subject line, “My (awesome) company is hiring!” At the time when I read it, I had been working as an editorial assistant at Prevention magazine and I thought, “Oh, sure. I’ve seen that line before…” so I didn’t respond right away. But about a month later, after yet another round of layoffs at the magazine, I realized that it was probably time to shift out of journalism permanently. And something in her email had stuck with me. I emailed her back and asked if they were still looking. She grilled me a little on why I was leaving the journalism world and why it took me so long to respond. I apparently passed the test with my answers, and she passed my contact info along to the manager later that day. The rest is history!\nWhat big projects are you currently working on?\nRight now, I’m working on several projects that will give us a better understanding of how customers perceive our products with Stack Overflow Careers. Together, with marketing, sales, sales support, and sales operations, we’re gathering as much information about our customers as we can. What support tickets do we see coming in the most often and how can we interpret this data? What does our sales team perceive to be the most common pros and cons about our product? What do customers think about some of the new features that we are rolling out currently? For customers who haven’t renewed with us, what can we learn about this group? After collecting all of this data, we’re going to take a look at what parts of this experience we can improve with better training, better onboarding, or tweaks to the product itself. It’s a wide open project with little definition at the start, which is my favorite kind. 🙂\nWhat is your favorite part about working at Stack Overflow?\nI like that Stack Overflow truly gives you the tools and resources at your disposal to make the most of what you want to do here. You’re not boxed into a job title, a role, or a routine. I love the agility of a company where you can start with an idea one day and start executing on it the next. One of the most rewarding examples of this recently has been the projects I’ve been involved with as a part of the DIP committee (Diversity & Inclusion Panel). I really enjoy having a chance to work with people at other companies, and Stack was very supportive when we co-produced the first ever Diversity Summit with Kickstarter at Union Square Ventures. Based on the contacts and connections I made from that event, we launched Beyond Coding this year as a partnership between Stack Overflow, Tumblr, Kickstarter, Foursquare, Trello, and Crest. It’s been an unbelievably rewarding project that will hopefully culminate with us getting emerging developers in New York City a foot in the door to their first roles in technology.\nOutside of Stack Overflow, what are you working on? What hobbies do you have?\nHave I told you about this amazing new Broadway show, Hamilton? Okay, so there’s this guy, right? His name is Alexander Hamilton. You probably know him as a stodgy old revolutionary who did boring stuff like create the first national bank. But then, 250 years later, there’s this other guy, Lin-Manuel Miranda, who reads a biography of Hamilton his honeymoon and decides to turn his story into a hip hop musical about his life. Then you realize, “Oh wow. The revolutionaries of yester-year were just like you and me today. And this guy, Hamilton, was actually sort of like a modern-day Elon Musk in the way he looked at the world.” Anyway, it’s literally a game-changer and has inspired a lot of the decisions I’ve made in the past year. Go see it. Also, disclaimer: My boyfriend works on the sound team for the show. (If you ever want to see some of the cast, check out Glass House Tavern on Saturday nights at 11 p.m.) It’s really fun to have one foot in the door in the Broadway world, though it does mean a lot of late nights. Other than that, on weekends, you’ll probably catch me museum-hopping or doing a crossword puzzle at an outdoor cafe on the UWS.\nTo keep up with Bethany, you can follow her on https://twitter.com/bethanymarz“>Twitter.",
        "url": "https://stackoverflow.blog/2015/08/13/stack-spotlight-bethany-marzewski/"
    },
    {
        "title": "Welcome, Nicolas Chabanovsky and Stack Overflow in Russian!",
        "content": "Some time ago, we hired a Russian-speaking Community Manager named Nicolas Chabanovsky. He works remotely from St. Petersburg (we’re pretty sure it’s the one in Russia). In the past Nicolas was a software developer, and participated in the development of DLNA-stack at Motorola, webOS at LG Electronics and many other notable projects. What we found the most interesting about Nick is he’s one of the founders of the most advanced clones of Stack Exchange we’ve ever seen, which was ХэшКод, otherwise known as HashCode.\n\nBeginning as a research project, in the four years of its existence, HashCode turned into a small network of Q&A sites, complete with a careers and data site. HashCode became one of the best places to get an answer on programming and system administration questions in ‘RuNet’ (the Russian part of the Internet). Most importantly, the quality of the questions and answers were directly on-par with our English site. We got to know Nick, and quickly determined that he, along with the thriving communities he was building, would be a great addition to our team and network. After a great deal of hard work by both Nick and our developers, we’re extremely excited to announce the launch of Stack Overflow In Russian, the newest addition to our family of international sites.\n\nMore background on the site can be found (in Russian) on their meta site.\nJoining our network as a very active and healthy site, Stack Overflow In Russian is killing it with roughly 70 questions per day, 60,000 questions altogether and a whopping 85,000 answers contributed by 27,000 users. We’re very proud to be the place where this community calls home, and very proud of the amazing job Nick and our developer team did in making this transition smooth.\nWelcome, Nick and everyone!",
        "url": "https://stackoverflow.blog/2015/06/11/welcome-nicolas-chabanovsky-and-stack-overflow-in-russian/"
    },
    {
        "title": "The New Stack Exchange Blog",
        "content": "Today, we’re proud to announce the new Stack Exchange blog, all shiny and new! It’s been six to eight weeks in the making and we’re really happy our community can finally see it. Here’s an overview of the major changes that we’ve made to the site:\nChannels\nThe biggest change we’ve made is the introduction of channels on the blog. In the previous blog, we pretty much put everything in one column, organized by tags. We still have all the posts in chronological order on the homepage of the new blog, but we realized there are two big buckets of content that we want to post here: company news and engineering posts. We want to recast our blog not just as a place to post updates as they come, but to become an amazing source of news, technical knowledge, and insight into the communities we’ve built.\nCompany News Channel\n\nIf you’ve been visiting our blog regularly, this channel houses the kind of content you should already be very familiar with. This includes all of the podcasts, announcements about the company, and updates about the Stack Exchange community. In effect, this is exactly what the old blog was and will continue to be – with some added features. We’ve also decided to include more posts in this channel that we want to highlight: happenings in the office with explanations of our internal culture, and all the amazing diversity efforts we’ve been pursuing. This is the place to learn everything about Stack Exchange the community and the company.\nEngineering Channel\n\nThe newest addition to the blog is the engineering channel. One of my favorite things about working at Stack Exchange is the amazing engineering culture we’ve built and our place in the developer community at large, especially with Stack Overflow. This channel gives you an inside look into that culture: how we build things, why we build them, and what we think about approaching technical problems. This includes technical walkthroughs of new features we’ve built, announcements of open source projects we’re working on, and the public outreach efforts we’re working on for the developer community. This blog even includes reposts of some of engineers’ most popular posts on their personal blogs, as well as opinion pieces on technical practices. There’s even a walkthough of how we built the new blog on the channel you can read now!\nThere’s a subsection for each major part of our engineering team: developers, SREs, designers, and anyone else that touches our product creation process. As we grow, you can expect to see more content fill up here, and possibly bring in outside contributors as well.\nAn all new design\nThe most notable thing that we changed is the overall design. We wanted to make something that people enjoy reading, exploring, and learning from. Most of all the things from the previous blog still exist: previous posts with archived comments, tagged posts sortable by category, and so on. We’ve also added some additional functionality here: new navigation that emphasizes our new channels and content, posts sortable by author, and better feeds with individual post pages for readability. Take a look around, there’s a lot of changes we’ve made here.\nA new navigation that emphasizes the new channels and subsections we want to emphasize\nBetter overview look that’s more photo heavy, provides an excerpt, and the ability to look through posts sortable by authors\nA revamped individual post view with bigger text, more spacing, and more photo heavy\nOpen source\n\nThe last thing I want to mention is that we’ve made the code for our blog open source. One of the things we love doing as an engineering team is to work in the open when we can. We love involving the communities we build in almost everything we do as a rule, especially our technical community, and the blog is no exception to that rule. We’ve migrated our previous blog from a WordPress site and rebuilt our new blog powered by Jekyll, which is also open source.\nIf you have suggestions for how to make the new blog better, create an issue and one of our developers will take a look at it (probably me). If you’re a developer, we encourage you to take a look at the source code and make pull requests for changes as well. If you want a walkthrough of how we built the blog, take a look at the engineering channel for an inside look.\nMore to come\nThere’s so much more we want to do with this blog in the future. It’s one of the few places we have as a company to talk directly to the community we’ve helped build and love so much. As always, sound off in the comments about what you think of the changes, ideas you have about how to make it better, or take an extra step and become a contributor writing code. Until next time!\nJon is a developer and heads up evangelism efforts at Stack Exchange. You can follow him on Twitter.",
        "url": "https://stackoverflow.blog/2015/07/01/the-new-stack-exchange-blog/"
    },
    {
        "title": "Welcome, Juan Garza, and Stack Overflow En Español!",
        "content": "Juan is the most recent addition to our team of internationally-oriented community managers that focus on bringing Stack Overflow to large groups of developers that aren’t being served as well as they should be by Stack Overflow in English.\nJuan started his professional journey as an Engineering Major in college, and realized that it wasn’t his true calling after discovering that he is partially color blind. He graduated with a Psychology degree with a minor in Biology. Because he loves helping others, he decided to pursue a career as a school teacher. After several years of teaching Math, Science and Spanish, he discovered community management and retreated to the salt flats:\n\nHe didn’t really retreat, beyond taking a recent vacation\nAfter working in and with a very wide variety of forum communities for nearly the last decade, Juan brings a great deal of outside perspective and experience to the team. He’s thrilled to be working remotely from his home in Texas, where he loves nothing more than spending time and camping with his family and friends, and playing music on a variety of instruments.\nJuan is now working on bringing up a private beta for Stack Overflow En Español, which we expect to have ready early this November. We’re extremely excited to have Juan on board, and hope you’ll join us in welcoming him! If you’re a native or fluent Spanish speaker and wish to help with the translation effort, check out Juan’s short ‘kick off’ post on the Stack Overflow In Spanish Area 51 proposal.\nWelcome, Juan!",
        "url": "https://stackoverflow.blog/2015/08/21/welcome-juan-garza-and-stack-overflow-en-espanol/"
    },
    {
        "title": "Stack Overflow in Portugese: now with less beta!",
        "content": "If you can’t read the rest of this post, you’re probably not part of the Stack Overflow in Portuguese community. It’s a shame, because it’s a really good site! We built it because it’s not fair to expect everyone to speak every language, right? Exactly.\nSo, the important thing is that the site is great, the community is great and now they’re graduating!\nThat’s really awesome, so this blog post is for them.\n\nHá mais ou menos 2 anos nós fizemos uma descoberta avassaladora: nós percebemos que a maioria das pessoas do mundo não fala Inglês. E, se isso é verdade, significa que existem programadores que, pasmém, não conhecem o Stack Overflow. O choque inicial foi grande, mas depois de um copo de água com açucar nós decidimos fazer algo a respeito disso: abrir novos sites sobre programação!\nCriar novas comunidades onde mesmo quem não fala Inglês possa se expressar em sua própria língua, à sua própria maneira. Afinal, ter a resposta para todo tipo de pergunta sobre programação é só metade do que faz do Stack Overflow uma excelente comunidade. A outra parte da equação é estar na companhia de pessoas como você. Outros programadores, que compartilham seus interesses e curiosidades. O conteúdo é a base de um grande site, mas as pessoas são os pilares de uma comunidade.\nE é aí que a língua faz diferença. Muita diferença.\n\nO primeiro destes novos sites foi o Stack Overflow em Português. O período de beta privado começou há um ano e meio e algumas semanas atrás ele foi graduado com mérito! Estamos profundamente orgulhosos de tudo que a comunidade do SOpt construiu até agora e temos certeza de que estes são apenas os primeiros passos de um site excepcional.\nO site nasceu cercado de muitas incertezas. Era algo diferente de tudo que já tinhamos feito antes e assim viria acompanhado de diversos desafios que não tínhamos como prever. Ainda assim nossas expectativas eram bastante altas. Queríamos dar à comunidade de programação lusófona um lugar onde ela pudesse se sentir em casa, compartilhando conhecimento em sua língua nativa.\nSeria um Stack Overflow completamente novo, pronto para que a comunidade construísse algo espetacular, e o desafio foi aceito. O site logo se tornou um dos mais fortes e ativos da rede, com todos empenhados em resolver os problemas que toda comunidade recém-nascida deve enfrentar para construir sua identidade e atingir o sucesso.\nAs estatísticas do site são impressionantes, mas ainda mais impressionante é a dedicação da comunidade ao longo destes 18 meses. São pessoas inteligentes, trabalhando em conjunto para construir algo do qual podem se orgulhar. Tudo que o SOpt conseguiu até hoje é graças a essa comunidade e a graduação é mais que merecida.\nSob qualquer ponto de vista, o Stack Overflow em Português é um site espetacular. Foi o segundo site mais rápido a atingir 10 mil perguntas, perdendo apenas para seu irmão de língua inglesa. Hoje, com mais de 20 mil perguntas, é uma das comunidades mais ativas, em um nível de participação maior que outros sites 3 vezes mais antigos.\n\n\nE isso é só o começo!\nTodas essas perguntas – e respostas – vêm de pessoas com níveis bem variados de familiaridade com o site original, em Inglês. Pouco mais da metade de todos os posts vem de pessoas que nunca tiveram a oportunidade de participar ativamente da comunidade Stack Overflow. São milhares de programadores criando coletivamente um excelente acervo de conhecimento sobre programação, e que não teria existido sem o SOpt.\nDa mesma maneira, os usuários que já conheciam o SO não ficam atrás. Não só eles contribuiram com a outra metade de todos os posts no SOpt, como também aumentaram sua participação no site original. Isso significa que, contando ambos os sites, a participação dos usuários de língua Portuguesa quase dobrou em relação ao ano anterior. Nossa teoria é que falantes de Português têm super-poderes.\nParece, então, para surpresa de ninguém, que as pessoas se sentem mais confortáveis em sua própria língua. A evidência é bem clara: quase todos os usuários de maior reputação do SOpt têm pouca, ou nenhuma, atividade no Stack Overflow em Inglês. São pessoas inteligentes, dedicadas, empenhadas e dispostas a ajudar, mas que não tinham um lugar para chamar de seu. Hoje eles são a essência de uma nova comunidade, a qual eles aprenderam a amar e respeitar tanto quanto o site original. E compartilham esse sentimento com milhares de outras pessoas.\nNada foi mais fundamental para o sucesso do Stack Overflow em Português do que seus usuários e usuárias. Foi graças ao seu empenho que a comunidade continua a crescer dia após dia, sendo um exemplo para todas as outras. É graças à participação de todos, compartilhando conhecimento, conversando, discutindo e se divertindo. Vocês fizeram do site um lugar agradável, útil e interessante.\nUma celebração da comunidade do Stack Overflow em Português não estaria completa se seus membros não participassem. Então pedimos que eles contassem um pouco de sua história e, como sempre, o resultado foi espetacular:\nEstava vendo esse layout super bonito pós-diplomação e notei uma métrica muito interessante, que é a de alcance geral. O quanto meus posts ajudaram os outros. O meu está em aproximadamente 176 mil pessoas. Cara, isto é um número retumbante. Não estava esperando por isso. A minha contribuição aqui é isso: ajudar os outros como eu gostaria de ser ajudado. Acho que é uma excelente forma de reconhecimento.\n\nHá pouco mais de um ano, em Resultados de um experimento social, eu escrevia sobre os benefícios de ter me juntado a uma comunidade como o Stack Overflow em Português. Hoje digo que todos os benefícios multiplicaram-se. O Stack Overflow me ajudou a crescer muito, ajudando e aprendendo.\nA participação de todos faz com que nos tornemos desenvolvedores melhores, pessoas melhores e mais maduras.\n\nEu também tenho um carinho especial pela minha participação no Meta. Foi muito edificante participar da construção de uma comunidade (foi a minha primeira experiência nesse formato). Sim, eu sei que ela ainda está em construção, mas eu lembro das discussões iniciais sobre o que é ou não escopo, sobre “nós não sermos o SOEN”, e sobre como nos entendemos conversando. Isso pra mim significa muito mais do que aquele número que é a reputação. A reputação que eu tenho com os colegas daqui, pessoas que as vezes eu só conheço pelo nome (ou apelido!), mas de quem sei muito a respeito profissionalmente e também (em muitos aspectos) pessoalmente.\n\nÉ muito legal quando alguém nos dá em que direção devemos seguir para ‘desatar o nó’ depois que passamos horas quebrando a cabeça com um problema. Jamais participei de uma comunidade onde as pessoas me ajudassem tanto igual vocês me ajudam aqui no SOpt.\nMas, o aprendizado vai muito além das perguntas que nós fazemos. Quando abrimos o link de uma pergunta recém criada, apenas para certificarmos de que está tudo ‘nos conformes’, nós aprendemos algo novo.\n\nQuando eu descubro, por acaso, ao pesquisar sobre um assunto que existia o SOpt fiquei a pensar para mim “wow agora já posso vir responder a perguntas”. Já tinha respondido a algumas no SOen mas não é a mesma coisa.\nConheci aqui muita boa gente, não pessoalmente, mas sei se precisasse de alguma coisa que estivesse ao alcance delas que me iriam ajudar. E adquiri muito conhecimento em muitas áreas distintas no SOpt.\n\nDescobri o SOpt muito por acaso. Em um dia de muita dor de cabeça, tentando resolver um problema que estava tendo, encontrei o SOpt. No começo achei que era brincadeira, que não seria nada sério. Até porque, o SOus era uma fonte de muitas respostas a erros e bugs que nos atormentam! Entrei no site e vi que era verdade, a pura verdade. E desde o dia que entrei, me encantei com a disponibilidade e excelência com que a comunidade se dispôs.\n\nJá havia visto outros sites e fóruns destinados a programadores, mas aquele era diferente dos outros, e isso era visível pela qualidade das respostas, e o comprometimento dos membros em ajudar os outros. Aquele me parecia realmente uma comunidade. Acabei por me registrar, e aí foi…\nHoje estou quase começando no meu terceiro mês de emprego, e já aprendi muito, muito mais do que imaginei. E posso afirmar que muitos desses aprendizados aconteceram aqui, no SOpt.\n\nO Stack Overflow é dedicado integralmente a programadores. Queremos ajudar todos os profissionais, estudantes e curiosos do mundo. Conhecimento é algo belo e poderoso demais para ficar restrito apenas um grupo. Todos devem ter a chance de aprender. Estas histórias, dos usuários do SOpt, são um excelente lembrete de quanto impacto uma comunidade pode ter, quando lhe é dada a oportunidade.\nNós tínhamos um único objetivo quando decidimos iniciar nossa aventura internacional: dar a mais pessoas uma chance de compartilhar o que sabem, e aprender com outros. Não faz sentido sentar e esperar que todo mundo aprenda Inglês. Nós acreditamos que ajuda, conhecimento e um bom ambiente de aprendizado devem estar disponíveis para todos, em qualquer lugar. Por isso o sucesso do SOpt nos enche de orgulho.\nParabéns à comunidade!",
        "url": "https://stackoverflow.blog/2015/06/04/stack-overflow-in-portuguese-now-with-less-beta/"
    },
    {
        "title": "PIVOTing into a new career: please welcome Taryn Pratt, bluefooted Community Manager",
        "content": "Long-suffering readers may have noticed that, as we’ve expanded Stack Overflow into strange and exciting territories, we always start by hiring a new community manager. These intrepid souls act as emulsifiers, enabling and promoting communication between the company and the growing community. This role is just as critical for our 140+ English-language sites, where our small team works to ensure that requests and concerns are addressed in a timely fashion (6-8 weeks, give or take). Whenever possible, community managers are hired from within the community itself – after all, who knows its needs better than someone who has been a part of it?\nThus, I’m happy to announce that veteran Stack Overflow moderator bluefeet has decided to join the CM team!\n\nBluefeet – also known as Taryn Pratt – joins us from that sweltering hot desert of Phoenix, Arizona. She has been an active community member on Stack Overflow since 2010 and an elected moderator since 2014. Discovering Stack Overflow helped Taryn realize how much she enjoys assisting others, quickly discovering that helping other users was actually more fun than writing SQL! This discovery eventually led her to the CM team.\nTaryn’s career path to technology began about 15 years ago. She enrolled in law school and after discovering that she hated it, she dropped out. Her obvious follow-up question was, “what next?” Always a sucker to learn, Taryn picked up her first web development book, and the pathway to technology was lit! A variety of programming jobs ensued, including web developer, software engineer, and most recently a SQL database developer role. While Taryn enjoyed all these opportunities, she felt something was missing. She dreamed of working at a company she felt passionate about… enter Stack Exchange!\nOutside of work, Taryn enjoys spending time with her family, and babying her 3 dogs. She’s a self-confessed CrossFit junkie who’s crazy about dead-lifts. When not at the box, she can be found working on her ‘honey-do’ list renovating her 1950’s home. Please join me in welcoming her to the team!",
        "url": "https://stackoverflow.blog/2015/06/15/pivoting-into-a-new-career-please-welcome-taryn-pratt-bluefooted-community-manager/"
    },
    {
        "title": "We’re Changing Our Name (Back) to Stack Overflow",
        "content": "We are Stack Overflow\nYou may know us from such popular websites as Stack Overflow Q&A, Stack Overflow Careers, The Stack Exchange Q&A Network, and most of your Google search results.\ntl;dr – We’re changing our company name.\nHere’s what’s changing:\n\nAs of today, our company will be known as Stack Overflow.\nOur logo is different. But only a little.\nNot one other damn thing.\n\nHere’s what “Stack Overflow” is:\n\nA community where millions of programmers ask questions and share knowledge\nThe best place to get a job as a developer, or to hire a developer\nThe flagship site of the Stack Exchange Q&A network, which covers over 140 topics\n(new!) The company behind all of those things\n\nSeven years ago today, Joel announced the public launch of Stack Overflow. Since then, our strategy has centered around building useful tools for developers and then – if they worked – expanding them to serve a wider market. We think our new company name better reflects this core philosophy, and will continue to lead to good things for devs and non-devs alike.\nAnd… that about covers it. But just to be safe, I’ve tried to answer the questions we expect some of you may still have.\nQ: So, what’s actually changing?\nWell, as of today, people like me will start saying we “work for Stack Overflow.” I guess we’ll need new business cards, too? Hopefully someone’s on that already. But I digress. In the weeks ahead, we’ll change the name of things like the blog, podcast, and any other places where “Stack Exchange” was referring to the company, as opposed to the network of Q&A sites. Our Q&A sites will still be collectively known as the Stack Exchange Network.\nQ: Are you “just not that into” the Stack Exchange network anymore?\nNo. Nonononono.\n\nOur commitment to the Stack Exchange network is completely unchanged, and we’ll continue to invest in its expansion and growth. SE’s users have built a network of constructive, civil communities of helpers on a previously unheard-of scale, and we’re insanely proud to be a part of it. Here are just a couple of facts to drive home how much you’ve all achieved:\n\nThe network as a whole has more monthly 5-time posters than English Wikipedia has 5-time monthly editors.\nStack Exchange is the 47th most visited website in the US without Stack Overflow, and gets roughly as many US visitors each month as the New York Times.\n\nHere’s what one of our investors had to say on the topic:\nI believe Stack Exchange’s growth has now reached escape velocity. Not only will the existing topics continue to grow, but many new topics will emerge, until the network covers every topic that is amenable to objective Q&A. As new generations of people grow up on the internet, old habits — searching through textbooks or how-to books, or asking friends—will fade away.”\n​ –Chris Dixon, Andreessen Horowitz\nYou hear that, books?? We’re coming for you, you filthy tree-based anachronisms.\nQ: So, why the change?\nWe started with better Q&A for developers.\nWhen we named the company Stack Exchange, we were only making Q&A sites. We’d had great success with Stack Overflow Q&A and we were expanding that engine to serve new topics. So, using the Q&A network’s name for the company made sense. If we’d decided to make one of those lame, corporate hierarchy charts,and for some reason had chosen to ask an untalented child with a crayon to draw it, it would have looked a lot like this:\n\nAnd just to be clear, Q&A remains our core product, and we’ll continue to invest in helping it serve more of the world’s developers, chemists, photographers and whatever the heck these awesome people are.\nThen, we focused on better jobs for developers.\nIt was pretty obvious that even though developers were scarce, valuable talent, most job boards were still designed for recruiters’ needs, and were full of fake “exciting new startup!” listings and jobs requiring things like “8 years experience with Swift”. Tired of that nonsense? So were we. So we built Stack Overflow Careers. Which totally effed up my corporate chart structure. But Joel was all,\n“We’re supposed to be relentlessly serving devs, not charting dopey crap. Figure it out, or I’ll take your standing desk away, and tell the pastry chef no seconds for you.”\nBut I still couldn’t come up with any good spot for Careers, so I just stuck it somewhere random. And since Joel had said “relentless” a bunch of times, I added a drawing of Batman, cuz he’s super-relentless and I was a lonely teenager:\n\nNext up? Better EVERYTHING for developers.\nWhich brings us to today. Now, we could just sit on our laurels and reflect on all we’ve achieved. I actually proposed that laurel-sitting plan, but you know how Joel is:\n“You know when you get to sit on your laurels? When every developer problem has been solved. Last week, Carmack Instagramed that that he was eating a crappy sandwich. YOU ARE FAILING HIM.“\nHonestly, some days I worry about Joel, but he’s on to something:\nDevelopers have a lot of problems.\nWe got here by focusing on underserved developer needs, and asking the world’s developers to help us solve them. I think that if we’d set out to build the best Q&A platform for everyone’s needs, it wouldn’t have helped anyone. By narrowing our focus to a specific group we thought we could help, we were able to create a product opinionated enough to actually make a difference.\nSo, we’re going to stick with the plan. As we look for new ways to serve our users, we’ll focus on what we know best: solving developer problems. Today, we’re working on our biggest expansion since Stack Overflow launched: Documentation. You can learn more about it here, or sign up for the beta, and be part of building what we think will be our next Big Thing.\nI should point out that we fail a lot around here. But wherever we’ve succeeded, it’s come from focusing on how we could better serve devs’ needs. And when that success looked transferable, we passed it along to the rest of the world. So, we’re gonna run with that, and hope you all keep on running with us.\nHere’s what that crayon wielding kid thinks we look like today:\n\nDo I hope to see more multi-colored, (poorly-drawn) networks spring up around some of our other dev products? Hell yeah. Will they? Beats me. But as always, we’re counting on you to help us figure it all out.\nDidn’t you say something about the logo?\nOh – right. With the exception of a few minor tweaks, the Stack Overflow logo that you know and love has been essentially unchanged since we paid $512 for it in in a 99 Designs contest back when that was a lot of money for us. We thought it was pretty awesome then, and it’s still pretty awesome now. So, the design team didn’t change much, and just made a simple, clean update to the existing logo. Next week, they’ll share how it fits into a new style guide we’ll be using to help us standardize our visuals and save valuable design cycles downstream.\nBut for now, we were inspired by Google’s video explaining how they arrived at their new logo concept of “kindergarten letters, most of which are actually aligned correctly.” So we made a short video. While ours doesn’t include the phrase, “…and just the right soupçon of whimsy” nearly as much as theirs did, I think it does a nice job conveying exactly how ours got changed.\n\n(Film by our own Benjamin Dumke-von der Ehe, aka balpha, music by Zero Project)\nWe are Stack Overflow. And we’d be nothing without all of you.",
        "url": "https://stackoverflow.blog/2015/09/15/were-changing-our-name-back-to-stack-overflow/"
    },
    {
        "title": "Stack Spotlight: Aurélien Gasser",
        "content": "Stack Overflow currently has three offices in New York, London, and Denver. In addition, for many of our teams and job openings, we also offer remote work. As of our last estimation, 20% of our employees work remotely from around the world. One developer who is included in that 20% is Aurélien Gasser, who works remotely from his home in London. Read on to learn what his job entails and the unique way he ended up working here.\n\nName: Aurélien Gasser\nJob Title: Web Developer\nHow long have you been at Stack Overflow? I joined on September 23th 2013, so that’s almost 2 years.\nHow did you join Stack Overflow? What made you want to apply?\nAs a developer, I love Stack Overflow in a lot of ways. But I actually ended up getting this job in a very funny way. I’m originally from France and I was visiting a friend in NYC for 3 weeks. After only 10 days or so, I had decided I wanted to get a job and live here. So I started interviewing for jobs all over the place. I started using a dating website, OkCupid, where I met a girl I quickly became good friends with. She wanted to help me find a job so she accessed the alumni repository of the university she went to, Yale. In this repository, she got several email addresses which she sent my resume to. One of the alumni she emailed was a certain Joel Spolsky (co-founder and CEO of Stack Overflow). Joel threw my CV on the pile, and after that I went through the regular interview process.\nWhat big projects are you currently working on?\nI’m working on a project named “match quality”. I like to think we operate like a dating agency: guys are candidates, and girls are employers (or vice-versa, if you prefer). In the “match quality” project, I focus on the candidate side, trying to find the best job for a candidate not only by looking at each case in particular, but rather by identifying patterns that give us a better idea of what makes a job interesting. This way, we can come up with algorithms which suggest relevant jobs to candidates. I think it is very important because it gives us a competitive advantage. And it’s the best place to do it because we know developers more than everyone else. I hope one day, when you go to Stack Overflow Careers, your dream job will be right in the middle of your screen, you’ll just have to grab it.\nWhat is your favorite part about working at Stack Overflow?\nWorking with smart people, for sure. Facepalming is something that used to be common in my professional life, but not anymore. Well, I facepalm sometimes, but most of the times it’s because of my own derps. Though always arguable, the decisions that are made always make sense. Also, there is always something I can learn from each and every developer (yes, each and every developer). It feels great to be around Stack devs, and I find it is a privilege to be in such an environment. Oh, and all the benefits are pretty cool too. I’m writing this from home, on my MacBook pro, with 2 Thunderbolt screens, on a stand-up desk. And I just had a nap.\nOutside of Stack Overflow, what are you working on? What hobbies do you have?\nI don’t have a side project at the time, though the last one I worked on was an online multiplayer game. It allowed me to fiddle with node.js, write my own physics engine, implement lag compensation. I learnt a lot about game development and read terrific articles (I recommend the Valve article on lag compensation). I’m always happy to read or talk about tech things; a few weeks ago a guy explained to me how he built his own automatic headlights for his old car.\nTo be honest, I spend most of my free time playing video games (Dota 2), or hanging outside. I have been living in NYC and London for the past 2 years, so hanging out in bars is a cultural thing, right? 🙂",
        "url": "https://stackoverflow.blog/2015/09/03/stack-spotlight-aurelien-gasser/"
    },
    {
        "title": "Why We (Still) Believe in Private Offices",
        "content": "There was a time where it seemed like we barely even needed to talk about this: Joel had won the argument, the Internet agreed that private offices were the future, and only incompetent management (or a tight budget) was still putting developers in cubicle farms. A glorious future lay before us.\n\nThe original Fog Creek Bionic Office, way back in ye olde 2003. We didn’t have iPhones, but at least the offices had doors.\nUnfortunately, that’s not quite how it turned out. Open plans have been surprisingly hard to kill, despite research showing that they’re unpopular, decrease employee satisfaction, and hurt productivity. The response so far seems to have been to double down and make it, if anything, worse: cubicles are now decidedly un-cool so no-wall open offices are all the rage, and Facebook brags that its new building will be the largest open floor plan in the world, consisting of a single, ten acre open room.\nThe result is that today Stack Exchange is decidedly lonely if not quite alone in offering private offices to our developers (at least the half who work in the office; the other half work remotely). Suddenly we’re the ones who look a bit old-fashioned: isn’t that the old-school Microsoft approach? Doesn’t it make us less creative? How can we stay fast and agile if people keep disappearing into offices to do work?\nWe’re pretty sure it doesn’t do any of these things, and in fact we believe it has a lot to do with how we think about work and our developers.\nFind your own rhythm\nJoel’s management philosophy is deceptively simple: hire smart people who get things done, and get the hell out of their way. The role of management is to give the people who actually do the work — the developers, designers, sysadmins, etc. — all the tools they need to get their jobs done, and then trust them to do the job!\nThis means we give you the space and expect you to find your own rhythm of work. With a private office, you’re in control of your space and attention: you can choose when to close the door and avoid interruptions, and when to go play ping-pong, talk with coworkers or work out of the coffee bar. In an open office you’re at the mercy of the people around you: if they’re talking, the best you can do is crank up your headphones and hope to drown them out, and if they’re playing foosball then good luck.\nEverybody has their own rhythm. People come in at different times, take breaks at different times, need to socialize at different times, and have their most productive hours at different times. Management’s job is to accommodate that and create a space where all those conflicting needs don’t congeal into a persistent hum of distraction — not to enforce some top-down ideal of openness and creativity. Private offices put the people who do the actual work in control.\n\nMotorized standing/sitting desks come standard, including for remote employees.\nKeep the nexus of activity online\nWe are an online company: we’ve been remote from day one and still to this day over half of the team (aside from sales) works from home. The only way to make that work is to keep the nexus of activity online: in chat rooms, Google Hangouts, Trello boards, etc. This keeps everyone on equal footing, whether you’re in the office or working from home. Want to know what’s going on? Just check Trello and chat. Don’t go hang out around the watercooler.\nThis creates a magnificent culture of non-distraction. Whenever we get a new hire in the office, I make it a point to sit down with them in their first week and explain that they should not go to someone’s office when they have a question. Instead, ping them in chat and then jump on a hangout. The result is exactly the sort of culture that open offices are supposed to promote but better:\n\nIf someone else sees the message, they can chime in with the answer\nIf someone else is interested in the discussion, they can jump onto the hangout\nAnd, crucially, if someone is working heads-down and doesn’t want to be distracted, all they have to do is close the chat window.\n\nThis really is the best of both worlds, and one of the reasons that I’m a big advocate of remote work culture even if nobody works remote. And a big part of what makes it possible if you’re working out of an office is having a door you can close so you’re not distracting your coworkers.\n\nGlass walls let in tons of natural light. It’s not as creepy as you think.\nSchedule time for cross-pollination\nThe result is that we get a lot of work done and individuals are fantastically productive. The only thing missing is to make sure that we’re facilitating those cross-team connections that open offices pretend to get you for free. We solve that in a few simple ways: daily lunch together in the office, weekly “Beer Bashes”, and an annual company meetup.\nJoel has written a lot about the benefits of eating lunch together and we’re still big believers in it. Some people get a little weirded out by this so I’ll clarify: lunch together is not required, but anyone who skipped it completely would be missing out on some great food. At Stack Exchange HQ in New York we’re lucky enough to have a full kitchen and our own professional chefs and the results are pretty amazing. Eating lunch together every day is a great way to connect with coworkers you wouldn’t otherwise have talked to, though it doesn’t quite tie in the remote employees which is what makes the other approaches so important.\nFriday “Beer Bashes” have long been another in-office tradition: grab a tasty beverage (alcoholic or not, nobody really cares) and hang out with some of your esteemed colleagues on Friday afternoon before taking off for the weekend. Recently we’ve been experimenting with Remote Beer Bashes via Google Hangouts, with some pretty fantastic results. Now even the remote people can join in and have some fun, even if it’s closer to midnight or freakishly early in their time zones.\nFinally we have an annual engineering + community team meetup. We could write a whole post on this, but one of the points we make every year is that the primary goal of the meetup is to meet people and hang out — any work done is merely a side benefit. This last year we had a pretty great mix of presentations, meetings, and a strange obsession with hangman (oh, and an impromptu war room when we were hit with a novel DDoS attack). The whole thing was a huge success (even the war room) and really got a lot of different teams talking to each other and solving problems together.\n\nLunch served every day at Stack Exchange.\nThat’s how we work\nNow, of course, the caveat: this is what works for us, and we understand it’s not for everyone. Maybe some places really are more creative because they have open plans. We don’t actually even give everyone private offices: some people are doubled up in offices, and the sales and marketing teams sit in larger open spaces because they feel that’s an important part of how they work. But it’s continually astonishing to me that more companies aren’t talking about private offices for developers, and that open plans have become the expected norm in the industry. At the very least we should be considering all the benefits that private offices provide.\nOh, and did I mention we’re hiring? If this sounds like the kind of place you’d like to work — whether out of the office or from home — we’re hiring for a lot of positions in 2015 across all three offices and remote.\nIn closing, I’ll leave you with a few choice pictures of our office. If you’d like to explore more, check out the Google street view tour of the NYC office. We also have sales offices in Denver and London which you can check out.\n\nSerious work being done.\n\nObligatory ping-pong table.\n\nMeeting space and cluster of offices. Would also qualify for Random Cups at Stack Exchange\n\nCan’t beat that view.\nOh, and if you’re worried about our remote developers, we make sure to set them up with some pretty sweet equipment too:\n\nA remote developer‘s home setup.\n\nObviously a designer. And yes, he has a sketch of himself on his wall.\n\nObviously less of a designer. But look at all dem monitors!",
        "url": "https://stackoverflow.blog/2015/01/16/why-we-still-believe-in-private-offices/"
    },
    {
        "title": "Podcast #62 – Delete This Whole Episode",
        "content": "Welcome to Stack Exchange Podcast #62, recorded live on January 20th–with a live studio audience (kinda)!. Today’s podcast was brought to you by the American Venture Capital Association. With you today are our hosts Jay Hanlon, David Fullerton, and Joel Spolsky.\nLet’s jump right in: we made a big announcement! Andreessen Horowitz has invested a pile of money in our little company so we can improve our ‘programmer forums’. Precisely none of the pile of money is going into Jay’s raise, but one of those dollars is going to SomeKittens.\nSo, the (forty) million dollar question: how are we going to use this money?\n(not on supporting ancient browsers.)\n\nWe intend to (continue) spending money on Stack Overflow Careers. Our goal is to get every programmer a better job, and we want to do that without selling crazy-takeover-animated-bonzaibuddy-ads that feel like reading a newspaper on the subway (according to Joel), so we’re getting money from investors instead.\nHow are we going to make this happen? We plan to revisit the developer side of the Careers equation and figure out how to make that better. More features to let programmers search and filter for interesting jobs (for example, you can look for Javascript jobs or specifically Node.js jobs), update the way profiles work, etc. – more of the stuff we were going to work on anyway. Careers is already a very developer-focused product: we limit the things our employers can do heavily based on what drives programmers nuts. For example, we only let employers contact a limited number of candidates unless those candidates actually respond, and we disallow contingency recruiters. (A pox on all of their houses.)\nYou can get a Careers profile here. We filter the applications to make sure only real programmers end up with profiles on Careers.\nTime to take some questions from the peanut gallery!\n\nHow will this [investment news] affect the sites?\nNot one bit!\n\nWell, a few bits. This cash will allow us to hire more designers, so more sites can graduate and get beautiful site designs. We’ll get to hire more people to hit more of our goals at the same time. For example, one of the things we’re actively working on now is improving search on Q&A sites.\nHave we mentioned lately that we’re hiring? Our most urgent need is for product managers, and you can apply for that job even if you’ve never had ‘product manager’ in your job title before.\n\nWill there be someone to represent the rage quitters?\nYes. You’re hired. Thanks for volunteering.\nWould you consider being an intermediary, putting a “Buy This Person’s Time” on their profile page or answers?\nNo! (Sorry, Brent.)\nHas the Stack Overflow design update changed user behavior?\nWe’ve noticed a big uptick in the number of people complaining about how blue and cream go together. We’ve also gotten a lot of constructive feedback on meta that we’ve used to inform tweaks (but it’s really hard to distinguish those from comments about how people’s cheese has been moved).\nCan you comment on whether SO rep is useful to a job search?\nLots of employers out there don’t know what Stack Overflow is, but Joel is going to use some of those 40 million dollars to educate them. But from our perspective, posting on Stack Overflow is more like blogging in that it can tell you a lot about a programmer and how they interact with the developer community. Stack Overflow reputation alone doesn’t always tell you about the second half of “smart and gets things done”.\nWill you be making a Windows Phone app?\nNot for the foreseeable future. This question makes our mobile lead sad.\nAre there any plans to add a chat feature to the mobile application?\n(Mobile lead Kasra just dropped dead.) We may add chat to the mobile app yet, but it’s not in our 2015 plan.\nAre we going to ever allow wildcards in searches? Currently in chat it just nulls the search.\nChat search is weird and backwards, but actual site search allows a certain amount of wildcards. This will get a better response if you post it on Meta and our search devs can actually respond!\nWhat happened to the videos idea?\nWe first thought about Stack Overflow TV a while back. We hope to expand into areas of developer learning beyond questions and answers someday, and SOTV is one of those ideas. It will essentially be a YouTube channel with little introductory videos on topics in programming. The idea has hit some snags, but it’s still on our radar.\nDo you have any plans to run hackathons to promote local user groups?\nYes! On a small scale, we make our office space available to local user groups who need a place to meet.\n\nAnd we’re out of questions. So what else is going on these days? Hats! And some new sites. How about new features? We’re experimenting with a new triage queue to help sort questions into “hopeless and needs to be burninated” and “could be passable with some editing” buckets. Things in the triage queue won’t show up on the homepage until they’ve been approved. Here are the details.\nJoel wants to sign off, but first make sure you check out Expression Engine SE’s new design. (Since this podcast was recorded, Movies SE has also graduated with a slick new theme.)\nThanks for wasting an hour on the Stack Exchange Podcast Episode #62, brought to you by the American Venture Capital Association.",
        "url": "https://stackoverflow.blog/2015/02/04/podcast-62-delete-this-whole-episode/"
    },
    {
        "title": "Stack Exchange Gives Back 2014",
        "content": "There are few things that make me more proud to be part of the Stack Exchange community than the outpouring of good will that comes during our “Giving Back” program. Each year we set this time aside to remember the organizations and people who need our help by offering to make a $100 donation to charity on behalf of each community moderator. It’s just a small gesture of thanks to our moderators from each community whose hard work makes this all possible.\nIn our sixth year of Giving Back, I started to wonder if asking Moderators to select their charities year after year might become somewhat routine and unremarkable.\nBut it’s been quite the opposite.\nAs December rolls around, the buzz and anticipation for this event gets stronger with each passing year — “When do we get to pick our charities?” — and when the selections finally go out, the passion and enthusiasm of folks rushing in to help is nothing short of remarkable.\nSo on behalf of the 132 communities and the 433 Moderators of Stack Exchange, we were able to make the following donations to charity this year:\n\nAnd from our engineering team, let’s not forget the tools and organizations that make what we do possible:\n\n\nGit and the Software Freedom Conservancy — $1,000\n\n\nHAProxy — $1,000\n\n\njQuery Foundation — $1,000\n\nOpenBSD — $1,000\n\n\nCharities embody some of the best qualities in all of us. Whether you’re fighting for a cause that is important to you, or helping someone whose life may be falling apart, there’s an almost indescribable bond that forms when neighbor embraces neighbor to overcome whatever difficulties you face.\nWe may have not had our own Hurricane Sandy event this year, but when you’re giving back to help others, you can’t help but reflect back on those times when someone reached out to you, and you start to wonder if perhaps you’ve sparked that same feeling of hope and fellowship in someone else today… if even just a little.\nI would like to end this year with glasses held high — to thank all of you, the community of Stack Exchange, for helping us make all of this possible. It’s times like these that I will reflect back on and cherish always.\nCheers!",
        "url": "https://stackoverflow.blog/2014/12/24/stack-exchange-gives-back-2014/"
    },
    {
        "title": "Andreessen Horowitz Invests in Stack Exchange",
        "content": "Stack Exchange Raises $40m\nToday Stack Exchange is pleased to announce that we have raised $40 million, mostly from Andreessen Horowitz.\nEverybody wants to know what we’re going to do with all that money. First of all, of course we’re going to gold-plate the Aeron chairs in the office. Then we’re going to upgrade the game room, and we’re already sending lox platters to our highest-rep users.\nBut I’ll get into that in a minute. First, let me catch everyone up on what’s happening at Stack Exchange.\nIn 2008, Jeff Atwood and I set out to fix a problem for programmers. At the time, getting answers to programming questions online was super annoying. The answers that we needed were hidden behind paywalls, or buried in thousands of pages of stale forums.\nSo we set out to build Stack Overflow with a single-minded, compulsive, fanatical obsession with serving programmers by building a better Q&A site.\nEverything about how Stack Overflow works today was designed to make programmers’ jobs easier. We let members vote up answers, so we can show you the best answer first. We don’t allow opinionated questions, because they descend into flame wars that don’t help people who need an answer right now. We have scrupulously avoided any commercialization of our editorial content, because we want to have a site that programmers can trust.\nHeck, we don’t even allow animated ads, even though they are totally standard on every other site on the Internet, because it would be disrespectful to programmers to strain their delicate eyes with a dancing monkey, and we can’t serve them 100% if we are distracting them with a monkey. That would only be serving them 98%. And we’re OBSESSED, so 98% is like, we might as well close this all down and go drive taxis in Las Vegas.\nAnyway, it worked! Entirely thanks to you. An insane number of developers stepped up to pass on their knowledge and help others. Stack Overflow quickly grew into the largest, most trusted repository of programming knowledge in the world.\nQuickly, Jeff and I discovered that serving programmers required more than just code-related questions, so we built Server Fault and Super User. And when that still didn’t satisfy your needs, we set up Stack Exchange so the community could create sites on new topics. Now when a programmer has to set up a server, or a PC, or a database, or Ubuntu, or an iPhone, they have a place to go to ask those questions that are full of the people who can actually help them do it.\nBut you know how programmers are. They “have babies.” Or “take pictures of babies.” So our users started building Stack Exchange sites on unrelated topics, like parenting and photography, because the programmers we were serving expected—nay, demanded!—a place as awesome as Stack Overflow to ask about baby feeding schedules and f-stops and whatnot.\nAnd we did such a good job of serving programmers that a few smart non-programmers looked at us and said, “Behold! I want that!” and we thought, hey! What works for developers should work for a lot of other people, too, as long as they’re willing to think like developers, which is the best way to think. So, we decided that anybody who wants to get with the program is welcome to join in our plan. And these sites serve their own communities of, you know, bicycle mechanics, or what have you, and make the world safer for the Programmer Way Of Thinking and thus serve programmers by serving bicycle mechanics.\nIn the five years since then, our users have built 133 communities. Stack Overflow is still the biggest. It reminds me of those medieval maps of the ancient world. The kind that shows a big bustling city (Jerusalem) smack dab in the middle, with a few smaller settlements around the periphery. (Please imagine Gregorian chamber music).\n\nStack Overflow is the big city in the middle. Because the programmer-city worked so well, people wanted to ask questions about other subjects, so we let them build other Q&A villages in the catchment area of the programmer-city. Some of these Q&A villages became cities of their own. The math cities barely even have any programmers and they speak their own weird language. They are math-Jerusalem. They make us very proud. Even though they don’t directly serve programmers, we love them and they bring a little tear to our eyes, like the other little villages, and they’re certainly making the Internet—and the world—better, so we’re devoted to them.\nOne of these days some of those villages will be big cities, so we’re committed to keeping them clean, and pulling the weeds, and helping them grow.\nBut let’s go back to programmer Jerusalem, which—as you might expect—is full of devs milling about, building the ENTIRE FUTURE of the HUMAN RACE, because, after all, software is eating the world and writing software is just writing a script for how the future will play out.\nSo given the importance of software and programmers, you might think they all had wonderful, satisfying jobs that they love.\nBut sadly, we saw that was not universal. Programmers often have crappy jobs, and their bosses often poke them with sharp sticks. They are underpaid, and they aren’t learning things, and they are sometimes overqualified, and sometimes underqualified. So we decided we could actually make all the programmers happier if we could move them into better jobs.\nThat’s why we built Stack Overflow Careers. This was the first site that was built for developers, not recruiters. We banned the scourge of contingency recruiters (even if they have big bank accounts and are just LINING UP at the Zion Gate trying to get into our city to feed on programmer meat, but, to hell with them). We are SERVING PROGRAMMERS, not spammers. Bye Felicia.\nWhich brings us to 2015.\nThe sites are still growing like crazy. By our measurements, the Stack Exchange network is already in the top 50 of all US websites, ranked by number of unique visitors, with traffic still growing at 25% annually. The company itself has passed 200 employees worldwide, with big plush offices in Denver, New York, and London, and dozens of amazing people who work from the comfort of their own homes. (By the way, if 200 people seems like a lot, keep in mind that more than half of them are working on Stack Overflow Careers).\nWe could just slow down our insane hiring pace and get profitable right now, but it would mean foregoing some of the investments that let us help more developers. To be honest, we literally can’t keep up with the features we want to build for our users. The code is not done yet—we’re dedicating a lot of resources to the core Q&A engine. This year we’ll work on improving the experience for both new users and highly experienced users.\nAnd let’s not forget Stack Overflow Careers. I believe it is, bar-none, the single best job board for developer candidates, which should automatically make it the best place for employers to find developer talent. There’s a LOT more to be done to serve developers here and we’re just getting warmed up.\n\nSo that’s why we took this new investment of $40m.\nWe’re ecstatic to have Andreessen Horowitz on board. The partners there believe in our idea of programmers taking over (it was Marc Andreessen who coined the phrase “Software is eating the world”). Chris Dixon has been a personal investor in the company since the beginning and has always known we’d be the obvious winner in the Q&A category, and will be joining our board of directors as an observer.\nThis is not the first time we’ve raised money; we’re proud to have previously taken investments from Union Square Ventures, Index Ventures, Spark Capital, and Bezos Expeditions. We only take outside money when we are 100% confident that the investors share our philosophy completely and after our lawyers have done a ruthless (sorry, investors) job of maintaining control so that it is literally impossible for anyone to mess up our vision of fanatically serving the people who use our site, and continuing to make the Internet a better place to get expert answers to your questions.\nFor those of you who have been with us since the early days of Our Incredible Journey, thank you. For those of you who are new, welcome. And if you want to learn more, check out our hott new “about” page. Or ask!",
        "url": "https://stackoverflow.blog/2015/01/20/andreessen-horowitz-invests-in-stack-exchange/"
    },
    {
        "title": "So long Winter Bash 2014",
        "content": "While testing hats before the start of Winter Bash 2014, a snowflake notification told me I’d earned the Treasure Hunter hat. After adjusting pirate paraphernalia to fit my head, I tried to remember what triggers this particular hat. As it happens, I’d just received a gold badge on Cooking that I would’ve totally ignored if not for the associated hat. Suddenly I understood why this time of year resonates with our most accomplished users. Earning cosmetic items, as silly as they are, temporarily reminds us of what it was like to begin participating on Stack Exchange months or years ago. Plus, hats look really cool.\nThis year 84,439 users earned a total of 244,865 hats, which is slightly up from last year.\nSecrets revealed\n\nThe most common hat (awarded 70,361 times to 39,499 distinct users) turned out to be the secret Chameleon. On Meta Stack Exchange folks correctly noted that it was triggered by editing certain fields in your profile. Our intention was that it would be triggered by changes in a user’s avatar. However, due to an otherwise low-priority bug, the hat seemingly was awarded randomly after profile edits. So the theme of this hat is less camouflage and more Mixed Up Chameleon.\n  \nTwo more secret hats, Fascinating (34,026 times to 25,017 users) and Fascinating, Ma’am (12,342 times to 10,526 users) were earned by voting on posts that were already quite well received. (The first was for upvoting an accepted answer with a score of 5 or more and the second was for voting up a question with 10,000+ views and a score of at least 25.) These are, of course, Star Trek references which brings the total to three. That compares to one Star Wars reference last year, for those keeping score.\n\nWe awarded Warm Welcome (14,430 times to 9,597 users) to people who upvoted another user’s first post. It was gratifying to see so many of these hats awarded. Upvoting quality posts sets up a positive feedback loop encouraging a new user to post again. Each time I was awarded this hat, I felt good knowing that I’d done just a little bit to improve the overall quality of content on the site.\n\nLast year, abby hairboat did such a great job of wrangling hats we decided to prank her honor her with a hat awarded to those responding to one of her posts or comments. Hence, the HairBoat (awarded 699 times to 569 distinct users). She was so pleased that she promised to send me a gift: a box of live spiders. What a kidder! (In unrelated news, my oldest child will now earn a little extra allowance in exchange for his new title: Family Postal Inspector.)\n\nThe last four secret hats were harder to earn than the most common four by more than an order of magnitude. Time Lord (404 times to 378 distinct users) was given for people who edited at least 5 questions more than a year old. Plenty of people edit older posts once in a while, but not many update that many out-of-date posts in a short period of time. One of my goals for designing hat triggers was to test potential permanent badge ideas. This trigger (which we also explored with the “A Link to the Past” hat last year) is something I hope to evaluate as a badge idea in the coming year.\n\nI was somewhat surprised with how few people earned Waffles (365 times to 331 users) for downvoting a question, editing it, and upvoting it in that order. Looking at the data, it turns out that only about 2% of people who edit a question and later upvote it had downvoted it first. During Winter Bash 2014, the ratio increased to about 10%. Likely some of the increase in pre-downvoting came from dedicated breakfast hat hunters. When you think about it, downvoting a post you are about to edit amounts to wasted effort. Either fix a post until it’s better or downvote and move on. In sum, a fun concept for a hat (especially if you like waffles), but not a good badge idea.\n\nFinally, we awarded 15 detectives with the Eureka! light bulb for correctly and independently guessing the trigger conditions for secret hats. We didn’t award Eurekas for guessing Eureka! itself this year since it was largely unchanged from last year.\nNon-secret hats\n    \nThe most common non-secret hat was Saint Lucia (25,444 times to 19,390 users). It was also the first awarded (December 14 at 1200 UTC). Yes, that’s a day late. Other time-based hats were: Solstice (7,581 times to 6,858 users), Kofia (4,152 times to 4,019 users), Gelt (813 times to 757 users), Bill Lumbergh (325 times to 318 users), Resolution (244 times to 222 users), Stockings Hung by the Fire (223 times to 196 users), and Mistletoe (207 times to 154 users). Due to timezones, we were pretty generous with the timing. But not Mistletoe, which required chatting within a ten minute period around January 1, 2015 0000 UTC. Thankfully our chat servers handled the load just fine.\n \nThe mobile app must have been on our mind recently since there are a number of hats that required it: Bugdroid (7,115 times to 4,776 users), Not a cherry (3,829 times to 2,403 users), On The Road (511 times to 451 users), and Got a Tablet for Christmas (231 times). I personally got an iPhone 6 for Christmas and used the iOS app to earn “Not a cherry”. Verdict: my fingers are still too big for phone-sized keyboards. Maybe I should get a tablet.\n       \nRight in the middle of Winter Bash, balpha allowed hats to be rotated 360°. Lots of folks took advantage of this to concoct brand new hats such as the Praying Mantis, Soccer Necklace, Crab Face Googly Eyes, Next Generation Earpiece, and, of course, the Mulletbeard™.\n\nThe most difficult hat was the Red Baron earned by just 26 users. It required posting an answer that was so good it changed they way people looked at the question. A great example of how this works is this answer, which was submitted while the question was at -7. After the answer (and a strategic edit to the question), the question got 10 straight upvotes to bring the score to +3 at the time of writing. Without the hat, this amazing accomplishment would have gone unrecognized. Especially pleasing for us: the idea for this hat came from a user suggestion to replace the existing Reversal badge. When it comes to amazing, talented and dedicated users, Stack Exchange’s cup overflows.\nWe’ve been asked to share statistics about hats this year, which we are happy to do. In the weeks to come, I will be reporting things we learned from Winter Bash over on Meta Stack Exchange. In the meantime, enjoy a few more of my favorite hat-wearing avatars:\n       \nAs last year, the hats were illustrated by Elias Stein. I hope you enjoyed his work as much as we did. Thanks Elias!\nAnnouncing the winners\nEveryone who participated is a winner! Okay, that’s not what you are here for. Four individuals top the network-wide leaderboard:\n\nPlease join me in congratulating the users who earned all 38 hats across the network:\n\nLogan M (32 hats on Anime & Manga and last year’s winner)\nMartijn Pieters (35 hats on Stack Overflow)\nrolfl (34 hats on Code Review)\nMike Miller (36 hats on Mathematics)*\n\nAnd with that, we must say a fond farewell to the hats of 2014. If you have any feedback on this year’s event, please weigh in on Meta Stack Exchange.\n\n\nThe leaderboard counts hats earned across the network. While all four earned the maximum network-wide, the tiebreaker goes to the person who scored the most hats on their home site. Mike Miller’s 36 hats on Mathematics was the maximum he could earn. The two he missed on Math were HairBoat, since Abby hadn’t posted on his site and Kofia, which is awarded to brand-new posters only.\n\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2015/01/06/so-long-winter-bash-2014/"
    },
    {
        "title": "Targeted Jobs for Stack Overflow",
        "content": "Stack Overflow Careers was announced five years ago with a simple mission statement:\nWe believe that every professional programmer should have a job they love\nTo help you find a job you love, we need to match you with the right job at the right time. We do that by helping you create a profile that brings the right employers to you, and by showing you relevant job ads from our job board on Stack Overflow. With over 6,000 companies that advertise on Stack Overflow Careers, we’re getting closer to our goal of having a great job for every developer.\nUntil today, the job ads that we show on Stack Overflow were pretty stupid: they targeted solely based on location, and ignored all the other information about what you’re looking for and what kind of job it is. They didn’t even care about whether the job was in a technology that you were interested in. So today* we’re launching the first step in showing you jobs that we think are an actual match for you.\n*If you just ran to a question to see how targeted the jobs were and left disappointed, don’t worry. This feature is just launching today and most employers haven’t had a chance to target their jobs yet. You’ll see the difference over the coming months.\nDeveloper Types, Tech Ecosystems, and Tech Tags\nMany of you will start noticing that the jobs you see aren’t just in your area, but are related to the question you’re viewing, a question you’ve answered, or something you’ve asked about. We’re using this little bit of data, along with the location data we were already using, to predict what type of job you’re more likely to want to apply to. We then do some predictive modeling based on this information to target mobile jobs at mobile devs, front-end web development jobs at front-end devs, and even more complex stuff based on technology stack and specific tags.\nIt’s difficult to show you an example of a targeted ad. We haven’t changed much about the ad design or even how the job is displayed in the ads. However, we can show you the other side, how the employer is targeting their jobs.\n\nThis is all organized into three tiers of targeting criteria:\n\nDeveloper Types: The broadest description of a developer.\nTechnology Ecosystems: A narrower description, best described as tag clusters.  Python includes frameworks like Django and Flask. Cloud (back end) implies knowledge of AWS, Microsoft Azure, Rackspace, etc.\nStack Overflow Tags: The most finely-grained descriptor. These draw straight from the top 1,000 most popular tags on Stack Overflow.\n\nIt’s really that simple. Once employers fill out a targeting profile for a job, we’ll try and predict which of those jobs you’ll be interested in.\nFine, but these are just ads. Why should I care?\nHopefully this doesn’t change much about how you use Stack Overflow in your daily life. Job ads are only a small part of our page content, but we hope this launch will improve your odds of seeing the right job opportunity at the right time. So far it appears to be working. Initial testing of targeted jobs over the past few months have demonstrated significant progress toward our goal of showing relevant job ads to each developer, as clickthrough rates increased 21-30%. Not bad for a V1!\nWe also want to let you know exactly how we’re targeting jobs, so our newly created data team will be talking about building out the infrastructure for this project, and all the details of what went into it. You can follow these posts on Kevin Montrose’s blog starting today. Jason Punyon will also be adding to this series later this week and next.\nAdditionally, if you want to see your personal prediction data, or if you want to disable predictions, you can do that from the user preferences page.\nThis sounds cool; I want to use it to hire a developer!\nIf you want more details on how this works for employers, go visit our Stack Overflow Careers blog. If you want to dive right in, you can post a job now and fill out a targeting profile. And if you already have a job running, you can edit it to add targeting for the rest of its run.\nThat’s it! As always, if you have questions or comments feel free to post on Meta Stack Exchange in the ‘Careers’ tag.",
        "url": "https://stackoverflow.blog/2015/01/27/targeted-jobs-for-stack-overflow/"
    },
    {
        "title": "Education begins at home: Improving developer training in NYC",
        "content": "The core goal of Stack Exchange is education. Everything we build is geared toward helping people learn from one another — not just the nuts and bolts of their profession or passion, but the universal skills of how to better communicate and learn. As we’ve grown as a company, we’ve benefited from many resources to assist in educating developers out of our office space, including hosting local meetups and partnering with the Flatiron School and Fog Creek for a mentorship program.\nToday, we’re excited to announce our partnership with the New York City Tech Talent Pipeline, Mayor de Blasio’s new initiative designed to increase the number of qualified candidates for open tech positions in New York City.\nThat’s nice. But how?\nThe city has brought together a number of major companies that hire developers in NYC and asked us to do two things:\n\nJoin a committee designed to help the city identify ways it can use its resources to attack the problem more broadly (through the education system, etc.), and\nImplement programs we can run, possibly with the help and support of other awesome like-minded tech companies in the city.\n\nOn the first point, we’re excited that our VP of Engineering, David Fullerton, will be sitting in on quarterly meetings with other tech industry leaders convened by Mayor de Blasio, where we hope we can help to represent the developer voice and to share what skills and technologies we know are most in-demand.\nFor the second, we’ve already brought in a bunch of (awesome) NYC companies — including Trello, Kickstarter, Foursquare, Tumblr, and Control Group — who will build and teach a new curriculum of programmer “soft skills” to graduates of public computer science programs in New York (starting with the CUNY system) that will better equip them as professional developers.\nThe goal is to make sure that anyone in this city with a passion for technology, no matter who they are or what neighborhood they grew up in, can get the mentoring, training, and support they need to succeed as a developer.\nWhy are we doing this?\nAs you probably know, there’s a vast disparity between open tech jobs and qualified developers in today’s market. At last count, there are nearly 5 job openings for every one job-seeking developer. With New York City’s current tech job count teetering at around 300,000 job openings, we need to increase the number of good candidates or a lot of  websites aren’t going to get built. The city needs developers. And this happens to be an area that we know a thing or two about. Our goal is to support and empower developers, no matter where they may be in their programming careers. Despite our well-known belief in remote work, our founder has always been a particular proponent of building great places in New  York for those developers who do want to work in a more communal space. Like many tech companies, we’ve been giving a lot of thought to how we can promote inclusion, both internally and in the tech community as a whole. We don’t pretend to have figured it all out, but this is just one thing we’re excited to share. As always, we welcome any ideas you may have.",
        "url": "https://stackoverflow.blog/2015/02/12/education-begins-at-home-improving-developer-training-in-nyc/"
    },
    {
        "title": "Stack Exchange Year in Review 2014",
        "content": "We – which is to say, you, the Stack Exchange community – had another great year in 2014.\nWe cracked Quantcast’s top 50 networks in the US. We did this without posting celebrity gossip, top 10 lists, or cat pictures. We did it by creating artifacts: useful, canonical bits of information, edited, refined, and curated by our community.\nBy donating your knowledge to the largest community of developers in the world, you’ve been able to create a slice of the Internet that is indeed a better place. Amidst the noise, clutter, and chaos of the web, you’ve built one of the largest, most trusted knowledge repositories ever created.\nHow many times did people looking for help find your solutions last year? If you were to take the number of visitors to Stack Exchange sites in 2014, it would be larger than the populations of the United States, Russia and Brazil combined.\n(Accommodating this many visitors would not be possible without our remarkably lean infrastructure, which served 6.4 billion pageviews last year alone.)\nBy the Numbers\nLet’s focus on how much you did in 2014 to share your knowledge:\n\n\n3.1 million new questions asked\n\n\n4.5 million answers submitted\n\n\n2.7 million edits, which made those posts even more helpful\n\n\n17 million comments\n\n\n3.6 million reviews\n\n21 million upvotes; 3.2 million downvotes; 1.8 million accepted answers\n\nCommunity Highlights\n\n\nIn 2014, we launched 20 new beta sites that you proposed through Area 51, bringing us to a total of 133 communities spanning topics as diverse as Economics, Startups, and Buddhism.\n\n\n5 communities graduated from beta and were fully launched with snazzy new designs: Personal Finance and Money, Graphic Design, Academia, The Workplace, and Salesforce.\n\n\nWe released native mobile apps for iPhone, Android, and iPad, (with an Android Tablet version in the works). Just a year in, hundreds of thousands of you have installed them, and you’ve posted more than 15K posts from the bathroom mobile apps.\n\n\nWe launched Portuguese and Japanese Stack Overflows, our first non-English SOs.  Portuguese is now officially our second fastest-growing community ever after hitting 10,000 questions in only 9 months.\n\nStack Overflow Careers added 3,700 new company pages and 29,000 job listings. Finding a better job should be as easy for developers as finding answers on Stack Overflow.\n\nContent Superlatives\nNumbers are fine, but answers are better. Let’s look at some of your top posts from 2014.\n\n\nMost viewed post:\n\n\nWhat is the optimal algorithm for the game, 2048? (Stack Overflow, 679k views)\n\nHonorable mention: Visually stunning math concepts which are easy to explain? (Mathematics, 304k views)\n\n\n\nMost upvoted answer:\n\n\nWhy is printing “B” dramatically slower than printing “#”? (Stack Overflow, 2109 votes)\n\nHonorable mention: Why does Windows think that my wireless keyboard is a toaster? (Super User, 1293 votes)\n\n\n\nMost anonymous votes:\n\nProduce the number 2014 without any numbers in your source code (Code Golf, 997 anonymous upvotes on the linked answer)\n\n\n\nMore Highlights\n\n\nWe worked on a lot of open source projects this year, not least bosun, a sophisticated monitoring system.\n\n\n_Everything _we’ve achieved is thanks to the generosity of our users, so we’re proud to give back. We donated over $60,000 to some of our favorite projects on behalf of our invaluable moderators.\n\nWe grew to 205 employees here at Stack Exchange (the company), more than 20% of whom work remotely. We now have people in 11 countries with physical offices in New York, London, and Denver. If you want to join us in serving the world’s programmers while building a better, smarter Internet, we’re hiring.\n\nYou blew us away last year. Thank you. We can’t wait to see what you’ve got in store for 2015.",
        "url": "https://stackoverflow.blog/2015/01/08/year-in-review-2014/"
    },
    {
        "title": "Podcast #63 – The Plumber’s Up To 67 Coins",
        "content": "Welcome to the Stack Exchange Podcast Episode #63, recorded March 6, 2015 in front of a live-ish audience. Today’s podcast is brought to you by Cool Whip by Kraft Foods. A description for this result is not available because of this site’s robots.txt — learn more! Our hosts today are Joel Spolsky, David Fullerton, and Jay Hanlon… as usual.\nSo what’s new? David went to London. (We have an office there. It’s awesome and it has graffiti on the walls.) David flew out to meet the London marketing team, spend time with some of our European developers, and get knighted. Probably.\nThis story didn’t really go anywhere, so we’ll take an audience question and then move on to talking about review queues. Specifically: the Help & Improvement queue. (Let the record show that Joel asked for this feature approximately 700 years ago. [So did Jon Skeet. -Ed.])\nThe Help & Improvement queue (aka the helpers queue, aka the huggy queue) contains questions that were deemed “Should Be Improved” in the triage queue. The triage queue is working very well so far. (There are numbers with percentages and two decimals of accuracy, so they are obviously really good.) Instead of talking about it more, let’s just go check it out! Here’s the question Joel was working with.\nJoel discusses some questions that got as much help as they deserved (if not more), including an example that got some helpful edits comments. But without better information from the askers, these questions were still never going to get good answers. User Lynn Crumbling has a new badge idea: Almost Famous — had a question closed by Joel.\nAfter many tangents, here are the takeaways from our experience so far with the helpers queue: we need to think about how to better control what’s going into the queue, and we need to give the reviewers more ways to deal with questions that shouldn’t be in there.\nRight! Let’s talk about closing. But first we get sidetracked and talk about moving datacenters and blogging about it. It’s a great post, especially if you’re into this kind of thing:\nOn top of NY-VM01&02 was 1 of the 1Gb FEXes and 1U of cable management. Luckily for us, everything is plugged into both FEXes and we could rip one out early. This means we could spin up the new VM infrastructure faster than we had planned. Yep, we’re already changing THE PLAN™. That’s how it goes.\n(Oh, and the SRE team got snowed in and had to sleep in the datacenter. There’s that, too.)\nBut here’s the blog post we actually meant to talk about: My Love-Hate Relationship with Stack Overflow by Jason S. It inspired David to come back from vacation to rant about it in chat for an hour. He helpfully re-creates this rant (with help from Joel and Jay) live on the podcast!\nSo what came out of this discussion? We changed close vote aging, for one thing. Community Manager Jon Ericson‘s meta post thought experiment about close voting was another.\nThanks for listening to the Stack Exchange Podcast, brought to you by Cool Whip — a whipped topping, NOT whipped cream.",
        "url": "https://stackoverflow.blog/2015/03/25/podcast-63-the-plumbers-up-to-67-coins/"
    },
    {
        "title": "Introducing Runnable JavaScript, CSS, and HTML Code Snippets",
        "content": "On Stack Overflow and our other code-related sites, creating a minimal, complete, and verifiable example is the best way to get an answer to your question. We’ve always loved JSFiddle and sites like it because they let both askers and answerers reference runnable, working code that demonstrates their problem or solution.\nUnfortunately, the use of these external sites introduces a few problems:\n\nIf the link breaks, the post becomes worthless.\nIf the code isn’t embedded in the page, visitors are forced to go elsewhere to get the full content of the question or answer.\nAlso, because the code isn’t a part of our post Markdown, changes to it don’t show up in the revision history.\n\nThe community voiced similar concerns around external sites, which eventually led us to block posts that contain links to JSFiddle and similar sites without a corresponding code block. This is an unnecessary burden for both askers and answerers.\nSo we’ve created our own way to embed runnable JavaScript, CSS, and HTML code blocks right in the body of a post. As of today, we’re launching “Stack Snippets,” a fully integrated feature available on Stack Overflow and any other code-related Stack Exchange sites.\nHow Do Stack Snippets Work?\nWith Stack Snippets, a code block:\n\nCan become a runnable code block:\n\nThe code will not run until you press the “Run code snippet” button:\n\nHow Do I Make A Stack Snippet?\nStack Snippets work for both questions and answers. In the Markdown editor window, there’s a new button that you can click to launch the Stack Snippets editor.\n\nThe editor appears and allows you to enter HTML, CSS, and JavaScript (or any combination of them):\n\nOnce you’ve got your code working, press “Insert into Post” at the bottom and you’re done! You can test your snippet, or load it back into the Snippets editor from right in the Preview screen:\n\nWhen answering a post containing a snippet, you can easily include a modified version of the original in your answer – just click the “Copy snippet to answer” button.\nUnder the Hood\nA great feature of Stack Snippets is that they are inserted as regular Markdown code blocks:\n\nThis makes them instantly backwards-compatible with our normal revision history and diffs, and also any API clients including our own mobile apps.\nThe runnable snippets behavior is triggered by a few new HTML comments that are not rendered by Markdown. You can even edit the code right from the Markdown editor and the snippet will still be runnable.\nAre Stack Snippets Safe?\nYes, as much as the web in general is safe. You are not in any more danger than you are when browsing any site with JavaScript enabled. With that said, the snippets are running client code in your browser, and you should always exercise caution when running code contributed by another user.\nWe isolate snippets from our sites to block access to your private Stack Exchange data:\n\nWe use HTML5 sandboxed iframes in order to prevent many forms of malicious attack.\nWe render the Snippets on an external domain (stacksnippets.net) in order to ensure that the same-origin policy is not in effect and to keep the snippets from accessing your logged-in session or cookies.\n\nLike all other aspects of our site, Stack Snippets are ultimately governed by the community. Because users can still write code that creates annoying behaviors like infinite loops or pop-ups, we disable snippets on any post that is heavily downvoted (scoring less than -3 on Stack Overflow, -8 on Meta). If you see bad code that you think should be disabled, downvote the post. If you see code that is intended to be harmful (such as an attempt at phishing), you should flag it for moderator attention.\nWhat About Other Languages?\nOur initial release supports HTML, CSS, and JavaScript because questions on these topics use external code hosting sites the most frequently. These languages also run client-side in the user’s browser, making them self-contained and easy to support. Server-side languages are much more complicated and require significant infrastructure changes in order to properly implement. We don’t have any specific plans at this time to implement other languages, but it’s something we might consider in the future.\nWhat About Sites Like JSFiddle?\nYou can still use sites like JSFiddle if you prefer them. JSFiddle and similar sites still have a bunch of features that we have not implemented yet. The normal rules for a link still apply: make sure you copy the relevant code into your question or answer so that it can be accessed if the external site is unavailable.\nWe decided to implement our own version instead of embedding a third-party site for the reasons mentioned earlier:\n\nThere’s no need to copy-paste the code into the post. It’s all embedded in the post automatically, so revision history and diffs just work.\nThere’s no need to visit another site to get your answer. The best experience is one where your question and answer(s) are complete and on the same page.\nSince we host it, we can guarantee performance and up-time. We have high standards when it comes to performance and up-time, and want to make sure that the ability to run a snippet is always available.\n\nGive Stack Snippets A Try\nWe’re excited to see how the community uses Stack Snippets, and looking forward to your feedback:\n\nIf you find bugs, or you’d like to give specific feedback on Stack Snippets, you can post on Meta Stack Exchange using the tag stack-snippets.\nIf you just want to try it out, we’ve created a sandbox on Meta Stack Exchange.\nIf you feel that a particular site should have Stack Snippets, post a feature-request on that site’s meta – if there’s support from the community there, we’ll enable them.\n\nWe’ve already started piloting it on Code Review and are seeing some neat results. Don’t hesitate to share interesting examples you come across – or create – here in the comments.\nHave fun!\n\nIf you’d like to put your Javascript efforts to work, discover new opportunities in our Javascript job postings.",
        "url": "https://stackoverflow.blog/2014/09/16/introducing-runnable-javascript-css-and-html-code-snippets/"
    },
    {
        "title": "Stack Overflow Developer Survey 2015: The Results",
        "content": "Every year we ask our users to tell us a little about themselves. This year we asked our users to tell us a lot.\nFor 2 weeks in February 2015, we ran a 45 question survey. We asked where you live, what programming languages & frameworks you use, how much money you make, how much coffee you drink, and whether you prefer tabs or spaces when writing code. More than 26,000 of you responded, making this year’s survey quite possibly the most authoritative developer survey ever conducted.\nA few findings:\n\nOnly 48% of you have a degree in computer science.\nYou spend, on average, more than 7 hours every week coding on the side.\nYou use JavaScript. You love Swift. And you want to code in Node.\nYou overwhelmingly like your jobs (especially if you live in Iran).\nYour Stack Overflow rep is a strong indicator of how much money you make.\nAnd you prefer tabs to spaces at a ratio of 4:3.\n\nThis is just a start. Check out the full results.\n\nMassive thanks to everyone who shared information about themselves. There’s a huge benefit in being able to see who your peers are and what they’re interested in, and we hope this survey is as interesting to all of you as it is to us.\nFor those of you who want to dive into the data yourselves, we’ll be releasing a full dump of all line-by-line responses within the next couple weeks.\nAnd if you took the survey and counted M&Ms, or if you’re just curious about how well devs can estimate packing density (spoiler: not very well), see how many M&Ms were in the jar.\nHave ideas for what we should ask next year? Let us know in the comments.",
        "url": "https://stackoverflow.blog/2015/04/07/stack-overflow-developer-survey-2015-the-results/"
    },
    {
        "title": "Two new user pages. One new stat. This one’s big.",
        "content": "In the time since we started working on the profile, generations of dinosaurs were born, fell in love, had families, and were killed by a comet. Or climate change, or maybe texting and driving or some nonsense like that. Anyway, as of today, it’s live on SO and about half the network, and we’ll be rolling out to the rest over the next few weeks. And it was worth the wait:\nOne user page isn’t cool. You know what’s cool? A billion user pages.\nUnfortunately, the designers said I could have… like two, maybe? At most. So, we went with that:\nOne page for you, one page for them:\n\n\nThe Profile Page lets you show others a summary of what you’re all about. Share your interests, favorite charities, or your Twitter, Github, and SO Careers activity. Or don’t. And it automatically shows off your most helpful posts and tags from the network.\nThe Activity Page lets you instantly see just how much good you’ve done here. And it provides new, individual suggestions for specific ways you can contribute next.\n\nHow many people have you helped?\n\n“People Reached” is a new way to see just how much your efforts here matter.  For the first time ever, you can see roughly how many times an actual human being – very likely one looking for help – found your contributions here. Personally, I like to call it the “Saving-the-frigging-world-o-meter”. Which may be why I’m no longer allowed to name stuff. Whatever.\n\nNot big on words? Stop reading this. It’s long. Just go touch it!\n\nAlready have a profile? Go update it; you can add new Twitter, Github, and Careers links, and you’ll want to check your “People Reached” to see just how many people out there would high-five you if they could.\nNever filled out a profile? If you’ve ever gotten help here, create one today, and you’ll be ready to pay it forward the next time you run across a question you can answer. And the new layout is designed to make you look pretty great even before you post.\n\nSticking around for the details? Well, I warned you.\nWhy?!? Grimlock say NO changies! I LIKED THE OLD CHEESE!\n\nWhy the change? Well, the legacy user page served proudly for many years, but the design team got bored. And they had some long, tedious point about black never really being black, or tortoise-shell glasses or something, so we eventually just gave in. (Okay, not really.)\nBecause the old page was being asked to do two different things, it was okay at both, but not awesome at either:\n\n When you looked at your own profile , the top section was full of stuff that you A) know, B) can’t forget, and C) almost never changes. “What’s my name?” “Where do I live again?” At least “Age” was exciting roughly 0.3% of the time: “Whee – it’s my birthday today!!”\n When other people looked at your profile,  the whole bottom section was full of stuff that you may care about, but others probably didn’t. (“It’s sure been a while since Jay accepted a bounty – I hope he’s doing okay!”)\n\nSo, we left all the stuff that was working exactly the way it was, and split the info into two pages. Anyone can see either page, but the default view will be the one with the info that you actually care about.\nYour beautiful new Profile Page: Show others what you’re all about.\n\nWhat do you want to share? What you do. What you build. Your favorite quote, or least favorite N’Sync member. (Just kidding. They’re all equally awesome.)\nLet others see your best work, whether it’s here or on other sites. Not active here yet? Not a problem. The new profile has dedicated fields for links to Github, Twitter, your Rick Schroeder Fan Fiction Tumblr, or wherever you have something to share. If you never felt you needed a profile before, today just may be your day.\nAlready been helpful? We’ll show off your best work. Your top posts – along with the technologies or tags you’re strongest in – show others what you’re all about. And if you’re active on multiple communities, your best stuff from those sites will show in the sidebar, too.\nThe new Activity Page: Track your impact and find new ways to contribute.\n\nNot sure what to do next? We’ve got you covered.\n“Next Badge” helps you figure out where you can contribute next. If you’re new, it suggests badges that help you learn the ropes. If you’ve been helping for years now, it suggests badges for activities you seem to have enjoyed in the past. And for most of ’em, it links right to a half-decent place to go earn them.\n\nWondering what your future holds? The “Next Privilege” bar offers a slightly more realistic goal than “catch Skeet“, tells you what powers are in your immediate future, and shows you just how close you are to earning them.\n Already have mod-like powers? Not a big fan of “other peoples advice”?\nGood for you! Don’t let the man tell you what’s up. The next badge picker lets you pick the goals you want to track, and shows you just how close you are to each of ’em.\nAnd the page adapts to serve our most generous users.  Once you’ve earned all the privileges, the “next privilege” bar automatically starts tracking your progress toward your closest tag badge (or another one of your choosing).\n70 million humans in need land here each month. How many find your posts?\n\nLong before I worked here, the thing I found most appealing about contributing to Stack Exchange sites was the idea that when I took the time to write something here, my efforts would  help more people  than they ever could buried on some forum. An answer here doesn’t just help the one original asker, or the five up-voters. The real impact comes from the sixteen thousand searchers who land here looking for help with the exact same problem.\nEvery time you take five minutes out of your lunch break, or ten that you might have spent watching creepy hands open eggs to post here instead, you’re choosing to donate some of your most most valuable asset to do some good. And holy crap, have you done a lot of it. In the past, we hadn’t given you any way to even estimate just how much, though. Today, we’ve fixed that. So if you’ve contributed even a few up-voted posts, go- take a look. I think you’ll be damn proud of what you find.",
        "url": "https://stackoverflow.blog/2015/04/15/two-new-user-pages-one-new-stat-this-on/"
    },
    {
        "title": "Please welcome jmac, Community Manager of the Rising Sun",
        "content": "As Stack Exchange continues to expand to serve new audiences, we’re constantly on the lookout for folks who can take the principles and practices we all hold dear and communicate them effectively to the folks who would otherwise find them strange and difficult. I’m happy to announce we’ve found another of these rare specimens in the form of Joshua Maciel:\n\nJosh joins us remotely from beautiful Kansai Japan, where youthful ignorance brought him for a two-year stay (maximum!) to teach English. Eleven years later he still hasn’t left, having found gainful employment doing international sales for Japanese manufacturers, along with something he refers to as a ‘social life’ in Western Japan.\nAfter living extensively in two cultures, and working in a half-dozen more, Josh decided that humans are really interesting, despite all their peccadilloes. And what better way to study these humans in their natural habitat than by participating on Stack Exchange! \nJosh first caught our attention on Meta, gaining the admiration and respect of us all by politely pointing out how incredibly wrong and delusional most of my opinions are. After a few months of respectable participation on Stack Overflow, he joined our site for questions about workplace and career-related issues and proved me wrong once again by helping the good folk there to push that site out of the beta doldrums and into graduation. He then proceeded to get himself elected as a moderator, where he continued to demonstrate the sort of dedication and tact that has been his hallmark. \nJosh can usually be found in his natural habitats: at a baseball game somewhere in the world, sitting with a book in Ubud, or finding a local watering hole to escape the Japanese summer heat. Please join me in toasting to his health as he takes on this new challenge.\n\nDo you have a unique set of skills that would benefit the growing communities here on Stack Exchange? We’re always looking for more help, and would love to hear from you – whether you’re near our NYC HQ or anywhere else in the world. You get to work with enthusiastic folks like Josh and help us guide Stack Exchange as it grows!",
        "url": "https://stackoverflow.blog/2014/07/23/please-welcome-jmac-community-manager-of-the-rising-sun/"
    },
    {
        "title": "Changes and guidelines for the Protected Question status",
        "content": "Protected status is an often-overlooked feature of Stack Exchange. It’s based loosely on Wikipedia’s semi-protection, and like that tool is meant to be a reaction to persistent abuse from anonymous or unproven participants: when a page attracts a lot of noise or vandalism from outside the community, Protecting it reduces the amount of clean-up needed later on. \nProtected questions are not answerable by folks who haven’t earned at least 10 reputation from activity on the site where the question resides. This effectively means you need to have posted an answer somewhere else that’s attracted an up-vote or a question that’s earned two.\nOriginally, this functionality was limited to moderators, but during the past several years we’ve made a few changes to encourage more productive use:\n\n\nPrivileged users can protect and unprotect any question over a day old. Previous unprotect restrictions lifted as of today.\n\n\nThe system (in the guise of the Community user) will automatically protect questions that’ve had either\n\n\n3 answers from new users deleted – this handles questions that tend to attract large amounts of spam over time.\n\n5* answers from new users scoring <= 0 posted in the past 24 hours – this handles questions that are somewhat topical, and are attracting large numbers of “participants” who aren’t actually contributing anything useful. This is also new as of today.\n\n\n\n*This value can be higher or lower on sites that have demonstrated “special” patterns of new-user interaction.\nGuidelines for Protecting questions:¶\n\n\nDo protect questions that are attracting a lot of non-answers or very poor answers (spam, etc.) from new users.\n\n\nDon’t protect questions just because they’re linked to on a high-traffic news site like Reddit or Ars Technica. While there’s certainly some correlation between sudden spikes in popularity and associated non-answers, not all popular questions suffer from this.\n\nDo unprotect questions that aren’t currently attracting a lot of attention and don’t have a long history of unproductive answers.\n\nJudicious use of this feature is critical to allowing these sites to handle large amounts of external attention, but over-using it breaks the system: Stack Exchange sites depend on a constant influx of new blood, both to answer new questions and provide updated information on old ones. When in doubt, err on the side of letting new users prove themselves before locking them out.",
        "url": "https://stackoverflow.blog/2014/04/08/changes-and-guidelines-for-the-protected-question-status/"
    },
    {
        "title": "Announcing The Launch Of Meta Stack Exchange",
        "content": "We’re very pleased to announce that as of today, we’re (finally) splitting the site formerly known as Meta Stack Overflow into two sites:\nMeta Stack Overflow is a brand-spanking new site for discussions specific to the Stack Overflow (programming) community:\n \nMeta Stack Exchange will cover feature requests, bugs, and any discussion topics that affect the entire network:\n \nMeta has always been one of the most important things that make our network… work. Almost all of our most important features, improvements, and community rules were partly or entirely based on our users telling us how we could help you help more people. Hell, even the idea of Meta itself came from the community – and we fought it hard before we realized how right you guys were. But meta has always had two key functions:\n\n\nLocal governance – communities have to decide what’s on- and off- topic, what tags to use, and how to deal with topic-specific guidelines like how sources should be cited.\n\nFederal law and product feedback – Most changes to the engine affect all sites, and some guidelines and rules (“be nice”) are the same network wide.\n\nAnd that’s why every site except Stack Overflow has always had its own meta site, so it could focus on the “local governance” issues that were specific to that community. But as the network has grown, many users have shown enthusiasm not just about the sites where they participate, but also about how the whole system should work. It’s time to give these discussions a place of their own.\nPrior to today, Meta Stack Overflow doubled as the home of both discussions about broad network changes, and discussions around the unique issues that Stack Overflow faces (often due to its enormous scale). The percent of problems Stack Overflow shares with its smaller sister sites has become exceedingly low, which has created an awkward dissonance when it comes to how folks perceive and approach challenges.\nFor example, some new sites embrace the idea of highly specific, narrowly-scoped questions that seek product recommendations, – something that is perfectly acceptable to explore on many sites but completely off-limits on Stack Overflow.\nSomeone else might be interested in strategies to better promote and grow new sites when they come out of private beta, which might apply to many network sites, but is obviously a problem that the Stack Overflow community is not facing. The scale of Stack Overflow puts an interesting twist on almost every discussion that the Stack Overflow community has; they needed a place of their own to work on their own challenges. Similarly, someone outside of the Stack Overflow community that wants to propose a new feature isn’t likely to be super interested in XML tag synonyms.\nWhen you visit Meta Stack Exchange, you’ll see that the split is still a a work in progress. We’re in the process of migrating quite a few Stack Overflow specific discussions that are still relevant and unresolved, to help to show the kind of topics that belong on the new MSO. Over time we’ll continue to migrate discussions that clearly belong on Meta Stack Overflow back over the fence.\nIf you’re interested in the nuts and bolts and mechanics of the split itself (such as how rep is going to work, moderators, etc), have a look at the initial project announcement. The plan was extremely simple, and we stuck to it.\nNow, we realize that we weren’t exactly hurting for “more challenges in figuring out where to put my post”. That’s why we’re making this really simple:\nWhen in doubt, you can always post your question on your local meta. If it’s clearly relevant to the engine or network as a whole, we’ll move it.\nYou can always find your local meta right under the main site in the site switcher in the upper left corner of the site:\n\nIf you have any input or ideas to share, just go right to your favorite site’s meta and do it there; there’s no need for you to go to Meta Stack Exchange at all.\nThat said, any time you know your question applies to the the whole network, you’re of course perfectly welcome to participate on Meta Stack Exchange directly.\nThe largest beneficiary of this split is probably the Stack Overflow community; our flagship site went without a town hall all of its own for way too long. Splitting the two opens up many more possibilities while alleviating noise for everyone.\nYoung sites don’t generally have, and may never have the sorts of challenges that Stack Overflow did. Now, there’s a place for our smaller communities to come together and figure out what works for them.\nDo you have some great ideas that could make quite a few communities even better? Take them to your site’s own little town hall, or feel free to bring them to the capital city directly. Do you have ideas that suit the scale of Stack Overflow? Well then, c’mon, get meta, as it was intended.",
        "url": "https://stackoverflow.blog/2014/04/17/announcing-the-launch-of-meta-stack-exchange/"
    },
    {
        "title": "Putting the Community back in Wiki",
        "content": "Ever seen this diagram?\n\nThat’s the visual elevator pitch for Stack Exchange. We were the little dot in the middle, a potent mix of useful traits from other tools, a wiry mutt full of hybrid vigor. The purpose of this blend was to allow and encourage the construction of a library of solutions, by providing communities with the tools they needed to share their experiences and challenges with others who might struggle with the same issues.\nThe diagram illustrated where we stole drew inspiration for the design of those tools, and their influence occasionally shows up in the results. Sometimes, a question will end up more like a wiki, other times more like a blog, other times more like a discussion. Because of these roots, we’ve never been too stuck on the purity of the idea of Q&A: over time, when communities using this software needed to deviate a bit, we’ve tried to build in features to give them what they needed to help solve more problems:\n\n\nUsers wanted to “blog” about questions where they’d already found solutions, so we introduced self-answered questions\n\nPeople occasionally found themselves needing ongoing discussion to solve a problem, so we added chat forums\n\n…And sometimes, folks realized that they needed a bunch of people to contribute meaningfully to create a post. Not just the collaborative, minor editing that occurs on most questions here; these were cases where multiple users needed to pitch in just to do a topic justice. But there were two points of friction:\n\n\nOriginally, most users couldn’t edit others’ posts, (we didn’t have suggested edits yet)\n\nIt’s hard to ask people to put a lot of effort into creating something together when the asker is going to keep all the credit and all the reputation. I don’t care about rep and attribution when I’m self-motivated to improve a post I come across, but it feels different when someone outright asks me to pitch in while intending to keep all the fake internet points for themselves!\n\nThat’s where Community Wiki came in – it killed those friction points by eliminating rep generation from those posts and lowering the bar on who could edit them. Which made it much easier for people who wanted to create collaborative, ensemble works – true community owned and edited resources.\nBut, much like dynamite, this well-intentioned invention was quickly weaponized into an instrument of destruction. Our big mistake: thinking we could systematically detect when such collaboration was happening, and automatically convert those posts to Community Wiki. It sounded awesome – “we’ll help you collaborate even more! When we see enough editors, we’ll save you the trouble of making it community wiki yourself and do it for you…”\nYeah, we are dumb.\nIn which we stop being dumb\nBy using ridiculously simplistic heuristics to detect these scenarios, we turned what should have been an act of generosity – an invitation to the community to participate in building a shared resource – into a hidden pitfall for the unwary. Too many helpers? NO ONE GETS CREDIT!!! It was a system that converted helpfulness and generosity into a slap in the face – from a robot.\n\nTherefore, we have removed all automatic Wiki conversion triggers from the software. No longer will answers with more than some arbitrary number of edits, or questions with more than a page of answers suddenly lose their owners. To handle those rare situations where unusual activity levels may indicate misuse, we’ve added some new moderator flags in these scenarios: they can respond when necessary by closing or locking the post – but when there is no fire behind the smoke, they can silently dismiss the flag without disruption.\nThe once again future of Community Wiki\nAn author can still apply the status manually when posting or when editing their own answer, and moderators retain the ability to apply it when they deem it truly necessary (for instance, a question attracting very large numbers of partial answers can be a sign of a topic that wants to be a wiki). For the most part, we’ve turned it back into something that you can choose to use in cases where it lets you work together to create something wonderful:\n\n\nCompiling a canonical reference\n\n\nConsolidating the knowledge of the community\n\nEncouraging the ongoing, active maintenance of a changing answer\n\nSometimes these are single, collaborative answers, other times questions where all contributions must be made in the form of edits. In all cases, the results are clearly that of a sum greater than the whole of its parts, a true community project.\n\n_source: Wikimedia Commons_\nCollaboration isn’t a rare thing on our network – the whole system, from posting and editing to voting to moderation, is based on the interaction of multiple users to produce a final product. Community wiki is for a special scenario, something built not by the expertise of one individual, then improved or iterated on by a few others, but rather something created by the concerted efforts of the community as a whole.",
        "url": "https://stackoverflow.blog/2014/04/22/putting-the-community-back-in-wiki/"
    },
    {
        "title": "Stack Exchange for iPhone is here!",
        "content": "Earlier this year, we announced the release of our Android application and the public feedback was fantastic. Well, it turns out we offended our designers by not doing an iPhone application too. So, after spending the last few months apologizing and bribing them (turns out designers love moleskins in pantone colors), we’re excited to announce the release of Stack Exchange for your iPhone.\n\nFeed Me, Seymour\nAt the heart of our mobile applications is The Feed which gives you a deeply personalized selection of content customized to what’s relevant to you.\nIt includes any new answers, comments, or upvotes on your posts, and even new questions we think you’d like based on your previous activity. It basically does all the hard work to make it so you always have something interesting waiting for you a tap on a blue icon away. Since it’s personalized, try not to judge me based on how nerdy the following sample is:\n\nReal time feedback\nStack Exchange for iPhone sends you instant notifications any time someone interacts with you, so when you urgently need to figure out how long cooked chicken lasts in the fridge (turns out, a couple days) you’ll get a notification the second someone answers your question.\n\nAnd you can always customize the notifications in your iPhone’s built in Settings, in case you don’t want to get a message in the middle of the night (and end up dreaming of chicken).\nLike Stack Exchange on your computer, but better.\nYou can ask, answer, comment, and vote, and there’s even a built-in Markdown keyboard. Plus, you can upload images straight from your device.\n\nThe next time you want to identify a cool font you see on a poster, you can immediately post a question with a picture of it from your iPhone.\nWhat about feature […]?\nWhile the application currently has some awesome features, it doesn’t have everything. If you find something wrong or missing, please let us know. Use your fancy new app to post a question on Meta using the ios-app tag.\nThere are already some great suggestions, and while we’re currently working on a dedicated tablet interface for both iPads and Android, the urgency of our iPhone improvements will be pretty closely related to the vote count of posts on meta.\nSpeaking of which, we’d like to give a huge thanks to the awesome people who answered our call to arms (well, thumbs) to test this application, and who provided us with great feedback (including the list of suggestions above).\nSo, what are you waiting for? Go download Stack Exchange on your iPhone now and you’ll  never have to wait until you get back home to figure out “What was that movie with the guy and that thing?” again!",
        "url": "https://stackoverflow.blog/2014/05/08/stack-exchange-for-iphone-is-here/"
    },
    {
        "title": "Editing is essential: new badges and review enhancements",
        "content": "We rolled out three new badges last week!\nThese recognize a pattern that sets Stack Exchange apart from the forums and message boards that came before it: answering and editing questions, the ability to not only write an answer that can be useful beyond the immediate asker but also re-write the question such that it can be found and understood by future readers. Thanks to this capability, brilliant explanations need not languish under titles such as “C++ problem” or “Java doubt” – having written an answer that ably fixed the problems in the asker’s code, it is possible to also fix the problems in his writing!\nIt’s no surprise then that the top editors tend to include an awful lot of the top answerers. If you’re good at writing, good enough to consistently hammer out insightful answers, you’d be a fool not to make sure the introductions to those answers – the questions being answered – were of similar quality. Yet, this seemingly-obvious technique remains unknown to many – indeed, I’ve heard some express shock at the notion that answerers would be allowed to touch the words of those whose questions they strive to interpret and address.\nWell, you are allowed. And now, encouraged!\nAs with previous sets of badges, the bronze level exists to provide a form of “just in time” learning for new users, while the silver and gold levels offer increasingly lofty goals to strive for.\nRecent changes to suggested edits\nWith the introduction of suggested edits, we sought to make the immense power of editing available to anyone reading the site. Instead of going into effect immediately, suggested edits required approval from some number of people who had already earned full editing privileges, thus ensuring some resistance to spammers, vandals and griefers as well as a path by which inexperienced editors could be guided by those with more exposure to community norms. However, several serious deficiencies in this system became apparent over the past few years, so we’ve now taken steps to correct them:\n\n\nWe’re now notifying editors of past rejections when they load the edit form.\n\nThere are some checks in place to avoid hassling folks with occasional rejections, but for a new editor whose edits are being rejected these should help them to improve before they waste too much of their time.\n\n\nReviewers are given a limited period of exclusivity for edits they’re reviewing, during which the edit won’t be assigned to anyone else for review. This should greatly reduce the frustration for conscientious reviewers, who might previously find the edit they were reviewing (or improving) already approved or rejected by the time they submitted their review.\n\n\nReviewers who wish to perform edits themselves have the option of either approving and editing on top of the suggestion, or rejecting and replacing it with a different edit.\n\nThis replaces both the previous “Improve” option, and the “too minor” rejection reason, allowing edits that make small changes while overlooking large flaws to be quickly discarded, while ensuring that truly helpful edits – even small ones – are more consistently approved. Combined with change #2, this gives a great deal more power to reviewers who are comfortable editing – and who better to review edits than editors?\n\nFinally, we’ve revamped the rest of the predefined suggested edit rejection reasons, improving their context-sensitivity and focusing more specifically on common mistakes and outright abuse.\n\n\nTogether, these changes should offer better guidance to both editors and reviewers, helping both work together effectively.\n\nBig thanks to everyone who chimed in on the meta discussions linked above, as well as those who’ve repeatedly reported these problems over the past few years. Gratitude is also due to the developers who patiently worked to implement these changes, Geoff Dalgas (badges, review changes) and Kevin Montrose (edit rejection feedback). And of course, huge thanks to everyone who uses this tooling in spite of the occasional rough edges.\nThese changes are part of a project intended to help improve the quality of Q&A on Stack Exchange. Stay tuned for even bigger, better changes in the coming months!",
        "url": "https://stackoverflow.blog/2014/10/07/new-editing-badges-and-enhancements-to-suggested-edits/"
    },
    {
        "title": "Stack Exchange for the iPad is here – and iOS apps now support iOS 8",
        "content": "When we launched our iOS and Android apps, we were pretty sure they’d help our most active users in a couple of ways:\n\n\nPush inbox notifications are epic – you can know the minute you get an answer or someone comments on your post.\n\n\nThe personalized mobile feed lets you browse all content relevant to you, whether it’s posts from your communities or replies to your posts.\n\nVoting, commenting, and minor edits are all things you often want to do when you’re away from your desktop, and an interface built for touch makes them a breeze.\n\nThose were a huge success; a ton of our most active users loved them. Here’s what we didn’t expect:\nA lot of people are posting from the app.\n\n\nOver twenty-five thousand posts have been made from the app…\n\n\n…More than 69% of them are answers!\n\nThe average quality of the posts is significantly higher than the overall average.1\n\nThose on-screen buttons may not have the same satisfying click your Cherry MXs do, but despite your freakishly large thumbs, an amazing number of you are helping others from the bus. Or in line at the DMV. Or at other times that you’re… just not at your computer. (They tell me I can’t make a “or while in the bathroom” joke here. Because of course that would be a joke, right?) That’s not just a reflection of how dedicated our users are to sharing their knowledge; it’s also awesome for my personal job security, so thanks!\n(Phil Schiller with actual-size prototypes.)\nBigger is Better\nSo that’s all great. But we still had a problem. Sure, the iPhone 6+ is big – but even the new iPhone 6+ probably can’t show you all the upvotes you’ve earned today from all the knowledge you’ve dropped lately.\nSo, what are you supposed to do? Scroll? Like an animal?!?\nWe thought not. So, we’re ecstatic to announce Stack Exchange for iPad, built from the ground up for the ideal tablet experience.2\nGo download it now! What if we raised the price to $0.99 next week? Think about how long you’d agonize over paying nearly a dollar for this wonderful app. We really don’t want that stress for you, so go get it now. (Okay, we’re probably not going to charge for it. But why risk it? Isn’t life stressful enough?)\nThe Feed: Bigger than Ever\nThanks to the bigger screen real estate, we were able to let the feed display way more of your recent notifications, achievements, and recommended questions. If you haven’t downloaded it yet, there’s a screenshot at the top of this post – just look at all that information!\nThere’s also a dedicated, swipe-browsable hot questions section at the top. Did you ever wish you could swipe new things onto your screen, without the sense of guilt that comes from swiping a human out of your life based entirely on their looks? Have you ever wanted to know if a society could evolve without wood, or if submarines technically “float”? Your day has come.\n\nEditor and Preview Just Might be Better than on the Web\nWe can’t overstate how happy we’ve been to see people writing actual, great posts on the go. This new update makes that even easier, with touch-optimized Markdown tools in the composer, and a live preview that’s right next to the compose window, so you can see your beautiful formatting as you type (without scrolling!)\n\nThis is just the start. Given how much you’re posting using the applications, we’re going to be focusing a lot on making the entire process nicer.\nWhen we started out, we thought the iPad standard browser experience was pretty solid, and we decided we weren’t going to build an iPad app unless we thought it actually improved that experience. Between the touch optimized browsing and interface elements, side-by-side composing, and a much more integrated experience going from one site to the next, we’re convinced it does just that – we’ve been testing it a lot internally for the last few months and I can’t live without it; hopefully you’ll feel the same.\nSo, if you’ve got an iPad, get to the store and download it now. (No worries, it’s still free. For now…)  If you’re an iPhone user, the new update also includes lots of quality of life changes for you too (including full iOS 8 support), so upgrade or install it today! \n\nNot an iOS user?\n\n\nIf you’re an Android tablet user, don’t worry, we’re working on things to make you happy too.\n\nIf you’re a Windows Phone pioneer, check out this meta discussion.\nIf you’re anxiously waiting for a Symbian or WebOS version, please submit your request via betamax video, ideally delivered by a human being riding on a horse, don’t forget to have another person following to clean up after the horse.\n\nFeedback\nThese apps couldn’t have happened without our incredible beta testers from the community, and we’re counting on you to tell us how to make it even better! Please post any feature requests you have on Meta – and if you find a bug, please report that too.\n\n1 To be fair, there’s probably a lot of selection bias there – the app users are likely our most active, experienced users, but the point is this: the posts from the app are good.\n2 Technically, it’s iOS 1.2.0, a universal app available now for iPhone and iPad.",
        "url": "https://stackoverflow.blog/2014/11/03/stack-exchange-for-the-ipad-is-here-and-ios-apps-now-support-ios-8/"
    },
    {
        "title": "Announcing Bosun, our new open source monitoring & alerting system",
        "content": "If trees could scream, would we be so cavalier about cutting them down?\nWe might, if they screamed all the time, for no good reason.\n\nDeep Thoughts, by Jack Handey\n\n\nA big part of scaling up an engineering team is getting serious about monitoring and alerts. A good monitoring system collects data from all of your various systems — for example, how fast pages are loading, or server CPU usage, or emails being sent — and alerts you when something isn’t working correctly. When everything works perfectly you can sleep easy at night knowing that you’ll get an alert if something isn’t working correctly.\nThat’s the theory, anyway. About a year ago we realized that our monitoring system needed some serious upgrading. Instead of proactively alerting us before something broke, it mostly alerted us that something was already down. When we did get an alert it wasn’t obvious what exactly was breaking or who needed to fix it. If you’re a developer or sysadmin this email inbox probably looks a bit familiar:\n\nSo we set out to fix it. We weren’t happy with any of the tools available so we decided to build our own. Since we are big fans of giving back to the community, we decided to make it open source as well.\nThe new system is called Bosun (because naming is hard) and was developed by our own Kyle Brandt and Matt Jibson. It’s still very much in development but we’ve been using it internally for a few months and are really happy with the results. We can measure much more intelligently and build complex alerts based on those metrics. Some of the things it makes easy are:\n\nPush data into Bosun from anywhere via a simple JSON api, or use scollector to collect common metrics from lots of different systems\nTest alerts against older data and see when they would have gone off\nReduce email clutter with scope-aware alerts, so when e.g. redis goes down we get one email, not twelve (one for each instance)\nForecast and alert against future data, like when we’re about to run out of disk space\n\nIf you’re interested, read the full announcement (with a lot more detail) on the Server Fault blog or go straight to bosun.org to check it out. There’s a link on the Getting Started page to a Docker image that populates itself with some data for you to experiment with. And if you happen to be at LISA this week you can check out Kyle Brandt’s talk on Thursday.\nAs with any open source project, we’re looking for a few brave souls to join us. You can grab the source on GitHub and start submitting issues and pull requests today.\nDo you love solving engineering problems? Good sysadmins are always in demand. Find new opportunities in our system administrators job listings.",
        "url": "https://stackoverflow.blog/2014/11/11/announcing-bosun-our-new-open-source-monitoring-alerting-system/"
    },
    {
        "title": "Winter Bash 2014",
        "content": "There is no better antidote, at least for the worst hours and eclipses of the soul, than to conjure up…serious frivolity.\n\nFriedrich Nietzsche\n\n\n\nWhat’s Winter Bash again?\nNo, it’s not a new flavor of Unix shell. Rather, Winter Bash is an ancient tradition of Stack Exchange. (2011 is ancient according to Internet time.) Here’s how it works:\n\nStarting right now, when you complete one of 30-odd challenges while logged on a participating site, you will be awarded the associated hat. To notify you, an icon will light up on the top bar. In addition, admire your hat collection on the Winter Bash 2014 site. Finally, your profile includes the number of unique snowflakes hats () you’ve earned all around the network.\nOnce you acquire an item, click your avatar to pick a hat that you earned–not just on the current site, but anywhere. When you are satisfied the hat’s position, click “Wear hat” and it will be visible everywhere your avatar is displayed. Optionally, you may have a different look on each site. Once you are wearing a hat, you’ll also see an option to go unadorned. (But really, why would you want that?)\n\n\n\nOn January 4, 2015 at 23:59:59 UTC, all hats will be returned to the Stack Exchange vault. The best way to preserve holiday memories is to take plenty of pictures before they are gone.\n\nAgain with the hats? What happened to “We hate fun”?\nIn the face of the darkening days of winter, we put aside our steely, businesslike frowns to wear virtual cosmetic items. It’s our solemn duty to cut out the nonsense leaving pure, unadulterated knowledge as permanent artifacts helpful to future visitors. And that task is no laughing matter.\nYet, to quote G. K. Chesterton:\nAbout what other subjects can one make jokes except serious subjects?\nThe truth is, we don’t really hate fun. Contributing to a volunteer effort should be an enjoyable experience. Heck, fake internet points are integral to how these sites operate. Winter Bash reminds us that there’s more to life than nose-to-the-grindstone work and quality content. We don’t stop having fun when the event ends. We go back to having fun with a larger purpose.\nIs everything going to be the same as last year?\nManagement gave us a clear mandate when it came to building new features into Winter Bash:\nWe were not allowed to spend weeks on snow animation.\nThankfully, we could reuse last year’s start-of-the-art snowfall algorithm for the official Winter Bash 2014 homepage. There you can discover a nearly* complete list of hats and how you can earn them. The activities this year are mostly fresh and (hopefully) all fun. If you could go ahead and answer 5 questions on Saturday, that’d be great. Mmmkay?\nOnce again, we are delighted with the work of freelance illustrator, Elias Stein. It’s difficult to express how satisfying it feels to think up a concept (Tam o’ Shanter!) and have it manifest a few days later:\n\nIn the past, some people have had trouble getting hats to fit properly. Last year, we added the ability to reposition hats, but that did little to satisfy folks with especially large or disembodied heads. So, this year hats can be resized and twisted to fit your head. (Thanks, balpha!)\n\nIf you have any questions about the event, try the Frequently Asked Questions. If your question isn’t covered there, please ask it on Meta Stack Exchange, our Q&A; site about our network of Q&A; sites.\nBefore signing off, I apologize to our Southern Hemisphere friends for the name. I wanted to go with something season-neutral like HAT ATTACK or December Fling, but tradition ruled the day. Just remember: while you are sipping refreshing drinks and enjoying the sunshine, it’s cold, wet, and dark up here.\nAct now and get an exclusive hat only available today!\n\n*\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2014/12/15/winter-bash-2014/"
    },
    {
        "title": "Stack Overflowへようこそ",
        "content": "Hi English-language readers! This blog post is not for you; perhaps you’d like a hat instead? No? Well, when last we spoke of creating non-English versions of Stack Overflow, some of you were certain we should’ve gone the easy route and just leveraged a machine translation service instead of creating real sites for real people to use. I humbly invite you to read the rest of this post using the mechanical babelfish of your choice, and see if you think such tools can be relied on for important work…\n2008年にStack Overflowが設立された目的は、プログラミングに関する質問の全ての回答をまとめあげ、それらを提供する場を作る事でした。Stack Overflowの誕生以前は、プログラマー自身が自身の貴重な時間を使い、複数のブログ、掲示板やニュースグループで回答を検索した上で、その回答が有効か否かを自分自身でチェックするしかありませんでした。\n現在、Stack Overflowは700万個以上の質問をまとめている事で、毎月4,400万人のプログラマーをサポートしています。そしてそのうち60万人以上もの人が日本からアクセスしています。Stack Overflowは英語のサイトにも関わらず、日本のプラグラマーのプログラミング問題を解決する為の必要なツールになってきました。\nStack Overflow日本語版へようこそ\n\n日本には100万人以上のプログラマーがいます。\nStack Overflow日本語版の誕生により今後は、英語と格闘しながらプログラミング問題を解決する必要が無くなります。\n2014年12月2日にStack Overflow日本語版のプライベートベータを開始し、1週間で1000人以上のユーザーと100個以上の質問が集まりました。そして今、日本の全てのプログラマーに開放する運びとなりました。Stack Overflow英語版と同じ様に皆様と一緒に日本語でのリソースを作成しましょう。\n日本のプログラマーを応援しましょう\nこれからは日本語でのプログラミングに関する質問や回答の投稿が可能となります。今日から投稿して頂く質問は将来の日本人プログラマーのサポートとなります。日本のプログラミング能力を集結し皆様の知識のレベルアップを図れるチャンスです！\nStack Overflowは皆様のサイトです\nStack Overflowはコミュニティのものです。参加者は投票する事で最も有効な質問や回答を示す事が出来、権限において投稿の編集や管理を行う事も出来ます。そして、コミュニティ内で当サイトの改善案を自由にメタで討議する事ができます。コミュニティは既にリスト質問やリンクのみの回答をどうするべきか討議を開始しています。\n当サイトは日本語のプログラミング問題・回答のベストリソースを目指しています。皆様と一緒に作り上げましょう！",
        "url": "https://stackoverflow.blog/2014/12/16/stack-overflow-in-japanese/"
    },
    {
        "title": "Stack Exchange Creative Commons data now hosted by the Internet Archive",
        "content": "We’ve been publishing an anonymized dump of all user-contributed Stack Exchange content since 2009. Unfortunately, at the end of last year our former host, ClearBits, permanently shut down. So we set out to look for a new home for our data dumps, and today we’re happy to announce that the Internet Archive has agreed to host them:\nThe Stack Exchange Data Dump at the Internet Archive\nWe’ve been big fans of the Internet Archive for a long time, and we’re really happy to be working with them on this.\nWait, what’s this data dump?\nAll community-contributed content on Stack Exchange is licensed under the Creative Commons BY-SA 3.0 license. As part of our commitment to that, we release a quarterly dump of all user-contributed data (after carefully sanitizing it to protect user private data, of course).\nEach site can be downloaded individually, and includes an archive with Posts, Users, Votes, Comments, Badges, PostHistory, and PostLinks (new). You’re free (and encouraged!) to share, remix, analyze and build on top of this data any way you want, as long as you follow the attribution requirements.\nWhat are the attribution requirements?\nIn keeping with the spirit of sharing and proper attribution, and as the “attribution” part of the CC BY-SA license, we require that you do the following when you use the data:\n\nVisually indicate that the content is from the Stack Exchange network\nLink back to the original source question or answer\nDisplay the author names for each question and answer you show\nLink back to the author’s user page\n\nThose links should be ordinary hyperlinks directly to the Stack Exchange site, without “nofollow” or any obfuscation or redirection tricks plainly visible on the page (we’re looking at you, content farms).\nI’m too lazy to download this giant zip file. Can’t I just play with it online?\nYou’re in luck! We also make the data available through the Stack Exchange Data Explorer (an open-source project maintained by community member Tim Stone) which lets you run SQL queries directly against a copy of the data. It’s updated weekly, and includes some data that’s not in the data dumps in order to keep the size of the downloads reasonable.\nIf you want to access the data programmatically, we also have a pretty expansive JSON API that returns similar data to the dumps (but updated in real time with the websites). If you need help, we have a whole site for people developing apps on top of the API.\nSo take our data for a spin! We love seeing what people create with it, from apps to research papers or even machine learning contests. Making this data easily accessible is just our way of giving back to the community that has made Stack Exchange so successful.\nAre you considering turning your data dives into a new career? Discover the opportunities in our data scientist job postings.",
        "url": "https://stackoverflow.blog/2014/01/23/stack-exchange-cc-data-now-hosted-by-the-internet-archive/"
    },
    {
        "title": "Stack Exchange Gives Back 2013",
        "content": "This is a time of year of traditions and celebrations — and we have a tradition at Stack Exchange where we set this time aside each year to give back to the groups and organizations that need our help. Each year, we reach out to our moderators and offer to make a $100 donation to charity on behalf of each moderator for their Stack Exchange community. It’s just a small gesture of thanks for the tremendous amount of work every community has contributed to make this entire thing possible.\nThis “giving back” program actually goes waaay back to the beginning when we started with only 18 moderators and three sites. As our ranks grew, so did the donations. So on behalf of the 375 moderators this year, we have made the following donations to charity:\n\nIt is also important to remember and support the tools and organizations that make what we do possible, so we also made the following donations:\n\n\nHAProxy — $1,000.00\n\n\njQuery Foundation — $1,000.00\n\n\nLinux Foundation — $1,000.00\n\nOpenSTV, the voting engine that drives our elections — $1,000.00\n\nIn addition, we continue to be a MathJax Partner with a donation of $20,000 in our commitment to helping math and science communities on the web.\nAs we approach 2014, I think a lot about what we have built here together. I think about the fact that this is all made possible by people who DONATE their time and GIVE freely their knowledge to benefit future readers who come here seeking help. It’s your contributions here that make all this possible. It’s what keeps the lights on and the wheels turning… and what makes this small gesture of giving back possible.\nI take a lot of pride in what we do — and you should, too. This giving back program is just one of the many things we as a community do that is easy to feel pretty good about. It makes me delighted to be a part of this organization and part of a community that works so hard to help people they will probably never meet.\nTake care, and see you in 2014!",
        "url": "https://stackoverflow.blog/2013/12/23/stack-exchange-gives-back-2013-2/"
    },
    {
        "title": "Winter Bash 2013 Wrap-Up",
        "content": "Another holiday season has drawn to a close. We’ve had three glorious weeks with our beloved hats. Now as we pack away the tinsel and the party horns, it’s time to put the hats back in their boxes for another year. Before we move on to 2014 with our bare heads (and our full hearts), let’s take a few moments to reminisce.\n\n76,586 users from all over the network earned 214,172 hats this year – that’s just about twice the number of hats they earned last year. 95 sites opted to participate in Winter Bash, which is more than the total number of sites that simply existed during last year’s event.\nThe most commonly earned hat was the Old Hat, earned 74,631 times (by 35,589 distinct users). The least commonly earned public hat was Oh the Horror, earned just 46 times. And the rarest hat of all was the top-secret Don Draper, earned only 14 times across the whole network.\n\nSomething new we did this year was keeping the secret hats’ triggers… well, secret. Since the community asked so nicely, it’s now time to reveal the mysteries of the secret hats! In ascending order of rarity:\n\nChuck Yeager was the most commonly earned secret hat, awarded first to Óscar López – the very first user to discover a secret hat. This hat was awarded to users who answered a question within an hour of it being posted, with their answer scoring 2 or more.\nWith Great Power was awarded to moderators (elected or pro tem), former moderators, and Stack Exchange employees.\nThose who earned three hats in a single day earned Johnny Three-hats for their trouble.\nThe Ghost of Winter Bash Past appeared only to those who earned a Necromancer badge.\nIG-88 was a less well-known bounty hunter, and the hat that bears his name went to users who tried for a bounty, but didn’t win it.\nI’m Not Listening was awarded to users who rejected a suggested edit on their own post.\nFor I See Your Point, users had to leave 5 comments on a site meta, each comment scoring 2 or more.\nBefore It Was Cool was awarded to forward-thinking users who asked a question with a brand new tag (that was not deleted or removed).\nEureka! was awarded manually by SE staff to users who correctly determined (or guessed) the trigger for any of the secret hats.\nDon Draper, in homage to everyone’s favorite smooth-talking ad man, went to users who posted a community ad that received enough upvotes to be displayed on the site (usually 6).\n\nAnd finally, we need to send a special shout-out to the top hat earner across the entire Stack Exchange network. This user earned a whopping 44 hats – all of the hats they were eligible for, missing only With Great Power due to not being a moderator. Please join me in giving the eminent Logan M a hearty round of applause!\n\nHonorable mention is due to Manishearth, who held the network-wide lead for almost the entire duration of Winter Bash and was only edged out in the final hours by Logan M’s 44th hat. Well done to you both!\nLastly, we send our gratitude to each and every one of our users for the tireless and high-quality work you do throughout the year, even when there aren’t any hats to earn. Winter Bash is our chance to kick off our shoes and have some fun during the holiday season, and we hope you enjoyed it! The whole Stack Exchange team wishes everyone a happy and healthy 2014. That’s all, folks!\n\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2014/01/03/winter-bash-2013-wrap-up/"
    },
    {
        "title": "Stack Exchange API V2.2 – and the demise of V1.x",
        "content": "There’s been a lot of excitement lately here at Stack Exchange, what with the launch of our Android app and the start of our iOS app alpha. A few sharp-eyed users noticed, hidden deep within each app, a new version of the Stack Exchange API. After a few more weeks of testing I’m happy to say that V2.2 is now frozen, documented, and released.\nWhat’s new in this release?\n\nCreating questions and answers\nVoting\nEditing, Deleting, and Flagging\nImproved OAuth UI on mobile devices\n…and lots more\n\nAlmost everything done by our own apps is using our public API, but there are a few notable exceptions:\n\nWe don’t think the Feed is polished enough for inclusion yet\nUser creation is too sensitive to guarantee stability\nLogin methods that don’t use OAuth can’t be made public for security reasons\n\nWith the third release of the API V2.x family, we’ve decided to retire the V1.x family at long last. Version 1.0 of the Stack Exchange API was released in 2010, with its last update (V1.1) almost exactly three years ago, and its ultimate deprecation in 2012. Active consumers were notified of its imminent demise earlier this year, but this is the public announcement:\nV1.0 and V1.1 of the Stack Exchange API will be shut down May 12th\nI encourage anyone still using the V1.x family to use the coming months to migrate to V2.2. It’s much improved.\nIf you love the mobile trend, you can check out our listings for mobile developer jobs here.",
        "url": "https://stackoverflow.blog/2014/02/10/stack-exchange-api-v2-2-and-the-demise-of-v1-x/"
    },
    {
        "title": "Podcast #56 – Green or Red Curae",
        "content": "Welcome to the Stack Exchange Podcast #56 recorded on Thursday, March 6th 2014, aka the 4th of Adar II 5774, aka the second day of Lent. Today’s podcast is sponsored by Patent Trolls of America. Today’s guest is Micah Siegel, Senior Patent Advisor at Stack Exchange and Professor Emeritus at Stanford.\nBut first, Community Milestones!\n\n\nWe’ve already talked at length about The Workplace, but it should be noted that the Workplace community has just graduated. They are now a fully-fledged site, so go check out their design!\n\n\nArduino is our newest public beta site. (An Arduino is a tiny little computer board thing, according to Jay.) We’ve tried it in the past and didn’t have enough activity, but this iteration is looking much stronger and we’re excited to see where it will go. Also, March 29th is Arduino Day.\n\nAt long, long last, Personal Finance & Money has graduated. We love money! Longtime beleaguered designer Jin finally has assistance on his design team, so we are working through the backlog of graduated site designs.\n\nTo commemorate Money’s graduation, we’ve made it Community of the Week. Here are some of the cool questions we discussed:\n\n\nBest way to start investing for a young person just starting their career?\n\n\nIn a competitive market, why is movie theater popcorn expensive?\n\nWhy does gold have value?\n\nThis site grew out of an SE 1.0 site on the same topic, and it’s therefore one of our oldest sites. Check it out!\nNext up, we have New Features. Or, we don’t, because we haven’t done anything, and David is demoted. Just kidding: we do!\n\n\nWe added the ability to customize your list of communities in the top bar switcher.\n\n\nWe made some tweaks to the close vote review queue on Stack Overflow in an attempt to get it down from approximately nine billion flags. You can also sort by tag (or type of close vote), which you could always do, but now it’s much more visible. Here’s how it works.\n\nWork is ongoing on our mobile apps, as always. Reminder: you can download our Android app or sign up to alpha test our iOS app.\n\nOkay! Let’s talk patents! (Jay loves them, but David says they’re the worst.) It’s been a year since we started the Ask Patents project. Joel walks us through why we got into this area in the first place, and we fixed the problem. Done. Solved! (Kinda.) It’s confusing, because code is both copyrightable and patentable. About 7% of the patent applications submitted to the USPTO are what we call problematic. We decided to pick out the ones we are most concerned about and post them on the site for our communities to peruse and choose prior art. Micah talks through how we chose the patent applications to post, and how it’s been going. (Fun fact: we are the first entity to get a YouTube video accepted as prior art!)\n\nBy the way, here’s the Planet Money podcast Joel was talking about.\n\nWe came up with a hack about six months ago to help us make this process scale. Instead of filling out the janky confusing form, we simply started emailing the relevant Ask Patents link directly to the patent examiner. Magic!\nSo is it working? We’ve proven as far as we can tell that if we target a bad application and put enough eyes from Stack Overflow on it, we’ll get good prior art. We know how all of the numbers break down: exactly how many people on Stack Overflow have to see the bad software patent in order for us to get enough prior art that enough of it will be good enough prior art to trigger an email to the patent examiner.\nWhat can people do right now if they want to make a difference? Go find some prior art requests and post prior art to help us destroy some patents. (Also, you can follow Ask Patents on Twitter.)\nMicah is consulting for a few other companies on patent issues, so you can contact him if your company wants to pick his brain. He knows a lot about the current Supreme Court case that might outlaw software patents altogether (but not for a long time).\nThanks for listening to Stack Exchange Podcast #56, sponsored by the Patent Trolls of America. See you next time!",
        "url": "https://stackoverflow.blog/2014/03/17/podcast-56-green-or-red-curae/"
    },
    {
        "title": "Podcast #55 – Don”t Call It A Comeback",
        "content": "Welcome to Stack Exchange Podcast #55, recorded on Friday Thursday the 13th with your hosts Joel Spolsky, David Fullerton, and Jay Hanlon! Today’s episode is brought to you by the city of Sochi, Russia.\n\n\nIt’s been a long time since we last recorded, so we have a lot to talk about, and we’re going to skip most of it. First we’re going to talk about all our brand new sites, so Joel learn about them for the first time.\n\n\nPets is a site for (you guessed it) pet owners to wonder why their cats like to watch them making the bed. Also, we already talked about this site. Moving on!\n\n\nWe also launched Italian, which is very high quality but unfortunately very slow so far.\n\n\nJay thought Ebooks would be awful, but it has turned out to be extremely high quality and high engagement.\n\n\nHooray, beer! Our new Beer site is somehow different from Homebrew, so Joel quits.\n\n\nWe launched a Relationships & Dating site, but we broke up with it pretty quickly because it generated too many bad “commitment” jokes (and because the topic was a hard fit for our engine).\n\n\nWe launched a site for software recommendations. And discussed it at length. The good parts version: it’s going much better than expected.\n\nWe almost forgot to talk about Aviation! It launched a while back, and it is a slam dunk for our engine.\n\n\n\nIt’s time for our Site of the Week! (This week was apparently four months long.) Let’s talk about Code Golf. It’s a site for code golf (unsurprisingly!). Links discussed:\n\n\nWe’re no strangers to code golf\n\n\nDraw the Olympics logo\n\nThe Commodore 128 is a thing (though sort of irrelevant to Code Golf).\n\n\n\nWe already talked at length about the new topbar, but it has bred some interesting changes to other areas of our pages. For example: when we moved Hot Questions out of the MultiCollider and into the sidebar, Code Golf started getting huge boosts on their most interesting questions (as did other sites with broadly interesting topics). Code Golf is seeing 11-15% more answers due to the traffic coming in from other sites via the Hot Questions sidebar. Neat!\n\n\nSo! Let’s talk about our most exciting new site: Stack Overflow em Português. Localizing our codebase was a dream of ours for a long time, and we finally did it. It’s got 1304 perguntas at the time of recording this podcast. (If you want to know more about why we launched a non-English site, check out Jay’s blog post.) The public beta so far is one of our most successful launches ever.\n\nAlso, you can go download our Android app or sign up to test our iOS app.\n\nThanks for joining us for Stack Exchange Podcast #55, sponsored by the city of Sochi, Russia – don’t forget to visit the Friendship Tree. See you next time!",
        "url": "https://stackoverflow.blog/2014/02/24/podcast-55-dont-call-it-a-comeback/"
    },
    {
        "title": "Stack Exchange for Android is here!",
        "content": "This mobile thing will never last, right? We figured if we waited long enough, this whole “mobile application” thing would blow over and everything would go back to the way it used to be. You know, when phones were for calling people, and computers were for typing long, angry rants about how things aren’t the way they used to be.\n\nIn retrospect, we may have misread that one a bit. It turns out that even for Stack Exchange mobile is eating the world.\n\nSo today we’re excited to announce that Stack Exchange for Android is finally available for download on the Google Play store, for Android phones version 4.0 (ICS) and up:\n\n\nWhat? You’re an iPhone user? Don’t worry, the iPhone alpha is coming soon, probably in the next six to eight weeks. In fact, you can sign up for the iPhone alpha starting today . We’ll be inviting people in waves on a first-come, first-served basis over the next few weeks. Meanwhile, keep reading to find out what’s new in the app.\nOne Feed to rule them all\nTranslating Stack Exchange to mobile was… tricky. We have over 110 communities in the Stack Exchange network. On the web they exist as mostly separate sites. We’re pretty new to mobile development, but we felt that releasing 110 mobile apps was probably not the right approach.\nThat meant we had to create an entirely new experience, one that didn’t exist on the web. A single, central location where you can check in on everything relevant to you across the network, whether you participate on one site or many. We dubbed it (not terribly creatively) “The Feed”. Here’s what it looks like:\n\nThis is a completely new feature for Stack Exchange. It includes:\n\nCustomized recommendations of questions you can answer, based on the sites and tags you participate in\nInteresting questions tailored to your interests that will learn from your activity and get better over time\nUpdates when you get upvoted or your answers get accepted, so you can feel good about helping others wherever you are\nAll your replies (answers, comments, chat messages, etc.) in one easy timeline\nCommunity events, blog posts, and even recommended jobs for you from Careers\n\nThe Feed scales to your activity: if you’re only participate on one site, it’ll show you mostly questions from that site. If you participate on many, you’ll see all your updates in one convenient place.\nNotifications\nWe’ve had instant notifications of replies on the site for a while, but now you can take them with you wherever you go. You’ll get notified anytime you would get an inbox message on Stack Exchange, which includes answers, comments, chat replies, and more.\n\nDon’t want those notifications? You can easily turn them on and off via settings, including whether they make noise or vibrate. You can even set quiet hours so you don’t get woken in the middle of the night.\nSearch, Ask, Answer, Comment, and Vote\nAnd, of course, all the major things you can do on Stack Exchange are fully supported on the app: you can search for questions, ask or answer new questions, leave comments, vote, and even flag or vote to close.\n\nIf you want, you can configure your phone to automatically open the app when clicking URLs on websites to make getting into the app even easier.\nWhy Android first? What about iPhone?\nWe set out to create a fully native experience for each platform. That meant designing the app twice, once for each platform, to make sure it felt right to users of each. We started with Android mostly because we’re new to mobile, and the Google Play Store process is more forgiving if we make mistakes!\nIf you’re an iPhone user, sign up for the iPhone alpha today! We’ll start inviting alpha testers soon, and hope to launch the iPhone app in a few short months.\nWhat about tablet / chat / missing feature X?\nThis is just the first version, and we plan to keep working on both of the apps in parallel. A tablet optimized version of the app is next, and then we’ll start adding in missing features based on what you tell us we’re missing. So if there’s something you’d like to see in the app, let us know on Meta under the ‘android-app’ tag.\nLet us know how we’re doing\nThis is still a work in progress! Take the app for a spin and let us know what you think on meta. We’ll be working hard to keep improving it over the coming weeks and months. So download it today!\n\n\nAre you looking to get onboard the Android wave? Check out the Android developer openings on Stack Overflow Jobs.",
        "url": "https://stackoverflow.blog/2014/01/27/stack-exchange-for-android-is-here/"
    },
    {
        "title": "Olá, Mundo! Announcing Stack Overflow in Portuguese.",
        "content": "If you can’t read the rest of this post, it’s because I’m not talking to you.  Which is a little weird, since I can’t even read this without help from our Brazilian Community Manager, Gabe, who’s been kind enough to help me write this in Portuguese.\n\nDepois de semanas em beta privado, nós temos o prazer de anunciar que hoje vai ao ar o nosso primeiro Stack Overflow internacional. E não se trata de um clone em português do site original, mas sim de uma comunidade completamente nova. Uma comunidade que vai poder decidir como ela quer ser, e como vai poder ajudar os desenvolvedores de língua portuguesa.\nTá esperando o que pra criar sua conta?\nSempre quisemos ajudar o máximo possível de pessoas\nQuando lançamos o StackOverflow.com (em inglês), a ideia era ter um lugar onde todos os programadores pudessem resolver problemas juntos.\nQueríamos um lugar onde desenvolvedores pudessem compartilhar seu conhecimento, num formato melhor do que os fóruns tradicionais. Queríamos que a melhor resposta tivesse destaque e que fosse fácil encontrá-la, tanto para quem perguntou quanto para alguém que pesquisasse sobre o mesmo assunto no futuro.\nConstruímos um lugar onde a comunidade pode editar e melhorar os posts, votar na melhor solução e trabalhar em conjunto para chegar na melhor resposta. Nosso objetivo era dar à toda comunidade as ferramentas certas e o poder de colaborar e ajudar uns aos outros.\nE deu certo.\nO Stack Overflow em Inglês tem hoje mais de 6,5 milhões de perguntas, e mais 8 mil delas são criadas todos os dias. Praticamente todas recebem uma resposta correta, que vem logo abaixo da pergunta.\nE é a comunidade quem faz tudo isso acontecer. O conteúdo, a edição e até a moderação é feita pelos próprios usuários. Gratuitamente. Porque eles querem ajudar uns aos outros. Ou mostrar uma solução elegante. Ou retribuir a ajuda que receberam.\nMas é preciso saber falar inglês.\nNós não achávamos que o site em uma só língua seria um problema, afinal a maior parte dos programadores fala inglês, né? As próprias linguagens de programação são em inglês, não é mesmo? Mas nos esquecemos de algo muito importante:\n\n  Não estávamos escrevendo um manual técnico. Estávamos construindo uma comunidade.\n\nDemorou um tempo, mas nós finalmente percebemos o que muitos de vocês já sabiam. É muito difícil fazer parte de uma comunidade que, literalmente, não fala sua língua.\nHoje o dia é dos programadores de língua portuguesa!\nAgora vocês tem um lugar só seu, para construir do seu jeito. A melhor parte de participar de um site novo é que há um mundo de possibilidades pela frente:\nSe você é jovem ainda, amanhã velho será… Então aproveite!\nAs perguntas básicas – aquelas que um dia atormentaram todo programador – ainda não foram feitas. Você pode escrever a pergunta ou resposta definitiva, que vai ajudar dezenas de milhares de programadores no futuro. (Ah, e não se preocupe se a sua pergunta já está no site em inglês. Vocês vão construir um site justamente para que os desenvolvedores que falam português não precisem mais recorrer ao inglês para aprender coisas novas!)\nVocê pode ser o que quiser quando crescer.\nApesar do site ser dedicado à problemas de programação, você pode decidir que sua comunidade realmente precisa, assim como aconteceu com o Stack Overflow. Durante o começo do site, sejam mais liberais quanto a perguntas de recomendação de ferramentas ou bibliotecas, perguntas relevantes à administração de sistemas ou outras áreas de TI.\n\n  Por enquanto, se tem a ver com programação, pergunte à vontade.\n\nPor que começar com português?\n[Nota do tradutor: Porque português é a melhor língua, o Brasil é o melhor país e o Jay não consegue ler o que a gente escreve ;)]\nQueríamos começar com uma comunidade que atendesse a dois requisitos:\n\n\nUm grande número de desenvolvedores talentosos, em que\n\nGrande parte deles se sentisse muito mais confortável em falar sua própria língua do que o inglês\n\n\nEntão a escolha foi muito simples. O Brasil conta com uma das maiores e mais fortes comunidades de programação do mundo, e isso sem contar Portugal, Moçambique, Angola e outros países menores que acrescentam ainda mais desenvolvedores talentos a esse grupo.\nEsse site é de todos vocês. Vamos construí-lo juntos!\nCrie sua conta. Ou faça o tour (e ganhe sua primeira medalha!)",
        "url": "https://stackoverflow.blog/2014/01/29/ola-mundo-announcing-stack-overflow-in-portuguese/"
    },
    {
        "title": "2014 Stack Overflow User Survey Results",
        "content": "In 2013, our Stack Overflow community grew from 21.5 million to 26.9 million monthly visitors from 242 countries around the world. We’re doing a lot to keep growing with the community — we now have localized versions of Careers 2.0 for French and German audiences, we’re developing iOS and Android mobile apps for our entire network, and our first ever localized version of Stack Overflow with the Portuguese site currently in beta. As a way for us to make sure we’re doing the most for our users and community on Stack Overflow, we conduct a survey every year to see what you’re up to, how you’re using our site and what else is on your mind. This time, we analyzed a survey sample of 7,500 responses from 96 countries. As a thank you for the time you spent filling it out, we donated an additional $12,000 to our Stack Exchange Charities.\nObservations\nThis is the second year we’re calling out mobile, and yes mobile is still growing.\nWhile only 7.9% of you classified your occupation as a Mobile Application Developer, the majority of respondents (51.5%!) said that their company has a native mobile app. This is an increase from 2012 when 48.2% of respondents had a mobile app.\nAndroid continues to climb while iPhone declines\nNot only is the Android Phone the most popular mobile device with 63.8% of respondents saying they have one, the most popular native mobile platform supported is an Android Phone app with 39.5%. The iPhone lost more traction with developers this year with 30.7% of respondents saying they own an iPhone compared to 35.2% in 2012.\nWorking Remotely\nAs our Stack Exchange team is growing and we have more employees working remote, we added a number of questions about remote work. While only 10.6% of respondents said they are full-time remote, 63.9% of total respondents say they work remotely at least occasionally.\nIf you’d like to do your own analysis you can download the survey results.",
        "url": "https://stackoverflow.blog/2014/02/19/2013-stack-overflow-user-survey-results/"
    },
    {
        "title": "Your communities list is now customizable",
        "content": "A few months ago, we rolled out a new top bar for all of the Stack Exchange communities. The mission was consistency: Every community gets the same Stack Exchange brand at the top, the same navigation between sites, and the same live updates about new inbox items and reputation changes\nBut we realize that not everybody uses Stack Exchange the same way. Some people focus on one community, others participate in several, and more than a few spend a lot of time lurking now that we have 116 different sites to choose from.\nThat’s why, as promised, we have made the “Your communities” section of the Stack Exchange drop-down fully customizable so you can keep all of your favorite communities right at the top.\n\nHere’s how it works:\nCustomizing this list is completely optional. If you do nothing, you will keep the defaults: your top five communities by reputation.\n\nBut click the edit button and the default rules no longer apply. Instead, you can:\n\nAdd a community to the list by typing the name and clicking Add\nRepeat #1 to add as many as you want\nChange the order of communities in the list by clicking and dragging\nClick the Save button to apply your changes!\n\nYou can reset the list to the default at any time, so try it out! Then drop by the Meta post to share your thoughts and feedback.",
        "url": "https://stackoverflow.blog/2014/03/03/your-communities-list-is-now-customizable/"
    },
    {
        "title": "Introducing Gabe, The Smiling Community Manager",
        "content": "A couple of months ago, we started soliciting applications for a Community Manager candidate fluent in Portuguese and English. Why? Well, as Jay wrote:\n…We’ve long had a backlog of proposals in Area 51 for sites that are (non-english) language specific, and as we continue to work on localization, we need to start building up the community team with individuals who speak languages that are native to a large number of potential users…\nI’m happy to announce that Gabe Koscky stepped up to fill this role.\nGabe hails from sunny Vila Velha in Espírito Santo, Brazil. Some 15 years ago, he discovered the web and became fascinated by it: all of a sudden he could talk to people from around the world, learn new stuff and find new, more efficient ways to procrastinate. He tried every single piece of instant message, chat or forum software he could find just to see how they worked and what made them different.\nThat interest developed into a passion for the inner workings of the web, leading to a career as a web developer and a lot of research on how people interact with each other using the internet. After many years as a programmer he started to notice he was enjoying helping people out more than he was enjoying coding. So he decided to leave programming for a while and go chase new adventures here with us at Stack Exchange!\nWhen he’s not messing around on his laptop or spreading the word of Python to college kids, Gabe will either be playing video games or his guitar (he had the best Foo Fighters cover band no one’s ever heard of). He was a recovering Minecraft addict, until taking this job caused a tragic relapse.\nWhile we do have future plans for Gabe’s language skills, his primary role will be the same as the rest of us on the team: providing assistance and guidance to the folks who make these sites awesome. So please give Gabe a warm welcome, and look for him to pop up more often around the network as he learns the ropes.\n\nDo you have a unique set of skills that would benefit the growing communities here on Stack Exchange? We’re always looking for more help, and would love to hear from you – whether you’re near our NYC HQ or anywhere else in the world. You get to work with happy, smiling folks like Gabe and help us guide Stack Exchange as it grows. (And if you happen to be fluent in both Japanese and written English, you should definitely apply – we have a special project for you…)",
        "url": "https://stackoverflow.blog/2013/08/23/introducing-gabe-the-smiling-community-manager/"
    },
    {
        "title": "Community Management by Popular Demand: Kevin Chang Joins The Team",
        "content": "I’ve been posting rather a lot of these announcements lately, as we’ve worked to increase the size of our team to where we can actually do our jobs and still occasionally sleep. So I’m gonna cut right to the chase: we hired Kevin “Lord Popular Demand Torgamus” Chang!\n\nKevin lives on the east coast of the US, not too far from where he grew up. He’s been working as a software developer until now, and as such his first experience with Stack Exchange was on Stack Overflow, where he was fairly active until he found Meta Stack Overflow. He liked MSO because it was kind of like SE sites for psychology, UX, communication, HCI and programming all rolled into one, and his love for this tasty amalgam shows in the crazy amount of reputation he accumulated there. When not working, he likes to spend time on personal programming projects, being outdoors, trying out new restaurants and playing board/card/video games.\nKevin has been a pillar of the Stack Exchange community for many years, with some especially notable work on our venerable Meta site. His ability to understand human behavior and cut to the root of an issue with his writing has proved invaluable in the past, and we’re extremely happy to have him lending his expertise here full-time. As a sign of just how much he cares about the folks he’s here to serve, his first action as a community manager was to shorten his name to the much easier to remember and type “Pops”. Please give him a warm welcome when you see him pop up around the network!",
        "url": "https://stackoverflow.blog/2013/09/06/community-management-by-popular-demand-kevin-chang-joins-the-team/"
    },
    {
        "title": "Finding a Great Company",
        "content": "We launched Stack Overflow Careers with the goal of fixing how companies hire developers. Traditional resumes only tell half the story, so we created Careers 2.0 Profiles to fill in the gaps. A few months ago, we released Company Pages with the goal of reinventing the traditional job listing the same way we reinvented the resume. Today, we’re excited to announce a new way to advertise your company to developers with Company Page Ads.\n\nWhat are Company Pages?\nCompany Pages (here’s ours) were created to give developers a better picture of what it’s like to work as a developer at a company. They focus on the obvious questions that every developer asks before taking a job:\n\nWho are you and what do you do?\nWhat’s your technology stack?\nWho will I be working with?\nHow well do you treat your developers?\n\nSince we launched the feature three months ago, over 800 companies have created Company Pages on Careers. We knew we had struck a real need that companies understood, and found a new way for them to connect with developers.\n\nAdvertise Your Company Page\nAfter we introduced company pages, we started getting requests for some way to show off those company pages to developers. We’ve had job listings on Stack Overflow for a long time, but we wanted a new way for companies to advertise the company itself: their benefits, their developers, and their job listings.\nSo today we’re proud to announce Company Page Ads, a new way for companies to find top developers on Stack Overflow. Company Page Ads come in three flavors that focus on your company:\n\nOpen jobs\nBenefits\nWho you’ll work with\n\n\nThese ads show up in the same places ads have always shown up on Stack Overflow — they don’t add anything new to the page. The difference is in their focus on a single company, and on the things that matter to developers. When you click one, you’ll be taken to the Company Page where you can learn more about the company and see what jobs they have open.\nCompany Page ads come in two packages that each run for 30 days. The $1000 standard package includes all three sidebar ads. The $2500 premium package includes both sidebar and banner ads that will run at the same time, giving the company full run of the page with no competition from other advertisers or companies.\nThe Company Pages themselves remain free — if your company doesn’t have one yet, you can create one right now and start using it to tell developers who you are and what you’re all about. If you decide you want to, you can purchase the Company Page Ads at any time through the website. And, as always, all of our products come with a 90-day money-back guarantee.\nThe Big Picture\nWe think Company Pages will fundamentally change the way developers look for jobs. Finding the right company, with the right culture and the right people, is the most important part to finding a great job. Over the next few months, we plan to add more features to let you search and filter companies to find the perfect match, and even more information for companies to fill out on their pages to tell you what you need to know.\nSo stay tuned, and in the meantime check out the list of Company Pages on Careers. If you don’t have a Careers 2.0 profile yet, request an invitation today. And if your company is looking to hire their next great developer, tell them to try creating a Company Page on Careers.",
        "url": "https://stackoverflow.blog/2013/08/12/finding-a-great-company/"
    },
    {
        "title": "Can’t We All be Reasonable and Speak English?",
        "content": "Two weeks ago, we announced the public launch of Stack Overflow in Portuguese, our first-ever non-English Stack Overflow community. Which raises one very obvious question:\nHave we lost our minds?\nWasn’t the whole point of Stack Overflow to aggregate as much developer knowledge as possible in one place? To get all the potential solutions together, and provide one canonical set of answers?\n\nYup. When we set out to “collectively increase the sum total of good programming knowledge in the world,” a big part of the plan was de-fragmenting information previously spread across myriad books, sites, and your brains. It’s why we mark things as duplicates – we want all the precious gems of knowledge stored in the same cave of wonders.\nSo know this: we are at least as worried about fragmentation as you are. And we have a plan:\nEventually, all of you are going to have to learn Portuguese.\nOkay, not really. But, given that one of our core goals was knowledge aggregation, it does seem just a little bit crazypants to start launching sites in new languages, assuming that one very important fact is true:\nAssumption: All of the serious developers in the world are highly proficient in English.\nWhich… actually sounds plausible. But it’s wrong.\n\nNot every developer in the world speaks English. Just reading the comments from our announcement, you’ll see multiple readers sharing that they or their colleagues (and one dad) couldn’t participate on SO due to language constraints. But data beat anecdotes. We don’t have recent numbers for Brazil and Portugal, but we do for China, and they illustrate the same point:\n\n10% of the world’s programmers are in China\n1.4% of our visits come from China\nOnly 4.8% of our visits come from China, Japan and Korea combined\n\nSo, if the data tell us that we’re getting roughly 80% less activity from Asia than we should in the absence of language constraints, why does it feel so obvious that all serious programmers speak English?  This may help:\nQuick – name any famous developer who doesn’t write well in English.\nI couldn’t.  I can name over a dozen famous English-speaking coders. But even if you frequent all the hacker sites and conferences, how many devs have you met who aren’t solid in English? Roughly none, right?\nThere’s just one problem. Try this:\nWithout Googling, name any famous developer from Japan. Or China. Or Russia.\nAgain, I couldn’t. Well, I came up with Shigeru Miyamoto. But he’s apparently a designer. I couldn’t name even one. Not like I can name Carmack or Stallman, or Hopper, or even “DHH.” (Does DHH have an actual name? I personally imagine him as a very handsome, talented, fast-driving set of initials. But I digress.)\nIs it plausible that there aren’t *any* devs good enough to be famous from those countries? Nope. Here’s what’s happening:\nIt’s easy to assume that there aren’t any devs who can’t speak English because I never see any. But I never see any because I’m hanging around places where devs go to talk to each other in English.\nThe startling truth is this:\nOn the internet, If you don’t speak English, you’re completely invisible to me.\nI also assumed that since developers have to learn English-like syntax, they must speak English. Which is a bit like assuming that because I can order Uni, Hamachi, and Aji by their Japanese names, I could probably toss back some sake with Morimoto and discuss knife techniques in Japanese. Even when programming languages use words like “if” or “function,” they’re just terms to memorize, and don’t always even mean the same thing in English that they do in programming.\nIt’s almost impossible to feel like part of a community if you’re not highly proficient in the language. Even non-native speakers who are fluent enough to read posts in their second or third languages often aren’t comfortable enough to write in them.\nI imagine myself at a professional meetup where everyone is speaking French (which I studied through college). How many jokes would I tell? How many would I even understand? Sure, I can function, and understand all the words, but I don’t feel like I belong to the group.\nDon’t get me wrong – some of our best users aren’t native English speakers, but they’re in that rare group who have achieved a far higher mastery of a language than their peers. When I hear,\n“Well, I didn’t need a site like this – English is my third language, and I’m in the top 1% on Stack Overflow!”\nI think:\n“Yes, that makes sense. You are insanely good at two difficult, language-based things. Most people will find both of them to be a _lot_ more challenging than you did.”\nThe truth is, by requiring fluency in English, we’re shutting out of a lot of developers who may know enough English to read it but not enough to feel comfortable participating.\nRequiring that all aspiring devs “just go learn English” first isn’t who we want to be.\n\nEven if I believed that every programmer must eventually master English, it still wouldn’t make any sense to make them do it first. I believe that everyone – everyone – who can really fall in love with programming should get a chance to. So pre-filtering for the ones willing to learn a foreign freaking language before they first sit down with a code editor to see if it lights some spark in them just feels wrong.Think of the children. The children!! Okay, last quiz, just for the native English speakers:\nHow old were you when you first realized you could type things on a keyboard and control machines? Great. Now, at that age, were you proficient enough in another language to have learned to code without any English?\nWhen I tell someone I work at Stack Exchange, my absolute favorite response is:\n“I basically learned to code from posts I found on Stack Overflow”\nWe want that for every young programmer. Not just the ones lucky enough to be born somewhere that English gets taught in grammar school.\n\nOkay, that all makes some sense. But why Portuguese?\nTo be clear, we still don’t think there needs to be a Stack Overflow in every language. We do want as much centralization as possible, and we know that devs who have mastered English will mostly keep going to the English site, since it has the most critical mass. Just like we want them to. So, you won’t need to learn new languages to find good answers – we expect almost every question asked on the Portuguese site to also be asked (and answered) on the English site.\nWe’re really only considering launching sites in languages that:\n\nHave large, strong communities of high-talent developers, where\nA meaningful percent of them aren’t comfortable enough to participate in an English-only community\n\nThat probably limits the list of potential candidates to Mandarin, Japanese, Portuguese, Russian, Turkish, and Spanish. From there, Portuguese was a no-brainer. The developer community in Brazil is awesome, and growing fast. And we wanted to start with a language with a similar alphabet, to minimize the localization work.\nAnd it’s worth a shot. We’ve learned that it’s easier to just watch the future than to try to predict it. So we’re big on just trying stuff out (assuming it can’t break our other stuff). And we’re huge on getting stuff crazy-wrong, refusing to admit it, and instead doubling down on our wrong-minded idea, while nodding crazily er… admitting we made a mistake, and reversing course. So, given the number of user requests, we figured, “why not give it a it a try?” We’re committed to supporting one or two languages and seeing how they develop before we push any further.\nAnd so far, it’s an incredible success. Despite an audience limited to portuguese-speaking devs, the site’s activity in its first week was higher than all but 4 out of 120 sites we’ve launched to date, including the original trilogy.\nMore importantly, people who couldn’t ask questions are asking them, and getting great answers. When in doubt, we want to err on the side of helping more people. If just one little girl in Brazil sticks with programming because an answer on this site helped her finish her first project, well… that’s not good enough!  I want to help thousands of them. And the boys, too.\nStill, it’s a good start.\nAre you an aspiring programming looking for your first break? Stack Overflow Jobs has entry-level positions from all over the world.",
        "url": "https://stackoverflow.blog/2014/02/13/cant-we-all-be-reasonable-and-speak-english/"
    },
    {
        "title": "Please welcome Jon Ericson, Community Manager",
        "content": "With over 100 sites on various and sundry topics, Stack Exchange has become something of a juggernaught: keeping this many different communities healthy and well-supported can be a bit overwhelming at times. We’d never be able to pull it off if there weren’t so many of you pitching in to help, and so I’m more than happy to announce that we’ve managed to convert another dedicated volunteer to full-time cat-wrangler:\nJon Ericson\nJon became fascinated with computers when he got to play with his cousin’s Commodore 64 circa 1986. Over the years, Jon went on to write many fine Hello World programs, and dabbled in one online community after another: BBSes, AOL forums, Usenet, mailing lists, etc.\nJon has had an interesting relationship with Stack Exchange. Five years ago, he read about the Stack Overflow beta and signed up. A year and a half later, after asking and answering a respectable number of questions, Jon lost interest. That could have ended the story, but when the network expanded to topics outside of technology Stack Exchange’s not-so-secret sauce of voting, editing, focused Q&A, and, yes, reputation dragged him back in. Jon got involved in a few more beta sites, and his renewed interest was solidified by several amazing answers to his Bible questions.\nJon’s always been active in supporting the development of the communities he’s a part of, debating policies and suggesting improvements going all the way back to the User Voice days on Stack Overflow. For a long time, Jon didn’t see the point in closing questions and deleting posts (indeed, he once wrote a (long!) answer titled, “Closing Questions Considered Harmful”) after all, it wasn’t like disk space was too expensive. But after years of getting great answers from people who knew their stuff, the idea finally clicked: it wasn’t disk space, but the time of great participants that is at a premium. This sort of knowledge gained from experience has proved instrumental in helping Jon to provide guidance to folks using Stack Exchange for the first time.\nJust about every minute Jon isn’t online is a minute he spends with family: his wife, ten-year-old son, and boy/girl twins born in January. They enjoy camping, reading, playing games, travel, and church.\nJon has repeatedly impressed us with his ability to analyze a situation and produce thoughtful, well-reasoned advice – we’re looking forward to seeing him bring this skill to bear on the various challenges facing the network.\n\nDo you have the talent and experience to manage the communities on Stack Exchange? We’re always looking for more help, and would love to hear from you – whether you’re near our NYC HQ or anywhere else in the world. You get to work with awesome people like Jon and help us guide Stack Exchange as it grows. (And on the off-chance you’re fluent in Japanese, you should definitely apply – we have a special project for you…)",
        "url": "https://stackoverflow.blog/2013/08/09/please-welcome-jon-ericson-community-manager/"
    },
    {
        "title": "Five years ago, Stack Overflow launched. Then, a miracle occurred.",
        "content": "Stack Overflow officially launched on September 15, 2008. In five short years, you’ve answered over 5 million questions on more than 100 sites, and helped hundreds of millions of people find the answers they needed. Today, we want to celebrate how, together, we changed one small corner of the Internet for the better.\nWe want to hear your stories about how someone on Stack Exchange helped you.\n“Then, a Miracle Occurs”\nBefore it went into beta, stackoverflow.com had a comic on the landing page that came to symbolize what we were setting out to do:\n\nWe knew what our goal was, and we had some idea how to start, but the entire thing working was predicated on that middle step: “then a miracle occurs”. The original vision statement was ambitious:\nIt is by programmers, for programmers, with the ultimate intent of collectively increasing the sum total of good programming knowledge in the world. No matter what programming language you use, or what operating system you call home. Better programming is our goal.\n– from Introducing Stack Overflow\nIt was a gamble: would people really take time out of their busy lives to answer other people’s questions, for nothing more than fake internet points and bragging rights?\nIt turns out that people will do anything for fake internet points.\nJust kidding. At best, the points, and the gamification, and the focused structure of the site did little more than encourage people to keep doing what they were already doing. People came because they wanted to help other people, because they needed to learn something new, or because they wanted to show off the clever way they’d solved a problem.\nWhich was lucky for us.  Because here’s the crazy secret about gamification: In the history of the world, gamification has never gotten a single person do anything they didn’t already basically like to do.\nIn the midst of everyone’s individual reason for coming, somewhere among the hundreds, and then thousands of people who showed up to answer each other’s questions and hammer out how the site should actually work, the miracle actually occurred.\nAn incredible number of people jumped at the chance to help a stranger\nSo far, you’ve provided helpful answers to over five million questions. Those answers are seen by forty-four million people looking for help each month.\nTo put those numbers in perspective:\n\nThat’s more people helped each month than visit the New York Times, Bank of America, or Apple.com.\nIf the people helped each month were a US state, it’d be bigger than California and almost twice as big as Texas.\nIf they were a country, it’d be in the top 15% of nations in the world, with more people than Canada, Argentina, or Poland. It’d be practically two Yemens.\nIf you put one frog in a football stadium for each of the 44MM people who get help here each month, that would be forty-four MILLION frogs. Think about that. But don’t say it out loud. People are quick to judge.\n\nMaking the Internet a Better Place\nThe next chapter of Stack Exchange is still being written. A few years ago, we widened our vision beyond programmers. Our new goal was simple, if a bit daunting:\nMake the Internet a better place to get expert answers to your questions.\n\nWe asked people what other sites they wanted, and carefully started launching them, one at a time. Each time, we were counting on a group of experts to come together and start asking and answering each other’s questions. There have been a few failures along the way, but overall, the successes have been amazing.\nWe’re now up to 106 sites, including some outstanding ones on System Administration, Computers, Mathematics, Ubuntu, Video Games, and Cooking, and some young upstarts like our site for English Language Learners. If there’s a site you want to see that doesn’t exist yet, you can still propose it on Area 51.\nAt the same time, Stack Overflow is continuing to grow, and we are doing our best to keep it healthy. The short history of the internet is littered with communities that started out great, but slowly petered out under the weight of flame wars, mass-n00bocide, funny cat pictures, or just boredom waiting for the next big thing. We still need your help to keep Stack Overflow focused on its core mission: collectively increasing the sum total of good programming knowledge in the world.\nTell Us Your Story\nWe want to hear your stories. Looking at numbers is one thing, but hearing from real, live people about how someone’s effort here helped them is entirely different. So, if someone’s post here ever saved your day at work, or convinced you to buy your daughter an SLR and learn photography together, take a minute to recognize the person who wrote the answer that mattered to you.\nIf you’re somebody who mostly answers questions, share how you got involved and what keeps you coming back.  Or tell us about someone who taught you something before we even existed. They deserve to be recognized for the way their investment in you is getting passed on to others here today. If Stack Exchange got you interested in a new topic or taught you a new trick for an old one, we want to hear about it.\nStack Exchange has always been about a community of people helping each other out. It was a long shot when it launched, but you made it work. Now, let’s take a few minutes to recognize everything that we’ve achieved together.",
        "url": "https://stackoverflow.blog/2013/09/16/five-years-ago-stack-overflow-launched-then-a-miracle-occurred/"
    },
    {
        "title": "Summer Hiring, Happened So Fast",
        "content": "We’ve been busy! So busy, in fact, that this post only takes us through the hires we made in June and July. More announcements are coming soon … in the meantime, get to know these 13 wonderful people who now call Stack Exchange home.\n\nJon Ericson, Community Manager, Burbank, CA\nAs an Air Force brat, Jon grew up all over the world but has lived in the Los Angeles area since attending UCLA, marrying his college sweetheart, and starting a family. He taught himself GW-BASIC on the family Tandy 1000, learned Pascal and FORTRAN in the classroom, C on the job, Perl on Usenet, and a bunch of other stuff on Stack Exchange. Fifteen years after getting his dream job subcontracting for NASA’s Jet Propulsion Lab, he leaves with an unblemished record in terms of spacecraft unplanned planetary impact maneuvers. Read more about Jon here.\n\nDean Grant, Senior Account Executive (Ad Sales), New York\nDean joined Stack Exchange this summer after spending 10 years in the Wall Street Journal’s ad sales department. Originally from Texas, Dean graduated from Iona college and now resides in Eastchester, NY with his wife and 2 kids (aged 17 and 15).  For fun, Dean loves to go fishing, and he coaches his son’s baseball team in his spare time.\n\nMax Holley, Account Executive (Careers 2.0), Denver\nMax grew up in Austin, TX and survived on live music, breakfast tacos, and Tex-Mex. After graduating from Arizona State in 2009, he moved to Denver where he’s mostly lived ever since (excluding a brief stint in Florida). His career history is almost entirely in IT sales. Max’s hobbies include distance running, basketball, tennis, and biking.\n \n\nJoshua Hynes, Senior Product Designer, Mechanicsburg, PA\nAfter growing up with a love for art and problem-solving, Josh has been designing online experiences since 1999. After graduating from Cedarville University, he spent 10 years crafting experience for clients before joining Stack Exchange. A proud husband and father of 3, Josh enjoys reading books, listening to music, being involved at his church, watching baseball (especially the Boston Red Sox), and getting to know new people.\n\nMarvin Medrano, Kitchen Assistant, New York\nMarvin graduated from John Jay College. His past employers include East End Kitchen on the Upper East Side of Manhattan, where he met his current kitchen coworkers, Shanna Sobel and Philip Sireci. Marvin loves auto mechanics and custodial maintenance, and he has four beautiful little girls.\n\nJessica Nothnagle, Sales Representative (Careers 2.0), Denver\nJessica was born and raised in Rochester, NY and just recently made the move to Denver last July. Prior to Stack Exchange, she was working at Paychex for two years. She knew she wanted to relocate to Denver and all the cards fell into place when she got a promotion with Paychex that transferred her there. Outside of work, Jessica enjoys pretending she knows how to cook, hanging out with friends, and exploring all that her new city has to offer.\nAngela Nyman, EMEA Marketing Manager, London\nAngela was born and raised in Sweden but decided to leave it all behind at the age of 18. She lived in the US for a year before heading off to a private university in Italy. She worked as a marketing manager in Spain, France, and the UK, fitting in a couple of ski seasons in between, before deciding to travel the world. In 2009 she settled down in what is now properly her home: London!  Angela has a background in marketing for the gaming industry, having run one of Europe’s largest poker tours, The WPT, for years. She is super excited about taking on another challenge in a new industry doing what she loves. Outside of work, Angela loves exploring new places and doing everything yoga, fitness, mind & health related.\n\nSamo Prelog, Web Developer (Core), Ljutomer, Slovenia\nSamo (left) grew up in Ljutomer, studied in Maribor, and now lives in Lenart – all in the “head” of Slovenia’s chicken-like geography. He got into programming by maintaining his high school’s website and developing applications for organizing karate competitions. Besides hanging out with his wife, he also enjoys making music, practicing & judging karate, other (normal) sports, and learning new things by answering questions on Stack Overflow. As an active SO user since 2009, Samo wasn’t able to resist the temptation any longer, and he clicked on the ‘woof from home‘ ad – once.\n\nTania Rahman, Sales Representative (Careers 2.0), London\nBorn and raised in a tiny village in Hampshire complete with thatched-roofed cottages, Tania has been living in London in the heart of the Olympic Village for over 4 years. Tania designed an award winning doughnut aptly named ‘Death By Chocolate’ which was available in petrol (gas) stations across the UK for a limited period. Due to the over consumption of doughnuts, Tania decided the best way to work the extra calories off was by running the London Marathon, which she did in 2013. When she’s not busy checking out the latest pop up restaurant she can be found with her nose in a good book or learning to swim…sometimes both!\n\nPhil Sireci, Executive Chef, New York\nPhil graduated from the French Culinary Institute. His impressive career includes stints at the Gramercy Tavern and Union Square Café; he also owned a restaurant in Provincetown, MA in the past. East End Kitchen was where he met his assistant, Shanna Sobel. Phil loves to play the guitar and has played in a couple of bands. He loves his 2 dogs, PJ and Dinny.\n\nShanna Sobel, Assistant Chef/Pastry Chef, New York\nShanna graduated from FIT with Bachelor in Fine Arts. She went on to receive a degree for Pastry Arts from the Art Institute of Culinary Education. Shanna has worked at NYC hotspots Colicchio and Sons, Stanton Social, and East End Kitchen, which is where she met Marvin and Philip. Shanna owns an online cookie company called Couture Cookies LLC, and she enjoys volleyball and abstract painting in her spare time. She’s also a huge Dave Matthews Band fan!\n\nAngela Toney, Account Executive (Careers 2.0), Denver\nAngela grew up in the American Southwest, attended college in rural Virginia, and now calls Denver home. Her sales career started at an educational technology company, and five years later, she is ready to dive in to her role at Stack Exchange! In her free time, Angela enjoys hiking with her husband and dogs, anything fitness-oriented (latest obsession is stand-up paddle boarding), and visiting all the great breweries and restaurants in the Mile High City.\n\nJonathan Zizzo, Account Executive (Careers 2.0), New York\nJonathan grew up in Ohio and attended college at The Ohio State University. He spent five years selling medical equipment before joining Stack Exchange this summer. Outside of work, Jonathan enjoys spending quality time with family and friends, traveling, and seeking adventure.\n_Visit our hiring page to learn all the reasons Stack Exchange is a ridiculously awesome place to work. _Want to see your face in our next new hire announcement? Here’s who we need:\nWeb Developer (NYC or remote)\nSenior Product Designer (NYC or remote)\nSales Representative / Account Executive (London)\nSales Representative / Account Executive (Denver)\nSales Representative / Account Executive (NYC)\nCommunity Manager – bilingual English/Japanese (NYC or remote)\nRecruiter (London)",
        "url": "https://stackoverflow.blog/2013/09/25/summer-hiring-happened-so-fast/"
    },
    {
        "title": "Podcast #51 – The Return of Coding Horror",
        "content": "Welcome to Stack Exchange Podcast #51, with special guest Jeff Atwood and the usual suspects Joel Spolsky, David Fullerton, and Jay Hanlon. Today’s show was brought to you by Pan-American World Airways!\n\n\nWe kick off the discussion with a topic not on the agenda… which is reminiscing about who used to prepare the agenda on the old Joel & Jeff podcasts.\n\n\nSite Milestones! Spaaaace is now in public beta, so you should check it out. We also closed the India proposal, after much discussion about the possibilities for location-based sites.\n\n\nFive years ago today (7/31) was the start of the Stack Overflow private beta! (It’s also Harry Potter’s birthday.)\n\n\nWe have a new feature starting this week: featured sites! We’ll grab the most interesting questions from a particular site to highlight the things people might not be aware of. This week, we’re highlighting Open Data. “What’s open data, Jay?” Glad you asked! It’s a site for developers and researchers who are trying to use publicly available data to translate it into more functional systems. (We make our data available, too.) We were reached out to by the contractor running data.gov – neat!\n\n\nWe did a minor feature tweak: a new privilege. At 500 rep, you get access to the Late Answers and First Posts review queues. Congratulations!\n\n\nWe’re working on an Android app. You can help test it! We’ve started rolling it out to alpha testers. It’s mostly functional – you can view questions, ask, answer, comment, vote, and view your inbox. (Ben wrote a great blog post about what he learned while developing for Android – you should read it.)\n\n\nLet’s turn to our special guest Jeff Atwood. He’s got many honorifics, and Jay got most of them wrong. Jeff has young children, and our hosts have lots of opinions about child things.\n\n\nSo! Jeff’s new project is Discourse. Like Stack Overflow, Discourse was born from the negative experience of having to go to ugly, nonfunctional places on the internet because you have to. Jeff walks us through the process of refining this idea and creating the product and highlights some of its best features.\n\n\nHere’s the link to Jeff’s presentation at ForumCon.\n\n\nSide note: Forums and chat systems are incredibly similar, with one key difference: on a forum, you type in a complete thought. In a chat system, you write in half-clauses, and maybe three or four messages together make a thought.\n\nDiscourse is an instant improvement over many commenting systems (as opposed to forum systems). It was never intended to compete with Disqus, but that’s how BoingBoing is using it and it seems to be working well.\n\n\nJeff is looking for three major partners. He’s got two already. Listen in to hear the Stack Exchange exclusive on the third Discourse partner! (DISCLAIMER: there is no actual announcement.)\n\nThanks for listening to the Stack Exchange podcast featuring Jeff Atwood! Check out BoingBoing’s forums or How-To Geek’s forums to see Discourse in action. Until next time!",
        "url": "https://stackoverflow.blog/2013/08/05/podcast-51-the-return-of-codinghorror/"
    },
    {
        "title": "Raised on The ꞌNet: please welcome Ana Noemi, Community Manager",
        "content": "We’ve spent a good portion of the year trying to build out our teams to handle the increasing load of work here at Stack Exchange. A big part of this has involved bringing on new community managers: with both a larger number of sites and greater numbers of users on those sites, we hadn’t exactly been keeping up with the demand for help and guidance across the network. Tim Post signed on in the spring, followed by Jon Ericson, Gabe Koscky and Pops “Kevin” Chang.\nCommunity Management at Stack Exchange is primarily a support role: assist folks in learning how to use the software, then help them learn to work together as they work to build something awesome. Our goal is to facilitate more than to dictate: if you’ve spent some time on a mature site, you know what we’re all working toward, but sometimes folks need a bit of help figuring out how to get there. Jon compares the job to the art of bonsai: patient observation, deliberate and judicious intervention and correction, more patient observation. We’ve been very lucky to attract so many patient, observant gardeners thus far, and I’m excited to announce that we’ve just hired one more:\n\nAna was socialized on The Internet as much as in “real life”. She grew to be wildly fascinated with how social norms developed on the web, finding the factors that led people to bond, collaborate or conflict with one another to be endlessly intriguing. She studied theater, then web design and development, eventually dropping out of college to pursue a more self-directed path as a programmer. When Ana attended events and got to know people within the (then rather small) New York tech community, her new friends threw a wrench into her dev career plans by repeatedly asking for help solving PEBKAC problems. She was hired as the first community manager at a 3D printing company, helping designers and engineers share their expertise and sell their work. It was there that Ana was first introduced to Stack Exchange, observing with interest our approach to community development. She gained further experience in community management at a Node.js-focused hosting company, as well as knowledge of running a tech support team and the idiosyncrasies of open source communities.\nAna has a keen eye for patterns in social interaction, and delights in finding ways to help folks work together more effectively. When she’s not working, she can be found exploring the five boroughs of New York, finding the weirdest and most fun electronic music, hacking on small projects, organizing developer conferences, or digging into a sci-fi novel or a book about behavioral psych.\nWe’re still in the process of introducing Ana to all of our communities, so please join me in giving her a warm welcome when she drops in on yours.",
        "url": "https://stackoverflow.blog/2013/11/08/raised-on-the-net-please-welcome-ana-noemi-community-manager/"
    },
    {
        "title": "A New Top Bar for Stack Exchange",
        "content": "The top bar of a Stack Exchange site has always been a bit of an odd place. It somehow combines user info, navigation, search, and a one-size-fits-all popup that includes hot network questions, a list of 100+ Stack Exchange sites, personal inbox messages, and other system notifications (lovingly referred to as The StackExchange™ MultiCollider SuperDropdown™).\nIt was, in retrospect, overdue for a face-lift which is why we’re excited to roll out a new top bar this week.\n\nA Bigger, Blacker Bar\nThe first thing you’ll notice is that **it’s really black***. When we originally conceived of the top bar with the Stack Exchange logo (way back in Ye Olde 2010), one of the main goals was to mark each site as a Gen-u-wine™ Stack Exchange site. Since then, however, we’ve created unique designs for over 40 different sites, and the Stack Exchange logo has started to get a bit… lost.\n\nSo, in the redesigned top bar, we wanted to make sure that it would look the same across all sites, and make it obvious that you’re on a Stack Exchange site. It turns out that when you try to pick a color to match 40 different site designs, you quickly realize you only have one real choice: black.\n\nJin points out that technically it’s not quite black: it’s #212121.\n\nNew Achievements popup\nThe biggest addition to the top bar is the brand new Achievements popup. Previously, if you wanted to know your reputation on every site you were active on, you had to visit every one of those sites. This led to some of us, well, compulsively cycling through sites and refreshing to see if we’d gained any rep. Now, there’s one convenient place to check from whatever site you happen to be on:\n\nThis new popup includes:\n\nA reputation counter at the top which sums all reputation you’ve gained on all sites since the last time you checked, updated in real-time\nEntries for reputation, badge, and privilege notifications, grouped by post and time\nA summary of reputation gained today\nAggregation from every site in the network in one place\n\nThis should make it much easier to keep track of your reputation and badges across all the sites that you are active on.\nNew Sites List (aka “The Site Switcher”)\nThe old list of sites has gotten a new layout and is now its own distinct popup. The idea is to make it easy to switch between sites if you participate on several, or to find a new site that you don’t participate on regularly:\n\nIn the new “Site Switcher” you’ll find:\n\nThe current site at the top, with meta, chat, and blog links for the current site (and Stack Overflow Careers when on Stack Overflow)\nA list of your top 5 sites, ordered by reputation*, with your reputation for each\nA searchable list of all sites, with a short description of each\n\n\nWe’ll probably let you customize this list in the near future, so you can include sites you like to watch but don’t have much reputation on.\n\nNew Global Inbox\nThe Global Inbox has been split out into its own popup as well, instead of a subsection of the Stack Exchange popup:\n\nWe’ve gotten rid of the confusing distinction between “inbox” and “notifications”. All messages will now appear in the inbox, except for reputation and badge events which are in the new Achievements popup. Inbox items also now have a new layout, which should be easier to scan.\nFeedback Welcome\nThere are a few smaller changes to mention as well:\n\nYour name has been replaced with your picture, to make it easier to recognize at a glance that you’re signed in as you (and because some longer names just don’t fit).\nThe help link is now a dropdown with links to the tour and the help center, with a short explanation of what each is.\nClick areas for everything are now the full-size of the row, to make them easier to click or tap on mobile.\nThe hot network questions have moved to the sidebar on the homepage, since they aren’t really navigation or notifications.\n\nThe new top bar will be rolling out network-wide, including Area 51 and stackexchange.com, in the next few weeks. As always, meta is the place to go for feedback, suggestions, and bug reports.",
        "url": "https://stackoverflow.blog/2013/12/04/a-new-top-bar-for-stack-exchange/"
    },
    {
        "title": "Winter Bash 2013 is here!",
        "content": "Ahh, the wintry season…\nThe gatherings of family and friends, the giving and receiving of gifts, the making and/or breaking of New Year’s resolutions – however you and yours celebrate, the end of a calendar year heralds many traditions.\nHere at Stack Exchange, we wanted to get each of you an awesome, personal gift, and mail it to you as our way of saying “thanks.” But our accountant pointed out that there are 4.5 million of you, which promptly reminded us that the holidays aren’t about _gifts. _The real spirit of the holidays can only be captured with…\n\nHats!\nThat’s right: Winter Bash is back for another three weeks of millinery-related holiday fun.\nWhat’s new, you ask?\nNew hats:  There are over 30 new hats to earn this year (with many thanks to contract designer Elias Stein). And by “hats,” we of course mean, “things you can stick on your avatar’s face.”\n\nAnd it’s possible that there just might be a couple of secret ones, too. (By “it’s possible,” we mean  “there definitely are, because we made them, like with computer code and everything, so there’s not really much doubt whatsoever.”)\nHats are transferrable: What? No, you can’t sell them to each other. Hats are transferrable across sites! You read that correctly: this year, if you earn a hat on any site, you can wear it on any participating Stack Exchange site. This was one of our most asked-for feature requests after last year’s event, and it’s a great way for everyone to highlight their achievements on their favorite site across the network.\nHat position is adjustable on your face: You remember how crushed you were after finally earning a mustache “hat,” only to discover that on your avatar, it was basically an extremely dapper unibrow? NEVER AGAIN.\n\nYou can finally reposition hats in the box until Don Draper’s suit fits as well it fits him. (I know, I know… “it’s not a suit; it’s a carousel.” Give it a rest, Don. Not everything is a carousel.)\nWinter Bash 2013 will run from Monday 16 December 2013 through Friday 3 January 2014. During that time, participate on any Stack Exchange site to earn awesome hats (and other accessories!) Each hat has a different activity to trigger it. You can see all the hats and their triggers on the Winter Bash 2013 homepage. Still have questions? Of the kind that get asked… frequently?  Check out the  Winter Bash FAQ\nAll the hats will go back into storage at the end of Winter Bash, so get out there, earn some hats, and show them off while you can! Just be careful. We paid a deposit on them.\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2013/12/16/winter-bash-2013-is-here/"
    },
    {
        "title": "Who are you? Take the 2013 survey!",
        "content": "Hi folks, just a quick note here to remind y’all that the yearly Stack Overflow User Survey is live!\nWe’ve edited the questions/answers based on your feedback from last year’s survey and suggestions posted on Meta.\nAs a small token of our appreciation, we’ll be donating $1 for each completed survey to your choice of one of this year’s Stack Exchange Gives Back charities (on top of what we’re already donating on behalf of each site).\nAs always, we’ll be posting the results here on the blog once the survey is completed.\nTake the survey!",
        "url": "https://stackoverflow.blog/2013/12/18/who-are-you-take-the-2013-survey/"
    },
    {
        "title": "About Page 2.0: The QuickStartening",
        "content": "We’ve just rolled out a new Quick Start guide to help new users learn the basics. Here’s one example, but you can find any site’s version by going to sitename.com/about.\n\nImagine you’re visiting a new friend’s home and…\n“Please, make yourself at home. Oh, actually, could you not sit on that? Yes, it _looks_ like a couch. That’s what makes it so avant-garde. But it’s actually art. Whoah, careful there, too – I see your confusion, as that does _resemble_ a doorknob, but it’s actually a very small furnace. And – I’m sorry, but – could you NOT use a coaster? We’re testing the effects of wet drinks on finished wood, and coaster usage generates noise in our data.”\nWhen you’re surrounded by familiar things, but using them the way you normally do leads to different, negative outcomes, it’s extremely disorienting.\nAt Stack Exchange, “weird” is a feature, not a bug.\nOur sites are different. And that difference is deliberate. The things that confuse folks who are used to forums, or those broad, “ask anything” sites are the very things that we believe make us work better.\n\nFor us, different is good. Just like my mommy always told me. But it’s still jarring. And when it’s too jarring, potentially valuable contributors are put off and leave. They didn’t get help, and we lost an expert. Being jarring came at a high cost.\nEasing them into our weirdness.\nTo mitigate new users’ frustration, we need a page that can do three things:\n\nDescribe just the ways that we’re different.\nWe don’t bother telling users about the things that are similar to the other sites they’ve used. Instead, we focus on the delta – the things that are likely to be surprises to them. For example:\n\nPosts are collaboratively edited\nChit chat and pure discussion are generally not welcome\nSome things that sound a lot like what’s on topic are expressly off-topic here, and questions about those things get closed.\n\n\n\n\nNow, obviously, users could just discover these things as they use the site, but however much you do or don’t grok our system, surprises suck. Most of life’s surprises fall closer to the kind involving gum discoveries in improbable locations than the ones that come in pony-shaped boxes. Whatever you think about a rule’s merit, learning about it after you’ve broken it tends to adversely impact your view of it. There’s a big difference between giving your wife a poem you wrote her, only to receive a red-lined markup, complete with suggestions as to how to be less derivative, and having her edit one that you’re hoping to submit to a journal after she offered to give you feedback.\n\nExplain why we’re different.\nIf you’re going to make someone think, or god forbid, try to change the way they do something, you damn well better convince them there’s a good reason.\n\nWhy allow users to edit each other’s posts? Because it makes the average quality of our content higher than sites where responses are limited to a single user’s experiences.\n_Why _edit out harmless chit chat? Because we want to make the best answers _more findable__ _than they are in traditional forums.\n\nIf you tell someone you don’t allow chit-chat, but you fail to give them the reason, the first time they have their “thank you!” deleted as noise, they’re less likely to think about our “answer findability optimization” than our “tendency toward pedantic, manners-hating fascism”.\nGet them to actually read it.\nResearch tells us that pages like this are significantly less effective if no one reads them. The challenge is that, surprisingly, most people who arrive at a website with a problem to solve do not seem to have the following first instinct:\n“I wonder if they have any detailed, hopefully exhaustive documentation that covers their rules, best practices and societal mores. I’d just love to read it in its entirety before trying to get help with my problem!”\n\n\n\nNow, I do realize that some non-trivial portion of this blog’s audience is like us, and is thinking that that’s actually exactly what we might do. Which is why we love you so much. But, most people, even most experts, are not like us. Please trust me when I tell you this:\nMost people do not believe they should need to expand their education in any way whatsoever prior to typing in a box on the internet.\nThey just don’t. So, if you want any shot at getting them to read a primer, you need to make it easy on the eyes, and keep it to a length that respects their time, rather than one that implies that they may need to secure some provisions or sled dogs prior to proceeding.\nSo, we pared it to just those topics that were absolutely necessary for a new user to get started successfully. Which was the hardest part; it’s much easier to be comprehensive than brief. Some of our choices may surprise you, but they all resulted from analysis, testing, and discussion. “Tags? Really?” Yep, we felt the same way. Until we did some user testing and almost every single user on the non-tech sites expressed some variation of the following:\n*“You said I had to add a tag. I didn’t even know what a tag WAS, but I used my context clues and I figured it out. And added one. And now it’s telling me that I NEED MORE REPUTATION TO CREATE NEW &%$ing tags. I hope a rock falls on you. A heavy one.”**\nTagging may not seem like something a new user needs to be thinking about, but it’s actually critical because almost invariably, they get it wrong. The same is true for comments and even editing. The subject-matter experts who do stick around long enough to make a few mistakes will learn, but often after frustrating themselves – and site regulars – in the process. Knowing roughly what to expect going in should help to ease the transition for all involved.\nWhich is good, because we can’t afford to have a site’s next Jon Skeet wasting his time casting geologic hexes on me, when we really need him to focus his energy on answering questions. Hopefully, this guide will help.",
        "url": "https://stackoverflow.blog/2013/01/29/about-page-2-0-the-quickstartening/"
    },
    {
        "title": "VOTE NOW in the 2013 Stack Overflow Moderator Election",
        "content": "It’s time once again to cast your vote for the next Stack Overflow moderators. The primaries have just ended, and the top ten candidates can be found here: http://stackoverflow.com/election.\nWhy more moderators?\nWe’re running the election now (rather than a year from the last election in June) because veteran moderator Tim Post is stepping down in order to work with us as a Community Manager! While we’re extremely lucky to have his hard-working brilliance brought to bear on the problems we face managing all these sites, his transition does create an immediate need for a replacement on the SO mod team.\nBut of course, we’d be running an election soon anyway; as amazing as the current Stack Overflow moderators are, the workload continues to grow:\n\nWhat moderators do\nJeff laid out the basic philosophy in A Theory of Moderation:\nModerators are human exception handlers, there to deal with those (hopefully rare) exceptional conditions that should not normally happen, but when they do, they can bring your entire community to a screaming halt — if you don’t have human exception handling in place.\nAs the previous graph indicates, flags – the primary embodiment of those exceptions – are a fairly frequent occurrence on Stack Overflow, purely because of its size. That said, a lot of flags aren’t identifying things that are particularly exceptional: in particular, posts that need to be closed (duplicates, off-topic questions, etc) or are of extremely poor quality aren’t all that uncommon on a site that gets over 7000 new questions and 11K answers each day. While moderators are well-equipped to handle these quickly, they don’t actually require moderators when a sufficient number of experienced users are willing and able to help.\nThe effects of improved community moderation tools\nI mentioned last year that we were working on tools that would help to distribute the load more evenly between the elected moderators and the community as a whole. Well, eight months after their introduction, I’m happy to report that the revamped Review system is doing exactly that:\n\nAs Jeff wrote:\nWe designed the Stack Exchange network engine to be mostly self-regulating, in that we amortize the overall moderation cost of the system across thousands of teeny-tiny slices of effort contributed by regular, everyday users.\nThat’s not empty rhetoric – on a site the size of Stack Overflow, it’s absolutely essential. Geoff Dalgas came up with the design for the new review system based on his observations of wikiHow’s Community Dashboard: individual tasks, each focused on a specific need with specific actions to be taken and specific guidance provided for new users. The philosophy: don’t just give people stuff to do – help them learn how to do it.\nGeoff, Emmett and Kevin have done some amazing work in making these new tools as fast and effective as possible; while there have been some growing pains and a few unexpected challenges, it’s great to see folks jumping in to help so enthusiastically. In the past 30 days, we’ve seen:\n\n\n9384 suspected low-quality posts cleared, 1608 deleted, 319 edited.\n\n\n30339 suggested edits approved, 15497 rejected, 4949 improved\n\n\n17434 posts that’d been voted or flagged for closure closed, 3308 left open, 376 edited\n\n571 posts reopened, 2203 left closed, 56 edited\n\n(a detailed breakdown of actions to first posts and late answers can be found here.)\nThat’s a lot of work being done by a lot of people… Heady stuff. To be sure, that still leaves a huge amount of work for elected moderators, but I think it demonstrates the ability of the whole community to step up and assist when the opportunity is provided, that thousands of you are still willing and able to work together to created and maintain the site that you want to be a part of.\nSo as you go to cast your votes today, looking over each candidate’s stats and reflecting on what they’d do as a moderator… Remember that moderation doesn’t start with winning an election.",
        "url": "https://stackoverflow.blog/2013/03/08/2013-so-moderator-election/"
    },
    {
        "title": "Why We (Still) Believe in Working Remotely",
        "content": "It’s 2013, almost three years after we first raised money and started growing beyond the first four employees. At the time, Jeff wrote a great blog post about working remotely, basically laying out our plan for how we were going to make it work. Now we’re a few years in and it’s time to update it with, well, what actually happened.\nFirst, where are we now? Stack Exchange now employs 75 people, roughly evenly split between sales (and sales ops and marketing) and product (development, ops, design, community management). The product side is where our remote working happens: we have 16 full-time remote and 18 in-office developers, sysadmins, designers, and community managers. So we are very much a hybrid team, which I’ve come to believe is the best of both worlds. I’m the lead of engineering, so I’m mostly going to talk about developers, but a lot of this applies to other positions as well.\nWhy we believe in letting people work full-time from home\n#1: It lets you hire good people who can’t move. Hiring remotely opens you up to an enormous pool of people who can’t move. I can’t stress this enough: for every one person who is in your location or is happy to move there, there are 100 more who are not. They’re tied down by a spouse with a job, a kid in school, a visa they can’t get, or a mortgage they can’t get out of. If you’re hiring for technical positions, hiring remotely is the best-kept, blindingly obvious secret for finding people. By hiring remotely, we have been able to fill our team with awesome people with lots of experience, who were stuck in happily living in places like Corvallis, Oregon or Forest of Dean, UK (Seriously, look it up. It’s basically The Shire.)\n#1a: You don’t lose people to silly things like their significant other going to medical school. Before I worked at Stack Exchange, I worked at Fog Creek. I watched at least five great people leave because their family situation made it necessary to move, and Fog Creek had (at the time) a strict no-remote-workers policy. This drove me crazy. These were amazing employees, in whom the company had already invested deeply, who were now walking out the door because they couldn’t live in New York any more. At Stack Exchange, we’ve already had two people move away from New York, who are still happily employed doing the same job they were always doing. If we didn’t allow working remotely, we’d be down at least two great developers.\n#2: When done right, it makes people extremely productive. Private office? Check. Flexible hours? Check. Short commute? Check. I’ll let you in on a secret: most of our remote developers work longer hours than our in-office devs. It’s not required, and probably won’t always be the case, but when going to work is as simple as walking upstairs (pants optional, but recommended) people just tend to put in more hours and work more productively.\n#3: It makes you focus on more than butts in chairs. As a manager, I can’t easily know how many hours each person on my team is working. This is actually good for me because it forces me to look at what they’ve done. It’s good for the remote person as well: they can’t fool themselves into thinking that just because they’re in an office, surfing Reddit for an hour is work. In a perfect world we’d both already have this perspective, but it’s amazing how easy it is to delude yourself into thinking that “going to the office” = work.\nWhat we’ve learned\n#1: Remote working isn’t for everyone. There’s a tendency to think that working from home is all sunshine and rainbows and working in your PJs. It’s not. You miss out on being around people (which wears even on introverts), doing fun stuff like playing ping-pong or having lunch together, and (sometimes hardest of all) you lose a clear distinction between work and the rest of your life. Some people thrive when working from home, while others wither or just… drift. We’ve had people move both ways: remote people deciding to come in to the office, and people in the office deciding to go remote. The key, for us, is offering both and helping people decide which is best for them.\n#2: Working remotely is a skill you need to hire for. If remote working isn’t for everyone, you better be sure that the person you’re hiring to work remotely is going to be good at it. The most important thing that we look for is that they must be self-motivating and proactive: self-motivating in finding things to do, proactive in communicating with the rest of the team. Our remote developers are some of the most argumentative people in the whole company, because we hired them to be that way. We like opinionated people. Opinionated people find things they care about to work on and make sure you know what they think, which is essential if you’re not sharing an office together.\n#3: You have to commit to it as a team (and a company). There’s no halfsies in a distributed team. If even one person on the team is remote, every single person has to start communicating online. The locus of control and decision making must be outside of the office: no more dropping in to someone’s office to chat, no more rounding people up to make a decision. All of that has to be done online even if the remote person isn’t around. Otherwise you’ll slowly choke off the remote person from any real input on decisions.\n#4: Communication is hard (but it was always hard). I am far from the first to point it out, but the hardest problem in growing a company from 4 to 75 people (and, presumably, to 200) is communication. When there were 4 people, everyone knew everything. When there are 75 people that no longer scales. So you have to work out your channels of communication, and that’s doubly true with remote workers because you can’t rely on overheard conversations or gossip to spread the word. You have to force yourself to be explicit in communication.\nHow we do it\n#1: Google Hangouts. Google hangouts are the lifeblood of our organization. If you haven’t tried them for video chat, you’re living in the Stone Age. We have persistent hangouts for every team available at URLs that everyone knows. We spin up one-off hangouts for quick video chats. We use them for meetings, for hanging out (no, seriously), for demos, for teaching… for everything. There really is no substitute for face-to-face conversations, and when you get to the point where people in the office are actually preferring hangouts to talking in-person because it’s easier, you know you’re on to something.\n#2: Persistent Chat. Chat is good for shorter conversations, or quick pings to ask someone a question. It has two big benefits: (1) it’s asynchronous enough that people can get back to you when they have a second, and (2) it’s persistent, so other people can skim it and catch up on what they missed (vital when you’re in different time zones). Every company should have a chat system, whether they have a distributed team or not. It’s better than interrupting someone at their desk or dragging someone into a hangout for a quick question. We built our own chat system, but there are good alternatives like Campfire and HipChat out there.\n#3: Email. As flawed as email is, it’s still alive and kicking. Email is for fully asynchronous communication (don’t use email if you need a response today), and for communicating status updates and decisions. We have a standing rule that all decisions must be typed up and shared with the rest of the team via email, basically what Jeff described at the beginning. Each team sends out a weekly status update to the whole company giving a high-level overview of what’s going on, so teams don’t get isolated from one another.\n#4: Trello + Google Docs. We use Trello for keeping track of who is working on what, and Google Docs for notes, specs, designs, etc. Both are excellent tools that you should use even if you’re not working remotely.\nThat’s our story\nDistributed teams aren’t for everyone, but they are working extremely well for us. Yes, they are more work, but for us it is easily worth it because of the quality of people we get and the quality of life we’re able to offer them. For us, it’s been a part of our DNA from the beginning and something we’re committed to making work long-term. Will it still work when we hit 500 employees? I don’t know, but I’m excited to find out.\nDid I mention we’re hiring?\nSound like the kind of place you’d like to work? We’re hiring, especially developers and designers. We’re still figuring it all out, but we’ve got a great team and some really interesting problems to work on. Come be a part of figuring out what the future of remote working looks like.",
        "url": "https://stackoverflow.blog/2013/02/01/why-we-still-believe-in-working-remotely/"
    },
    {
        "title": "Max, Oded, Wendy, Val, Shefali, and Mike: Welcome to the Family!",
        "content": "We’ve been busy hiring more of the most talented people on the planet! Three cheers for the newest employees at Stack Exchange:\nMax Horstmann, Web Developer (Careers 2.0)\nNew York\n__Max joins Stack Exchange as a developer on the Careers team. Originally from Denzlingen, Germany, he previously worked on the Windows team at Microsoft. On a recent one-year career break, he and his wife had a chance to travel to glaciers in South America, deserts in the Middle East, and jungles in Southeast Asia. His mission for the next five years is to sort all the pictures taken on this trip, write a few more mobile apps, and find out which German bar in New York City plays the best Blasmusik.\nOded Coster, Web Developer (Core)\nLondon\nA long time Stack Overflow user and contributor (Beta badge, baby!), Oded is highly familiar with the ins and outs of Stack Overflow and promises not to introduce too many bugs. Originally from Jerusalem, Israel, he now lives in London, England with his wife and two children.\nWendy Paler, Account Executive\nNew York\nWendy grew up in Wisconsin and has been living in New York for over five years.  She is very excited to move into the tech field as a member of the Stack Exchange team. Outside of work, you might find Wendy sharing a delicious meal with friends in a restaurant, checking out a concert, show, or museum, taking a spin or yoga class, or pretending to be a Food Network star in her Brooklyn kitchen.\nValentina Perez, Office Manager\nLondon****\nVal was born in Argentina (won’t eat beef), grew up in Ottawa, Canada (hates snow), and has lived in London for 15 years and couldn’t imagine living anywhere else. She has a certificate in Web Application Development from the Open University, and is mega excited to have the opportunity to work for Stack Overflow and set up the way the new London office will be run. On her spare time Val is part of the Jeerios, the jeerleading squad for the London Rollergirls. She also loves music, dancing, baking, and dinosaurs.\nShefali Shah, Sales Representative\nDenver\nHailing from the bustling city of Mumbai, Shefali is an interesting mix of the East-and-West. Armed with a BS in Business Admin with an emphasis in Finance and Entrepreneurship from CU Boulder, she is excited to join and contribute to the Stack Exchange team. On the weekends you will find Shefali dancing with her East Indian Dance Company all over Colorado, or just catching a meal or a flick with her homies around town.\nMichael Hardy, Account Executive\nDenver\nMichael is a native of Atlanta, GA who moved to Colorado 11 years ago to go CU Boulder.  He met his wife in while in school and decided to trade humidity for all four seasons and a plethora of microbreweries (Belgium, Aged Sours, Cask Ale… Yes Please!). On the weekends you will find Michael chilling with his family, trying a new breakfast joint, exploring the Rockies and/or playing competitive baseball.\n\n_Visit our careers page to learn all the reasons Stack Exchange is a ridiculously awesome place to work. _Want to see your face in our next new hire announcement? Here’s who we need:\nWeb Developer (NYC or telecommute)\nProduct Designer (NYC or telecommute)\nSales Representative / Account Executive (London)\nSales Representative / Account Executive (Denver)\nSales Representative / Account Executive (NYC)\nCommunity Manager (NYC)\nCommunity Manager (telecommute)",
        "url": "https://stackoverflow.blog/2013/02/25/max-oded-wendy-val-shefali-and-mike-welcome-to-the-family/"
    },
    {
        "title": "Podcast #50 – Listen To This Podcast",
        "content": "Welcome to Stack Exchange podcast #50, featuring usual suspects Joel Spolsky, Jay Hanlon, and David Fullerton, plus special guest Shog9 aka Nine Shogs Shogging.  And remember, today’s podcast is sponsored by the House of Lords, bringing you excellent laws, 100% free!\n\nThis is podcast #50… sort of. It’s the 50th podcast since we switched from the Stack Overflow podcast to the Stack Exchange podcast, but we’ll celebrate anyway.\nOur most recent blog post [had an instruction in the title](http://blog.stackoverflow.com/2013/07/say-hi-to-nine-of-our-newest-newbies/), and 80 people bothered to do so. Apparently, our blog post titles have power. We probably promise only to use it for good.\nSite milestones, featuring Jaydles. Since our last podcast, we have launched [Space Exploration](http://space.stackexchange.com/). As of this recording it’s in private beta, but it may be public by the time of publishing. The activity level is very good – 150 questions in the first few days. 136 of them are even open! (Amusingly, the proposal faced [some promotional setbacks](http://discuss.area51.stackexchange.com/questions/11018/space-exploration-proposal-promotion-deleted-because-of-area-51-connection) during the Area 51 process.)\nNew features. We redesigned two small but important pages: the [badges page](http://stackoverflow.com/help/badges) and the [privileges page](http://stackoverflow.com/help/privileges), which used to be extremely confusing. We also fulfilled an [ancient [feature-request]](http://meta.stackoverflow.com/q/915/165581) – you can now retract close votes.\nJon Ericson is the newest member of the Community Team, and since Community Managers have lots of direct interaction with the community we like to introduce them personally. He’s a top user on [Biblical Hermeneutics](http://hermeneutics.stackexchange.com/users/68/jon-ericson) and we are happy to have him on board.\nReason #48923 to [work at Stack Exchange](http://stackexchange.com/about/hiring): we now have two private chefs working for us. They are awesome.\nAlso,  today is the rollout of our custom beer pong table. Blame Jay and Michael.\nWhat is there that’s left to say about closing? We made some changes to closing. It’s close to our hearts because a) we hate fun, and b) the whole reason that people like us (and also hate us) is because we close all the crap. But people don’t _feel_ that way about closing. So we needed to learn to close less hatefully.\nEnter: [the War of the Closes](http://blog.stackoverflow.com/2013/06/the-war-of-the-closes/). Jay walks us through what changed. Including statistics! And buckets!\nSo why do we have to close questions at all? Joel has the answer! Because otherwise we would be like Yahoo! Answers. Joel walks us through the history of programming questions, from the Dark Days. It takes a while. Get comfortable.\nAlso, [we still hate fun](http://blog.stackoverflow.com/2010/01/stack-overflow-where-we-hate-fun/). (If you didn’t copy down the question number, [this is the question](http://stackoverflow.com/questions/953714/face-recognition-library) we talk about for a while.) This could be a podcast all on its own. [Here’s the Meta.Travel.SE question we discuss](http://meta.travel.stackexchange.com/questions/13/localized-questions). [Here’s the FlyerTalk example thread](http://www.flyertalk.com/forum/manufactured-spending/1455542-pin-available-now-visa-mc-prepaid-debit-cards.html) Joel was talking about.\nJoel broke the shades in the conference room. Possibly forever. Then, back to close reasons. We realized we couldn’t ever cover all of the off topic questions, so there’s an “other” free-form reason.\n\n\n\nGo to stackoverflow.com and search for “closed:1” and click “newest”. This will show you the most recently closed questions. You’ll hopefully find that the new set of reasons makes much more sense. We’re happy with the way\n\nThanks for joining us!  Today’s guest has been Nine Shogs Shogging, joining Jay Hanlon, David Fullerton, and Joel Spolsky.  Today’s episode was sponsored by the House of Lords. See you next time!",
        "url": "https://stackoverflow.blog/2013/07/25/podcast-50-listen-to-this-podcast/"
    },
    {
        "title": "Introducing our Careers 2.0 Employer Resource Center",
        "content": "When we launched Careers 2.0 back in 2011, we set out with a goal: make the job search process better for the millions of programmers who visit our site every month. Part of achieving this goal is educating employers about what you want from them. In the past, our annual user survey helped us help companies change the way they found and hired programmers, while Joel’s book on how to find the best technical talent and his talk on how to stand out and attract top talent are a few other examples of how we’ve worked to educate tech companies on what you really want.\nToday, we’re taking this one step further:\n[Announcing the Employer Resource Center on Careers 2.0\n](http://careers.stackoverflow.com/resources)\nEmployers are having a really hard time getting programmers to work for them — hardly a day goes by without another article, blog post or Tweet attesting to this. A study last year found that as many as 93% of employers find a disparity between the technical skills required and the level of the talent they’re able to find while recruiting. As a result, talented programmers are in incredibly high demand, putting you in a position to demand the best jobs, perks, and benefits.\nIn the Employer Resource Center, we offer advice on best practices, recruitment news and trends, case studies and product guides to help employers with developer hiring. We’ll be updating the content regularly (mostly via the new Careers 2.0 blog), so check back often! If you have any tips you think employers should know about hiring developers, please leave a note in the comments below.",
        "url": "https://stackoverflow.blog/2013/04/15/introducing-our-careers-2-0-employer-resource-center/"
    },
    {
        "title": "Get to know the new Stack employees",
        "content": "It seems like just two months ago (OK, it was exactly two months ago) that I announced our last batch of new hires.  Today I’m pleased to introduce our newest employees.  There are TEN of them … so get comfy and prepare to learn all about our latest hires, who seem to have an overall fondness for food, sports, music, and the great outdoors.\nJessica Brady, Associate Sales Representative (Careers 2.0)\nNew York\nJessica was born and raised in warm, sunny Florida, until she packed up and moved to less warm, less sunny Chicago for non-weather-related reasons (okay, it was school). She has lived in New York and worked in television for the last four years, but is excited to make the leap into a brand new industry at a great company like Stack Exchange. In her spare time, Jessica likes to run for fun, take in a baseball game (TV, radio, or in person), hang out with her four-legged friend Cash (like Johnny)…and yes, watch TV.\n\nMarco Cecconi, Web Developer (Core)\nLondon\nMarco is from Milan, Italy, and he has been traveling around the world for some years. He studied in Singapore, then worked in France, Portugal, and finally settled in the UK for the past four years where he lives in Kent with his wife and kid.  He goes by the handle of Sklivvz on the Stack Exchange network, where he has been a contributor since November 2008 and moderator on Skeptics since February 2011.\n\nPieter DePree, Recruiter\nNew York\nNative to sunny Florida, Pieter decided to trade in his flip flops and board shorts for a piece of the good life here in the Big Apple.  Pieter has a passion for travel and has, at last count, traveled to 27 countries including a year spent living abroad in China. Previously, Pieter has been responsible for high volume regional sales recruitment at ADP, as well as the national sales recruitment at Seamless! Outside of work, you might find Pieter hiking, sailing, or playing volleyball.  Pieter is very excited to be helping Stack Exchange grow its global sales teams!\n\nJim Egan, Sales Representative (Careers 2.0)\nDenver****\nOriginally from the south side of Chicago, Jim now feels the need to argue with people in bars that Chicago is the greatest city in the world. He’s passionate about the Bears, Bulls, Blackhawks, and White Sox, so Jim couldn’t imagine a better sports town. Leaving that behind and moving to the Rockies was tough but needed.  Armed with his trusty sidekick Loomis (pictured here, left), Jim plans to conquer the mountains and everything Denver has to offer. An avid crock-potter and terrible at accents, Jim hopes to fit in nicely.\nPaul Frey, Account Executive (Careers 2.0)\nLondon\nPaul has lived in London since May 2010 and he loves it!  He was born and grew up in Cologne, Germany. Due to this fact he’s a big supporter of his local football club, FC Koeln. But he doesn’t just watch sports; he also loves to be very active, playing European handball up the third German division, and also squash and football. But his biggest passion is cooking and eating! His cooking style is experimental and cross culture…he never uses recipes, he just combines the things he knows and likes. Most of the time his cooking tastes good. 😉\nTodd Jenkins, Sales Representative (Careers 2.0)\nLondon\nTodd originally hails from Boston (UK not US!) but now lives in London. He’s looking forward to transferring his sales skills to Stack Exchange! He really enjoys trying new foods and new restaurants, and he has a great love of the outdoors and adventurous walks. Apart from enjoying friends’ company in London’s nightlife, he does try to keep very sporty, although he admits shamefully that his two favourite sports are the two he’s the worst at (tennis and swimming). Todd is also a huge fan of Liverpool Football Club!!\n\nShikha Malhotra, Account Executive (Careers 2.0)\nLondon\nShikha grew up in Brussels / Belgium and has an Indian background. She has been living in London for over 6 years, and is super excited to join Stack Exchange’s growing UK sales team. During her spare time you will find “DJ Shake” mixing the latest Bollywood tunes with a mix of French hip-hop and Arabic flavor, reading books, and learning to play the “Dhol” (Indian drum).\n\nPawel Michalak, Sales Representative (Careers 2.0)\nLondon\nPawel is from Poznan, Poland and has lived in England for 7 years. He studied journalism and PR, and used to play handball (the best European sport ever!) quite seriously. He’s upgraded to playing football (the best international sport ever!), and can be found on London football pitches falling over, or screaming “Go Arsenal!” in support of the best football team in the world. You might see him on the road scooting cheerfully on his Vespa between angry Londoners stuck in traffic. He’s very excited about starting at Stack, as you can see here (CTAPT means START in Russian).\n\nBryan Ross, Web Developer (Careers 2.0)\nDenver\nAn LA native, Bryan Ross (everybody just calls him “Ross”) moved to Denver in 2010 after being chewed up and spit out by the rock music industry. A self-taught developer of 15 years, he has an unhealthy interest in language design, expensive keyboards, strong coffee, and music. When he’s not nitpicking about the merits of various programming acronyms, he can usually be found writing, recording, and mixing in his home studio.\n\nDerek Still, Sales Representative (Careers 2.0)\nNew York\nDerek spent the first three years of his career in equity sales & trading, and is excited about making the move to a growing firm with unlimited upside like Stack Exchange. He grew up in Philadelphia, spent summers in Cape Cod, and moved to the concrete jungle in 2010. Outside of the office, Derek spends his time traveling, rooting on Philadelphia sports teams (Go Birds), listening to the Grateful Dead, and hanging out with his brothers and friends.\n_Visit our careers page to learn all the reasons Stack Exchange is a ridiculously awesome place to work. _Want to see your face in our next new hire announcement? Here’s who we need:\nWeb Developer (NYC or telecommute)\nSenior Product Designer (NYC or telecommute)\nSales Representative / Account Executive (London)\nSales Representative / Account Executive (Denver)\nSales Representative / Account Executive (NYC)\nSenior Account Executive, Digital Ad Sales (NYC)\nCommunity Manager (NYC)\nCommunity Manager (telecommute)\nCustomer & Sales Support Agent (London)\nCustomer & Sales Support Agent (Denver)\nInbound Marketing Manager (NYC)\nMarketing Manager, EMEA (London)",
        "url": "https://stackoverflow.blog/2013/04/25/get-to-know-the-new-stack-employees/"
    },
    {
        "title": "Company pages on Careers 2.0",
        "content": "Stack Overflow has always had a strong focus on individual merit. Although collaboration is encouraged to some extent by the editing features, attribution on posts and the design of user profiles all tend to emphasize rugged individuality, that lone wolf toiling away at a keyboard.\n\nBut most of us don’t actually work that way. We’re social creatures by nature, and the most challenging part of finding a good job can be finding the pack you want to run with. In spite of the dearth of features aimed at networking, folks have been using Stack Overflow to find and research potential colleagues almost since the day it launched – so a couple years ago, we started looking for ways to make this a bit easier. Well, now it’s done:\nWith Company Pages, we’ve focused on the best ways to tell an interesting company story. And what better way to tell your story than with massive photos of workstations, team outings, hackathons, local attractions, and the people who make the companies who they are? There are tightly designed sections to list your company tech stack and benefits, along with plenty of room to be creative and communicate what makes your company special, what awesome products you’re working on, and the philosophy that drives your team forward.\n–[Introducing Careers 2.0 Company Pages](http://blog.careers.stackoverflow.com/2013/05/17/introducing-careers-2-0-company-pages/)\nGo check out the other wolf-packs… or show off your own on Careers 2.0.",
        "url": "https://stackoverflow.blog/2013/05/20/showing-off-those-valued-associates/"
    },
    {
        "title": "Welcome Tim Post, our latest Community Manager",
        "content": "Community management at Stack Exchange is an… _Interesting _job. Parts sociologist, cat-wrangler, therapist, software analyst and cheerleader, this small band of dedicated people work daily to make sure each individual community has the tools and support you need to be as awesome as you are. Of course, we don’t do it alone: from the very start, Stack Exchange attracted some amazingly helpful and insightful folk who’ve donated their time and effort to help out – and I’m pleased to announce that we’re adding one of them, Tim Post, to our full-time staff of Community Managers.\nTim comes from a systems programming background, starting out way back in the dial-up BBS days. He’s been working with and managing communities of various sizes ever since, and describes finding Stack Overflow back in the winter of ’08 like “getting stuck in a huge spiderweb”. His fascination with the system itself (both the software and the game-like aspect that drives so much participation here) led him to become a moderator, first on Webmasters then on Stack Overflow in the spring of ’11. Since then, he’s been a constant help and guide to the many folks using Stack Overflow and Stack Exchange.\nWhen he’s not working, Tim still enjoys programming (nowadays simply to satisfy his whims), photography, DIY projects and tinkering with whatever he can get his hands on. He resides in the Philippines, thus extending the reach of our global team into the west Pacific.\nTim’s been working with us on a trial basis for a little while now, and enjoyed our motley crew enough to sign on full-time. You’ll be seeing a lot more of him in the coming months, so please give him a warm welcome when he drops in on your site.\n\nThink you have what it takes to manage the communities on Stack Exchange? We’re hiring community managers, and if you’re not near our NYC HQ, that’s okay – we love remote workers. You get to work with awesome people like Tim and help us guide Stack Exchange as it grows. (And on the off-chance you’re fluent in Portuguese, you should definitely apply – we have a special project for you…)",
        "url": "https://stackoverflow.blog/2013/05/31/welcome-tim-post-our-latest-community-manager/"
    },
    {
        "title": "The War of the Closes",
        "content": "It pains me when I hear people say that our sites are unfriendly, or that we chase new users away. But it’s a hard problem, because our highest priority has always been the quality of content on our sites.  And it still is. We can’t lower our standards. We won’t.\nBut we have been working hard to make our sites more welcoming, reminding users that feedback can be clear and nice, and helping new users learn the ropes before they get frustrated.  And, as of today, we’ve completely overhauled closing. \nClosing, we just can’t quit you.\nOh, closing.  You are the watcher on the walls. You are the shield that guards the realms of men. Okay, so it’s possible that I may be thinking of the Night’s Watch. No matter.\nClosing is a big part of what separates us from other, um… less focused Q&A sites. It’s what ensures that our sites remain the kind of places that experts want to be. Closing… was working. But it wasn’t perfect.\nClosing wasn’t clear.\nOur close reasons were designed for _experienced _users, but did little to help the author of the question understand what the heck was going on. Over time, as we tried to make five close reasons address hundreds of question types, they became too broad to actually convey what’s wrong. Identifying the common factors of poor questions was a good idea, but we took it a little too far.\nIt’s confusing ask for help solving a specific programming problem, only to be told that it’s”not about programming”. Or to ask which router to buy, just to learn that you’re likely to solicit “debate, arguments, polling, or extended discussion.” Really?  You guys take routers pretty seriously here.\nNow, it’s not that we want those questions, but we need to convey exactly why we don’t want them.  Imagine if police could give out summons that, rather than, “failure to stop at a signal,” just read, “behavioral violation”. When feedback isn’t specific, it’s impossible to fix the problem, but easy to write it off as probably coming from a bunch of grumpy old jerkfaces who’d rather make you look like an idiot than actually help you.\nClosing wasn’t nice.\nHaving your question closed feels lousy; there’s no doubt about it.  Now, we don’t care as much about nice as we do about quality – but that’s not a real dichotomy.  We can be more constructive in conveying our standards without lowering them one bit.   And we need to, because whether we liked it or not:\nHaving your question closed feels like a personal attack.\n\nIt is off-putting to be told that your question is “not constructive”.  To the poster, “not constructive” doesn’t sound like polite feedback; it sounds like something a slightly detached guidance counselor might say to a child.  And,”not a real question”?  Does that make the listener want to get “realer” or to snarkily link to a definition of the word “question”?\nIronically, we picked those terms explicitly because they were nicer ways to convey what we meant. And they were nicer than, “You’re kind of ranting and being a jackass,” or, “No one can answer that ambiguous nonsense.”  But so is prefacing my feedback to my wife with:\nIt could be just me, but I feel like you’re acting completely nutballs crazy.\nIn both cases, we’ve gotten nicer than we started, but we’re still pretty far shy of where someone might actually accept our feedback.\nFixing your closed question didn’t work\nThe goal was always for some closures to drive an edit, improve, re-open cycle. The user gets helped, gets better at asking, and the community gets useful content. Unfortunately, since there was no way to know when a question had been improved, this almost never happened.\nWe can do better.\nWe’re not going to lower our standards.  But if we want to educate new users, we need get better at three things:\n\nmake users want to improve questions, not argue about them – “terminated as too sucky; re-submit when less so,” and, “needs more information, add detail to move forward” are different. One makes you want to work your way to the next stage. One makes you want to kick someone’s shins.\nmake it clear exactly what needs to be fixed, or is problematic, without relying on information on another page.\nprovide a clear path for to get questions re-opened –  questions that are brought up to our standards should get reopened.\n\nHere’s how:\n\n“On hold” will replace “closed” on newly closed posts\nThe word “closed” sounded final. Think about “closed” discussions, real estate deals, or job applications. In each case,”closed” means,\na) additional revisions are not welcome, and b) the matter won’t be further considered.We led with a word that sounded final, so when we eventually told users they could edit their post, they weren’t listening; they were dusting off the old debate uniform to argue their case.“on hold” better conveys what we always meant:\nIf you can edit your question to better fit our model, we can get you the help you need.\nQuestions _not _re-opened within five days will revert to displaying as “closed,” to serve as a clearer signpost going forward.\nNew close reasons are nicer and clearer\n\n“not constructive” and “not a real question” are replaced by:\n\ntoo broad – There are either too many possible answers, or good answers would be too long for this format. Please add details to narrow the answer set or to isolate an issue that can be answered in a few paragraphs.\nunclear what you’re asking – Please clarify your specific problem or add additional details to highlight exactly what you need. As it’s currently written, it’s hard to tell exactly what you’re asking.\nprimarily opinion based – Many good questions generate some degree of opinion based on expert experience, but answers to this question will tend to be almost entirely based on opinions, rather than facts, references, or specific expertise.\n\n\nThey’re much less likely to make the reader defensive, and much more specific about exactly what to fix.\n\n“Off-Topic” now includes site-specific close reasons\nMany communities have decided that some questions that sound like they fall under the topic “headline” (“cooking”,  “photography”, etc.) should be explicitly disallowed:\n\n\n\nOn our cooking site, recipe requests are off-topic, (but recipe replacements questions are allowed).\nOn photography – “fix my picture” questions are off topic, (but specific technique requests are allowed).\nStack Overflow is about programming, but programming questions you’d solve on a whiteboard or that ask what’s wrong with a large block of code are no good.\n\n\nEach example seems on-topic, but the community definition of what’s allowed has been adjusted to exclude them. These nuanced definitions have always been in each site’s help center (formerly the FAQ,) and are also the new user About page.\nAnd, as of today, they are also available to “off-topic”  close-voters right in the close dialogue. Users can pick one from the site’s list, or if none apply, they can enter a free-form one which will appear as a comment and as a choice for others voting to close the same question:\n“Your question appears to be about ferret grooming, which is off-topic for Stack Overflow”.\nThese site-specific reasons will also address situations previously covered by “General Reference” and “Too Localized”. Those were the least used and most misused reasons – moderator and team sampling found a huge percentage of their application to be erroneous. (References to location in a question were particularly dangerous – never mind that a couple of billion people might live there.)  But they did have some important uses:\n\n\nQuestions that could be answered with a single dictionary search on English, and\nUnguided requests to debug huge blocks of code on Stack Overflow\n\n\nIn almost all of their good uses, they were clarifying what a community, over time, had deemed to be off-topic for their site. Programming questions,_ but not code dumps. _English language questions, but not single search definitions.  \n\nDuplicates now focus on redirection to the answers you need\nAll dupes now must point to an answered question, and the new language focuses on getting you answers:\n\nmarked as [duplicate] – this question has been asked before and already has an answer. If those answers do not fully address your question, please edit this question to explain how it is different, or ask a new question.\n\nQuestions edited by the original poster automatically go to the re-open queue\nOnce there, other users will review and can re-open improved posts.  No more flagging your own question, or going to Meta to  request a formal appellate review. If you make meaningful edits to your question within five days of being put on hold, it gets considered for re-opening.\n\nOh, one last thing.\nThank you. A ton of work has gone into this, and as usual, the best ideas came from user input on Meta, so we hope you’re as proud of these changes as we are. We truly appreciate your feedback, and you’ve been incredibly vocal in your support for almost all of the changes.  We know some of you have concerns about moving the good parts of “too localized” into the off-topic menu. We’re listening, and are going to keep a close eye on it as we roll it out network-wide.  In particular, we want to know if you’re finding things that you can’t close now, but could before, and we’ll continue to adjust and iterate based on what we learn.\nIt really seems like there should be some kind of badge for reading something this long, but the devs shot that idea down.  Hard.  Apparently we “will never ever offer badges to promote your endless ramblings, Jay.”\nIt would have felt nicer if they’d told me the idea was on hold.\nhttp://www.youtube.com/watch?feature=player_detailpage&v=xGytDsqkQY8#t=17s",
        "url": "https://stackoverflow.blog/2013/06/25/the-war-of-the-closes/"
    },
    {
        "title": "Announcing the Apptivate.MS competition semi-finals",
        "content": "When we announced the Apptivate.MS competition two months ago, we were hoping that a few members of this community would create and submit a few solid Windows 8 apps – forty or fifty, maybe. A hundred if it really went well.\nSo when we saw all of the high-quality and innovative app submissions that poured in, we were quite frankly blown away. The Stack Overflow community submitted almost 400 apps. See for yourself!\n\nYet again, the Stack Overflow community has crushed it.\nThe quality and size of the submission pool made our next job really, really difficult: narrowing them down to just 50 apps for the semi-finals, ten for each of the following category groups: Knowledge, Games, Interest, Work, and Social. A panel of Stack Exchange judges (appointed by Microsoft) ranked all the submissions based on the following rubric:\n\nInnovativeness/Creativity (30%)\nQuality of Submission (30%)\nUse of Windows 8 features, such as the live tile display (30%)\nPublic Appeal (voting) (10%)\n\nWith these criteria in mind, we put together a killer semi-finalist slate. You can vote for your three favorite apps in each category group between now and December 16th (23:59 UTC).\nThe three highest-voted apps in each category group will win prizes no matter what. They’ll also be eligible for a $5000 cash grand prize, so cast your votes to ensure that the best app wins the day. Not an altruist? Voting in the semi-finals also makes you eligible for the reviewer contest.\n\nThe three top-voted semi-finalists in each category group will win great prizes!\nYou can also continue to leave comments on any app, which also gets you entry into the reviewer contest – as well as providing valuable feedback to Windows 8 developers.\nThe semi-finals voting phase ends December 16th, 2012, so get your votes in now!",
        "url": "https://stackoverflow.blog/2012/12/10/windows-devs-on-stack-overflow-when-did-this-happen/"
    },
    {
        "title": "Say Hi to Nine of Our Newest Newbies",
        "content": "The year is half over, and we’re still hiring like crazy.  This year we’ve added 22 associates, which means our employee count has increased by 23.4% in the past six months. Yay math! Raise a glass to these fine folks, and join me in congratulating them on their new awesome jobs.\n\nMatt Charette, Sales Representative (Careers 2.0), New York\nMatt was born and raised in New Jersey, USA. He began his career at a small start up before making his move to big banking at Merrill Lynch. He spent three years in finance before making his move to Stack Overflow. After hours, Matt loves to hang out with his fiance (Jen) and his dog (Maverick) in Hoboken, NJ. If he’s not hanging with them, he’s out exploring the mountains in northern New York.\n\nBen Collins, Web Developer (Core), Greenville, TX\nBen is a Texas native, currently living in a small town east of Dallas.  After completing his engineering degrees at Texas A&M University, he started a family and is now a proud husband and dad of 5 (soon to be six!).  Ben has been a contributor on Stack Overflow since August 2008.  He likes to read theology, watch sci-fi, and is also a budding triathlete.\nMichael Dillon, Associate Sales Rep (Careers 2.0), New York\nMike was born and raised, and currently resides, in the garden state of New Jersey. He recently finished a long journey as a part-time student at Rutgers-Newark with a concentration in chemistry. He never wanted to join the world of research but just had a knack for the hard sciences. He put himself through school as a hair stylist in Hoboken, NJ, and is always available for hair advice.  In his free time, he likes to workout, go to the beach, snowboard, and cause trouble in NYC.  He is booking a holiday to London for early September and doing his second training in Denver so hopefully will be able to meet the whole team shortly.\n\nTom Limoncelli, System Administrator, New York \nTom has traveled around the world but has always lived in the NYC area.  He grew up, went to college, and lives in New Jersey.  While on his daily train commute he listens to podcasts on a variety of topics include politics, media, economics and technology.  His spare time is spent writing books about computer system administration (some of our users on ServerFault.com say they aren’t too bad).  He’s excited to join Stack’s SRE team!\nDavid Lislet, Sales Representative (Careers 2.0), London\nDavid grew up in the sunny and pink city, Toulouse (Southwest of France), and spent his teenage years on a tiny South Pacific island called Wallis (Need a map?? All right – it is close to Australia & New Caledonia). He traveled all around the world and started his career in Beijing, where he became a chopstick master. He enjoys traveling, tasting all kind of food (scorpions in China, kind of crunchy), photography, sketching, and listening old school hip-hop, jazz, and the band Ratatat. An avid sports guy, he played Rugby in New Zealand (not against the All Blacks) and recently joined a Crossfit center in London.\n\nTim Post, Community Manager, Mandaluyong, Philippines\nTim grew up in Baltimore, where he took an interest in programming at a young age. He spent most of his career as a systems programmer, which led him to The Philippines to work with his overseas counterparts. He ended up staying, having a family, and working remotely ever since. He joined Stack Overflow shortly after the beta, and after his second year of being a community-elected moderator, he decided that community management was what he really wanted to be doing. Where once he was a programmer for a living and a community manager as a hobby, he’s now a community manager for a living and a programmer as a hobby.\n\nMonika Pradhan, Sales Representative (Careers 2.0), New York\nAfter graduating from Boston University, Monika headed to NYC for business planning and sales strategy roles at Bloomingdale’s and Michael Kors. Now leaving the fashion industry, she is excited about starting her new sales role at Stack Exchange! Besides being a personal stylist to her friends and family, Monika is a gym-fanatic who blogs about her new workout regimens, inspiring fitness quotes, and favorite healthy meals. Monika also enjoys snowboarding, traveling, playing darts, and high-kicking (yes, that’s right… high-kicking).\n\nSara Rayman, Sales Representative (Careers 2.0), London\nSara was born and raised in New York, studied in the Midwest, and returned to her native NY for grad school. She recently packed her bags and moved across the pond to good ol’ London and has since been enjoying her time exploring her new city. In her spare time, she enjoys reading, cycling in the countryside, doing hot yoga, and cooking. She’s very excited to join the team at Stack and work for a really cool company!\n\nAllie Schwartz, Sales Representative (Careers 2.0), New York\nAllie Schwartz is a Brooklyn girl by way of Texas. She’s lived in New York for 6 years, and she spent the last 3 playing mom at Stack Exchange’s sister company, Fog Creek Software. Allie is an amateur cartoonist, a reality TV enthusiast, and a sucker for a good summer blockbuster. Nice to meetcha!\n_Visit our careers page to learn all the reasons Stack Exchange is a ridiculously awesome place to work. _Want to see your face in our next new hire announcement? Here’s who we need:\nWeb Developer (NYC or remote)\nMobile Developer (NYC or remote)\nIntegration Developer (NYC)\nSenior Product Designer (NYC or remote)\nSales Representative / Account Executive (London)\nSales Representative / Account Executive (Denver)\nSales Representative / Account Executive (NYC)\nCommunity Manager (NYC)\nCommunity Manager (remote)\nCommunity Manager – bilingual English/Portuguese (NYC or remote)\nWeb Support Specialist (London)",
        "url": "https://stackoverflow.blog/2013/07/01/say-hi-to-nine-of-our-newest-newbies/"
    },
    {
        "title": "Stack Overflow localizes Careers 2.0 in German",
        "content": "After months of work from our dev team, last week marked the official launch of our first localized site with Careers 2.0 in German. We celebrated the occasion in style on December 5 with a blow-out party at Betahaus in Berlin complete with product demos, free food, free t-shirts, oh, and German beer of course. \n\n(More pictures here.)\nBut why Germany? Well, aside from the fact that it gave us a great excuse to make these really cool t-shirts, we have a few other pretty good reasons for this expansion:\n\n\nGermans are the largest non-English-speaking group of Stack Overflow users in Europe\nTo date, visitors from Germany represent the fourth largest global audience who visit Stack Overflow on a monthly basis—making this the largest non-English speaking European userbase. And even though many of these users do speak English (at least for programming), employers or hiring managers who don’t speak English can’t use the Careers 2.0 global site as easily as fluent English speakers. With this localization, we hope to bring Careers 2.0 to everyone on both sides of the hiring equation.\n\nBetter exposure for our German candidates\n\nWe have more than 3,600 German candidate profiles in our Careers 2.0 database, and in a job market where German tech hiring needs have more than doubled in the past three years, programmer jobs are in hot demand. (In fact, a couple of guys even showed up to our launch party wearing QR code t-shirts in their search for a developer.) Making a German site will hopefully give these candidates even more exposure to all great local companies—not just those who have a hiring manager who speaks English.\n\nGermany’s tech market has been growing exponentially\n\nIt’s been estimated that 11 billion Euros are lost in possible output because German companies can’t hire enough engineers. And as the world’s largest resource for programmers (Google analytics counted more than 30 million unique visitors last month!), we hope to help solve that problem by connecting companies with the software developers they need.\n\nIt was a good excuse for us to start accepting Euros\n\nIf you log onto careers.stackoverflow.com/de, you’ll be prompted to pay for your job listings in Euros. If you’ve ever tried to buy something on a site in a foreign currency, you know what a pain it can be to deal with the exchange rates and credit card fees. Now we’re just more accessible for a lot more people. (We’re also now accepting the British Pound on the UK site.)\nAll in all, it’s been a great project for our team (though also a difficult one, as you’ll hear about in a future blog post) and localizing the site was an important way for us to support the German-speaking community on Stack Overflow.  As always, we’re open to hearing your feedback, so let us know what you think.\n\nP.S. We know we missed some things, so if you speak German, feel free to check out the site and let us know what we still need to fix.",
        "url": "https://stackoverflow.blog/2012/12/12/stack-overflow-localizes-careers-2-0-in-german/"
    },
    {
        "title": "Podcast #39 – The One with Wil Wheaton",
        "content": "Today’s guest is Jeremy Tunnell, who says it’s great to be here. He’s the new Product Manager on the Stack Exchange team. He works out of Nashville but is in New York with us, recording live in the podcast studio!\n\n\nAlso, on today’s podcast, everyone is going to eat a spoon of cinnamon and ten Saltines. Sam tried to eat a spoonful of cinnamon and did not succeed. The Saltine Challenge: also hard. The Gallon Challenge: also hard.\n\n\nJeremy is the new kid on the block. He started a few weeks ago and is our new resident UX Expert.\n\n\nWe should have listeners call into the podcast with their questions, like we used to! (This was before Jay’s time.)  Go to s.tk/podcastquestions to submit an mp3 of your question for next week’s podcast.\n\n\nJeremy is not from Texas, but he is from the South. We’re not sure how he got the horse up past security in the lobby.\n\n\nBack to Jeremy. He’s been focusing on the perspective of the new user (including making lots of brand new accounts). He’s trying to introduce the non-engineer perspective into our development process. He’s currently focusing on the sign-up process, which is critical for user acquisition.\n\n\nWhy do we have a homepage URL? In the old days, your name used to link to whatever homepage you put in there. Nobody uses it now, though, so we can get rid of it!\n\n\nJay points out that we have a fundamental difference between our power users and our casual users. Additionally, we have to wrestle with engineers vs. non-engineer types as users on our sites.\n\n\nDon’t make people think, or learn new things. (Don’t make me think about how you want me to enter my phone number.)\n\n\nJoel got in trouble with his bosses at Juno once upon a time. It had a 29-page wizard to get people to sign up, including a page for what diseases you had, and when your birthday and your kids’ birthdays were, featuring a horrible date picker (18 clicks to choose “August”).\n\n\nThe answer to all these arguments? Just test it and see what people do. (Good thing we don’t have to fly to Colorado to do usability testing anymore.)\n\n\nWe have a weird maximum age on Stack Exchange sites, so there are a ton of 89-year-olds on our site, apparently.\n\n\nWe have heard from a lot of people that our site is impossible to log into. Our site is optimized for programmers. A great example: OpenID! We talk about OpenID and OAuth for… a while.\n\n\nAnother example of something that’s a good idea for programmers but confuses everyone else is Gravatar. Gravatar is great if you already have an account, but the experience of trying to upload a picture is too many steps if you have to make a new Gravatar account.\n\n\nDo our listeners know how much Jeremy looks like Wil Wheaton?  Check out the Stack Exchange Team page to find out\n\n\nNews from the dev team! We had two outages this week, totally unrelated to each other. One was ten minutes and the other less than 30 minutes. (Nowhere near as bad as Tumblr’s catastrophe last night!) (Our status blog is on tumblr.) One was a boring hardware failure, and the other one is a result of the fact that we’re starting to outgrow our search solution.\n\n\nSo we’re investigating other options that will make our search even better (and it’s suddenly urgent)! So a side effect of these outages is that our search will get better. We talk about search for a while.\n\n\nSo if you’re interested in working on that, we’re hiring for our New York office, or remotely!\n\nIf you have questions for us, you can go record your question and send it to us!\n\nThat’s all for this week. See you on ChaCha!",
        "url": "https://stackoverflow.blog/2012/12/24/podcast-39-the-one-with-wil-wheaton/"
    },
    {
        "title": "Podcast #40 – Random Musings (Plus a Surprise Guest)",
        "content": "You’re listening to the Stack Exchange Podcast #40 (We apologize to everyone who expected Wil Wheaton last week)  Your hosts are David Fullerton, Jay Hanlon, and Joel Spolsky.  We also have a surprise special guest: Britton Payne, professor of Copyright, Trademark, and Emerging Technologies at Fordham University. He knows a lot of things about software patent law, so we grabbed him as he walked by the studio to talk to us.\n\n\nAbout 15 years ago, Congress passed the Digital Millennium Copyright Act to create some useful guidelines for the new digital landscape. We talk about what actually happens with the DMCA takedown notices, including loophole issues that Joel has discovered.\n\n\nSo that’s one part of the DMCA. The other one is anti-circumvention technology, and we go through many of the nuances there.\n\n\nSo the technological means of anti-circumvention have to be re-evaluated every now and then. New exemptions were announced in October regarding: ebook reading assisted technologies (like Amazon Kindles being able to read aloud to you); jailbreaking phones (not tablets); and unlocking phone handsets (not tablets).\n\n\nThis has been Copyright Update #1 on the Stack Exchange Podcast, brough to you by Britton Payne!\n\n\nSo what else is going on in the Stack Exchange universe? We just had a holidays! Part of our celebration included Winter Bash, which ends “today” (at time of recording). You can still check out all the details. Give us your thoughts about it on Meta.\n\n\n…including a “hat” that was a tribute to Jason Punyon, who is in a rock (jazz and disco, really) band. They played our holiday party at the Hotel Rivington, and they were astonishingly good.\n\n\nWe have a couple new sites to talk about – Politics & Anime. Each has just over 250 questions, so they’re doing okay, for baby sites. We discuss the pitfalls and strengths of each of these new members of our network (especially Politics).\n\n\n(Somehow we get onto the topic of the Black Hebrew Israelites.)\n\n\nPolitics is a difficult site to approach, but it’s not hard to pass the bar of being better than anything else that’s out there on the internet, and we’re well on our way to doing that.\n\n\nWe turn to Anime. None of us know very much about anime, but we manage to turn this site into a conversation anyway.\n\n\nNo news is good news, new-office-wise! Construction is constructioning. We’re moving in March, or so.\n\n\nThere’s a glimmer in Joel’s eye called Stack Overflow TV.  They’ll be broadcast live on the Internet on stackoverflow.tv, which we will remember to buy before this podcast is published.\n\n\nMeth questions! Er, meta questions! First, we tackle “How to deal with a highly voted non-constructive question“. What’s the problem with the question mentioned there? How do we solve this? We decide to call them “pivot questions”. The conversation leads us to another common type of easy question: “bike shed” questions.\n\n\nWhile we’re here, go follow us on Twitter to get the best questions from all of our sites. (It can be a lot to swallow.)\n\nWe experimented with automated twitter feeds and with manually curated twitter feeds, and have found limited success with both. We discuss how twitter feeds (and other types of feeds) work for our company and our sites.\n\nFor you people listening at home: We want to take your questions! Go to s.tk/podcastquestions to record your question for us to play and answer on the air. You can also send us a written message… somehow.",
        "url": "https://stackoverflow.blog/2013/01/10/podcast-40-2/"
    },
    {
        "title": "Welcome to Winter Bash 2012!",
        "content": "It’s been an amazing year for Stack Exchange, both as a network of experts and enthusiasts and as an organization. We launched twenty new sites, rolled out tons of user-requested features, and are helping 99% more visitors get answers than we were a year ago.\nLast year, we celebrated the holidays on Gaming with Hat Dash, where users collected virtual hats by doing various (good, helpful) things on the site. They were sort of like festive, temporary badges (and, like badges, borrowed another good idea from the XBox – earning the ability to customize your avatar).\nThe response from that event was so positive, we decided to extend that to the _entire network_1 this holiday season.\nWelcome to Winter Bash 2012!\n\nWhat is Winter Bash?\nFrom 19 December to 4 January you’ll be able to decorate your gravatar with a special hat. The hats used on Arqade smelled a bit funny, so we made up an all-new set of hats for you to earn this year. In fact, many of these “hats” aren’t even hats! There are sunglasses, moustaches, masks and other assorted headgear.\nEach hat has different criteria to unlock it, and there are even some secret hats that you won’t find out about until you happen to stumble across them accidentally.\n\nHats show up all over the site, wherever your gravatar is shown (well, except for a few places where they didn’t fit, like chat). To change which hat you’re wearing, or to admire your lovely hat collection, just visit http://winterba.sh or check out your user page:\n\nYou’ll also get a notification when you earn a new item:\n\nFor all those of you who really hate hats, there’s an “I hate hats” link in the Winter Bash dropdown. But give it a shot before you turn it off — you might find a hat you like!\n\nCheck out the Winter Bash FAQ for more details.\nWhy are we doing this?\nBecause it’s fun, and we love fun – at least, constructive fun, in moderation, at the end of a long, exciting and eventful year. Also, hats are awesome.2\n\n1Well. Only those sites that opted to participate. You must opt-in on Stack Overflow.\n2 Please note: virtual hats do not protect against the harmful rays of the sun – always wear sunscreen!\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2012/12/19/welcome-to-winter-bash-2012/"
    },
    {
        "title": "Announcing a new way to change your profile picture",
        "content": "One of our New Year’s resolutions here at Stack Exchange is to take a hard look at our user experience. As the network has grown and our audience expanded, the system has grown with it – but there are some rough edges in places that can use a bit of smoothing. You’ll be seeing a lot of improvements over the next few months, but today I’d like to announce the first bit of polish: built-in profile pictures.\nWe have used Gravatar to let you manage your profile picture since roughly six to eight weeks before Stack Overflow entered beta. Gravatar is a wonderful service that lets you use a consistent, recognizable image for yourself across many different services and sites. It’s free, it’s fairly easy to add support for it (which made it a great fit for Stack Overflow in the early days), it doesn’t require any special configuration to make it work on multiple sites (which made it a great fit as Stack Exchange grew) and best of all it supports distinct, recognizable default images for folks who haven’t uploaded their own.\nThere’s one problem: if you don’t have a Gravatar account, you can’t have a custom picture. One basic bit of personalization turns into Yet Another Username & Password, which is annoying if Stack Exchange is the only place you would ever use it, and somewhat embarrassing considering our support for OpenID means you don’t need another set of credentials to use Stack Exchange itself!\nSo from now on, anyone who wants a custom picture can simply upload one from their computer or the web. If you hover your mouse over your picture on your profile page, you’ll see a new link to ”change picture”:\n\nClick on that, click the “Upload a new picture” button, select a picture from your computer (or enter the URL of an image on the web), and finally click the “Upload” button. That’s it.\nIf you decide to switch back to your Gravatar, you can do that at any time:\n\nAs always, you can have a different picture and bio for each site, or use the button at the bottom of your profile edit page to copy everything network wide. And since we default to Gravatar for profile pictures, your existing photos (or abstract patterns) will remain unchanged until you want them to change.\nWe would like to thank Alan and team at Imgur for doing the image hosting and being incredibly helpful during the whole process. They turned what would’ve been a major development effort into something we could roll out in a couple of weeks.\nTry it out, and let us know what you think on meta!",
        "url": "https://stackoverflow.blog/2013/01/15/announcing-a-new-way-to-change-your-profile-picture/"
    },
    {
        "title": "Stack Exchange Gives Back 2012",
        "content": "2012 has come and gone, and we have accomplished many incredible things together. Our little corner of the Internet has changed the way people teach and share information with their peers. This has become a place to share the interests you are passionate about — a place to get better what you do, and you do it all with a bit of fun and humor and a chance to show off a bit on occasion.\n\nBut the biggest motivation that drives what we do is a sense of purpose — a sense that we are all doing something really important here. Stack Exchange isn’t created from the hard work of one individual. It takes the collective effort of much larger community working together.\nThat’s why we take this time of year to remember why we are here. This is the time we set aside to give back to the community.\nIt has been a tradition at Stack Exchange to make a $100 donation to charity on behalf of each community moderator. When the invitations are sent, watching the outpouring of charity selections come racing back in real time is breathtaking. Within hours, hundreds of moderators already selected their charity wishes. That kind of outpouring of support is something we can all feel good about.\nSo… on behalf of the 304 moderators of Stack Exchange, we will be making the the following donations to charity this holiday season:\n\nThe Humane Society — $2,700\nThe Red Cross (Sandy Relief) — $3,600\nWikimedia Foundation — $6,800\nElectronic Frontier Foundation — $6,900\nDoctors Without Borders — $10,400\n\nAnd to these projects that we use extensively and helped us build our own network of websites:\n\nHAProxy — $1,000\nOpenSTV — $1,000\nDotNetOpenAuth — $1,000\n\nSo here’s to 2012. Here’s to the moderators who volunteer their time, their passion, and their leadership to keep these sites humming. Here’s to the incredibly talented team at Stack Exchange who keeps the gears running and the lights on. And here’s to you — the communities who have worked so hard to become part of this shared vision. You are truly the best in the world at what you do.\nFarewell, 2012. Welcome, 2013!",
        "url": "https://stackoverflow.blog/2012/12/21/stack-exchange-gives-back-2012/"
    },
    {
        "title": "Winter Bash 2012 Conclusion: Boxing Day",
        "content": "So. We’ve torn through the advent calendar, tossed aside all the wrapping paper, and (hopefully) obsessively screencapped our gravatars wearing various kinds of silly hats. As of last Friday, Winter Bash 2012 is officially over!\nThis event was awesome. We had a total of 46,710 users participating across 76 sites, and we gave away 108,924 hats total. The most common hat was the And I Feel Fine hat, which 23,171 users earned for activity on December 21st. The least common hat earned was I Do Say, which was obtained by Bohemian, on Stack Overflow, and kalina, on Arqade for posting an epic 30 up-voted questions. Lots and lots of us were able to find all 7 unlockable secret hats, and a few even found an eighth. Well done!\nSadly, all good things must come to an end. We’ve packed up the hats (and archived the JavaScript) until next time. For now, you’ll be able to see the hats you won (and Jin’s excellent artwork) on http://winterba.sh. If you’re curious to see what hats other people earned, check out the leaderboard.\n\nI really loved seeing how you all got creative in making your gravatars work with the hats — some of which were comically large! Below are a very small number of the hats I enjoyed seeing. There were just too many hats I liked; I have tons and tons of screencaps of users wearing hats in fun, funny, cool, and/or interesting ways.\n\nOn some sites, even the Community ♦ user got into the spirit of things:\n\nThe best surprise (aside from the little blue circle letting me know I’d gotten another hat!) was seeing users I didn’t expect to enjoy hats sporting all sorts of interesting looks. Since Stack Overflow in particular tends to have a stronger “professional” focus, I tend to forget that folks who are passionate about their work get just as passionate about having fun now and again. Seeing some top users from all over the network equipping headgear, well, it caught me off guard and made me smile.\n\nSeveral of you also found the “easter egg” on the Winter Bash site — holding down Ctrl and collecting all the falling snowflakes revealed a snowy pink unicorn!\n\nReal Data\nOne of the things I wanted to look into is how a temporary, high-profile badge can alter behaviors. While some users have mentioned that they stuck around more, was this true at large?\nThe data are not really clear. Sites with a very high hats-to-users ratio saw serious increases in posts created during this time, visits, and general positive responses from traffic. Straw polls of the moderation teams would seem to indicate that general site upkeep (things like flags, edit queues, and other mod-actions) held stable. Anecdotally, the review queues seemed extra empty, though whether that was because fewer folks were around the sites or because everyone really wanted Le Magritte isn’t clear.\n\n\nI know I consider this event a real success! It’s been a pleasure seeing everyone get excited, wear silly headgear, and just generally loosen up a bit as the year drew to a close.\nSpecial thanks to Stack Exchange developers Emmett and balpha for building this and keeping it running smoothly, to VP of Engineering David Fullerton for coordination, guidance and encouragement, and to the aforementioned Jin for the beautiful design work.\nThe Future of Hats\nI definitely want to try for some things for the next time:\n\nHats in chat has been requested before. I’d like to push for this for next year.\nSite-specific hats would be super cool. Some sites unofficially got a hat — Seasoned Advice and Home Improvement — but I’d love to see more sites get their own bespoke hats.\nMore hats! Secret hats seemed to get people the most excited — adding more of those to the batch next year strikes me as a very good idea.\n\nIf you have suggestions or feedback about Winter Bash, please feel free to answer this post. I’m going to keep an eye on it, and gather ideas and improvements for next year from your responses.\nWhen we first tried out this idea on Arqade, it wasn’t entirely clear this would be well-received elsewhere. But, based on what I’ve seen these past few weeks, I don’t think we’ve seen the last of Hats on Stack Exchange.\n    Tags: winter bash",
        "url": "https://stackoverflow.blog/2013/01/08/boxing-day/"
    },
    {
        "title": "Apptivate.MS: the results are in!",
        "content": "After almost three months, Apptivate – the application development contest collaboration between Stack Overflow and Microsoft – has come to an end.\nLet’s get to the big news right off the bat. Congratulations to our two Apptivate.MS Grand Prize Winners: Piano Time and Layout!\n\nCongratulations to Piano Time and Layout!\nLayout is a powerful tool for interaction design that makes prototyping in the early stages of development and design a breeze. Piano Time is a multitouch piano keyboard for your Surface or other Windows 8 tablet device. (It also supports using your keyboard as, well, a keyboard.) It includes recording and playback, a metronome, a learning mode, and more.\nAs grand prize winners, these two apps win a $5,000 cash prize! They will also be featured in MSDN Flash and on the DevRadio show, and they will be promoted by Microsoft throughout the developer community.\nThe grand prize winners came from a pool of 15 finalists and were chosen by a panel made up of Stack Overflow’s own Joel Spolsky and David Fullerton, as well as Microsoft developer evangelists Doris Chen and Jeff Brand. There was some stiff competition for the judges to choose from, and we congratulate all of our finalists. They won’t be going home empty-handed, either – along with the winners of the Reviewer Sweepstakes, they’ll go home with some great prizes, too. The first place winners from each category group win a Surface plus a $500 cash prize. The second and third place winners go home with good stuff, too. Johnny, tell ’em what they’ve won!\n\nAnd you get a Surface! And you get a Surface! EVERYONE gets a Surface!\nThe 15 finalists came from a pool of 50 semi-finalists, which in turn came from the list of over 300 fully eligible submissions to Apptivate. Some more stats about the event:\n\nThere were 456 apps submitted overall, including deleted and ineligible apps\nThe third week of November was the best week for app submission, with 49 apps coming in that week\nApptivate users posted 2646 questions and answers in the [windows-8] and [microsoft-metro] Stack Overflow tags\nOver the course of the event, 3163 users voted (on apps or on comment threads) 7454 times\n\nThat’s all for Apptivate… in 2012! The response to this was so positive, we’re already on the lookout for similar collaborations in the new year… So stay tuned!",
        "url": "https://stackoverflow.blog/2012/12/20/apptivate-ms-the-results-are-in/"
    },
    {
        "title": "Hey there, stranger!",
        "content": "It’s that most wonderful time of the year again — time for the Stack Overflow Annual Survey! So, put down that third glass of eggnog and fire up a new tab. It only takes a few minutes – and there are stickers!\nAs the name suggests, we’ve been doing this for a few years now (here are the 2010 results and the 2011 results for your perusal) and we always learn a lot from them. This data is used to support the advertising we sell on Stack Overflow and Server Fault. Advertising helps keep the lights on (and servers humming) around here, so if you use either (or both!) sites, we urge you to participate.\nFor those of you who’ve been around this block with us before, the survey should look fairly familiar. There’s no longer two jQuery options, though you can still jQuery while you jQuery if you need to. There are some questions that are a bit different, so please read each item carefully before you respond.\nJust like previous years, we’re putting ads like the one above around the site to solicit particpation, and this blog post will help us reach our goal of roughly 3,500 responses. We’ll share the results of the survey with you all in a blog post early next year, and you’ll have the option of signing up to receive a copy of the results emailed to you directly at the end of the survey. So, please take a few moments to fill out the survey and then you can get right back to your holiday festivities.",
        "url": "https://stackoverflow.blog/2012/12/14/hey-there-stranger/"
    },
    {
        "title": "Take the Super User Windows 8 Challenge",
        "content": "Well, Windows 8 is finally available in the wild. Of course, developers have had access to it for quite a while – our ongoing Apptivate contest would be looking pretty sad otherwise. But now you can actually _buy _the upgrade for your home PC if you’re so inclined, or for your mom’s PC if you haven’t been getting enough tech-support calls from her recently…\nIn recognition of this, Super User is running its own little promotion:\nWe’re having a party and you’re invited. Ask and answer questions to complete the challenge levels, and complete different tasks like editing, voting, and blogging to win the eight tile challenges. Each level you beat and each tile you finish enters you for sweet prizes, including the grand prize of a Microsoft Surface RT!\nLet’s face it: Windows 8 is a bit… Different. I haven’t upgraded yet – it took Microsoft decades to finally get the taskbar working right, and I’m a bit reluctant to give that up. But if you do decide to take the plunge, Super User is well-prepared to help you through it – or if you’ve already been knee-deep in the change for a while (say, because of that app contest I mentioned above), perhaps you’ve learned something that could help others. Either way, why not double your pleasure by earning a t-shirt, weird-looking mouse or other nifty gear in the process?\nIntroducing the Windows 8 Challenge on the Super User Blog",
        "url": "https://stackoverflow.blog/2012/10/26/super-user-win8-challenge/"
    },
    {
        "title": "AskPatents.com: A Stack Exchange To Prevent Bad Patents",
        "content": "We’ve all heard the stories of seemingly trivial patents being used to mug technology companies. There was the patent on the “Interactive Web” which a troll named Eolas used to extract $521 million from Microsoft–until a jury in East Texas threw out the patents. There are the four patents Lodsys is using to send threatening letters to software developers everywhere–trivial patents that Google says never should have been granted, in fact, Google and Oracle have submitted mountains of prior art to show that the patents should be invalid.\nMany small app developers have just decided it’s cheaper to settle rather than spend half a million dollars in legal fees fighting in court.\nWhat’s going on here? And what can we do to stop it?\nAnybody who follows patent applications closely and who understands technology may have noticed something odd about a lot of the new patents: they don’t really seem like inventions. Really? They got a patent on that? I wrote that in eighth grade. In BASIC. On a TRS-80. Isn’t a patent supposed to be an invention?\nYes. But the escalation of the patent wars has led companies to try to patent everything in sight, so they can build up a portfolio of patents (“to defend themselves,” of course, so that they have something to countersue with when they get sued). The way they do this is by sending lawyers up and down the corridors where the engineers are working, looking for things that they might be able to patent. And the imperative to get a lot of patents means that sometimes they submit things which aren’t exactly inventions per se to the USPTO. Just in case they stick.\nNow, the patent office works hard, but in order to determine if something is not an invention, they have to find prior art.\nPrior art could be another patent, something in a publication, or even an implementation, like a shareware software program from 1992 that does the same thing that somebody is now claiming to have invented in 2008. It can be published anywhere in the world, in any language, in any publication, no matter how obscure, to qualify as prior art.\nAnd, as you might guess, in the 22.5 hours [DOC] that examiners might have to review each patent application, searching every document published in the entire world in every language is not practical. There’s no possible way examiners can conduct a truly exhaustive search of prior art.\nAnd that’s how we get bad patents.\nLuckily, we got two breaks.\nThe first break we got is a tiny provision in the America Invents Act, the “Patent Reform Act” which, on the face of it, appears to have done absolutely nothing to solve this problem, but if you look closely, there’s a tiny provision in there, which says:\n“Any person at any time may cite to the Office in writing prior art consisting of patents or printed publications which that person believes to have a bearing on the patentability of any claim of a particular patent…”\nIn other words, as of September 16, the USPTO is required to accept submissions from the public of prior art.\nThe second lucky break is that we have a very good Director at the USPTO right now, David Kappos. Mr. Kappos, who came from IBM, realized that this provision gave the public an opportunity to help patent examiners identify prior art. But it’s not enough just to allow prior art submissions… you have to find a way to get the public involved in looking through patent applications and trying to find prior art that could prevent bogus claims.\nAnd that sounds a lot like… a Stack Exchange!\nWe humbly submit that it’s a testament to how good the Director of the USPTO is, that he actually came to us. We were not paying attention. He came–twice!–to the Stack Exchange office in New York City to encourage us to open a Stack Exchange site that would generate heaps of prior art to help the patent examiners do their jobs.\nAsk Patents is a new Stack Exchange site launching today that allows anyone to participate in the patent examination process. It’s a collaborative effort, supported by Stack Exchange, the US Patent and Trademark Office, and the Google Patent Search team. It’s very exciting, because it is opening up a process that has been conducted behind closed doors for over 200 years.\nOur hope is that Ask Patents will reduce the number of patents mistakenly granted for obvious, unoriginal non-inventions, especially around software, a field that is near and dear to us.\nAsk Patents is a collaborative effort, neatly tagged by keywords and classification, and searchable by patent application number. It is inspired by a research project called Peer To Patent, run out of New York Law School. That pilot project, created by Professor Beth Noveck, proved very successful at identifying prior art that the USPTO wouldn’t otherwise have known about.\nCitizen volunteers and other interested parties will be able to ask about applications that they think are suspicious. Others can answer, identifying possible prior art, and using our upvote/downvote feature to rate any examples of prior art that other people found.\nThe USPTO, complying with the new law, will also provide an online system for submitting prior art. We’re also integrating with Google Patent Search, so every patent application on Google will include a link to discussion on Stack Exchange. Google has also implemented an algorithmic prior art search utility that will be helpful to site participants.\nOn Ask Patents, participants can also ask and answer questions about the nuances of patent law or about specific patent applications.\nCollectively, we’re building a crowd-sourced worldwide detective agency to track down and obliterate bogus patent applications. Over time, we hope that the Patent Stack Exchange will mitigate the problems caused by rampant patent trolling. It’s not a complete fix, but it’s a good start.",
        "url": "https://stackoverflow.blog/2012/09/20/askpatents-com-a-stack-exchange-to-prevent-bad-patents/"
    },
    {
        "title": "Our newest team members: Diandra, Robert, Adam, Nicole and Casey!",
        "content": "In case you haven’t noticed, we’re growing pretty quickly over here at Stack Exchange. But just because they’re last doesn’t mean they’re least – so say hello to our newest hires!\nDiandra Partridge, Office Manager\nDenver\nDiandra steps in as the office manager for our new Denver hub. A graduate of Amherst College, Diandra is happy to be back in her hometown as a member of the Stack Exchange team. Her current obsessions include (but are not limited to) Adventure Time, musical theater, and Tard the Grumpy Cat.\nRobert Brooks IV, Account Executive\nDenver\nRobert is thrilled to join our Careers 2.0 sales team in Denver. Originally hailing from Cleveland, Robert attended Ohio University but now spends most of his time hiking, biking and skiing in the Rocky Mountains. He is also an avid concertgoer, craft beer lover and self-described Apple enthusiast.\nAdam James DeLanoy, Sales Representative\nNew York\nBorn and raised in Westchester, Adam graduated from James Madison University with a B.S. in strategic communications. He currently lives on the Upper East Side of New York City, where he enjoys wearing “those toe shoes” and checking out the city’s best in the stand-up comedy scene.\nNicole Lebbad, Account Executive\nNew York****\nA proud alum of Penn State University, Nicole is originally from New Jersey and now lives in Hoboken. When she’s not planning her wedding (to occur in Riviera Mya, Mexico), you’ll likely find her reading. Nicole is also a big Harry Potter fan—she owns at least least five copies of each book (from four countries) and has a tattoo of the Harry Potter lightning bolt.\nCasey Ashenhurst, Office Administrator\nNew York\n\nA native midwesterner, Casey is psyched to join Stack Exchange as the new Office Administrator. After receiving her B.A. from Oberlin College in English and Media Studies, she promptly left the country to live in New Zealand for a year, and proceeded to travel throughout Southeast Asia. Since her return to the U.S., Casey has hung her hat in Brooklyn for the past three years. She is also an avid urban cyclist, DIY enthusiast, and cellist.\n\nWant to make these new hires your new colleagues? Join our team – we’re still hiring!",
        "url": "https://stackoverflow.blog/2012/10/17/our-newest-team-members-diandra-robert-adam-nicole-and-casey/"
    },
    {
        "title": "Join the Stack Exchange team – we’re hiring!",
        "content": "We’re growing like crazy! Between launching exciting new sites, developing new features and promotions for existing ones, and branching out geographically, Stack Exchange can use all the help it can get – so we’re currently hiring for seven (7!) different positions, from developers to designers to sales to… well, just look at the list yourself:\n\nProduct Manager – Q&A Team (telecommute or New York)\nWeb Developer – Q&A Team (telecommute or New York)\nWeb Developer – Careers Team (New York)\nSenior Systems Administrator (telecommute or New York)\nProduct Designer (telecommute or New York)\nAccount Executive – Careers 2.0 (London, Denver, New York)\nSales Representative – Inside Sales – Careers 2.0 (Denver, New York)\n\nWe’re dogfooding Careers for these of course, since who better to help make the software running Stack Exchange more awesome than the folks using Stack Exchange. Here are a few positions that are especially appropriate to our community:\nProduct Manager – Q&A Team (telecommute or New York)\nWe’re looking for someone to help us design and build the next set of features and special projects for Stack Exchange.  We want someone with serious startup experience building and shipping products, from conception to deployment.  You’ll take ideas from us and the community, or come up with your own, and work with our designers and developers to get them shipped.\nWeb Developer – Q&A Team (telecommute or New York)\nWe’re looking for a top-notch web developer for the Core Q&A team.  You’ll work directly on the engine that powers all the sites to ship new features, fix bugs, and scale and grow the sites.  We want someone with serious front-to-back web development experience (C# not required), a track record of getting stuff done, and a history of activity in the community.\nWeb Developer – Careers Team (New York)\nWe’re looking for more top-notch web developers to work on building Careers into the best place for developers to find a job, anywhere.  You’ll work on lots of new features, fix bugs, and help us decide the future of Careers.  We want someone with serious front-to-back web development experience (C# not required), a track record of getting stuff done, and a history of activity in the community.\nSenior Systems Administrator (telecommute or New York)\nWe’re looking for a veteran Windows / Linux systems administrator to join our team.  You’ll help build out our infrastructure and keep it ahead of the growth curve.  We want someone with experience working with both Windows and Linux systems (emphasis on Windows), and a track record of taking on big challenges and delivering blog-worthy solutions.\nProduct Designer (telecommute or New York)\nLast, but not least, we need a product designer.  You’ll work with Jin to help our developers and product managers design new features, create and implement full brand identities for new Stack Exchange sites, and help improve user experience across the network.  We want someone with a portfolio of web design and experience working directly with developers and product managers to design products and features.\nTelecommute?\nMost of these positions are open to the world: we want to hire the best people, wherever they are.  However, there are a few things you should be aware of:\n\nYou should be awesome at working remotely — self-motivated and aggressively communicative — to make sure you stay on the same page as the rest of your team\nWe still believe in getting teams together at least once a week to talk, and that generally happens between 1 – 5pm EDT.  You’ll need to be flexible with your hours\nThere may be some countries that are legally too difficult for us to work with…sorry!\n\nA few positions are in-office only, but don’t worry: we have awesome offices.  In fact, a few people who started working remotely moved to New York just to get access to our catered lunches.  If you do want to move to New York (or our sales offices in Denver or London), we’ll assist you with relocation but you must already have the permanent right to work in the country of the office (US or UK).\nApply!\nEach job has instructions to apply, and we’re hiring immediately.  If you see a job that might be a fit for you or someone you know, apply soon.  You can also always find a list of open positions at http://stackexchange.com/about/hiring, or click the “jobs” link in the footer of any Stack Exchange site.",
        "url": "https://stackoverflow.blog/2012/10/01/join-the-stack-exchange-team-were-hiring/"
    },
    {
        "title": "Stack Exchange partners with Denver Startup Week",
        "content": "The Mile High City was buzzing last week as it hosted its first ever Denver Startup Week. With more than 80 events hosted by startups all around the city, the week attracted hundreds of entrepreneurs from the Colorado area. Since our Denver office just opened in August, this was a perfect time for us to get to know some of our new neighbors a little better.\nStartup Job Fair\nOn Tuesday, October 23, after our quick spot on Channel 9 News, we set up shop at the Startup Job Fair to recruit even more awesome talent to our company. After two hours, we brought in nearly 50 resumes—thanks to everyone who showed up! In case you couldn’t make it, it’s still not too late to apply! Check out our job openings here.\n\n\nDenver Startup Crawl\nMore than 20 companies participated in a Startup Crawl that led registrants all around Denver to check out the great office spaces and have a beverage or two. Despite the freezing rain/snow, we hosted more than 40 attendees at our Stack Exchange Denver HQ—and our warm, spiked apple cider was a big hit. If you didn’t make it this time, keep your eyes peeled for our next event… though we can’t promise we’ll have bacon apple whiskey tartlets like this again.\n\nClass: How to Hire Developers in a Competitive Market\n\nThursday boasted our biggest event of all—more than 50 of you joined us in our office to learn how to hire programmers in this tough market. Guy Zerega (National Sales Manager) and Korneel Bouman (Director of Customer Support and Sales Operations) flew out from our New York hub to offer up tips on tech recruitment and writing good developer job listings. Complete with brunch (not to mention a full Bloody Mary and mimosa bar), we hope this class helped a few of your with your own recruitment needs. You can sign up for our watchlist for future classes here.\n\n\nThanks to everyone who attended and helped make Denver Startup Week a success! You can check out the rest of our photos here. We hope to see you at future events going forward next year.",
        "url": "https://stackoverflow.blog/2012/11/02/stack-exchange-partners-with-denver-startup-week/"
    },
    {
        "title": "Stack Overflow Data Visualization Contest",
        "content": "We all know everyone loves pretty pictures, chock full of graph-y goodness.\n\nYou probably also know that about two months ago we started the Stack Overflow Machine Learning Contest, and that it’s now winding down.  All models have been (or will shortly be) committed, and we’re starting to gather data for the final judgement.\nWhat you may not have known about was the subsidiary Visualization Contest, which is looking to find an interesting and informative way of making sense of the mountains of interesting data in our data sets.  You’re free to pull in any additional publicly available information from sources like the Data Explorer or API, but the data set put together for the machine learning contest is a good place to start.\nEntries will be accepted through October 26th with voting ending November 1st.  We’ll choose the most awesome of the top-voted entries based on how interesting and informative the visualization is, with bonus points for focusing on the subject of the machine learning contest.\nSo go out there, find a set of interesting statistics, gin up a cool picture and submit it to the…\nStack Overflow Visualization Contest",
        "url": "https://stackoverflow.blog/2012/10/09/stack-overflow-data-visualization-contest/"
    },
    {
        "title": "Apptivate.ms: A Windows 8 App Development Contest",
        "content": "Windows 8 officially launches on October 26th, and it’s already generating quite a few questions on Stack Overflow.  So when Microsoft approached us about sponsoring an app development contest, we thought it was a great idea.\nToday we’re announcing Apptivate.ms, a Windows 8 App Development Contest sponsored by Microsoft.\n\nThe contest has two parts:\n\nA Developer Contest for people interested in writing applications\nA Reviewer Contest for people interested in reviewing and voting on apps\n\nYou can participate – and win prizes – in both categories, so even if you aren’t interested in developing your own app you can still participate by helping others by reviewing their submissions.\nDeveloper Contest\nThe Developer Contest awards prizes for the best apps in 5 broad Groups: Knowledge, Games, Interest, Work, and Social.  Here’s how it works:\n\nCreate a Windows 8 app and submit it to Apptivate.MS by December 6\nThe top 10 apps in each Group (chosen by judges, with input from your initial votes) will advance to the semi-final round December 7 – 9\nVote on the best apps between December 10 – 16.  The top 3 voted apps in each category will win the Voter’s Choice Prizes.\nOne winner will be chosen by the Stack Exchange and Microsoft judges to win the Grand Prize on December 19\n\nTwo Grand Prize winners* will be awarded:\n$5,000 Cash Grand Prize\n+ Feature in MSDN Flash and Microsoft’s DevRadio\n+ Promotion in Microsoft’s User Community\nThe top 3 apps in each category will win a Voter’s Choice Prize:\n\n5 first-place winners: $500 + Tablet running Windows RT\n5 second-place winners: Tablet running Windows RT\n5 third-place winners: Windows 8\nSubmit early and often. Your first submission doesn’t have to be final — in fact, you’re encouraged to submit early and get feedback to develop your app further.  The votes will be reset for the semi-final round so everyone can vote on your final submission.\nSee the full Rules, Terms & Conditions and the Submission Guidelines on Apptivate.ms for more information.\nReviewer Sweepstakes\nNot developing an app? You can still help by leaving comments on apps, asking and answering Windows 8-related questions on Stack Overflow, and participating in the Windows 8 Developer Chats.\nSee the Contest page for a full list of achievements that can be unlocked on Apptivate.ms.  Each achievement (up to 30) gives you an entry into one of the reviewer sweepstakes:\n\n3 Gold-level Winners: Tablet Running Windows RT\n10 Silver-level Winners: Windows 8\n50 Bronze-level Winners: Limited-edition Apptivate.ms T-shirt\nSee the full Rules, Terms & Conditions on Apptivate.ms for more information.\nGetting Started\nThinking about developing an App, but not sure where to get started?  Check out the Resources page for some helpful links and tips.\nPrefer to assist others writing apps?  Register your Stack Overflow account on Apptivate.MS now to be eligible for reviewer prizes, and then ask, answer, or share Windows 8 questions on Stack Overflow to get started.\nRegister on Apptivate.ms now!\n\n* NO PURCHASE NECESSARY. A PURCHASE WILL NOT INCREASE YOUR CHANCES OF WINNING. OPEN TO AGES 18 AND OLDER AND WHO DID NOT PURCHASE ANY EQUIPMENT FOR PURPOSES OF ENTERING THE PROMOTION. VOID WHERE PROHIBITED. Enter Contest by: 12/6/12. Enter Sweepstakes by: 12/16/12. For Official Rules, prize descriptions, alternate method of entry, and odds disclosure, visit http://apptivate.ms.  Sponsor: Microsoft Corporation, One Microsoft Way, Redmond, WA 98052, U.S.A.",
        "url": "https://stackoverflow.blog/2012/09/26/apptivate-ms-a-windows-8-app-development-contest/"
    },
    {
        "title": "Join us for our opening reception of Stack Exchange: Denver!",
        "content": "In case you couldn’t tell, we’re very excited about our new office opening in Denver. And though it’s very tempting to just relax on our new roof deck or over a game of pool, we think something this big calls for an even bigger bash.\nAnd we’d like you to be there.\nStack Exchange is you, the dedicated and brilliant folk who’ve worked to build these sites for the past four years. You’ve made this miracle happen, and if you’re in (or can get to) the greater Denver area, we’d love to meet you face to face.\nBut wait, there’s more! Stop by and get…\n\n\nA tour of our Stack Exchange Denver hub—roof deck included!\n\n\nSnacks and delicious treats from our favorite Denver caterer\n\n\nFree drinks and Stack Exchange swag\n\nA chance to meet Joel Spolsky and some of our devs and sales reps\n\nWe’re planning this shindig for the evening of September 27th, so RSVP today.\nWe hope to see you there!",
        "url": "https://stackoverflow.blog/2012/09/06/join-us-for-our-opening-reception-of-stack-exchange-denver/"
    },
    {
        "title": "Get rid of ads you don’t like (and encourage ads you do like)",
        "content": "Ads. Like ’em or not, they keep the lights on.\nAs readers, ads might direct us to a valuable service or product, or they might just be a distracting annoyance. For publishers, ads can provide an added service to their audience and a significant revenue stream, but only if the ads reach their intended audience, and that audience interacts with them. For the advertisers themselves, ads can be a great way to generate sales or awareness, but only if people don’t ignore them. And therein lies the problem: lousy targeting, over-exposure and distracting ad formats have made people prone to do just that, which significantly reduces the benefits to all involved.\nTo make ads work, you have to ensure their relevance to the audience you’re advertising to, which has always been our guiding principle here at Stack Overflow (that, and not have them be annoying). But even then, not every ad is relevant to everybody, and we’ve been working on a way to fix this. We want you to only see ads you want to see, which in turn means that our advertisers will only advertise to people who are actually interested in what they have to sell (which is sort of the holy grail of display advertising).\nAnd now this is possible. We’ve worked with Adzerk (our ad server) to come up with a widget that lets you either up- or down-vote an ad (widget will display when you hover over the ad).\n\nIf you up vote an ad (particularly if a large number of people do) we know the ad is on the right track. If you down vote one, we’ll ask you why, and won’t show you that ad again.\n\nApart from improving your experience, this will also provide a wealth of information as to which ads and advertisers work and which ones don’t, and it will ensure we avoid wasting our advertisers’ money and your time (we hope!). All good things.\nThere are a few things to note:\n\nNot all ads are votable yet: some high volume campaigns closed before we decided to roll this out, and we want to make sure we show those ads as many times as we promised to. Until we are able to better gauge the exact effect this feature will have on our overall inventory, we’ll let these run their course as originally sold.\nThe house ads promoting other SE sites and new proposals will also be exempt from voting (these are generated dynamically, and down voting it would mean you’d never see new proposals or sites again).\nAnd because we keep track of your voting through a cookie your settings will not carry over from one computer to another, and you’ll lose your preferences if you clear out your cookies.\n\nOh – and like voting elsewhere on Stack Exchange, voting on advertisements is completely anonymous: voting on an ad will never send any personally-identifying information to the owner of the ad (or even us!).\nNow, go forth and vote!",
        "url": "https://stackoverflow.blog/2012/11/12/get-rid-of-ads-you-dont-like-and-encourage-ads-you-do-like/"
    },
    {
        "title": "Join Stack Overflow in Berlin for a blowout bash on December 5!",
        "content": "Berlin, wir kommen!\nIt’s our last party of the year, and this time, we’re heading to Germany to meet and mingle with the Stack Overflow community! As you may have noticed, we’ve been tearing up Denver this year with our opening reception of our new office and then again during Denver Startup Week last month. So we thought it was about time to bring the party to Europe.\nIf you’re in or around Berlin on Dec. 5 (or just want to book a last-minute trip), come clink glasses with us at Betahaus (Prinzessinnenstraße 19-20) from 5:30 p.m. – 8:30 p.m. While there, we’ll also be launching our first official translation of Careers 2.0 for German candidates and employers.\nJoin us for a fun night where you can…\n\nMeet other Stack Overflow users and pick the brains of our awesome developers\nSit in on educational talks and demonstrations from our devs as they discuss how they localized Careers 2.0 for a German audience (you can check out a preview at careers.stackoverflow.com/de)\nEnjoy free food and drinks all night\nRock out to tunes provided by SoundCloud’s DJs\n\nHope to see you there!\nLet us know you’re coming – RSVP by December 1",
        "url": "https://stackoverflow.blog/2012/11/26/join-stack-overflow-in-berlin-for-a-blowout-bash-on-december-5/"
    },
    {
        "title": "Meet the new additions to the Stack Exchange clan",
        "content": "The fun continues — in the past month and a half we’ve welcomed seven new hires!  We’re growing at a steady pace and we don’t plan to stop.  Get to know our newest coworkers:\n Maura Bradley, Sales Representative\nNew York\n__Originally from the City of Brotherly Love, Maura graduated from the University of Notre Dame and recently moved to the Big Apple to join the Careers 2.0 sales team.  On summer weekends, you can find her at the (South) Jersey Shore, relaxing on the beach or at a local watering hole. She enjoys running outside, dive bars, puzzles, Broadway plays, activities, and cooking a mean chicken parm.\nNatalie Eisen, Sales Representative\nNew York\nA recent graduate of Barnard College, where she majored in Urban Studies and Sociology, Natalie is super pumped to join the Stack Exchange team. Although an Ohio native, Natalie always knew she would live in New York, the land of many cupcakes; she suggests the “Ooey Gooey” at Sugar Sweet Sunshine.\nJoe Humphries, Recruiter\nNew York\nJoe is a native of Cleveland, OH who relocated to Brooklyn just over two years ago. He began recruiting for tech startups in 2011, and is thrilled to be working at Stack Exchange. For fun, you’ll find him playing word games on his iPhone (because he’s really cool), eating/drinking at as many different restaurants as possible, and having a general love affair with NYC.\nSteven Murawski, System Administrator\nMilwaukee****\nSteven joins the crack sysadmin team at Stack Exchange, bringing his humble skill set and the willingness to learn he developed over the past few years.  Steven is an avid community member: he runs two local user groups, and presents and teaches at community conferences across the country. He was recognized by Microsoft for his contributions to the PowerShell community with a Microsoft MVP award in 2012.  For fun, he loves to read, spend time with his wife and son, and read to his son.\nPeter Schnelle, Sales Representative\nDenver\nHailing from the great Northern state of Michigan, Peter is a Michigan State grad who bleeds green and white. Growing up with a farm, he is an avid hunter and fisher who loves just about anything to do with the outdoors. This winter he is trying to pick up snowboarding, so watch out Shaun White!\nJeremy Tunnell, Product Manager\nNashville\nJeremy is originally from Tennessee. After getting his engineering degree, he promptly set out for Washington DC to make copies and brew coffee on The Hill. Having had enough, he moved to San Francisco where he cofounded a startup and managed to make less money than a Hill staffer. For stress relief, he used to play saxophone and violin, but stumbled into swing and salsa dancing, which won out. He dreams of owning a bar and music venue.\nChris Martin, Sales Representative\nLondon\nBefore we start, no he’s not Chris Martin of Coldplay fame, he’s the totally non-famous Chris Martin that now works for the great company that is Stack Exchange! Chris is truly excited to start work at Stack Exchange; it’s an amazingly cool company with really exciting times ahead.  He spends most of his free time obsessing with food, whether it’s cooking it or eating it. He believes London has one of the best restaurant scenes in the world, and he intends to try every dish from every restaurant!\n\n_Visit our careers page to learn all the reasons Stack Exchange is a ridiculously awesome place to work. _Want to see your face in our next new hire announcement? Here’s who we need:\nWeb Developer – Careers Team (NYC)\nWeb Developer – Q&A Team (NYC or telecommute)\nProduct Designer (NYC or telecommute)\nAccount Executive – Careers 2.0 (London; Denver; NYC)\nInside Sales Representative – Careers 2.0 (London; Denver; NYC)\nOffice Admin (London)",
        "url": "https://stackoverflow.blog/2012/12/07/meet-the-new-additions-to-the-stack-exchange-clan/"
    },
    {
        "title": "2013 Stack Overflow User Survey Results",
        "content": "In December, we launched our 3rd annual Stack Overflow Annual User Survey to learn more about our site demographics and user trends throughout 2012. Compared to last year, we received an even larger sample size this year with almost 10,000 respondents!\nHere are a few larger trends we’ve observed over the past three years:\nYou like us…you really like us!\nSince 2009, site traffic to Stack Overflow has grown by a whopping 261.7%! As if this weren’t enough, we’re also now the 86th largest global site, according to Alexa. Our crazy goal of breaking into the top 50 is looking less crazy!\nMobile is on the move.\nNo real surprise here, but of the mobile family, the number of users who own Android devices increased 29.2% from 2010 to 2012—a bigger increase than owners of iPhones and iPads combined. Despite the rising mobile trend, we were surprised to learn that only 7.7% of you are employed as mobile apps developers and 51.8% of companies still don’t have a mobile app.\nYou’re getting happier at work.\nSince 2010, we’ve seen a 2.2% uptick in workplace satisfaction, so 70% of you are happy in your current jobs. We’re not going to point fingers or anything, but we hope there may be some causation for those of you who found your current job from among the 10,000+ roles that were posted on Careers 2.0 last year.\nIn our effort to make all information publicly available, here is a basic report of the results or if you’d prefer to play around with the data yourself, download the survey results.",
        "url": "https://stackoverflow.blog/2013/01/25/2012-stack-overflow-user-survey-results/"
    },
    {
        "title": "2012 Stack Overflow Community Moderator Election Begins",
        "content": "Hard to believe it’s been only six months since the last moderator election on Stack Overflow…\nRemember A Theory of Moderation? It talks about how moderators are the “human exception handlers” on Stack Overflow, elected to deal with those rare situations the normal community moderation can’t handle. It also notes:\nThe most common moderator task is to follow up on flagged posts. Every post contains a small flag link, which anyone with 15 reputation can use.\nOver 200K users with at least 15 reputation have accessed Stack Overflow in the past three months. That’s a lot of folks able to raise a red flag – and a lot of them do.\nWith 12 moderators on Stack Overflow, handling the more than 1,300 flags each day has become an increasingly heavy load to bear – so we’re looking for a few good men or women willing to step up and help. If you’re an experienced, community-minded member of Stack Overflow, willing to devote a bit of time each day to assisting your comrades, visit http://stackoverflow.com/election and nominate yourself.\nOf course, needing more moderators is a good problem to have – it means Stack Overflow is thriving, its community able to recognize when a something on the site needs attention. That said, there’s something a bit wrong with this many flags going to the exception handlers, when many of them can and should be handled by other trusted members of the community. Last fall we started experimenting with ways of presenting some flags – those most likely to require actions available to ordinary users – to the 10K users first, and forward them only to moderators when unresolved in a reasonable period of time. We’ll be expanding this in the next month to put flagging for action (close, delete, re-open, etc.) and voting for action in the same league when it comes to requiring moderator intervention. Stay tuned…",
        "url": "https://stackoverflow.blog/2012/06/04/2012-stack-overflow-community-moderator-election-begins/"
    },
    {
        "title": "Kicking off the Summer of Love",
        "content": "It’s summer here at StackHQ. Have a flower!\n\nYou’re welcome. Now on to some serious work. Can we talk about cultural anthropology for a minute? I’d like to talk about what happens when a community (online or off) gets to be about… oh, three or four years old.\nEvery community starts out needing to recruit members, so they tend to be very friendly to newcomers.\nAfter a few years, an insider group of old-timers forms. They get to know each other. They know the rules. They know the history and the legends of the community. And it’s only natural to get little bit irritated when newbies show up who don’t know the rules.\nNewbies will show up, make a newbie mistake, like wearing shoes indoors or forgetting to close the toilet lid, and the old-timers will look at each other, roll their eyes, and snort, “Typical!”\nAt this point, if it’s a normal human community, it will start to feel a little bit unfriendly to outsiders. Insular. \nAnd the newbies will say, “well, gosh, that’s not a very friendly place.”\nNot just the newbies who got scolded. Also the 100 passers-by who saw the newbies get scolded. Who might have been great members of the community, and who did nothing wrong, but who are not really interested in joining a community that appears to be full of smug jerks.\nThis is very dangerous. You have to be able to recruit new members to replace the old ones that drift away. The success of the community depends on it.\nNow that Stack Exchange is getting to about that age, we’re starting to see some warning signs that the community is getting insular.\nDon’t get me wrong; it’s still a remarkably friendly place.\nBut we have some of our own weird rules, that take a while to figure out. Rules about shopping questions, subjective questions, and “localized” questions. Those are very important rules, but when newbies violate them, we can be somewhat snarky. I did a quick survey and found that about 50% of questions that are closed on Stack Overflow are also accompanied by an unfriendly comment. So it isn’t surprising that newbies are turned off.\nSo we decided to declare the summer of 2012 as The Summer of Love, a.k.a. “The Hunting of the Snark.” The goal is simple: to keep Stack Exchange a welcoming, friendly place without lowering our standards. No, you may not ask “plz send me the code” questions, but if you do, we will explain to you, in a friendly and professional way, what you did wrong.\nYou’ve probably already seen the first phases of this campaign. To kick it off, Shog9 deleted the “What Stack Overflow is Not” thread on meta.stackoverflow.com, which started out with the best of intentions (indeed it was intended to help newbies come up to speed), but it turned into an accidental factory of unfriendly comments. We’ve started talking about how to be civil and we’ll continue that. And to make everything, you know, scientific, we’ve started actually measuring friendliness in comments, automatically, using Mechanical Turk. We’ll share some astonishing results of that study with you soon.\nDon’t lose track of the big picture. Stack Exchange works because it’s a remarkably good place to get information. Having the correct information always trumps having it in a pretty, perfumed way covered with flowers. If the only person that knows the answer to my question is a remarkable grump and can’t give me the answer without insulting my ancestry, I’ll probably take the answer and lick my wounds later.\nBut that’s not the choice. The way to get great answers is to get lots of people contributing. The way to get lots of people contributing is to recruit more people to participate on Stack Exchange. The way to recruit more people is to be nice. So being nice is not at odds with getting good answers, it supports getting good answers. And that’s why it’s important to us.",
        "url": "https://stackoverflow.blog/2012/07/20/kicking-off-the-summer-of-love/"
    },
    {
        "title": "Election participation badges",
        "content": "The 2012 Stack Overflow moderator election is off to a good start, with 15 candidates and just under three days left for nominations. Elections are a fairly mature feature of Stack Exchange at this point (Role-playing Games has one in progress now as well), but Stack Overflow remains the largest and I dare say most interesting: with so many members involved (and so many more potentially affected by the outcome) every part of the system is put through the wringer… Including the candidates and voters themselves!\nGiven the importance Stack Exchange places on community governance and by extension moderator elections, it’s sort of curious that we never formally recognized this participation. You could get badges for voting on questions and answers, but when it came to the elections we didn’t need no stinkin’ badges…\nThat’s really kind of a shame. Here in the US, it’s common to at least get a sticker when voting, a token to wear the rest of the day in recognition of your civic-mindedness. Starting today, we’ll be handing out virtual stickers – badges – for visiting and voting:\n\n\nThe Caucus Badge is awarded for visiting the election page. This is important at every stage of the process, as even during the nomination phase comment discussions helps to flesh out the nominations. If you can’t vote, you can at least make your voice heard. This is a bronze badge.\n\nThe Constituent Badge is awarded for voting– at least once – in the final phase of the election. Recognizing the importance of the action it rewards, this is a silver badge.\n\nBoth of these can be earned once for every election. Over the next day we’ll be awarding them retroactively across the network for participation in past elections; participants in current and future elections will see them within minutes of visiting / voting.",
        "url": "https://stackoverflow.blog/2012/06/08/election-participation-badges/"
    },
    {
        "title": "Welcome to the Arqade: Rebranding a Successful Site",
        "content": "Question: What do Stack Overflow, Super User, and Server Fault have in common that most of the sites on our network don’t?\nAnswer: A unique brand.\nIt’s no coincidence that our three largest sites happen to have their own brands. Unique domain names are more memorable than the subdomains that cover most of our network, which we believe is part of the reason why those sites are so successful. Gaming.stackexchange.com has been growing on its own for a while now: the community is extremely active and it has some of the best traffic statistics of any of the non-trilogy sites. The site has gotten a lot of special attention in terms of internal promotions, and we believe that it has the potential to become one of the largest gaming sites out there. To take it to the next level, it needs a unique brand.\nTLDR: Gaming.SE is now Arqade! If you want the story behind how Arqade came to be, keep on reading.\nNaming Gaming\nRealizing the need for a brand was easy, coming up with it was another story. Good brand names convey what the site is about (in this case: gaming, Q&A, advice, etc), are memorable, don’t require a lot of explanation, and are easy to visualize and design for. To come up with a clever name, we decided to consult some experts in the field: the Gaming.SE community.\n\nWe made a meta post announcing a special chat room dedicated to a week-long brainstorming session. The rules for the chat room were simple: no discussion, only suggestions. Star suggestions you like, and ignore the ones you don’t. The criteria for the domain name were a bit more complicated:\nNon-negotiable criteria: the name\n\nmust be available\nmust be a .com\nmust not be associated with a trademark\nmust not contain hyphens or other similar characters\n\nNice-to-haves: the name\n\nshould convey the idea of Q&A, advice, knowledge, or community\nshould suggest gaming, or something related (e.g. levels, playing, quests…)\nshould be memorable, such that a strong visual brand can be created around it\nThe Twitter handle should be available\n\nWe got a lot of great suggestions from the chat, and Arqade.com fit best. It’s pronounced “arcade”, which is clearly associated with gaming, and there’s a convenient “QA” in the middle! Many thanks to NiQAlas T for the idea!\nBranding and Design\n\nOnce we had the name, the next step was to create a design around it. Our community really loved Jin’s 8-bit theme, so we didn’t want to change the design too drastically, but we did want to tweak it to make it feel like you’re in an arcade. Jin did a little design magic and proposed the design to the community last week. While change is always difficult, we think the spaceship is pretty awesome and will make for some interesting swag!\n\nWhat does this mean for our other sites?\nArqade got a new name because it is growing very rapidly. The community is already very engaged and excited about helping move the site to the next level, and part of that is a name that will distinguish it in the gaming community. Not every site will get its own name, and rebranding is not a “next step” in the graduation process. However, if a site grows to the point where the community is very strong, excited, and we think it can handle a big push, we will definitely consider doing this again.\nDon’t be upset if your community keeps the brand it launched with though –  there are a lot of benefits to being associated with the Stack Exchange network! That’s why Arqade, Ask Different, and Seasoned Advice (among others) all redirect to a .stackexchange.com subdomain, even though they have their own brands.  For one, search rank is improved for our entire network.  Additionally, many people recognize Stack Exchange as a brand, and might be more likely to visit some of the smaller sites because of that. For these reasons, we’re reluctant to even consider_ re-branding a site until its community is very well-established. And there are other areas where the effort can be better spent: finding ways to convey the unique value of your community to newcomers in as few words as possible is enough of a challenge without trying to force it into a one- or two-word name + domain.\nAs with a lot of the things we do, “Arqade.com” is an experiment. We think it will help the already strong Gaming community grow even more, but the actual effects remain to be seen. If you want to stay updated, follow @thearqade or come hang out!",
        "url": "https://stackoverflow.blog/2012/06/26/welcome-to-the-arqade/"
    },
    {
        "title": "Week 2 of the Summer of Love: Researching Comments",
        "content": "The quality of the Q&A on Stack Overflow continues to outshine any other on the Internet – thanks to the awesome community. Like any community, unspoken rules eventually become expectations. In the previous post in this series, Joel talks about how the community developed its own set of rules and norms that new recruits simply don’t know about. When a new comer walks into the group and puts her hand up for a high-five and gets chastised by the group because they don’t give high-fives, she walks away embarrassed with head hanging low. That’s unfortunate.\nThis isn’t a new concern of course – almost four years ago, one day after Stack Overflow left private beta, Chris Upchurch wrote one of the most famous pleas for kindness in response to attacks he observed on new users in Could we please be a bit nicer to the noobs?\nA year and a half later, we saw the opposite opportunity for self-reflection when Satoru.Logic, then a member for just over 4 months, asked Why are Stack Overflow people nice? – which was followed up a year later by veteran member dmckee with Are Stack Overflow people still nice?\nThere’ve been dozens of discussions along these lines over the years, reflecting an increasing perception of our Jekyll & Hyde nature. But always lacking was anything more than anecdotal evidence. And as Stack Overflow grew, it became easier and easier to cherry-pick examples that showed the community as either friendly or fierce. So we decided to gather some objective data:\nComment Friendliness: The Science Hammer\nTo investigate, we sampled 7,000 comments written on questions on SO and collected 20 independent ratings of attitude for each and every sampled comment (ratings obtained via experienced raters on Mechanical Turk). Comments were randomly selected over the past 3 years. Then we calculated “friendliness scores” for comments based on all 20 ratings.\nThe first thing we found is that comments on Stack Overflow are, in fact, getting friendlier. As we see in the chart, friendliness ratings are generally positive and continue to trend that way. Since May 2011 at least 75% of all comments sampled are rated positively. Statistical modeling of the data supports these observations: comments now are significantly friendlier than they were three years ago. What about the unfriendly portion? We’ll get to that later.\nThe next thing we looked into is friendliness differences between tags. According to our sample, comments tagged in ‘C’ tend to be rated as less friendly compared to others. And subtly, ‘Android’ is friendliest. However, the data only reflects minor differences so we should interpret this trend with a grain of Kosher salt…nevertheless, this does address another long-standing question: are programmers using certain languages or technologies more welcoming of newbie questions?\nWe found that comments on first posts are significantly less friendly compared to the rest, regardless of time period. Though the total percentage of nice comments is increasing (awesome!), the few unfriendly cases can unfortunately drag down a new member’s experience. Experience has taught us that newcomers tend to really remember their first interactions within a community; in this case the small percentage of rude comments carry disproportionately more weight in the memory of the newcomer and affect their impressions of the community.\nConclusions\nSo now that we have some hard data, the question arises: is this a problem, and is it worth addressing? If the majority of comments are friendly and getting friendlier, why risk rocking the boat? The short answer is simply that 3/4 “nice” is still a long way from “Total civility […] one hundred percent of the time.” It doesn’t take an overwhelming amount of rudeness to create that impression in casual readers, and becoming complacent about our “niceness” is the quickest way to become blind to its absence. We’ll delve into this further in our next installment, but for now I’ll leave you with a question from dmckee:\nIs there something else we can do to encourage our big city to keep the small-town feel we grew up with?\n\nIf you’re curious on how exactly we collected and analyzed this data, feel free to download the full summary. Look forward to the next post in the series discussing mechanisms and community solutions! And don’t forget; at Stack HQ, we love you all.\n\n\nUpdate: Comment examples on MSO",
        "url": "https://stackoverflow.blog/2012/07/23/week-2-of-the-summer-of-love-researching-comments/"
    },
    {
        "title": "The Hunting of the Snark",
        "content": "You can’t fix what you can’t measure, so the first thing we did as a part of our Summer of Love campaign was try to measure friendliness in an objective and repeatable way. We gathered 7000 comments from Stack Overflow and submitted them to Mechanical Turk. For each comment, we asked 20 people to rate the comment as Friendly, Unfriendly, or “Neutral/Unclear.”\nThere are different ways of massaging the data, but I do want to give you a flavor for the kind of comments we’re talking about when we’re talking about unfriendly comments. Here is a snapshot of the complete results, showing comments where 95% of the reviewers rated a comment as unfriendly (warning, if there are any kids in the area, you may want to send them away):\n\n\nCan you not google?!\nDean, don’t be a f___ing lamer. You clearly don’t have the slightest clue of what your ass…\nNeurofluxation, haha f you should be f you kid\ntry to give answers. you baby kid shut up your mouth. this is forum to share problems not …\nyea a__hole im saying send me the code\nThis is not correct, for many reasons, many of which were pointed out by plinth below. I d…\n@Rich, It is clear (and always was clear) that you don;t care about what anybody else thin…\ncould you please stop reposting all your questions 4 times?\nYou know, I really dislike the attitude here that a question can only be asked once.\n@cee: And rolling back is not intended to solve whatever gripes you may have with me. If y…\nNow you’re just proving your douchiness.  Editing your question to hide your true intent, …\nman, you guys have no sense of humor.  I don’t see how hundreds of idiotic and non-program…\nNO. GOD. these comments are getting irritating.\nIndeed. Although demonstrating a severe lack of ability to ask questions is a bad start.\nI mean, really, WTF?\nDon’t vote down, the sooner I sabotage this the sooner we can tell the client f___ you and…\n@TheTXI: That’s exactly my point. If the person actually bothered to google the damn que…\nu discuss all kind of questions here but when i ask a question and if u people are not abl…\n@TStamper: If they haven’t bothered to look through the FAQ, what makes you think they are…\nIt’s amusing for a while, babby, but even the funniest jokes get tedious when they’re done…\nIf you’re so desperate to have your account removed why not just leave and not come back? …\nHe asks lot’s of these troll questions\nSeriously? WFT Dude?\nJesus! Start fixing your question.\nSpencer, my tone? You sir are political correctness gone mad!\nIf I said your mouse sucked, are you gonna take me out to the parking lot and fight me?  i…\nThis isn’t a programming question, it is a psychology question. It doesn’t ask for an expl…\n@mario why in your opinion should I not link to it? Because of the 5 pageviews the site ga…\nRec, you are not asking a question that can be answered in the form at the bottom of this …\n@user336502, you’re pushing your luck with cruddy questions (http://stackoverflow.com/ques…\nJebus, @AKA, did you even read your own question?  This is the worst piece of crap I’ve ev…\nJeez dont’ people read web sites. What do you think Stackoverflow careers is for? This pla…\nHmya, how can 4 in 5 programmers be wrong?  Or 1 in 2?  We don’t know how your brain works…\n@M.H: Don’t blame the language because you don’t know how to use it. Don’t blame the gun w…\n\n\nOf course, “friendliness” can be subjective. But when we’re talking about making Stack Overflow a friendly place, we’re not talking about being terse or even snippy — we’re talking about lighting a bag of dog poo on fire and throwing it at people.\nOf 7000 comments submitted, there were 161 that were rated as “unfriendly” by 75% or more of the reviewers… that’s about 2.3%. If you browse Stack Overflow for a few minutes, it’s likely that you will come across one of these extremely unfriendly comments. Of those 2.3% extremely unfriendly comments, less than 1/5th have been deleted. Most of them are still on Stack Overflow right now.\nThe “friendliness” situation is much better, mainly because our reviewers tend to universally interpret thank you’s as friendly.\n\n\n+1 This is a good question, as this programming practice is even used in some big projects. (www.ogre3D.com for ex.)\n@Visage Haha, thanks for that\nGreat analogy, @Guffa !\nNice find, Chad Birch!\nIt was tagged javascript before Joel edited it. Clearly it is programming related 🙂\nThanks much for the feedback everyone\ni wonder how did you manage to create the compoennts tag? 😉 like your question +1\nThanks for the suggestion !\nThat’s nice.  Let us know how it goes!\nYou’re welcome…\nhehe…that was fun!\nThanks, see my edit.\n@Mike: Thank you.\nCool, will do that.\nOkay, thanks all.\nO_o That’s very cool! +1\n@spudly – apologies, turns out the link I posted was a dud – sorry for wasting your time!\nLove the question.  What you’re after is domain knowledge which is exactly the type of information that a company guards because it’s a barrier to entry to blokes in garages writing television clients 🙂\nCool. thank you!\nHa! I didn’t even catch it in your post. 🙂\nLOVING all the images that have been added 🙂\nthanks.. thats exactly what I was looking for 🙂\nThanks everyone\n@meagar wow that looks awesome! I’m only about a several hour drive from there, I’ll see if I can make it. Juggling for the win!!! 🙂\n\n\nOf 7000 comments submitted, 557 were rated as “friendly” by 75% of more of the reviewers.\nI think this proves that the methodology is reasonably sound. I think everyone can agree that the Mechanical Turk reviewers, who were shown comments out of context and who probably did not know anything about our site (all they knew was that it was a “programmer’s discussion forum”), did, nevertheless, produce results that seem to agree with how we, inside the community, would judge the comments. That gives me confidence that we have a reliable measure of friendliness that we can track.\nThere’s a lot of other interesting stuff in the data, so here’s an Excel workbook containing the raw data and friendliness ratings.",
        "url": "https://stackoverflow.blog/2012/07/31/the-hunting-of-the-snark/"
    },
    {
        "title": "Stack Exchange: now 60 Valued Associates strong!",
        "content": "Holy smokes… It’s been over three and a half years since Jeff recruited Valued Associate #00002 to work full-time on building Stack Overflow. In that time, a lot has changed. Jeff’s moved on to teasing us with his next project, Jarrod’s gone from spending his days knee-deep in code to managing the Core dev team and being big in Japan. And there are now 60 full-time employees of Stack Exchange, many hired from within the communities on our sites.\nIt’s been far too many months since we last introduced any of them, which is a real shame – these folks work hard keeping the lights on, and there’s no reason to keep them locked in the basement all the time. So without further ado,\nNew Valued Associates\nBart Silverstrim – Systems Administrator\n\nBart is the newest addition to our Systems Administration Team.  Bart is married to his wonderful wife Norma, an English teacher in PA, and has a stepdaughter in college and a son obsessed with Pokemon. He has three cats named Ruby, Python and Mongo. He knows more about Star Trek than most, and is an aspiring author (try and find him at the local Barnes and Noble!)\n See also: Welcome, ServerFault Valued Associate #0000004!\nJay Hanlon – VP of Community\n\nAs the new VP of community, Jay will oversee a combined team made up of our existing (and awesome) Chaos and Community teams.  Specifically, he’s tasked with driving a 6-sigma confidence level in cloud fluffiness, a 15º improvement in rainbow arc, and a modest 15% lift in unicorn nobility.  He comes from a long, if accidental, career in coal mining financial services, where he started as a two-week temp answering phones, and most recently was a Managing Director of Capital Markets (whatever that means).  Prior to that, he studied Drama at Dartmouth College and did tried to do a lot of crossword puzzles.  Today, he’s a proud husband and the father of the world’s definitively most-awesome one-year-old [citation needed].\nSteve Feldman – Office Admin\n\nProudly Polish from New Jersey, Steve helps the ever-expanding office at Stack HQ maintain its efficiency as we keep growing and growing; making sure the NYC team has enough jerky, Red Bull and peanut M&Ms to get them through the day; keeping the shelves stocked with enough swag to keep our users happy and buried in t-shirts and stickers.   He graduated from University of Maryland (History) and then the University of Nottingham in England (MA Environmental History), where he found his love of Manchester United.\nMatt Jibson – Developer\n\nTall Matt is from Colorado and has joined the Development Team in the NYC office working on Careers 2.0. He plays organ and has a website.\nWilliam Cole – Product Manager\n\nWill joins Stack Exchange as the Product Manager for Careers. He hails from Austin, TX and has been in NYC for 6 years (Don’t worry, he still has his cowboy boots). He founded two failed startups – one around news discovery (Know About It) and the other for fantasy sports (Chalq).  His hobbies include rec league sports and their online fantasy equivalents.  He enjoys reading science fiction and attending political, social, and economic debates. He is looking forward to building products at scale, working in a developer centric company culture, and not being responsible for raising money!\nJay Greenbaum – Sales\n\nNY born and bred Jay joins the Careers Sales Team in NYC.  Jay only left the Empire State for 4 great years as a Florida Gator.  In his spare time, Jay loves travelling and eating and is obsessed with golf.  Jay recently rescued a mutt dachshund puppy named Layla.\nBethany Marzewski – Marketing Coordinator\n\nBethany, a proud graduate of Northwestern University, comes to the Careers Marketing Team with a background in magazine journalism.  Bethany’s career in journalism was highlighted by her cat (Freya)’s national magazine debut in Prevention Magazine.  In her spare time, she enjoys traveling, singing in her community choir, and growing orchids at her Brooklyn apartment.\nJon-Vincent Zampetti – Sales\n\nJV joins the Careers Sales Team in NYC.  Beach bum, Jon-Vincent (JV) is from New Jersey and grew up in a small beach town, Monmouth Beach.  JV is obsessed with all sports and routing for local teams: Giants, Rangers, Knicks, and Yankees.  In his spare time, he enjoys pepperoni pizza and Hemingway.\nDammand Cherry – Sales\n\nDammand joins the Digital Ads Sales Team.  He lives in Brooklyn with his 3 kids and lovely wife.  He played football in college and loves to sell advertisements.  Dammand is passionate about politics, and in his spare time spends time on his site The Politicus.\nBen Kiziltug – Sales\n\nBen joins Dimitar in our London Careers 2.0 Sales Office.  Ben is originally from London and went to university in Liverpool. Upon completion he moved to Dubai to work in the headhunting sector where he lived for almost 2 years.  Ben then took a hiatus to travel around Central and South America for 11 months. Highlights of Ben’s travels included living in the Amazon with a local tribe for a month, hiking on ice glaciers in Patagonia, swimming with whale sharks off the coast of Mexico and cycling down the world’s most dangerous road in Bolivia all before partying in Brazil for Carnaval.\nStefan Schwarzgruber – Sales\n\nStefan joins us in our ever-expanding Careers Sales Team in London. He grew up on a farm in Austria, moved to Vienna for a few years, and now resides in London. In his free time he plays volleyball, even traveling for International tournaments with his teammates!  When he does make it back home to Austria he enjoys riding his brother’s horses (never without his permission though as he is the original horse whisperer).\n \nMatthew Napolitano – Sales\n\nMatt joins our Career Sales Team in NY.  Born and raised in the ‘burbs, Matt went to college in Madison, WI, and spent a year as a ski bum out in Lake Tahoe before moving back to NYC. He likes spending as much of his free time outside as he can, often playing tennis, basketball, or anything else he can make competitive.\nSean Bave – Sales\n\nSean joins our Career Sales Team in NY.  He was born and raised in Westchester County, New York. He is addicted to football and golf. He once won a Chicken Nugget Eating Competition by eating 86 cafeteria nuggets.\nRobyn Wertman – Finance Manager\n\nRobyn joins Stack Exchange as our Finance Manager.  Born and raised in central Ohio, Robyn moved from MI to NY in 2011 (with a broken leg!).  She and her husband, Brad, have two boys Bryce and Chandler. She loves to spend time with her family, read paranormal romance books on her tablet and visit new places in NYC.  If it’s a weekend, you can find her at the local playgrounds and parks.\n \nRobert Brand – Sales\n\nRobert joins our Career Sales Team in NY.  He grew up on Long Island and went to school at James Madison University in Virginia.  Robert now lives in Brooklyn with his girlfriend and 3 cats. Robert enjoys playing video games, cooking, and listening to/reading science fiction/fantasy books.  Also, he does not have a “real” belly-button (it is a hand made “innie”)\nPlease join me in giving a warm, belated welcome to these fine conscripts!",
        "url": "https://stackoverflow.blog/2012/08/02/stack-exchange-now-60-valued-associates-strong/"
    },
    {
        "title": "Stack Exchange is not a forum: the role of “niceness” on a Q&A site",
        "content": "It’s been a few weeks now since Joel kicked off our “summer of love”. There’ve been some excellent discussions in the blog comments and on Meta, and we’ve tried to present some hard data on how objectively “nice” we are. But it’s high time to talk about what place “niceness” really has on Stack Exchange. And to do that, we need to start by talking about you:\nYou, sir, are a jackass.\nAnd that’s ok.\nStack Overflow wasn’t created to be some utopian ideal of peace and love. When Jeff & Joel set out to create this system, they knew full well the sort of problems that face online communities: noisy conversations obscuring real information, preferential behavior toward those in the right cliques, bickering, rudeness… \nThe rules we’ve created, the tools we have at our disposal, the very nature of certain features on the sites – these are all engineered to __mitigate the problems that inevitably result from throwing a bunch of jackasses together in one place.\nStack Overflow people are nice because we’re good at cleaning up after ourselves… And staying focused on what’s really important.\nCivility is a tool for communication, not a weapon for order\nYou might think you hang out on SO because people are nice there, but if Stack Overflow was full of very nice, impeccably polite misinformation… It wouldn’t be a valuable resource for professional programmers. It’d be more like some elaborate geek troll.\n\nIt’s good to keep politeness in mind when writing, as your tone can distract readers from your message. It’s great to have something approaching real data on how “nice” we are. But in the end, this sort of navel-gazing misses the point: we’re not here to pat each other on the back and hand out gold stars, much less waggle our fingers at the jackasses – we’re here to share the knowledge of our craft.\nStop and think for a moment about the nicest person you’ve met on Stack Exchange. Chances are, it wasn’t the guy who greeted you by name when you signed on – it was the one who answered your first question, convinced you to clarify what you were asking, and calmly pointed out your misconceptions before pointing you to a solution.\nRudeness as a defense against vampires\nAs a traditional forum evolves over time, insular rudeness becomes the weapon of choice against the invading hordes, an immune response by the organism toward infection from outsiders. This is only marginally effective, since the most dangerous invaders have long ago developed a resistance to it. Eventually, rudeness becomes institutionalized, to the point where members start to drive away everyone – including each other. It’s a natural progression. And on Stack Exchange, it’s entirely unnecessary.\nEveryone loves to quote from the FAQ’s etiquette section, particularly the first “be nice” bit. But it’s the last section that has all the action items:\n\nBe honest.\nAbove all, be honest. If you see misinformation, vote it down. Add comments indicating what, specifically, is wrong. Provide better answers of your own. Best of all — edit and improve the existing questions and answers!\n\nTired of seeing crappy questions? Close them. Irritated by lousy answers? Down-vote them. Depressed by the meaningless junk that some people post whenever they see an empty text field? Delete it! Embarrassed by poor grammar or formatting? Edit it! See someone being rude? Flag it! All of these tools exist, and we’re working hard on making them better and more effective.\nSo when you can cast a vote and go on with your life, why would you waste your time ranting? It’s that old message board mentality creeping in. When you leave a comment, recognize that you’re now walking the line between a Q&A site and a traditional forum. If you aren’t actively trying to help someone learn, you’re not helping to defend the realm – you’re just being a jackass.\nThe choice here isn’t between being nice and being right. You can be nice each and every time you guide someone to the right answer or the correct behavior, and doing so is not only better for the community morale, it’s also more effective. That doesn’t take a welcoming committee, it’s something anyone can do. Even jackasses like me and you.",
        "url": "https://stackoverflow.blog/2012/08/08/stack-exchange-is-not-a-forum-the-role-of-niceness-on-a-qa-site/"
    },
    {
        "title": "Stack Exchange takes on Denver! Welcome to our new colleagues!",
        "content": "We’re in New York, we’re in London, and as of August 5, we’re also in Denver! It’s true — Stack Exchange is growing up faster than we can keep up, but we’re excited to introduce our sales team at our brand-spankin’-new digs in Denver. (Seriously, it’s a pretty sweet office. Check out our before and after photos.) \nSeth Mortenson, Sales\nHailing from Orange County (New York, not California), Seth enjoys the Colorado outdoors and spends his free time hiking, camping, snowboarding, and fishing. On the rare occasions when he’s not being active, you’ll likely find him catching the latest New York Giants game—which he says is the “greatest thing that’s happened since sliced bread.”\nErin Gray, Sales\nAlthough she spent 10 years of her life overseas, Erin attended high school in Breckenridge, CO and now considers that to be home. While in Colorado, she most enjoys the summer and winter seasons and spends most of her free time snowboarding every ski season. In addition to this seasonal hobby, Erin also loves to attend sporting events.\nAlicia Del Pardo, Sales\nOriginally from Ft. Bragg, North Carolina, Alicia is a self-identified “Military Brat” and graduated from the University of Colorado at Colorado Springs with a degree in business service management. As her photo exemplifies, Alicia really loves running and is always training for her next race! Aside from church every Sunday, she likes to spend her weekends salsa dancing.\nMax Applebaum, Sales\nBorn and raised in Westchester County, New York, Max recently graduated from the University of Colorado at Boulder to join our Careers 2.0 sales team in Denver. Despite his west-coast home, Max remains a “sports fanatic” of all things New York: the Mets, Jets and Knicks. In his spare time, you’ll likely find him hiking, playing pickup basketball, or playing tennis. He’s also an avid skier and ski-raced slalom throughout high school.\nMelissa Noland, Sales\nMelissa joins our team with Chicago roots and to this day remains a very loyal Cubs fan. She moved to Colorado for school and just graduated from University of Colorado at Boulder, where she played on the club softball team (and has been a softball player for 18 years!). A candy addict but chocolate hater, Melissa’s favorite season is winter because it gives her ample opportunities to wear her Moon Boots.\nJordan Conner, Sales\nJordan is a Denver native and enjoys doing anything outside in the Colorado air! A world traveler, he participated in the “Semester at Sea” program at the University of Denver and visited 10 countries in 100 days. He’s also a huge Denver sports fan and can’t wait for the Broncos to be Super Bowl-bound this year!\nJoseph Sondag, Sales\nJoe is happy to be an inaugural member of our Careers 2.0 Denver sales team! Originally from California, Joe is a Colorado Buffalo who loves snowboarding, hockey, In-n-Out Burger, and the San Jose Sharks. Ironically, despite having a strong interest in meteorology/severe weather, he admits to having a notably irrational fear of getting struck by lightning.",
        "url": "https://stackoverflow.blog/2012/08/23/stack-exchange-takes-on-denver-welcome-to-our-new-colleagues/"
    },
    {
        "title": "Stack Exchange Machine Learning Contest",
        "content": "Over the last 4 years we’ve built up quite a bevy of moderation tools here at Stack Exchange.  We’ve got closing, editing, deleting, flags of all sorts, voting, commenting, review queues, and more.\n\nThese all work great, but they all require action after a post is made. This is a lot of work for the community, and not particularly friendly toward those posting, particularly new users. In a perfect world, we’d be able to offer specific, targetted guidance for authors whose posts were likely to be shot down, before they ever showed up on the site, and without requiring as much up-front effort from our community.\nWe’ve already expended some effort on this front with some basic tests that reject obviously problematic questions, and automatically flag borderline ones for review, but we feel this can be done much better.\nThis is where you come in\nWe’re running a machine learning contest on Kaggle to find an algorithm that predicts whether (and for what reason) a question will be closed.\n\nThe idea is simple: we’ve prepared a dataset with all the questions on Stack Overflow, including everything we knew about them right before they were posted, and whether they finally ended up closed or not.  You grab the data, build your brilliant classifier, run it against some leaderboard data and submit your results.  Rinse and repeat until the contest ends, when we’ll grab the most promising classifiers and run them against fresh data to choose winners.\nThe winners will get our respect, the knowledge they’ve helped make the Internet a better place – oh, and some cold hard cash.\n\n1st prize – $11,000\n2nd prize – $6,000\n3rd prize – $2,000\n\nThere’s also a $1,000 prize for the best visualization of our data.\nThe contest runs from Tuesday August 21st until Tuesday October 9th.\nWe’re also hiring a full-time data scientist, and we’re going to be very interested in talking to the authors of the best classifiers.\nSo head on over now and…\nCheck out the contest\nSome explanation of how we’ll use the classifiers that come out of the contest, as there seems to be some confusion on that point.\nFirst and foremost, there’s no plan to “auto close” questions. Human oversight will always be needed, there are always edge cases, evolving standards, and what-have-yous that won’t be captured in any algorithm.\nWhat we’d be really excited to try out is giving users who are composing questions advice on how to improve them while they’re composing them. This would save a lot of time, reduce the overall close rate, and make new users’ first asking experience more likely to be a pleasant one.\nA secondary goal is to improve our auto-flagging of questions, as our current system is very simple and has some known issues.\nIf you’re keen on machine learning, you can also discover new opportunities in machine learning at Stack Overflow Jobs.",
        "url": "https://stackoverflow.blog/2012/08/21/stack-exchange-machine-learning-contest/"
    },
    {
        "title": "Stack Exchange API V2.1",
        "content": "There’s been a low-key beta of the latest Stack Exchange API revision, V2.1, under way for the last month or so.  I’m happy to announce that it’s official, API V2.1 is public, frozen, and out the door.\nWhat’s new in this release?\n\nFull Reputation History\nNotifications Tab\nImproved Search\nUser Merge history\n\nOh, and our first set of write methods.\nIt’s now possible to create, edit, and delete comments via the Stack Exchange API\nWe’re starting small, with the least important of our content, to safeguard the quality of our content.\nComments created with the API show which app created them when you hover over them, like so:\n\nThe link shown will take you to an app’s Stack Apps post, letting you find new apps right from your favorite sites (as well as report malicious ones easily).\nThe following restrictions apply to the write comment methods:\n\nYour app must have an undeleted Stack Apps post\nYour app_ _must be authorized by a user to perform write operations\nThe authenticated user must have the comment everywhere privilege\nA user’s daily quota of write operations increases with reputation\n\nQuotas are discovered through the write-permission methods\n\n\n\nSo head on over to the documentation and\nGet Started",
        "url": "https://stackoverflow.blog/2012/09/04/stack-exchange-api-v2-1/"
    },
    {
        "title": "When a Site Grows Quiet",
        "content": "In the lifecycle of a Stack Exchange site, we’ve long held the philosophy that “it takes as long as it takes” to build a sustainable community:\n\nHow long can a site stay in beta?\nThe simple answer is, it takes as long as it takes. We’ll wait. If a site needs more activity, go out and evangelize it. As long as your site shows steady progress and continues to make the Internet a better place to get expert answers to your questions, it will march on.\nBut when a site struggles to maintain any semblance of steady progress — when it’s struggling to garner an audience, a healthy core of experts, and a steady stream of questions — it becomes increasingly unlikely that the site will find a core audience to sustain it.\nNext week, we’re shutting down six sites that fall into this category:\n\nAstronomy\nEconomics\nLiterature\nFirearms\nHealthcare IT\nTheoretical Physics\n\nThere’s nothing inherently wrong with these topics, or with the good folk who put time and effort into trying to make them work. They will likely make great Stack Exchange sites… someday. But so far, the network just hasn’t been able to provide these sites with the audience they need to make them work. Maybe they’ll find a niche on a different site, or be reborn at some later date as the Stack Exchange audience continues to grow. But for now, we’re shuttering the windows before they’re broken.\nThe knowledge that went into these sites is not lost. In keeping with our promise not to hoard what was given freely, all content on closed sites will be available for download from the Area 51 page corresponding to each site, in the same format and with the same open license as the data dumps for graduated sites.\nWe’ve always been reluctant to close a site once it entered public beta. These were difficult choices, as many people are fond of these subjects. Still, we’ve been somewhat remiss in not taking action sooner.\nIf it’s of any consolation, we have learned a lot from watching these sites grow and evolve. We are hard at work on a next-generation Area 51, with the goal of making site creation easier, faster and more educational: one of the most frequent stumbling blocks for new sites has been the learning curve for folks unfamiliar with Stack Exchange – providing them with help and guidance is key to creating a vibrant, healthy site.\nThank you all for the the knowledge and hard work you’ve poured into these sites. Because of it, someday there will be a site on astronomy… and economics… and literature… and the rest. Stronger and better than ever.",
        "url": "https://stackoverflow.blog/2012/04/25/when-a-site-grows-quiet/"
    },
    {
        "title": "Highlights from Stack Overflow Worldwide Meetups",
        "content": "Thank you to everyone who organized or attended a Stack Overflow meetup! Our Meetup Everywhere community has grown to over 4,400 people in almost 600 cities, and many of those people signed up for meetups in their areas this year. Many meetups were small, but we hope you all had a good time and that those smaller groups had an even better opportunity to get to know each other.\nOur official hashtag is #SOmeetup, and we’ve seen a lot of great pictures and stories on Twitter, Flickr and YouTube so far. If you haven’t had a chance to upload yours yet, please do! Take a look at some of what people have shared so far:\nMilan, Italy\nThe Milan meetup group was our largest this year with 101 RSVPs to their event! Check out some photos and write-ups (some of which are in Italian) – the folks at StartMiUp event streamed their event in HD video online.\n\n\n\n\nBarcelona, Spain\nThe Barcelona group made this great video of their meetup!\nhttp://www.youtube.com/watch?feature=player_embedded&v=87id1VIM0Sw&lt[/embed]\nColombo, Sri Lanka:\n\n\nCambridge, MA, USA\nThere are at least half a dozen Stack Exchange moderators that live in the Boston area – here’s a shot of some of them at the Cambridge meetup!\n\nKevin (on The Great Outdoors)\nmattdm (on Unix & Linux)\nstoicfury (on Philosophy)\nThomas Owens (on Programmers and SO user #572)\n Matt Chan (on Fitness & Nutrition)\nKyle Cronin (on Ask Different and SO user #658)\nYou will never find a more wretched hive of scum and villainy delightful group of Stack Overflow enthusiasts:\n\nZagreb, Croatia\nThe Croatian meetup was hosted by Infobip, an IT company based in Pula:\n\n\nSydney, Australia\n\n\nNew York, NY, USA\n\nThe New York City meetup took place in two parts: the first was a series of talks at Projective Space (a coworking space on Manhattan’s Lower East Side), and the second was socializing over beers and snacks at Onieals on Grand.\nThe first session’s talks provided information on cool new technologies and gave people some conversation topics.\nBobby Grace shared knowledge about responsive web design and designing Trello for multiple devices.\nKevin Gessner spoke about how elasticsearch‘s database is “magic.”\nStack Exchange developer Matt Sherman taught us how to meet “hot singles” in our area – a.k.a what tech recruiters can learn from online dating.\n\nWe had most of the Stack Exchange core developers and Careers developers on site.\nBangalore, India\n\nHere’s the agenda our Bangalore group brainstormed on their meetup.com page:\n\nAgenda/Plan/Activity Announcement or Meetup start\nScreening tech talk videos.\nLightening talks 5 ~ 10 minute presentations about whatever\nTalk to the Gurus (If there is anyone with more than 5k reputation or any senior programmer) – Share your experience or QA session.\nBarcamp style – One track – a ‘lab’ kinda area where people can plugin laptops and show off.\n\n\nStack Overflow name tags (shown on the left) helped people get to know each other and allowed them to show off their current amounts of Stack Overflow reputation.\n\n\nParis, France\nThe Paris meetup was hosted by DojoBoost. Though turnout was fairly small, it seems like everyone had a good time and engaged in interesting discussions.\n\n\nPresentations\nWe’ve also found some of the slides online for presentations given at meetups around the world. If you missed this event and want to see what people were discussing, take a look at these:\n\nDrungli – a presentation on usability from the Milan meetup\nTrello – a presentation about designing a product for multiple devices, from the New York City meetup\nEmerging Architectures presentation from a meetup in Colombo, Sri Lanka\n\n\nThanks again for being part of our second annual worldwide meetups! And if you have any suggestions for how we can make our next Meetup Everywhere even better, let us know in the comments or on Meta Stack Overflow.",
        "url": "https://stackoverflow.blog/2012/05/03/highlights-from-stack-overflow-worldwide-meetups/"
    },
    {
        "title": "Revamped Notifications",
        "content": "About a year and half ago we introduced the Global Inbox, that lovely little red number our analytics tell us everybody loves.\n\nWe’re fiercely protective of the inbox, making sure only actionable things directed at you go into it.  Comments, answers, a handful of post notices, Stack Overflow Careers messages, and the like.  That’s why that little red number is so loved, clicking it shows you awesome, interesting things as a rule.\nHowever, since day one we’ve had a another class of general information notifications, badge awards, revisions, election announcements, and so on.  Stuff that’s good to know, but not always stuff you can respond to.\nAnd here’s how we’ve always displayed those notifications:\n\nIf that’s not bad enough, notifications make you dismiss every, single, one – while the Global Inbox is a one-click, friction-less dismiss.  This means that it’s more work to go through your less interesting messages.\nThis is obviously all out of whack, so we’ve completely reworked the notification system, cribbing liberally from the well received Global Inbox:\n\nNotifications are now…\n\n…a tab in the Stack Exchange Genuine dropdown\n…global: get a badge on Stack Overflow and you’ll see the notice on Gaming\n…dismissed with one click, just like the inbox\n…available historically: the last 45 are available, rather than disappearing forever once read\n\nSince notifications aren’t as important as inbox notices, whenever you have unread inbox messages we’ll display the red inbox indicator rather than the gray notification indicator.  Of course, once you open the drop down you’ll see that you also have new notifications.\nHopefully this notification change removes just a bit of friction from using your favorite Stack Exchange sites. I know I for one won’t miss Big Slidy Orange one bit.\nBe aware that we’ve also culled and collapsed some notifications types in recent months, aiming to keep our sites annoyance free.",
        "url": "https://stackoverflow.blog/2012/05/21/revamped-notifications/"
    },
    {
        "title": "Encyclopedia Stack Exchange",
        "content": "Remember this old picture?\n\nWhat’s that “Blog” circle supposed to be about, you ask? WHERE’S THE BLOGGING?\nSince Stack Overflow launched, we’ve been trying to explain that it’s not just a Q&A platform: it’s also a place where you can publish things that you’ve learned: recipes, FAQs, HOWTOs, walkthroughs, and even bits of product documentation, as long you format it as a question and answer.\nAs Jeff wrote:\n\nif you have a question that you already know the answer to\nif you’d like to document it in public so others (including yourself) can find it later\nit is OK to ask, and answer, your own question on a relevant Stack Exchange site.\n\nFor a long time we’ve been pleading for people to write more canonical answers so the same questions don’t keep coming up again and again, and we even have the Self-Learner badge which you can only earn by answering your own question. Still, I’m not sure if the message is getting through to everyone, as evidenced by the misguided comments that sprout up whenever someone answers their own question.\nHow can we make this any clearer? Maybe a big bold checkbox will help.\nNow when you ask a question, you’ll see that checkbox right there, reminding you of the option to answer your question on the spot. Furthermore, the answer will be published at the same time as the question, avoiding that awkward moment where well-meaning people rush in to answer something you’ve already got an answer for.\nIt’s just a tiny checkbox that doesn’t change the mechanics of Stack Exchange in any way, but we have a bold goal for this new feature: we’re trying to move even more of the world’s long-tail, detailed knowledge into Stack Exchange. It works for all 83 sites (and their metas), you get to keep the reputation you earn, and you’ll get a lot more eyeballs than you can get on your blog (no offense… even my blog doesn’t get 24,300,000 monthly uniques).",
        "url": "https://stackoverflow.blog/2012/05/22/encyclopedia-stack-exchange/"
    },
    {
        "title": "Can Stack Exchange Capitalize on Hot Trends?",
        "content": "Hello. Sam Brand here. For those of you who don’t know me, I’m part of the CHAOS at Stack Exchange. I handle certain “special projects” across the network, oversee syndication, and occasionally poke my head into our communities to make sure our platform works to deliver killer content to the outside world. A couple weeks ago, I embarked upon one of these experiments.\n\nWhat I did\nEach day of the week (May 7 – May 11) I dropped into Google Trends: Hot Searches to find a buzzy keyword about which I could ask a question at one of our sites. I did this mostly out of curiosity; I’d never used the vast majority of our 85 sites. Who are the experts at our biology site? How might some of these communities react to a noob? A small part of this experiment was dogfooding to better acquaint myself with the product and communities that it’s my job to know. But that was just a small part…\nThe bigger goal was to see how equipped our network is to take advantage of the  most popular, topical keywords on earth. You know, the keywords me, you, your mom and your de-friended friends are most likely to plug into a search field at any given time — keywords like “Dancing with the Stars,” “National Donut Day,” “Barack Obama” and “Facebook” — the most popular search term on earth.\nStack Exchange, of course, was built for the long-tail. We thrive on questions that only a few of you have. But that doesn’t mean our communities can’t generate pieces of widely-appealing, high-quality content, and do so happily. Right? Just because something’s “hot” now doesn’t mean it won’t be useful to a Google Goggler on his hoverboard in the distant future. Or does it?\nHere’s what resulted when I asked six “hot” questions across six sites over five days:\n\nMonday, May 7 – “Facebook IPO” – Personal Finance & Money – I am a small retail investor. Can I invest in the Facebook IPO at the IPO price? [Closed]\nTuesday, May 8 – “Where the Wild Things Are” – Skeptics – Does ‘Where the Wild Things Are’ frighten children to a degree that author Maurice Sendak failed to comprehend? [Closed]\nWednesday, May 9 – “Great Pacific Garbage Patch” – Biology – Is the “Great Pacific Garbage Patch” beneficial for marine wildlife?\nWednesday, May 9 – “Barack Obama” & “Same-Sex Marriage” – History – Barack Obama is the first US President to support same-sex marriage. But who was the first head of government in human history to do so?\nThursday, May 10 – “Wolfenstein 3D” – Gaming – Wolfenstein 3D is now available for free online. But is this version any different than the original?\nFriday, May 11 – “Flesh-Eating Bacteria” – The Outdoors – What can an injured person in the outdoors do to prevent infection by flesh-eating bacteria?\n\nClick through, or take my word for it when I tell you: Creating high-quality content (based around hot keywords or not) is a challenge.\nAsking is a challenge. (Quick! Come up with a clever question about Chagas Disease. Go!) Answering is a challenge. (We are very aware how much work our users put into helping others.) There is no silver bullet when it comes creating smart niche content or newsstand-quality content that your aunt wants to read while she gets a perm in a hair chair.\nHowever…\nAt some of our sites content creation is more difficult than at others. Skeptics, where I asked my second question, might be the most difficult site to engage on our network. The site is accessible to everyone (Cats!), but the community asks that you become familiar with some strict ground rules before jumping in (Cats AND science!).\nI didn’t play by the rules when I asked question #2 (a pointless, overwrought question, I admit) and my question got shuttered. I can live with this. Stack Exchange can live with this. In this case, it’s not a too-strict FAQ or a crabby moderator preventing us from adding to the Internet; It’s me. Hate the player, not game played at Skeptics, a site that consistently churns out Q&A leagues more rigorous than any other user-generated content on the net. It is the site’s strict ground rules that enable it to do so.\nHowever…\nSometimes a site’s rules can get in the way of creating the sort of topical content that would make the net a better place. What happened with Question #1 illustrates this well. A couple Mondays ago, investing in Facebook seemed like a pretty good idea. So, like thousands of others I googled: “How can I invest in Facebook’s IPO?” What resulted were a jumble of links that referred to E-Trade’s involvement in the initial public offering, but no stories that told me directly whether I was eligible to bid on the shares at the IPO price. I just wanted an answer. So I took the query to our Personal Finance site, where the question was quickly closed. The reason for the closure? A similar question had previously been asked at the site, but about Skype’s IPO. Needless to say, Skype is not Facebook, and neither question will ever answer anyone’s question about getting in on any upcoming IPOs. Lacking a canonical answer, this is a case where a site should really learn to love the duplicates.\nQ: So, what can we do? How can Stack Exchange improve in cases like these when a good question with a hot proper noun gets shut down?\nA: Vote to reopen. Not enough rep? Ask your friends to vote to reopen. Flag for moderator attention. And make your case in the comments. If you want an expert answer, put in a little work to deserve it.\nOur moderators, like new users, can use a little poking and prodding. They own the sites as much as you or I. But more than anyone, they can make sites change (Server Fault’s FAQ went through a pretty radical change just this past February).\nConclusion\nLest you think all my hot topic assaults were for naught, think again. Check out our biology site for a comprehensive answer to my question about the “Great Pacific Garbage Patch.” Read here to protect yourself from “flesh-eating bacteria.”  Look here to find out which modern head of state first sanctioned gay marriage. As for Wolfenstein 3D… Several weeks after asking, nobody has yet found any difference between the classic game and the free web-based version. That’s the verdict, for now. Maybe in the future, someone wearing Google Goggles will come along and leave a more definitive answer.",
        "url": "https://stackoverflow.blog/2012/06/04/can-stack-exchange-capitalize-on-hot-trends/"
    },
    {
        "title": "Stack Exchange Gives Back 2011",
        "content": "I’m sitting up late this evening trying to think of an inspirational way to end this year with some grandiloquent statement about our growth and the great job everyone has done this year. I don’t know; maybe it’s the glow of the Christmas tree behind me, or the eggnog recipe I’ve been experimenting with… but, really, anything I can say here can only lessen the outpouring that comes following this…\n\nGreetings to the Stack Exchange Moderators,\nIn a yearly tradition at Stack Exchange, we set aside this time of year to make sure we are “giving back” to effect positive change in the world. As a moderator, you play such a crucial role in our success, and we would like to include you in that effort.\nAs a small gesture of thanks, we would like to make a $100 donation to charity on behalf of each community moderator. The link below leads to a brief form where you can select which charity you wish to receive the donation.\nSelect Your “Giving Back” Charity\nIt is my hope that, together, we can continue this tradition year after year — and with 220+ moderators, that donation will only continue to increase.\nSo, thanks to everyone who participated in Stack Exchange. Thank you for generously contributing your time, your passion, and your leadership, all of which made these donations possible.\n– The Stack Exchange Team\n\nWe started with 12 moderators, then 130 — and now on behalf of the 228 moderators of Stack Exchange, we made a donation to the following charities this holiday season:\n\n\nUnicef — $2,800\n\n\nDoctors Without Borders — $10,900\n\n\nWikimedia Foundation — $7,000\n\nAmnesty International — $2,100\n\nWe also want to give back to the people, tools, and projects that inspired us and helped us build this Stack Exchange Q&A network:\n\n\nW3C Consortium — $1,000\n\n\nWordPress Foundation — $1,000\n\n\nWikiMedia Foundation — $1,000\n\n\nCentOS — $1,000\n\n\nLinux Foundation — $1,000\n\n\nInternet Archive — $1,000\n\n\nCreative Commons — $1,000\n\n\nDotNetOpenAuth — $500\n\n\nOpenID Foundation — $1,000\n\n\nOpenSTV — $1,000\n\n\nLucene.Net — $1,000\n\nElectronic Frontier Foundation — $1,000\n\nThe notes returned in kind — the notes of “thank you” and heart-warming well-wishes — are a great way to end the year knowing that sometimes you just get it right, and that what you do matters. Let me end this year by extending a sentiment from the “giving back” letter to you, the users of Stack exchange:\nThank you for generously contributing your time, your passion, and your knowledge, all of which made this fantastic resource possible. Cheers! – The Stack Exchange Team\nComing up next: 2012. Stay tuned.",
        "url": "https://stackoverflow.blog/2011/12/23/stack-exchange-gives-back-2011/"
    },
    {
        "title": "SE Podcast #30 – Robert Cartaino & Rebecca Chernoff",
        "content": "Guests this week are Robert Cartaino and Rebecca Chernoff. Yeehaw! They’re members of our Community Team.\n\n\nThe original Joel on Software forums were sort of a progenitor for Stack Overflow. They had strict rules: nothing off-topic was allowed – and discussing the forums themselves was off-topic. So a Joel on Software Off-Topic discussion group was created for all of That Stuff. Joel’s forums are still going strong!\n\n\nWhat happens if we let a community go on forever? If it’s stagnating or not really growing, it’s not necessarily making the internet worse. It’s just not doing anything. Right? But think about something like an eHow, that has low quality pages that still rank higher for most queries than other pages with real, good information. The Community Team does evaluations of the quality of sites, but they are beginning to make that process transparent to the communities or even have their communities do the checks. Or potentially to hire really deep experts now and then. Or both?\n\n\nWhat if we have the best site on the web, but it’s for a terrible topic? For example – what if horoscopes.stackexchange.com was the best darn horoscopes site out there. Does the topic still make sense on our engine? This is why proposals are examined so thoughly in Area 51 (and its respective discussion section).\n\n\nIf you haven’t checked Area 51 out recently, you should stop by – there are lots of cool improvements that have been made. Robert, Jeff and Rebecca discuss the newfangled Area 51 process, and what sorts of mysterious things happen to a site when it spends its “week” in Private Beta.\n\n\nSometimes proposals fail and get closed. Game of Go was one of them. It got shut down, but its questions and its users got migrated over to Board Games – which is one of the ideal ways to handle having a young site shut down. Another positive way to handle the shutting down of a site is to let its users regroup in Area 51 and try the proposal again with a different approach.\n\n\n“Wouldn’t it be simpler to just create a catch-all site, answers.stackexchange.com, and split off topics as they grow large enough for their own sites?” Basically, there is no way to grow acommunity through this method, since all the people there would have nothing in common. A counterexample is the split between Stack Overflow and Programmers – but that wouldn’t have worked with someone just asking a question about hardwood flooring on Stack Overflow and having it turn into Home Improvement.\n\n\nReally good moderation is key to everything. There are 260 moderators on the whole network! We start to identify moderators a few weeks into a site’s private beta by looking for active meta participants, editing to improve content, voting to close – doing activities other than simply asking and answering questions. This does not necessarily mean that the moderators must be the highest-rep users! That’s like asking your grandparents to be ushers at your wedding. Rebecca tells us about the changes that were made to the Stack Overflow election system for the recent moderator election. It involves badges. Learn more about elections! The Android elections are going on now.\n\n\nWe hold chat-casts with moderators every few weeks to open a channel between the Community Team and the moderators. There’s also a monthly moderator newsletter with highlights of important announcements. That’s so people can get the 5-6 things they need to know without having to be too deeply ingrained in the moderators’ chat room or in metas.\n\n\nMeta Stack Overflow is to the federal government as individual site metas are to state governments. It’s possible to spend most of your time on your local site government, and the newsletter will keep you apprised of the changes on the national level.\n\nModeration and meta activity are huge parts of why Stack Exchange is so awesome, but we can’t forget that it’s the amazing Q&A engine that makes all that awesomeness possible!\n\nThat’s it for Podcast #30, which is it for podcasts in 2011. See you next year!",
        "url": "https://stackoverflow.blog/2011/12/08/se-podcast-30-robert-cartaino-rebecca-chernoff/"
    },
    {
        "title": "SE Podcast #28 – Brent Ozar",
        "content": "Jeff & Joel are joined this week by Brent Ozar, database wizard who has helped tons of companies (including Stack) with their massive scaling needs.\n\n\nThe Spanish site is live! It’s sort of strange having a site about learning one language be conducted in another. With French we decided to let them try to conduct the whole site in French. It’s an experiment!\n\n\nGaming is having a meteoric rise due to Skyrim. Check out the graphs! (Here they are in the show notes!) Skyrim questions have 1.35 million views in ten days, at time of recording. Whoa! Thanks to badp for posting.\n\n\nAnyway! Brent Ozar is our special guest today! He is a SQL Server Master. He has a blog. He has a talk about SQL tuning and whether or not you should even do it. He summarizes it for us, and the gang talks about SQL tuning, caching, load sharing. XML shredding. You know. Database stuff.\n\n\nAt Stack Exchange, and especially with Stack Overflow Careers, we are trying to elevate users and show off how awesome they are.\n\n\nJoel’s been reading up on all the Wikipedia pages on personality disorders. Most executives, especially at startups, are indistinguishable from people in insane asylums, apparently. Paranoia is a particularly common form of mental illness among executives. This is relevant because people often say they won’t send employees to a Stack Overflow event because they’ll get poached! (But it’s probably true.)\n\n\nFeel free to poach Jason Punyon, employers. (Scratch “Punyon” off your Podcast Bingo card.)\n\n\nThere’s a post on the Server Fault blog about why Stack Exchange isn’t in the cloud. It’s got a nice discussion about the pros and cons of letting somebody else host your stuff, which the gang explores.\n\n\nAnswering questions on Stack Exchange is about doing a little science to come up with a canonical answer instead of just posting opinions. Jeff measured the range of a remote controlled robot in Battlefield 3 so as to be able to answer this question.\n\n\nJeff experimented with posting a question for someone else on Super User (based on this post)- and it does! Well-written questions get better answers. But we eventually have to teach the person to fish (to write their own well-written question and post it themselves).\n\nYou can find Brent at his website or on Twitter! (Here’s his video about how Stack Overflow scales with SQL Server.)",
        "url": "https://stackoverflow.blog/2011/11/23/se-podcast-28-brent-ozar/"
    },
    {
        "title": "SE Podcast #29 – Chris Poole",
        "content": "Jeff and Joel are joined today by Chris “Moot” Poole, founder of 4chan and Canv.as.  It’s a wide ranging discussion from internet memes and tropes to the danger of the SOPA bill that is currently making its way through the house.\n\n\nWe need a number display like they have in delis. If anyone out there can get us one on the cheap, Joel would appreciate it so he can always know what podcast number we’re on.\n\n\nCanvas is re-imagining a message board, because the aesthetic of forums hasn’t changed in a very long time. It’s got a focus on remixing and collaborating images.\n\n\nIt’s similar to 4chan but interestingly, Canvas requires users to authenticate their login using Facebook to deter trolls, but still allows pseudonymous and anonymous posting.\n\n\n4chan is weird. Stuff doesn’t last very long there – there’s no archive. Moot gives us a brief history of 4chan and how and why he started it.\n\n\nIts a fast way to get a message out to thousands of people because every post starts out as position zero on page zero. That’s why 4chan has a reputation for “porniness” when that actually represents a small percentage of the content that ends up there. (See the Greater Internet Fuckwad Theory.)\n\n\nMost of the internet’s memes originate on 4chan. They make the internet! The memes migrate to Reddit, where they move to the greater internet as a whole.\n\n\n4chan and Reddit (and Tumblr and Twitter) reflect a recent trend away from text and toward images, short-form text, short videos, etc.\n\n\nSo! Canvas! It’s a real venture-backed company. It’s not going to serve display ads (unlike 4chan which has only been monetized by banner ads).\n\n\nShifting gears to talk about SOPA/PROTECT-IP. Hollywood wants it, and they spend way more money on campaign financing than the tech industry, so legislators are going to pass it. Hollywood wants the ability to go after ISPs who are resolving DNS entries to overseas sites, which is stupid because the workaround for that policy is simple. It wreaks havoc on the existing DMCA provisions for protecting copyrighted content online.\n\n\nA long, long time ago… people tried to sue telephone companies for allowing calls in which illegal things were discussed. That was ridiculous, and the phone companies were ruled to have no liability for how their channel is used. That’s the precedent that the internet operates on today.\n\n\nJoel describes the current provisions outlined in the DMCA that give copyright holders and websites ways to enforce copyright in a fair way that punishes only the infringer, not the website.\n\n\nIt’s demonstrative of the fact that Congress is run by corporations currently; the only things that gets passed are things that companies want passed. Example: pizza is a vegetable.\n\nTwo important books to read on the topic: Republic Lost and Master Switch.  You can also read Larry Lessig’s post on why he’s focusing on trying to reform the whole system\n\n\n\nGo to americancensorship.org to learn all about SOPA/PROTECT-IP, and what you should do to get involved. (Hint: in the U.S., it involves contacting your representatives.) It’s likely to come to a full floor vote soon, and we need to stop it. Add your name to the list Senator Ron Wyden will read during his filibuster of the bill.\n\n\nWe come back to 4chan, where we learn about moderators, janitors, and on-topic-ness rules on the various boards. People apply to be moderators on 4chan, so it’s self-selecting.\n\nChris is on Twitter, as are 4chan and Canvas. Also be sure to check out canv.as and 4chan… but don’t do that last one at work.",
        "url": "https://stackoverflow.blog/2011/11/30/se-podcast-29-chris-poole/"
    },
    {
        "title": "SE Podcast #27 – Dave Winer",
        "content": "Jeff & Joel are joined today by Dave Winer, who’s upset that we don’t have a jingle to start the show! He “invented” (well, pioneered, really) the XML-RPC protocol. Dave tells us the story of how and why the protocol came to be.\n\n\nRight now, Dave’s working on a “magnificent symphony of software” – it’s the communication system he wants to use. It involves a minimal blogging tool with only RSS output (plus a dongle that will push the RSS to twitter, etc), a “River of News” aggregator, and an overarching tool for creating content that can be picked apart and included on other platforms.\n\n\nDave’s philosophy is that some time soon, users are going to realize that they need a place to build and control their content before they post it to any service or platform that’s controlled by an outside company.\n\n\nThe gang discusses the nature of comments on blogs (and on Stack Exchange questions and answers), and how to manage them – or whether to allow them at all. It leads to a discussion of creating new pages on Wikipedia, and its requirements for citations and notoriety.\n\n\nDave suggests putting together a Best Practices manual on managing your content on the web. He suggests that having as few domain names as possible will help people not lose their content (or break all their links). Jeff suggests that Facebook can be that sort of “repository” for many people, but Dave disagrees. (n.b.: He recently deleted his Facebook account.) Companies don’t necessarily last forever – we’re looking at you, Geocities. (Talk of Facebook inevitably pushes the discussion into the realm of what information websites record, and how, and why – generally as related to advertising.)\n\n\nServices like FedEx and UPS can get you your new Kindle Fire on release day because they’ve cut every possible corner – except for the 1% of people who are not a simple case because they’ve moved, or they need their package on time. That 1% outlier idea can’t be applied to freedom (intellectual, personal, what have you), Dave says.\n\n\nDave wants to buy a bland, uninvolved service that does nothing but provide the service it says it provides. Amazon was doing a great job of that until they kicked WikiLeaks off their storage. Dave is overlooking that incident for now because there is nowhere else to go that provides the whole package (uptime, reliability, etc).\n\n\nDave wrote a blog post involving the quote: “If you’re not paying for something, you have no reason to expect it to be there tomorrow.” But does that mean that because you are paying for something, youcan expect it to be there tomorrow? The gang explores this philosophy.\n\n\nSuddenly we’re talking about how Dave believes there is no real hard line between government and business… an issue which cannot necessarily be solved in a 60-minute podcast.\n\n\nTwitter solves the subscription process that RSS has. With RSS, you have to go through a bunch of steps to get yourself subscribed. With Twitter, you just have to click one “follow” button, and you’re set.\n\n\nJoel is considering writing fiction! He likes the medium because you don’t have to tell the truth. You tell the deeper truth by manipulating the superficial facts.\n\n\nThe coalition of the users doing stuff together independent of Facebook or Google or what have you is valuable and should be encouraged and protected. It’s a conversation that Jeff and Dave will continue offline.\n\nYou can find Dave at Scripting News, and you should also check out EC2 for Poets.",
        "url": "https://stackoverflow.blog/2011/11/16/se-podcast-27-dave-winer/"
    },
    {
        "title": "The Stack Big Board (with Video!)",
        "content": "Anyone who has seen pictures or video from our office in the last few months has probably noticed a small addition in the form of five large screens mounted in the middle of it.  The screens came about when we were first hiring CHAOS and realized that we wanted an easy way to visualize and display relevant information (or play video games) during the day.  The first iterations where a bit, um, crazier (as evidenced by this rendering that we cooked up).  Eventually though, we decided that we needed something that fit in our 8′ ceilings and could be seen by everyone.\nAnd so our current version was born (technically, this is version 2.13 – the first version had all 5 monitors oriented in portrait, but we realized that 2 in portrait and 3 in landscape was better).  Amazingly, this is actually a relatively easy system to build out.  Using truss is also much simpler than wall mounting as aligning the monitors is much easier and the freestanding structure can be moved around to make wiring/adjustments much easier.\nThere are two pieces of 2 meter box truss that make the main upright supports (and each have one of the vertical monitors mounted to them) and one piece of 3.5 meter ladder truss that makes up the span holding the three landscape monitors.  All of the TVs are hung directly to the truss using O-clamps (which are secured to the TVs using standard M6 bolts).  Wire management is also pretty easy as all of the wiring is run directly through the truss or ziptied to it.\n\nSo what makes up the Big Board?\n\n\n5x Sharp PN-E471R 47″ Professional Monitors\n\n\nMilos M290 12″ Truss\n\n\nA custom built PC with 3x Nvidia GTX 580 Graphics cards\n\nA Logitech K400 Keyboard w/ Built in Touchpad\n\nAnd what do we run on it? (From Left to Right)\n\n\nMonitor 1: Whatever is current and relevant or general office info\n\n\nMonitor 2: Traffic stats\n\n\nMonitor 3: The CHAOS Trello Board\n\n\nMonitor 4: Careers 2.0 Tracking\n\nMonitor 5: Employee Chat\n\nBoth the traffic stats and Careers 2.0 boards were built using Geckoboard, a service that lets you easily build status monitors (just connect it to your relevant accounts or provide it with feeds from your database and it handles making it look great).\nYou can also check out this video of Joel and I talking about the board and showing off what it can do.",
        "url": "https://stackoverflow.blog/2011/12/09/the-stack-big-board/"
    },
    {
        "title": "SE Podcast #24 – Eric Ries",
        "content": "Jeff & Joel are joined this week by Eric Ries, author and expert on The Lean Startup.  Topics for the chat include:\n\n\nJeff Atwood is joining the podcast from his vacation. He has an announcement! He is having twins! In February! This will bring the total Atwood Child Count to 3, meaning they will outnumber the adults. Congratulations, Jeff!\n\n\nTalk of children leads to talk of war which leads to talk of Battlefield 3. The core team spent some time playing today. It incentivizes working as a team!\n\n\nANYWAY. Eric Ries is our guest today! He’s got a new book out called The Lean Startup. What is a Lean Startup? It’s an analogy to lean manufacturing: a system of management about fast cycle time and building quality in from the beginning. Lean startups take those techniques and apply them to startups, where there are a lot more unknowns about the product and the customer.\n\n\nEric wants to convince Jeff and Joel not to batch deploy anymore. (We deploy multiple times per day. We have at least one per day, and other than that people can deploy as they see that they need to.) The discussion about the way the teams deploy changes leads to a discussion about unit testing.\n\n\nJoel’s criticism of lean startups: the combination of Lean Startups and the fact that any startup can get a huge amount of funding instantly leads to a lot of startups that seem to “pivot” an awful lot. Color is a classic example of this. Eric reminds us thatwinter is coming for entrepreneurship, and this might not be a problem much longer.\n\n\nWhat is a pivot? A change in strategy without a change in vision. The key to the analogy is that in a pivot, one foot stays planted while you shift around to a new direction.\n\n\nInnovation accounting is Eric’s alternate accounting system that’s designed to tell if you’re getting close to product market fit. ROI, profitability, growth rates – all the traditional accounting metrics don’t apply at the really early stages of a startup.\n\n\nJoel’s dream for the Stack Exchange Network is medical research. The problem is getting a critical mass of people together to make the site work. Currently, we branch into other verticals via “overlapping circles” – starting out with programmers who also have other hobbies.\n\n\nGaming is one of the biggest sites that has been created out of the “overlapping circles” theory. It’s likely to be an excellent bridge between the existing community of programmers and civilians who also play games, so we are going to put time and effort into figuring out how exactly to make Gaming more awesome.\n\n\nEric is Mr. Pivot, so let’s get back to that: Pivoting is not necessarily a mistake. It’s the realization that a strategy that you used to be pursuing is working well for a specific customer base, and that you should pursue the parts of it that work. Gamers tend to pick a certain game to obsess over for a while, so it makes sense for the Gaming Stack Exchange to take a more specific approach to games as opposed to the Stack Overflow generalist approach.\n\n\nIf you could imagine having An Encyclopedia Of X, there could be a site about X. (There might not be an encyclopedia on Call of Duty, but there would be one about all games in general.) That leads to the generalist approach, which can get messy, but we allow users to participate in segmenting themselves.\n\n\nJoel has decided to attack the Stack Overflow moderator flag queue. Some things he’s noticed: There is a tendency to pile flags on people that don’t speak English natively. The mental load on a new moderator can be very high as they learn the ropes of how to handle particular types of flags. Handling flags requires a lot of effort and decision from moderators. Joel has an idea on how to handle this! Discussion on moderation and flagging ensues.\n\nEric‘s book The Lean Startup, found on Amazon or right on Eric’s website, peaked at #2 on the New York Times bestseller list!\n\nMake sure to join us next week (at the usual time of course) when our guest is Mar Russinovich.",
        "url": "https://stackoverflow.blog/2011/10/26/se-podcast-24/"
    },
    {
        "title": "SE Podcast #26",
        "content": "No guest today. Moot had to postpone his appearance on the show. But David Fullerton is here to hang out with us\n\n\nJeff is packing up to go on an international trip. He’s going to Øredev in Malmö via Copenhagen and London on British Airways. He will take the train from Copenhagen to Malmö – good choice! Joel is full of handy travel tips. Among them: The chip-and-PIN credit card system is vastly superior to the one we use, which is why it can be tough to get cash overseas! Joel also has packing tips for the cold Swedish weather. Also, freezing eyeballs\n\n\nPer a chat room question: there’s no news on DevDays. Though we did have a vendor offer us a refund on money we didn’t pay, but Producer Alex is too honest for his own good. Also, Future iterations will be closer to the original conference.\n\n\nStack Overflow is accepting nominations for moderators for the next 6 days (at time of recording). So far, the nominations are civil and intelligent (unlike in the real world of course). The gang talks about other sites/forums/chat rooms from years past that have held elections like ours. There aren’t many! Jeff & Joel discuss what moderator elections mean for a community, why communities need moderators, and what makes a good moderator.\n\n\nDavid Fullerton is here to provide some insight on what makes a Hot Question on the Stack Exchange homepage… and we realize that an algorithm can never replace a good old-fashioned human moderator. Moderation is incredibly important.\n\n\nJeff & Joel discuss previous elections, and the lessons learned from them which have turned into requirements for this new round of nominations.\n\n\nThere are real-life elections today, too, but the weird off-season ones. “Dogcatcher” and “comptroller”. Leave it to the professionals who read the newspaper and listen to NPR every day! (If you were informed enough to vote in your local elections today, good on you!)\n\n\nThe Gaming Stack Exchange is having a massive competition in honor of the launches of Call of Duty: Modern Warfare 3 and The Elder Scrolls V: Skyrim. We want to see which game gets the most views on the site in the week after it was released. There are sweet prizes! Jeff will be shocked if Call of Duty wins this particular contest. David thinks Skyrim is going to win, too. It seems that many people feel this way. Can Call of Duty pull it off? Maybe, if we discover The One Question that gets a million views from Google.\n\nAlso, we’re having a launch party on Friday! If you’re a gamer in New York and you want to come, send an email to team+gaming@stackexchange.com! We will also be livestreaming the party, where there will be 10 consoles playing MW3 and Skyrim. Stack Exchange and Fog Creek employees will be playing games, having snacks, and asking and answering great questions on the site.\n\n\nSpoiler alert for the first Modern Warfare game: it’s a video game where you die! In the campaign story, you die. You have to, and there’s no way around it. You die! That’s sort of rare.\n\nJeff is off to the airport! Go see him at _Ø_redev! We’ll be back next week at the normal time (Tuesday @ 4pm ET) when Dave Winer (the Podfather) will be live in the studio with us.  See you then!",
        "url": "https://stackoverflow.blog/2011/11/09/se-podcast-26/"
    },
    {
        "title": "SE Podcast #25 – Mark Russinovich",
        "content": "This week’s guest is Mark Russinovich, from SysInternals.com and now with Microsoft.\n\n\nChatrooms are chaotic! Jeff mentions that lots of spaces need editorial oversight. A lot of good information is available, but it’s a hard to find it in the disorganizations. It’s a chronic problem.\n\n\nMark and Joel talk about his command-line work. Mark had to reverse-engineer this stuff, almost from scratch. SoftICE was effectively a device driver that took control away from the OS, when it was active. Mark’s become famous for being a Microsoft hacker (yes they exist) and for his work with rootkits, the problems with which are becoming an epidemic.\n\n\nMark started outside of Microsoft, but later his company was acquired by them. He’s worked on Vista, Windows 7, and a bit of Windows 8, but is now on Windows Azure. For Azure, an OS for data centers, Mark works for the fabric controller team. Like the kernel in Windows, this defines processes and consumes application xml. Basically, he’s all up and down the stack. One of their biggest concerns is upping consistency, to make Azure the best in the industry.\n\n\nOne of the project’s other goals is to have a virtual machine deploy in less than 5 minutes, and update in 2 minutes or less. Right now, those times are 8-9 minutes at the 50th percentile. They’re pursuing a variety of tactics to optimize the boot process. There are lots of moving parts to optimize. It’s a fun project, and it’s all new.\n\n\nNot that many companies can deploy a cloud operating system at such a scale. Investment is expensive, although, as Jeff points out, machines today are more powerful than ever before. Still, although Stack Overflow is ranked #180, getting to #150 requires four times the traffic. Mark points out that yes, you can manage the servers yourself, make the investment, figure out all the parts, and so forth. Or, in nine minutes, you can upload your webapp to the cloud and pay only for what you use.\n\n\nThe cloud is best for companies who have traffic in bursts and periodic traffic. Companies where, say, there’s a known holiday shopping rush or other specific types of workload patterns. By contrast, Stack Overflow’s traffic is weirdly predictable. Mark notes that the other benefit to cloud computing is replication; if a disk fails (as 3-5% of them do annually) your data is cloned across the country.\n\n\nMark wrote a novel: Zero Day, which was published in March. It’s a cyber thriller based around a cyber terrorism plot to bring down parts of the world using malware. It’s readable and got lots of verisimillitude. The sequel, Trojan Horse is set to come out next fall.\n\n\nRight now, while direct attacks are less common, spear-phishing (targeted phishing attacks) and good old exploitation of vulnerabilities in a system are still serious threats.\n\n\nJeff talks about the back-and-forth about putting anti-virus software on our servers. On the one hand, it’s absolutely necessary, especially as Careers 2.0 has users uploading resumes and CVs onto the server. On the other hand, mention “anti-virus” in a Linux room and be prepared to get laughed out. There’s also a serious performance question there.\n\n\nEveryone should go implement 2-step verification on their email accounts (Gmail account!) right now. Well? Go! Do it now! We’ll wait.\n\n\nMark says he would separate his password into tiers, with the top tier being ecommerce sites. Jeff says that this is part of why he’s been pushing for third-party sign-ins, where the third party isn’t a bunch of idiots. Mark believes we are converging towards this naturally, with the proliferation of Google and Facebook sign-ins.\n\n\nJoel wonders if maybe there just aren’t that many malevolent people in the world. Mark quickly counters with Facebook’s admission that 600k logins are compromised daily.\n\n\nHe also points out that while our security is better (compare XP to Vista or 7’s security hardening) the attacks are more sophisticated than ever. Just look at Stuxnet.\n\nBe sure to check out our Security and Writers sites. They’re awesome!\n\nNext week’s guest is Chris “moot” Poole, from 4chan and Canvas.",
        "url": "https://stackoverflow.blog/2011/11/02/se-podcast-25-mark-russinovich/"
    },
    {
        "title": "SE Podcast #22 – Paul Biggar",
        "content": "Joel (but no Jeff) is joined this week by Paul Biggar (who Joel originally met when he was a DevDays London 2009 speaker about scripting languages).  Paul currently works at Mozilla, having come off his own (not that successful) Y Combinator startup.\n\nPaul’s least favorite scripting language of all time is PHP. Paul works in static analysis, which is looking at a program that is not running, and making decisions about whether or not it will work, how to make it faster, what the security implications are. Paul has solved the Halting Problem… twice.\nPHP stinks, so we talk about C and C++ for a while. Bjarne Stroustrup wrote a great book on the topic.\nThe people who love language design are not the people that are enthused by PHP, and they were scared off by the “poisonous community” (Paul’s words!). The most popular programming languages that aren’t very well designed: PHP, Perl, JavaScript, shell. Their creators “had no business designing languages”. How did they become popular?\nHaskell was a programming language that was well-designed but never gained any traction. Paul says there are two types of programming languages: those that start safe and try to build performance, and those that start performing well and try to build safety in. Haskell is the former. It “escaped” from academia… barely. F# comes from the same school of thought.\nWhat about Dart)? Google released a spec. They’ve got a full implementation that’s ready to go in Chrome.\nThe cool kids are using MongoDB, CoffeeScript, and tortoise shell glasses.\nEnough about programing languages! Paul started a YC journalism startup called NewsTilt. It was the Future of Journalism, which is a terrible business to get into. Here‘s why it got shut down. In a nutshell: there were problems with the product, and problems with communication between Paul and his co-founder. Also, not being in Silicon Valley can be problematic… though Silicon Valley is not necessarily the be-all end-all of startup success. Perhaps most important was that it didn’t solve a problem Paul really cared about.\nCircle CI is a compiler-related startup that does capture Paul’s interest. It’s “continuous integration made easy”!\nPaul didn’t actually make the slides for his talk. But the message he wants to get out there is that working on compilers is actually very easy, and not something only wizards can do.\nPaul can be found on Twitter @PaulBiggar, and at PaulBiggar.com.\n\nJoin us next week when our guest is James Portnow from Extra Credits – same place, same time.",
        "url": "https://stackoverflow.blog/2011/10/12/se-podcast-22/"
    },
    {
        "title": "SE Podcast #23 – James Portnow",
        "content": "Our guest today is James Portnow of Extra Credits. We are also joined in the studio by David Fullerton.\n\n\nJames Portnow is joining us! Extra Credits has been a thing for a few years. The idea struck back when James was working at Activision. He wanted to open up the conversation about game development and design to the consumer side, instead of continuing to speak in the industry-centric bubble.\n\n\nAt Stack Exchange, we’re trying to make learning fun. All of the gamification that we do on the system is in service to the goal of making the internet a better place for learning.\n\n\nExtra Credits did an episode about gaming addiction, which is related to the reason for the reputation cap on Stack Exchange sites.\n\n\nStack Exchange has sites for gamers and game developers! The Game Development site is distinct from Stack Overflow because developing a game is a bigger set of activities than just writing code.\n\n\nGamification is a way to get users to “read the manual”, and get them to the point where they don’t need the gamification aspects anymore at all.\n\n\nGames like Simon and Dragon’s Lair don’t give you any choice or control. Games provide positive simulation in various ways – by feeling like you’re acquiring a skill, by keeping things neat in Tetris, or on Stack Exchange, seeing somebody vote up something you wrote.\n\n\nOne Chance is a flash game with an interesting mechanic: it leaves a cookie that prevents you from playing the game again. It’s an interesting concept on the bleeding edge of game design.\n\n\nThe dark side of gamification… is conditioned actions that make players continue to play FarmVille, slot machines, some MMOs, etc. Players become aware that they are not enjoying the experience, but they are compelled to continue nonetheless.\n\n\nThe danger in the Khan Academy is that for the American education system, this is the way to reduce our budget: have people record videos and have other people learn via these gamified websites. This is James’s concern about the Khan Academy.\n\n\nWhen gamifying education, everybody should start off at 1 and work up from 1 – not get docked points down from A+ or whatever. You also have to incentivize the class to help get each other’s points up, not just each individual’s own points. A high sense of agency is the sense of having control over your own existence and the world around you. When a student falls behind a little bit and does not feel like he or she can catch back up, they lose their sense of agency, and it becomes a monumental task to get the student back on track. Games teach us that outcome is directly related to our own actions, but with more instant results. (Programming is another way to demonstrate this direct impact.)\n\n\nJoel peeled hard boiled eggs in the Israeli Army, so you can cross that off your Podcast Bingo card.\n\n\nJames is the hero in his own story. Games teach you that you can always win, and that nothing is unachievable. We will close on that hopeful note! James can be found @JamesPortnow or @ExtraCreditz on Twitter, or over at Extra Credits.\n\n\nOh, right, news from Stack Exchange: David, interim CTO while Jeff is on vacation, has no news. Except that we have a mascot now. (David had nothing to do with it.) Also, Jeff will be speaking at Oredev, which is November 7-11, and Punyon should probably go with him.\n\nOh, yeah! We have our own URL shortener! It’s s.tk. Check out s.tk/joel and you’ll pick up the gist.\n\nMake sure to tune in next week when our guest is Eric Ries.",
        "url": "https://stackoverflow.blog/2011/10/19/se-podcast-23/"
    },
    {
        "title": "SE Podcast #19 – John Sheehan",
        "content": "Everyone’s back in their home towns this week (Sorry for the audio quality last week. It was Joel’s fault [actually, it was TechCrunch’s fault]). And joining Jeff & Joel this week is John Sheehan, Developer Evangelist for Twilio.\n\n\nJeff and Joel are bored of board meetings. How do you make them productive or even useful? Brad Feld says you should give out a document beforehand. Joel does this, and nobody reads it, but they at least pretend they did. Maybe Joel should plant money under the attendees’ chairs?\n\n\nJoel launched Trello at TechCrunch Disrupt last week, and they did not have adequate monitors onstage! It was representative of the general A/V “screw-uppedness” of the whole conference. Cool story, bro.\n\n\nLet’s talk about John Sheehan! He’s a developer evangelist at Twilio and doesn’t have enough Stack Overflow reputation. He travels around trying to make developers be more awesome.\n\n\nThe future of phones is in things like BBM, iMessage, etc – alternatives to SMS. Voice is a whole ‘nother medium, for when emoticons just aren’t cutting it anymore. Text is useful for transmitting pieces of information, but for more nuanced conversations voice or video is necessary. How fortunate for this conversation that we have someone from Twilio on the line!\n\n\nNew in the SE Universe: Linguistics! Joel’s dad thinks it’s full of amateurs. We also have a site on Christanity now. It is less technical than Judaism… which isn’t good. Our engine works better on more technical applications. Jeff: “I’m not 100% sure Christianity is working.” It’s still early, and it is getting more fact-based as it gets older, though.\n\n\nBitcoin is low on activity until it gets a new question. It’s not what we call a healthy or growing site, but maybe that’s okay for a site like Bitcoin. There is no defined formula, and it is still being figured out.\n\n\nNow private beta participants will be able to invite others to the site while it’s still private. This devalues committing to a proposal slightly, but the private betas sometimes need a little help.\n\n\nJohn was at the BUILD conference in Anaheim last week. It was like Disney World, but with middle-aged dudes with questionable hygiene! Windows 8 had a developer preview, but it’s probably a year away from launch. John got to play with one of their tablets and says they’ve taken touch and made it completely un-intuitive. The longer he used it, the less he liked it. John is giving it away to the developer of the coolest Twilio app that uses some of the new WinRT or Metro stuff announced.\n\n\nScrolling is a thing that many people have many feelings about. We got onto the subject through talking about Windows 8 merging its mobile and desktop systems, and how Apple is doing the same thing with iOS and OS X.\n\n\nJohn asks: Does anyone have any faith in a PC manufacturer making a tablet you would actually want to buy? Joel says no. Alex says no. Everyone keeps doing things like putting stickers about the component brands on a sports car.\n\n\nTotally hot right now: Trello t-shirts.\n\n\nDevDays failed because we did not promise a thousand dollar piece of hardware to every attendee, like developers at BUILD got.\n\n\nJeff has not been to Burning Man. He likes the idea, but does not like the idea of being in the desert for so long. Joel did that in the army (cross that off your Podcast Bingo cards!), and it isn’t pretty.\n\n\nThe Stack Exchange API 2.0 is baking! Take a look at the spec, and provide some feedback if you like. It’ll be released by the end of the year. Stats on the API will maybe be released in a blog post or something. Jeff uses the API as much as anyone that doesn’t work here, rather than using things a special, sneaky way. (You can read about past mistakes with the API on Kevin Montrose’s blog. Jeff, Joel, and John share their opinions on APIs and company/developer relations in general.\n\n\nNew changes to the site are in the works. For example, no more duplicate title, and no more “Here code. You fix.” questions will be allowed.\n\nIf you’re a programmer, and you want a better job, check out all the great new profile features at Stack Overflow Careers 2.0.\n\nJoin us next week at the normal time when our guest will be John Siracusa from Ars Technica (or as Joel likes to refer to him: “he wrote that really amazing review of Lion”).",
        "url": "https://stackoverflow.blog/2011/09/21/se-podcast-19/"
    },
    {
        "title": "SE Podcast #21 – David Fullerton & Jason Punyon",
        "content": "This week, Jeff & Joel are joined (in studio, no less) by David Fullerton, head of the NY Dev Department, and Jason Punyon, a developer here in the office.  Its a fast moving discussion covering all kinds of topics, like:\n\n\nStack Exchange 1.0 (which gave users wanting their own Q&A site the Stack Exchange software, without being official Stack sites) is touched on. Jeff discusses the clones that exist and their reason for existing.\n\n\nTrello’s launch caused some kerfuffle on Web Apps.SE when general (and off-topic) help questions started being asked. In the larger sense, they discuss the necessity of applications and products to have their own unique help service.\n\n\nSome recent changes made to Area 51 are discussed, including the restructured voting system for example questions. Joel discusses the problems that arose out of the previous method of judging example questions.\n\n\nFabian asks about overlapping proposals on Area 51, and David gives an overview of the process that goes along with the decision to merge proposals. Joel admits they aren’t too good at judging whether or not proposals are the right size.\n\n\nJoel gives a call to arms for Area 51! They discuss the soon-to-launch Biblical Hermeneutics site and its relationship to the existing Christianity and Judaism sites.\n\n\nJeff brings up some other sites on Area 51, including LEGO and Firearms. The validity of a Healthcare IT site is discussed.\n\n\nAlex just access to Stack Exchange’s real-time Google Analytics, so the traffic trends of the site are discussed.\n\n\nJeff plugs one of his pet proposals, and others discuss theirs (Krav Maga does indeed pop up).\n\n\nJoel shifts the conversation over to Careers. You can visit Joel’s profile here! Careers and Stack Overflow aren’t integrated as well as they should be, and solutions to that are discussed. Jeff and David also talk about cool updates coming to Careers. On a sidenote, if you’ve ever wondered what it’s like to be an intern for Fog Creek, you’re in luck! David talks about that experience briefly.\n\n\nCareers’ relationship with Linked In is mentioned and spurs on a wider discussion about the other career site.\n\n\nThe history of Careers’ filter is discussed, including how it ran originally and how it runs now.\n\n\nNotifications on Stack Overflow have been modified recently. Jeff goes into the depth about how this was brought about. The term “yak-shaving” is involved.\n\nA discussion about parenting questions on other Q&A sites reminds Jeff of a recent discussion on Parenting.SE, regarding the horrific-sounding “hot saucing”.\n\nJoin us next week at the usual time when we’ll be joined by Paul Biggar and his wonderful Irish accent.",
        "url": "https://stackoverflow.blog/2011/10/05/se-podcast-21/"
    },
    {
        "title": "SE Podcast #20 – John Siracusa",
        "content": "Joining Jeff & Joel this week is John Siracusa, writer for Ars Technica – he’s the one who introduced Macs to the Ars world (and apparently ended up converting their entire staff into Mac users).\n\n\nJohn didn’t know who Jeff was until the Stack Overflow Podcast started. (Pop quiz: What was the podcast called before Stack Overflow was Stack Overflow?) Jeff and Joel brought everyone with them on their initial journey of setting up the site. Transparency is king.\n\n\nVersion numbers don’t matter to Stack Overflow. There’s “current” and “not current” – it’s a constant work in progress. Especially if version numbers are a ploy to get everyone to buy the software again.\n\n\nWe are downgrading Joel to an Etch-a-Sketch, since he can’t get his trackpad to work.\n\n\nGood programmers have a temptation to clean up Stack Overflow, and that can lead to everything suddenly looking off-topic. One result is that we get a lot of questions closed as General Reference. The gang discusses the many ways these questions have been handled over the years. There’s even a blog post on the topic. Jeff and Joel have different interpretations of how these types of questions should be treated.\n\n\nSo what can be done to encourage good questions? One point of view is that a clearly no-work, no-effort question should not be rewarded with a brilliant answer. Another is that we shouldn’t care about the questioner – the goal is to create a useful piece of information that makes the internet better. We’re here to serve the 15 million people who get answers from the site without ever typing a word.\n\n\nWeakness to be addressed: better canonical answers, better de-duping, better practices at editing questions. The answer might be… better social networking, although that’s been heavily discouraged in the past. It’s promotion on Other Channels that gets eyeballs onto pages. Therefore, promoting things you’ve written is an incentive for asking better questions and giving better answers.\n\n\nWe allow (and sometimes encourage) users to ask and then answer their own questions. Ask a good question when you start the project, then keep trying to figure it out yourself. In the meantime, somebody might jump in and answer your question. If not, solve the problem and add the answer yourself!\n\n\nWhat if the system tried to parse the code you’re typing a little bit? That way questions that aren’t necessarily similar in their vocabulary would be more intelligently flagged as similar to other questions that are actually related.\n\n\nCareers 2.0 doesn’t have an applicant tracking system, which is why Stack Exchange uses Resumator for its internal hiring. Why didn’t we ever think of that before!! (/dripping sarcasm)\n\n\nA Mac v. Windows conversation take us 20 minutes over time, even when it isn’t a heated debate!\n\n(Sidebar: conversations about PCs and Windows are generally much more technical than are conversations about Macs and Apple stuff… except among developers.) The main complaint John gets about his Ars Technica articles is requests for reviews of Windows to the same level of technical detail as his Mac reviews.\n\n\nFollow John Siracusa on twitter and listen to his podcast!\n\nJoin us next week when Jeff and Joel are joined by David Fullerton, the head of our NY (read: SO Careers) Dev Team.  Same Place, Same Time.",
        "url": "https://stackoverflow.blog/2011/09/28/se-podcast-20/"
    },
    {
        "title": "SE Podcast #16",
        "content": "So it’s been a couple weeks since our last podcast, but Jeff & Joel are back and ready to catch up on everything they missed.  There’s no guest this week, just 60+ minutes of that Jeff & Joel banter that (we hope) you’ve grown to love.\n\n\nJeff and Joel discuss “Zombie Poke,” aka facebook.stackoverflow.com deal in depth and dispel rumors of receiving a “dump truck of money.” Details of the deal are discussed, from what the new feature accomplishes and how it came about.\n\n\nJeff also discusses the state of online identity and the issues that arise with having multiple logins.\n\n\nJoel explains why he thinks Facebook might be the new AOL.\n\n\nJeff relays a story about a Stack Exchange user who devised a clever way to get his dad involved in the Bicycles Stack Exchange. Joel wonders if this, or something similar, should be undertaken by CHAOS.\n\n\nThe duo discusses which Stack Exchange sites don’t meet their personal expectations. The hit list includes Super User, Writing, and Gaming. Jeff goes into depth about his issues with Gaming.SE, even though it’s the fifth most trafficked site.\n\n\nJoel talks about the myth that reputation affects programmers’ career opportunities.\n\n\nA question from the chat room about the Publicist badge spurs discussion about sharing questions on the internet and how it relates to Stack Overflow.\n\n\nWe discuss the state of Community Wiki. If you’re looking for a good example of a community wiki answer, look no further than How do I diagnose not being able to reach a specific website as an end user?\n\nAnd of course, if you enjoy the Stack Exchange podcast, make sure to check out the Ask Different Podcast – hosted by our Ask Different (aka apple.stackexchange) moderators!\n\nWe’re back on our regular schedule now, so tune in next week for another great episode!",
        "url": "https://stackoverflow.blog/2011/08/31/se-podcast-16/"
    },
    {
        "title": "SE Podcast #17 – Kyle Brandt & George Beech",
        "content": "Jeff & Joel are back with guests this week – joining them are Kyle Brandt and George Beech, our very own sysadmins/ops guys/[insert your own term here]\nAfter a brief test of the emergency broadcast system, we plunge right into the podcast, including:\n\n\nJoel is late because he had to go up to AOL HQ to pick up some more floppy disks for the office\n\n\nWe recently launched Blog Overflow – which was actually a pretty substantial engineering and technical background to making it happen.\n\n\nA huge discussion of the the SE infrastructure setup and why we host our own instead of relying on Amazon or another outside provider.  Hint: not only can we roll our own better, but its a lot cheaper too.\n\n\nIn the department of little tweaks with big effect, check out our “network apocalypse”: at one point, Stack reconfigured to separate different types of network traffic due to microbursting overloading the network – this simple upgrade greatly increased the throughput and efficiency of the existing infrastructure.\n\n\nIn the good news department: Jeff talks about the expanding user cards just introduced and based on a conversation from our podcast a few weeks ago with Michael Natkin\n\n\nIn the bad news department: we’ve decided to cancel Stack Overflow DevDays due to low ticket sales – you can read Joel’s full blog post for all the details.\n\nFinally, we welcome our newest engineering hire – Demis!\n\nThat’s it!  Tune in next week at the usual time for another episode with more guests!",
        "url": "https://stackoverflow.blog/2011/09/07/se-podcast-17/"
    },
    {
        "title": "SE Podcast #18",
        "content": "No guest this week as Joel calls in to the show live from the TechCrunch Disrupt Conference in San Francisco since he’s there launching Trello for Fog Creek Software (also why his audio isn’t quite as good as usual, it’s pretty loud there).  There’s still a full hour of Jeff & Joel goodness though so make sure to check it out!\n\n\nJoel gives rundown of what he’s seen at the TechCrunch Disrupt conference in San Francisco so far. A discussion about differences between East Coast and West Coast tech startups leads Jeff and Joel to talk about how important centralized locations are for modern day companies.\n\n\nThe recent Facebook deal has led to a recent influx of general Facebook support emails. This leads to a discussion about user support and how other companies rate against Stack Exchange.\n\n\nThe merits of paying for internet services comes up, specifically thefreemium and 37signals models. Jeff discusses the merits of 37signals and Joel recounts his time using that model.\n\n\nThe Most Valued Super User contest is discussed, specifically how this contest gets people to do “the right thing for the right reasons.” Mention of the contest’s prizes spur a discussion about merchandising (and inadvertently, whose head looks best on a plush Buddha).\n\n\nJeff announces that Stack Overflow and Stack Exchange are getting Nerd Merit Badges.\n\n\nThe Bitcoin site launched recently and is proving to be very popular. In other site news, Jeff mentions that enhancements are underway for the SE language sites.\n\n\nJeff addresses the problem of duplicate questions, specifically on Meta. A little later on, Jeff goes into detail about the defense mechanisms being put in place to block duplicate questions.\n\n\nUser interface proves to be a hot topic today between Jeff and Joel. What starts as a discussion about search engine functionality leads to a full-on talk about the ins and out and future of user interface. Listen to find out which user interface Jeff thinks is like a canker sore!\n\n\nMany sites have launched in the last week, opened recently. The new targeted method of advertising proposals may be the cause of this. As new sites open, Jeff and Joel discuss the new sites with overlap of existing questions. This is currently an issue with the existing Physics site and the soon-to-launch Theoretical Physics site.\n\nCHAOS member Sam brought up the idea of regional Stack Exchanges. Jeff and Joel support their differing opinions on the necessity of localized Stacks (also known as the “let your freak flag fly” theory vs. the “Hurricane Irene” defense).\n\nTune in next week at the normal time and with our normal in-studio setup (really, promise) for another episode as Jeff & Joel are joined by John Sheehan, developer evangelist for Twilio.\nSee you then!",
        "url": "https://stackoverflow.blog/2011/09/14/se-podcast-18/"
    },
    {
        "title": "The SE Podcast Setup",
        "content": "We’ve gotten quite a few questions from people about how we go about recording and producing the Stack Exchange podcast from people interested in everything from the hardware to the software and even the process.  Given the recent revamp of the entire setup (which has been happening during our recent break from live shows), I figured this was the perfect time to do it.\nOur setup is massively more complex than what is normally needed for a podcast (since its normally 2 people sitting in a room talking into mics).  We generally have 2-3 people live in studio (Joel, Alex and maybe 1 guest), plus an additional 2-3 (Jeff, the guest, and sometimes a second guest) who all need to be mixed and recorded separately.   Because of that, we can’t do one big Skype call and just record that, everyone has to be called individually and then mixed through our audio board.\nThe Equipment\nAudio Mixer: Yamaha 01v96 w/ MY8-DA96 Card – the heart of the entire setup – the v96 is a 12 input digital board with all of our DSP, FX and routing built right into it.  The MY8 card gives us an additional 8 outputs so we can generate enough mix-minus feeds to send to all of the hosts and guests.\nStudio Mic’s: EV RE-20, Audio-Technica AT-4040, AKG C1000S – We keep several different mics in the studio for different applications (there’s a rationale behind all of them) but generally speaking Joel uses the RE-20, Alex uses the C1000S and the AT-4040 is for guests\nHeadphones: Sony MDR-7506 – The workhorse headphones of audio engineers and studios – you can literally go into any studio in the world and find at least one pair of these\nAudio Interfaces:  Focusrite Saffire Pro24  – 16 ins and 8 outs means this guy has more than enough I/O for all our applications.  Its got great build quality though and the number of I/O options (XLR, 1/4″, SPDIF, ADAT, MIDI) means we can buy multiples of this one unit and use it for all our applications\nRemote Computers: Mac Mini – amazing computers for a variety of reasons, but given their size, integrated power supplies, dual video outputs, and firewire ports, they fit the bill perfectly\nStreaming Computer: Dell Desktop – stocked with a quad-core processor and 8 gigs of RAM, it’s got plenty of power for creating our live stream and misc. other production tasks\nRecording Computer: Mac Pro – An extra computer we had around the office that was re-purposed for recording.  It’s spec’d similarly to the Dell desktop and takes all the inputs from the mixer to record for later editing\nCamera: Microsoft LifeCam Cinema – Small, easy to place and 720p capable\nMonitors: Various Dell UltraSharp LCDs – Great quality and well priced make these monitors a great choice, but the main thing is that we had a few extras laying around the office\nThe Setup\nThere’s 2 main areas that make up the podcast, the remote connections and the production section\n\n\nRemote\nThe computers that pull in Jeff and any of our remote guests.  To be ready for situations where everyone is remote (such as Episode 5) we needed capability for 4 remote callers.  The entire setup consists of four mac minis, four audio interfaces, a network switch, and KVM all crammed into a 4u rack.  Each mac-mini is linked to an audio interface which then connects to the mixer.\nThere’s also a headphone amp that sits on top of the rack, but that’s just because its convenient – it’s technically part of the production section and serves to feed the guest’s headphones along with anyone watching live in studio.\n\nProduction\nThe center of the production section is obviously the 01v96 mixer.  It takes inputs from the three studio mixes and four remote feeds, creates mix-minus feeds for everyone, and then distributes those feeds.  The program audio is then fed via SPDIF to the streaming computer (through an M-Audio Fastrack Pro) and direct feeds for each of the speakers is fed via optical ADAT to the Mac Pro (via a Focusrite unit) for individual recording and later editing.\nThe streaming computer also has the Microsoft LifeCam connected to it and is running Livestream Procaster which encodes the audio and video into three separate feeds (a 300 kbps low/mobile, a 700 kbps medium, and an 1800 kbps HD).  Amazingly, generating these three feeds consumes most of the computer’s resources with CPU utilization often topping 80% (despite being a 3.2ghz quad-core machine).\nThe recording computer runs Reaper. a highly flexible and very affordable DAW program.  We originally started using Reaper when we needed something that could create mix-minus feeds in software and then output them (it was the only thing we found that would) and loved it so much that we’ve stuck with it.  The eight inputs are fed in and recorded for later editing before being posted.\nThe Process\nThe first step for every show is booking a guest – we have a big list of possible guests who we regularly keep in touch with and add to the schedule whenever they’re available.  In advance of every show, we send guests a Plantronics Audio 655 headset – it’s a solid (and affordable) headset with great sound.  Most importantly, its consistent, so we know that there won’t be headset problems the day of the show.  We also typically do an audio test several days in advance to make sure everything is working and sounding good.\nThe day of the show, setup starts about 2pm – gear is checked over and we start up the live stream around 2:30 or 3:00.  We do a final audio check with the guests 30 minutes before show and then we’re live!  After the show ends, the clean recordings are dumped onto my computer where they are processed and edited into the final episode.  That file is uploaded to our distribution points (SoundCloud & IT Conversations) on Wednesday mornings along with the show notes (which are typically written Tuesday evening after the show).  The full posts are then published Wednesday @ 3pm ET / 12pm PT.\nIf you’ve got any questions that weren’t covered in this post, go ahead and add them in the comments and I’ll do my best to answer them and add them to the post.",
        "url": "https://stackoverflow.blog/2011/08/17/the-se-podcast-setup/"
    },
    {
        "title": "SE Podcast #15 – Michael Natkin",
        "content": "Joining Jeff and Joel this week is Michael Natkin, from our Cooking.SE site.  Michael is especially interesting because he is a computer programmer, but he doesn’t answer questions at Stack Overflow, only on the Cooking site (he’s our first guest to do so!) – he also writes over at Herbivoracious (which he started back in 2007).\nTheir discussion includes:\n\n\nMichael is a vegetarian “foodie” (even though he really hates that word) – he and Joel commiserate over the oddities of being a vegetarian trying to eat out\n\n\nJoel wants to know what type of questions usually come up on cooking (and how they maintain their 100% answer rate)\n\n\nJoel thinks that you should never combine chocolate and garlic, but there’s a Cooking.SE thread that disagrees\n\n\nOn the topic of what questions should be closed, Jeff points to this Electrical Engineering meta thread with a great example of why we need to keep closing questions\n\n\nKicking off a whole discussion of creating house rules – Joel and Michael jump into discussing Momofuku and restaurants who create dishes and refuse to alter them for guests\n\n\nJeff wants to take a deep dive into the top question of the month on Cooking.SE\n\n\nAlso interesting about Cooking.SE is that there are very few “modernist” questions on it\n\n\nMake sure to check out Modernist Cuisine if you want to find a REALLY expensive cookbook (but its written by a patent troll, so we can’t recommend it)\n\n\nMichael is still seeing some good user growth with a few new faces coming in to the top users every quarter\n\n\nOne big question that comes up when you see a question that is salvageable but needs some work, is it better to just edit it for them or to point out the issue to them and ask them to change it\n\n\nOn a related note: should you point out if someone’s question contains a bad assumption or is “doing it wrong” or just answer what they’re looking for – check out this post on Waxy about his favorite sandwich shop and sweet tea\n\n\nWe’ve gone back and forth about how much promotion we should do on the individual site “brands” – ultimately we’ve found that we rather promote the individuals actually answering the questions and helping them build their reputations (and remember, once you make it to 2000 rep, we remove the “no-follow” from your profile URL so you get the Google juice)\n\n\nWe just improved the individual site Twitter accounts and they now tweet way more info.  New community blog posts also show up in the header of each site so users will find out about the new posts\n\n\nWe also rolled out massively improved tagging to help users better figure out what tags they should put on their questions\n\n\nShould our new CHAOS folks post their team blog on Tumblr (to make sharing easy) or our own platform (because its ours)\n\n\nIf you haven’t checked out our new newsletters – you can get a weekly list of the most interesting questions on any of the sites you’re interested in, but don’t necessarily visit every day.  As Joel says, its kind of like a free candy store!\n\nMake sure to check out our upcoming conferences; Stack Overflow DevDays – a two day programming conference that will cover all the new technologies you need to know about; and Server Fault’s Scalability Day – helping system administrators learn about massively scaling systems (with speakers from Facebook, Netflix, etc) – plus, save $100 off either conference with the discount code “podcast”\n\nThanks for joining us!  We’ll be on “summer vacation” for the next couple weeks, but we’ll be back on August 30th @ 4pm EDT with Anita Graser from GIS.SE (and our first female guest!).",
        "url": "https://stackoverflow.blog/2011/08/10/se-podcast-15/"
    },
    {
        "title": "SE Podcast #13 – Jin Yang",
        "content": "Jeff & Joel are joined this week by Jin Yang – our resident web/graphic designer here at Stack (the distinction between the two becomes a discussion point).  Once we get the proper picture of Jin in the chatroom, he relates everything from his background in design to how he ended up at Stack Exchange and our philosophy behind design.\nFull topics this week include:\n\n\nJin refers to himself as a “web designer” as opposed to a “graphic designer” because of the type of work he focuses on.\n\n\nLast week, we discussed this amazing answer from Eric Lippert and how it was a great answer in response to a poor question.  Looking over this led Joel to notice that some people will vote to close a question as duplicate because the answers are the same even though the questions are different.\n\n\nIn this case, there was already some questions on the topic but Eric decided to write the “canonical” answer that can be referenced from here out.  Joel will often do the same thing on some of the other Stack Exchange sites (like in this OnStartups post)\n\n\nSometimes you do have to have SOME duplication of questions to make sure that the different use-cases are covered, but you want to avoid there being 12 of the exact same question on every site.\n\n\nWhen applying for Stack Exchange, Jin created a custom site targeted at Joel to show his abilities.\n\n\nAs Joel notes (and expands on) Jin went with the always smart tactic of spending a ton of time focusing on the one company he truly wanted to work for instead of very little time on 50 random companies.\n\n\nMany people forget that truly great design is very hard, when you have to meld it with making sure the site stays useful and effective for the users.\n\n\nTalking about continuous improvement: Jin notes an episode of This American Life covering similar topics.\n\n\nJoel likes Robin Williams’ (no, not that Robin Williams) book on design since it has really good and basic lessons on it – The Non-Designers Design Book\n\n\nWe use a special CSS structure that lets us have a master CSS file for the entire network and then smaller CSS files for each site that just contain the differences between the generic template and the special parts of each site.\n\n\nWe’ve also learned a number of design lessons: like that white on black designs just don’t look very good and aren’t usable.\n\n\nThere have been issues in the past with designers creating their designs on macs but those designs then looking funny on PCs because of differences in text rendering – fortunately, thanks to improvements on both ends, that happens less now.\n\n\nWhile Jin is our in house designer and works on everything, we occasionally have help from some outside designers (such as for English and UX) who are members of the community.\n\n\nPrompted by a question for the chatroom, Jin is really excited about getting to design our RPG site.\n\n\nAnonymous feedback is now live!  That means non-logged in users and those with less than 15 rep can give feedback on how good questions/answers are.  We haven’t figured out how we’ll incorporate this data yet, but we’re collecting it and will figure that out.\n\nMake sure you get your tickets for Stack Overflow DevDays (we just announced the first round of speakers for all the cities!) and use discount code “podcast” to save $100!\n\nWe’ll be back live next week with a bunch of brand new podcast gear  and our special guest: Miguel De Icaza.  Join us for the live stream and in the official show chatroom",
        "url": "https://stackoverflow.blog/2011/07/27/se-podcast-13/"
    },
    {
        "title": "SE Podcast #14 – Miguel De Icaza",
        "content": "Miguel De Icaza joins Jeff & Joel this week to discuss everything from Miguel’s many projects to identity on the internet to playdates for toddlers.  Miguel is a force in the software world, having initiated and contributed to all kinds of products over the years – he’s also well known for being one of the most productive programmers out there.  Check out the full episode for:\n\n\nMiguel has worked on a number of different projects including Midnight Commander, Gnome, Mono, Ximian and more\n\n\nMidnight Commander still continues to be developed to this day (albeit by other people) and it has some interesting new features that have been added\n\n\nJoel reiterates his hate for huge numbers of configuration options and appreciates Miguel not implementing ridiculous option trees in his programs\n\n\nWe have a brand new podcasting setup (again!) – keep your eyes open for an upcoming post detailing our whole setup\n\n\nJeff thinks that Unix couldn’t make the same advances as some other systems (like Apple) because they didn’t have a dictator to force massive changes on the community\n\n\nAfter leaving Novell (which owns Mono), he launched a new company (Xamarin) that is working on some new projects, while also supporting the existing Mono community\n\n\nCross platform apps are stupid if they aren’t coded using the native UX and tools (see Word 5 for Mac, Safari for Windows, etc) which makes them look different from every other program on that platform\n\n\nMake sure to check out Area51 to see all of the new sites that are currently in commitment and under consideration of being launched.  Support the proposals that you want to see as Stack Exchange sites!\n\n\nOur new Bicycles site just launched as a full site (and gotten its own theme)!\n\n\nWe’ve started a new team of people (CHAOS) who will help enhance and promote many of our communities – the first project they are working on is enhancing question titles and converting many of them into actual questions\n\n\nThis has also led to a big debate internally over the relationship between great questions and titles and what guidelines we should set for making titles\n\n\nMiguel is the most productive person that Joel knows (besides James Franco)\n\n\nWe have a new newsletters feature that allows you to get a weekly newsletter showing the top and most interesting questions from sites that you’re interested in but don’t visit every day.  Check out stackexchange.com/newsletters – it’s like a candy store filled with free candy!\n\n\nSometimes people tell us they are interested in certain topics but their activity tells us something different (which is why we auto customize the homepage for each user) – its kinda similar to people on dating sites…\n\n\nEvery once in a while, we have a site that makes it through Area51 despite it “sucking” (eg: freelancers) – the problem with these sites is that there simply aren’t enough questions because its too small a topic – the entire topic can be covered in one book\n\n\nThere are two current proposals that present an interesting contrast on this topic: Christianity and Biblical Hermeneutics – the biblical site has great, specific questions, where’s Christianity doesn’t and will likely be a weak site\n\n\nCross “Joel tells an army story” off your Stack Exchange Podcast Bingo Card!\n\n\nComing soon: use as many OpenID logins as you want on SE (instead of the current limit of two)\n\n\nOne of our developers (Kevin Montrose) wrote a great blog post on how your email is your identity\n\n\nFair warning: Miguel lies a lot on his twitter feed\n\nMake sure you get your tickets for Stack Overflow DevDays (we just announced the first round of speakers for all the cities!) and use discount code “podcast” to save $100!\n\nJoin us next week for another live episode on Tuesday @ 4pm (EDT) or catch the posted version on Wednesday.",
        "url": "https://stackoverflow.blog/2011/08/03/se-podcast-14/"
    },
    {
        "title": "SE Podcast #12 – Patrick McKenzie",
        "content": "This week, Jeff and Joel are joined by Patrick McKenzie – StackOverflow contributor, internet commentator and SEO expert (especially when it comes to driving traffic for Halloween bingo cards).  After a few early tech issues (don’t worry, we cleaned up for everyone at home) we jump right into things, with tons of discussion, including:\n\n\nThe big news for Stack Exchange this week: we officially launched our new mobile support!\n\n\nWe also recently introduced in-line editing so you don’t have to go to a separate page to edit an answer or question – we really want to encourage editing and have people help make questions better.\n\n\nPatrick is the creator of BingoCardCreator.com – an amazingly popular site for putting together bingo cards for various occasions.  Apparently, one of the biggest markets is for Halloween Bingo Cards with the entire month of October being worth $20k in sales.\n\n\nHe also has a new tool for helping doctor’s offices remind patients of upcoming appointments.\n\n\nPatrick owns a bunch of “exact match” domain names which provide a huge SEO bonus since Google assumes that anyone who owns a domain exactly matching a search must be credible.  The bonus doesn’t apply to hyphenated domains though.\n\n\nJoel suspects (and Patrick confirms) that Google now incorporate WHOIS data into their ranking to discount any domains that are owned by people who have a history of owning crappy domains. (Joel has apparently also never seen Burn Notice)\n\n\nOne potential issue with rewriting question titles to be SEO’d is that not everyone searches in the same language that Google ranks for – so you might actually hurt how many people find your questions.\n\n\nJoel misses all the “labor of love” sites that people have written because they truly love a subject – the quality and usefulness of those sites is FAR better than the useless drivel turned out by content farms.  Patrick does point out one defense of them though.\n\n\nJeff has been wanting to talk more about the “Ask Me Anything” concept that originated from Reddit.  Jeff thinks the format of Reddit isn’t the best for the AMA idea (and in general has some issues with the format) and likes a new site: AnyAsq.com which is really optimized for it.\n\n\nUltimately, this leads to a further discussion of the value of various formats for organizing different types of content.\n\n\nJoel & Jeff have often wondered how to prevent the “tyranny of the sort order” in which already upvoted posts (or posts from high rep users) get lots of upvotes on their answer even though there may be a better one.\n\n\nSometimes certain answers get crazy levels of upvotes – like this one\n\nOur math intern, Qiaochu, has been doing some research and found the effect of having an upvoted post on a users propensity to return:\n\n\n\nOf course Stack Overflow DevDays 2011 is still coming along, so make sure to pick up your tickets now!  We’ll be coming to 4 cities around the world this fall with some of the foremost experts on software development, so don’t miss it!  Use the code “podcast” for a $100 discount too!\n\nWe’ll see you next week when our guest is Stack Exchange designer Jin Yang!",
        "url": "https://stackoverflow.blog/2011/07/20/se-podcast-12/"
    },
    {
        "title": "SE Podcast #11 – Rory Blyth",
        "content": "This week, Jeff and Joel are joined by Rory Blyth (with no ‘e’ as he is very insistent) fresh off his move to a new house in Portland, OR.  This week’s topics include:\n\n\nRory has had a whirlwind of moving and relocating as of late.  Today is the first day he got more than 3 hours of sleep, but he is now happily in his new house. Rory hasn’t been writing as much as of lately because of random personal and relationship issues – but he’s free now! Ladies and gentlemen, start your engines!\n\n\nJeff recommends “Enemy of the State” (even though it stars Will Smith) – it’s a spiritual sequel to The Conversation and it also contains a faraday cage, in case you’re interested in seeing one of those.\n\n\nWhile working on .Net Rocks! (our podcast competition – so don’t visit that link) Rory moved for a while to New London, CT – and it only took one day to decide to move there.\n\n\nRory was also part of podcasting way back in the early days (of 2004) while everything was still being decided about formats, styles, enclosures, etc. He was also a featured guest on Podcast #71 of the Stack Overflow podcast in 2009!\n\n\nJeff wants to know what Rory has been up to for the past couple years: and apparently Rory is still very focused on iPhone development. One of the biggest changes: all the clever hacks that programmers did originally are now supported by real APIs which makes it less fun for the nerds.\n\n\nMonoTouch was recently spun out by Novell after its “restructuring” and is now tied in to Xamarin. Rory loves MonoTouch because of the ease of it and the incredible power that it gives developers, including cocoa bindings, the ability to drop in .NET binaries, efficiencies, etc\n\n\nYou can also find Rory’s new site at Rory.me (once he actually starts blogging there)\n\n\nOne valid reason to use Objective C over MonoTouch is that it is a much smaller file,  Although it has gotten much more efficient recently, according to Rory.\n\n\n\nRory argues that fascism is good in tech products: from the iPhone to Xbox, by isolating and controlling everything in the platform it allows the company to control the experience and ensure quality.  Otherwise you can end up with things like Windows Mobile / Windows CE.\n\n\nGoogle runs the risk of running into similar issues with Android.  The other question is if they are diversifying out too much (into crazy projects like wind power).\n\n\nHow do we keep Stack Exchange questions up to date? The Monotouch vs Objective C question above is 2 years old now and may no longer be fully accurate; we accept edits from anonymous and 1 reputation users now, but how can we motivate them to improve this old question?\n\n\nRory is also one of the most “prolific” answerers on our site with the highest vote to answer ratio on the site!\n\n\nRory will also be speaking at Stack Overflow DevDays – so pick up your tickets now if you want to see him (with discount code ‘podcast’ for $100 off)\n\nHelp us test the new Stack Exchange mobile view on your mobile device by enabling it on meta! (scroll down to the very bottom of the page to enable it there.)\n\nThere’s no podcast next week (the 12th) but we’ll be back live @ 4pm on the 19th so see you then!",
        "url": "https://stackoverflow.blog/2011/07/06/se-podcast-11-2/"
    },
    {
        "title": "SE Podcast #10 – Steve Karantza",
        "content": "Jeff & Joel are joined by Steve Karantza, better know as Shirlock Homes, our #1 user on the DIY Stack Exchange.  Steve is also our first non-programmer oriented guest on the podcast!\n\n\nEveryone wanted to know how Steve ended up on the site: turns out his son is a computer programmer who has used Stack Overflow for a while and encouraged his dad to check it out.\n\n\nSteve is also a big user of This Old House Pro, a community for contractors hosted by This Old House.  The main difference is that he gets answers on This Old House but gives answers on DIY.SE.  Steve would also like to see some more contractors join DIY.SE\n\n\nThe number one problem he sees is people getting in over their heads.  Especially in regards to electrical and plumbing projects, people don’t know or understand the codes and safety issues.\n\n\nHow do you know if a contractor is going to be competent and good?  Best advice is to get referrals.  And once you have them, make sure they are real, go out and actually see how the jobs came out.\n\n\nIf you haven’t seen There, I Fixed It, go check it out for great examples of what not to do.  Especially, never, ever use a screwdriver as a fuse.\n\n\nOne great question that Steve answered was how to estimate the height of a tree: he recommended an old logger method.\n\n\nIf at any point during a project you stop and think; how the heck do I do this?  It’s time to stop and get advice, either from a contractor or other reliable source.  Steve relays the story of a friend who had a fixer-upper and continually called him for advice after getting stuck on a problem for 5 hours.\n\n\nEver needed to do plumbing work but don’t know how to sweat pipes?  Check out Shark Bites which form secure couplings without sweating.  Unfortunately – they aren’t cheap.\n\n\nIf you want to learn how to do home improvement work: just pick a project and start it.  Some contractors will also let you help out on projects on your house instead of one of their lowest level guys (but not all contractors will let you).\n\n\nSteve tried to build his first house at the early age of 22 right after he left the air force – as with all early projects, there were a LOT of lessons learned.\n\n\nJeff also related how learning building is similar to learning code: ultimately one of the best methods is to simply sit down (or stand up) with someone better than you and work on a project with them\n\n\nOne challenge for Steve has been learning all of the intricacies of the software and systems that make up the sites (like the difference between the main and meta sites), since he’s not a computer guy.  He’d also like to see some more highly experienced people come into the site.\n\n\nThe writing that Steve has done on the site has also spurred his desire to keep writing and based on it, he’s even talked to some of the local papers about doing an “Ask the Contractor” column.\n\n\nSteve also noticed how long people continue to read and vote on his answers over time.  Joel pointed out this question on sliding glass doors that still continues to get lots of views even though only 3 people originally answered the question.\n\n\nSteve is excited about the Gardening and Landscaping site (which is currently in public beta) – if you haven’t checked it out, you should!\n\n\nSteve’s son Alex is also launching a new website – Axiom Home Services – to help homeowners with their home inspection questions and needs.\n\n\nComing up soon, we’ll have a weekly newsletter which will recap interesting and popular questions from the week.\n\nWe just officially announced the launch of DevDays 2011 tickets (yeah, yeah we’ve talked about it before, but now its official).  As always, you can get your tickets with a $100 discount by using the code “blog”\n\nJoin us next Tuesday for a special surprise guest!  Not to mention, audio mixing provided by our very own Jason Punyon.",
        "url": "https://stackoverflow.blog/2011/06/29/se-podcast-10/"
    },
    {
        "title": "SE Podcast #08",
        "content": "This week, Jeff and Joel are joined live “in studio” by Marco Arment, creator of Instapaper and formerly the lead developer at Tumblr.  This week’s topics include:\n\n\nWhat’s the proper numbering format for podcast episodes: decimal, binary, octal?  There’s also an extensive debate regarding whether Marco has ever been on the podcast: everyone but Joel agrees that he hasn’t.\n\n\nMarco talks about leaving Tumblr to start his own company (Instapaper)\n\n\nPart of what made the move easier was that he did it on the side for about a year before leaving Tumblr (with the okay of his current boss of course).\n\n\nBy the time he left, Instapaper had become a full time job and Tumblr had become far more than a full-time job – it needed even more time and support.  It became very stressful knowing that even the slightest mistakes in code could cause 1100 people per second to get error messages\n\n\nInstapaper is also a bit easier to support because it’s inherently designed for offline use, so if the servers go down, people aren’t immediately deprived of the entire functionality like they are if your web service is down.\n\n\nInstapaper was created by Marco to solve the problem of reading on the train and reading old articles that he had found while at work.\n\n\nMarco is currently being confronted by the “big player” problem (aka The Starbucks Problem), now that Apple has introduced their “Reading List” feature in the newest version of iOS and Mac OSX.\n\n\nAs Marco points out though, there’s several big reasons that he isn’t really hurt by it: 1) It doesn’t solve the offline problem – it’s only online bookmarks  and (2) It doesn’t clean the text to make it easier to read\n\n\nMost importantly, it doesn’t solve everyone’s needs and at the same time, it educates the market as to the value of this type of service, thereby enlarging the entire market and creating more customers for Instapaper.\n\n\nThis tends to work really well for the small player when you’re trying to solve a big problem with lots of personal preferences – it doesn’t work well when its one simple task that needs to be completed.\n\n\nExamples of situations that are good for the little guy: RSS Readers, email clients, coffee shops, etc.  Examples of situations that are bad for the little guy: .ZIP files, regular bookmarks, etc\n\n\nThere’s also tons of successful notes and stock apps, despite Apple providing support for it natively.  So many people want more functionality that it creates a whole new market.\n\n\nUltimately, if someone wants a bit more than what Apple provides by default, they are probably going to go to Instapaper and ultimately increase Marco’s user base..  The key to this model: you have to do it better than the big guy\n\n\nPeople sometimes also choose random or arbitrary reasons for choosing products (like the color or logo or name)\n\n\nJeff finds that the effort of queuing things up (especially reading material) is greater than the benefit he gets from being able to read things later.\n\n\nMarco points out that he doesn’t want Instapaper to be seen as an obligation – something that many people ultimately feel it can be\n\n\nTo combat this, he is considering a feature where he would email them saying “I noticed that you have X articles more than Y months old, do you want to archive them”, thereby giving them an ‘out’.\n\n\nPeople don’t find to tend the app while searching for offline reading – they just find that as an additional benefit after they start using it.\n\n\nJoel thinks that Facebook created the “Like” button in order to collect data about web pages that would be very good for creating a search engine\n\n\nMarco also points out that Facebook provides all of these various embed platforms so that they get the cookie on your computer and then can see anytime you visit any of these pages and build a graph of what you (and everyone else) looks at.\n\n\nBringing it back to Stack Exchange: Jeff points out that we’ve been considering giving anonymous users the ability to vote somehow (currently voting is the most protected form of interaction on the site).  One option is a ‘like’ or ‘thumbs-up’ button somewhere on the page.  Another option is to collect the votes from anonymous users, but count them in a separate tally or as a fractional vote\n\n\nFun Fact: there are two important etiquette rules in New York City\n\n\n1) You should go through the revolving door first so that he is doing the work of pushing the door\n\n2) When getting in a taxi, you should get in first, since the first person in needs to slide across the seat.\n\n\n\nWe’ve rewritten the descriptions for the close reasons of subjective and argumentative to make clear that its for a question that is inviting discussion or outside the scope of the site.\n\nRegistration for Dev Days in all cities is now open – make sure you register and get more info at http://devdays.stackoverflow.com\n\nJoin us next week, once again live @ 4pm on Tuesday for Greg Wilson for deep insights into the communities surrounding open source software projects.",
        "url": "https://stackoverflow.blog/2011/06/16/se-podcast-08/"
    },
    {
        "title": "SE Podcast #09",
        "content": "This week, Jeff and Joel are joined by Greg Wilson, an author, developer, and former university professor, who is also an expert on open source software development.  Once make it through the jokes and get his mic sounding great, we can jump in and explore all kinds of interesting topics, like:\n\n\nEveryone’s favorite Canadian airline? Porter Airlines!  What makes them so great?  They use FogBugz as their customer service software.\n\n\nWe’ve hired a math intern to help us mine through all of our Stack Exchange data and (hopefully) improve the site.   And to make it better, he’s an MIT student and Math.SE moderator.\n\n\nAccording to a study of Microsoft data, what was the strongest predictor of bug rates in Windows Vista?  The answer: how far apart the developers are in the org charts. The more separate they are, the more likely there are to be conflicting orders or different mind sets.\n\n\nThere have been fairly strong opinions for years on what makes a good programming setup/environment, but people are just now beginning to look at actual data to derive conclusions\nGreg thinks this is LONG overdue, especially given that software development is an engineering backed profession – why weren’t our processes based on science?\nEven big companies, who have access to the data, have been avoiding actually using data for their decision making: people treat it as a craft rather than an engineering discipline\n\n\nGreg has written several books on how to develop software better – two of which came out this year and are must reads.\n\n\nMaking Software: Joel requires that you read this book,  because its the first one to take a scientific approach to making  software as opposed to the subjective and anecdotal way that most have  in the past (eg: everyone who has done one software project and then written a post on HN about how their method is “amazing”).\n\n\nGreg wanted to use the results of his studies to bring actual concrete steps back to professionals on how they could improve their process\n\n\nHis favorite chapter: while Test Driven Development is very popular right now, a survey of all of the studies that have been done on TDD have shown that the better the study done, the weaker the signal as to its benefit.\n\n\nAnother study recently looked at how much effort goes into maintaining the build system: 5 to 30% of all development effort is spent on maintaining the build system.  With the variations being huge even when working on similar projects.  Clearly, there’s a huge difference in the efficiency of some developers.\n\n\nMeasuring programmer “productivity”: As Joel points out, any metric that  you come up with as a method for measuring programmer productivity can  be gamed some how.  He even made money as a consultant in the past  showing companies why they shouldn’t hire consulting companies to  improve “productivity” since programmers would instantly game any system (which is how consulting companies appeared to be successful).  Ultimately, it’s pretty hard to actually measure.\n\n\nGreg points out that the irony is that the single most correlated measure of productivity is simply lines of code written.  Joel counters with that only holds true, so long as the developers don’t know they are being measured based on that (since its so easy to game).\n\n\nHis second book is The Architecture of Open Source Applications: its entirely CC licensed so you can read it online for free.  if you do buy a hard copy though, all the proceeds go to Amnesty International.\n\n\nGreg decided to publish it for free online after seeing how quickly Beautiful Code was put onto torrent sites.\n\n\nHis key thesis behind it is that we don’t teach people how to read code (only how to write it).  His example: you wouldn’t hire an architect who had never looked at other designs before.\n\n\nWhat’s really important isn’t the internals of the code, but rather the architecture – especially when it comes to understand what you’re trying to achieve.\n\n\nThe best parts about the book are where the authors stop talking about what’s inside the code and start talking about why those things are there.\n\n\nDeloitte performed a study called “A Random Search for Excellence” (based on a book by Tom Peters called “In Search of Excellence“).  They tried to explain the data that Peters used by assuming that all of the companies were on a random walk and found that yes, he didn’t actually prove anything.\n\n\nJoel is reading Henry Petroski’s new book on the difference between science and engineering.\n\n\nTO-DO: Greg needs more data for his upcoming work.  So take your favorite piece of open source software (something you find interesting) and take it apart and tell us how it all fits together.\n\n\nJoel’s post on building communities with software\n\n\nJeff’s take: If you want to get better, work with programmers who are better than you.  Period.  And since its so important to pick your work family well, consider coming to work at Stack Exchange!\n\n\nMake sure to register for Stack Overflow DevDays 2011!  Use the code “PODCAST” for a $100 discount in any city.\n\nWe’ll also be having a one day hackathon on December 13th in Washington DC – come join the entire Stack Exchange dev team in hacking away on your favorite open source project!\n\n\n\nWe’ve launched a few new sites including Astronomy and Philosophy!  Plus, Travel is now in private beta and Personal Productivity is starting soon!\n\n\nWe’re going to start a weekly newsletter highlighting the best questions on the sites.  We’re targeting this based on some recent data we’ve found that a lot of our users don’t return frequently after their initial visits and activity.\n\nBecause of how much we love our universal inbox,  we’re working on an feature that would email the things that you missed from your inbox.\n\nThanks for joining us again this week – join us next Tuesday @ 4pm when our guest is Steve Karantza (aka Shirlock Homes on DIY.StackExchange).  We’ll be live at livestream.com/stackexchange – see you then!",
        "url": "https://stackoverflow.blog/2011/06/22/se-podcast-09/"
    },
    {
        "title": "SE Podcast #05",
        "content": "The podcast is on the road again this week, with Jeff and Joel coming to you live from Jeff’s living room in El Cerrito, CA.  They’re also joined by Josh Heyer (aka Shog9) who calls in from Colorado.  This is actually the second time we’ve done a podcast from Jeff’s house, the first time being Episode #51.\n\n\nServer Fault and Super User have recently seen a substantial hit in the amount of traffic coming from Google the last few weeks.  There’s a number of possible reasons, but Joel wonders if it has to do with long clicks vs short clicks.\n\n\nJoel’s theory is that Google is looking at this ratio as a signal for the quality of a site: high quality sites should have more long clicks (meaning you don’t return to Google quickly) and fewer short clicks (where you click a link and then immediately return to the search page).\n\n\nWe’re also wondering if the Google algorithm change is penalizing sysadmin content – since a number of other sites focused on System Administrators / IT Professionals have also seen big drops in traffic from Google.\n\n\nJeff previously blogged about Google algorithm issues and the fundamental risks of any site relying on a single source for so much of their traffic.\n\nIf you have any data or observations from running your sites, make sure to hop over to our webmasters.stackexchange question on this topic.\n\n\n\nOur guest today is Josh Heyer, our new part-time community manager.  Josh was originally on Usenet, then moved to forums and Code Project, and joined Stack Overflow right after it launched; he’s been with us from the beginning.\n\n\nOne of the first things that Josh pushed to change after joining the team was to make it more clear why accounts were being suspended.  Someone would get suspended and then complain about it publicly; they had a reason, but other people didn’t. This sometimes led to lots of heat and noise on meta, detracting from the quality of the site.  By making the reason for a suspensions public, you remove the gossiping and public discussion.  And if you don’t — you get the Streisand effect.\n\n\nWe’re now tackling the last of the low hanging fruit in making the site performance better: serving static content using a CDN.  By utilizing a CDN for lower priority/static content (like logos and other images) we can serve files faster to different areas of the world.\n\n\nMake sure to hop over to that blog post and help us (and you!) out by telling us which CDN works best for you.\n\n\nWe’ve been using our own home-brew CDN-like setup that offloads all of our static content off the main servers (to reduce CPU loads) and onto a side domain.  Unfortunately, these secondary servers were still located in our NY data center, so it did not do anything to reduce ping times to distant locations.\n\nIn our experience, breaking your static content off onto its own server can have a huge performance benefit, even for small or medium sites.\n\n\n\nIt’s amazing how many highly technical people don’t think to clear their browser cache when they’re having a problem with a website loading.  Always clear your browser cache and try again before contacting a site’s support team. Please?\n\n\nWe started a logo contest for Lucene.net, the open source project powering our search.  If you want to help out by trying your hand at designing a logo for this project, check out the 99designs contest we created on their behalf.\n\n\nBecause our search currently focuses on relevance (determined by keyword mentions), we recommend editing good questions to make sure a proper set of keywords appear in them; this makes it easier for others to find these questions in search.\n\nRemember that search results have several tabs, but always defaults to relevance. Try the votes, active, and other tabs to get a different sort of your search results.\n\n\n\nCurrently, there’s no way for anonymous users to indicate their satisfaction with a page — should we add something to allow drive-by visitors to contribute? There’s always anonymous editing, of course, and this is the reason we keep view counters on pages – it’s the only way for people who don’t ask or answer, and don’t have the 15 rep “citizenship” required to vote, to make an impact on the questions they visit.\n\n\nHow should we handle “missing semi-colon” questions — where someone posts a chunk of code that isn’t working and the only problem is that they had the name of a variable wrong, or forgot a semicolon somewhere? Since these questions will never be of benefit to anyone down the line, there’s no real reason to keep them on the site.\n\nThis is also why we modified the language for the Too Localized close reason to read “this question will not be helpful to future visitors”.  It’s a much clearer explanation of what that close reason is intended for, and we’ve already seen an uptick in usage.\n\nThere’s no podcast next week, but we’ll be back the week after, so make sure to join us then!",
        "url": "https://stackoverflow.blog/2011/05/18/se-podcast-05/"
    },
    {
        "title": "SE Podcast #06",
        "content": "It’s our first test of a live podcast!  In case you missed it, we streamed this week’s podcast live during the taping. It’s something we’re playing with and may continue to do in the future if it is popular.  You can tune in to the live tapings Tuesdays @ 4 PM Eastern / 1 PM Pacific — check Joel and Jeff’s Twitter feeds for the location.\n\n\nWe’ve found that hosting a podcast while running a business is more useful than you might think — because it allows you to introspect on your own thoughts and decisions and have a history explaining why you made those bad decisions at the time.  Even if you only have 10 listeners, and one of them is your dad.\n\n\nJeff is currently reading Super Cooperators which focuses on the prisoner’s dilemma and how it applies to social situations. In the real world, people remember your actions, and that history changes how they interact with you. Ultimately our concept of reputation derives from the realization that your current actions will have future consequences not just on other people, but on society and the greater internet.\n\n\nSome of the NY team went to hear Bing Gordon give a talk on gamification that covered a number of topics.  In particular, he noted that almost everyone (except for males age 18-24) prefer a cooperative game to a competitive one, and people are much more likely to continue with something if at least one other person sees and validates what they did. That’s one reason why we’re so gung-ho about everything being public — by keeping everything visible and in the open, you encourage more civic-minded level of behavior than what happens behind closed doors. Sometimes people can be turned off by these types of reputation systems, though.\n\n\nThere’s a fantastic article at TheAwl about how Wikipedia made it possible for amateurs who are obsessive about a topic to become, en masse, as reliable as traditional experts.\n\n\nStack Exchange is now an OpenID provider!  We did this primarily for two reasons. First, any time you send people off to another site to sign up, you lose visitors. By keeping everything on Stack Exchange, we increase the success rate of sign ups. Second, while MyOpenID is a great service, it’s free — so there’s no incentive for JanRain to maintain it and keep it in good repair. There have been some recent … incidents … with MyOpenID.\n\n\nDown votes no longer cost you, the down-voter, any reputation points on questions only.  We found that too many people weren’t willing to down vote questions because of the -1 cost to the voter. Downvotes on questions are a critically important signal for us in separating the good questions from the not-so-good questions.\n\n\nUpcoming guests include Steve Karantza (Shirlock Homes from DIY.SE), Rory Blyth, Dave Winer, Jason Calacanis, and more.  If you have guest suggestions, make sure to add them to the Meta thread!\n\n\nWe’re hiring a Community Evangelism Team!  They’ll be responsible for promoting our communities and sites out to new audiences, and helping them grow. It’s a great job for anyone who wants to get into the startup world or a recent grad with a humanities degree who doesn’t want to be stuck working at an agency for the next 10 years.  For more details, check out the job post.\n\nJoel takes his first question from the audience: why does he think great programmers aren’t going to be found developing internal company apps?\n\nTune in next week when our guest is Sam Saffron (aka Waffles) – once again, you’ll be able to watch/listen live on Tuesday @ 4pm as we do the taping.  Follow @spolsky and @codinghorror for the link.  You can also hang out in the official chat room during the tapings.",
        "url": "https://stackoverflow.blog/2011/06/01/se-podcast-06/"
    },
    {
        "title": "SE Podcast #04",
        "content": "This week, the Stack Exchange podcast travels to England, where Jeff and Joel are joined by Stack Overflow legend Jon Skeet (and son!) along with Marc Gravell.\n\n\nPicking up the discussion from last week’s episode: what constitutes a good question? Our very own “How to Ask” page is a start — and it’s a mandatory page on Stack Overflow for all new askers. It’s partially based on Jon’s own post, Writing the Perfect Question.\n\n\nWhy should you downvote a question? Is there such a thing as a bad question? There most certainly is! We generally tend to consider questions where the asker put virtually zero effort into asking worthy of a downvote. Jon has also written a bit about reasons for voting on questions and answers. Two of the most important aspects of a good question, per Jon, are providing evidence that you’ve researched the problem yourself, and providing as much information as possible: detailed code snippets, error messages, objectives, etc.\n\n\nSome users don’t want to answer questions by users with low accept rates. Jon deeply disapproves of the practice of leaving comments nagging users about their accept rate, especially since you can gain far more reputation by writing good answers that are highly upvoted rather than ones that are accepted.\n\n\nAccept rate by itself doesn’t capture all of the information about how good (or bad) a member of the community a given user is. Perhaps accept rate could be expanded into a broader numeric metric of how “civic minded” a user is.\n\n\nOnly two things keep Jeff up at night: the size of the constantly growing database, and maintaining quality within the community. We absolutely want a friendly and civil atmosphere, but as the site grows, people have to learn to follow the norms and guidelines of the site themselves without manual hand holding. It doesn’t scale. Ultimately, we can’t save every user, and some have to be turned away from the site in order to protect the overall quality of the community. You must give a little to get.\n\n\nTo maintain quality, we started capping the number of questions that can be asked by a user in a given time period. If users are submitting more than 6 questions a day, or more than 50 questions a month … are they really putting the appropriate amount of research effort into their questions?\n\n\nJon wonders if there are algorithmic solutions to detect users asking low quality questions – similar to how GMail reminds you when you reference an attached document in your email, but forget to actually attach something.  Jeff responds that we already do that for answers, and are beginning to aggressively extend it to questions.\n\n\nFollowing up on the previous conversations about improved flagging tools — we get hundreds of flags per day, and the vast majority of them are valid. (Comment flags … not so much). Even though we’re buried in them at the moment, we welcome flags from the community because nearly every one goes directly towards a better signal-to-noise quality ratio on your site. So keep ’em coming!\n\n\nJon wonders whether the quality of answers is increasing or declining.  Jeff and Joel respond that not only are the percentage of answered questions increasing but that answer quality, to their knowledge, has never been disputed. It’s fundamentally easier to preserve the answer experience than the question experience because users love to vote on answers: good answers go to the top, bad answers to the bottom.  But the flow of incoming questions — which make up the entirety of the front page and the top 25% of every question page — have a hugely disproportionate effect on any Q&A system; that’s why we spend so much time focusing on them.\n\n\nThe main issues we see with answers isn’t quality per se, but that people misuse the answer field to enter thank yous, pleas for help, and other irrelevancies. We do provide the How to Answer page which is automatically shown when we detect such answers.\n\n\nThe Stack Exchange workflow isn’t necessarily the most natural for how most new people ask questions.  Most would start out with a small question and proceed to ask a series of followups while leading down a path and escalating the conversation after being assured the other person is engaged as opposed to having to put all of the information in the first post (almost more like an instant messaging conversation). Jeff points out that there are some sites that work like that, such as ChaCha, however it’s a very different model. If you prefer this type of rapid back and forth interaction, don’t forget that there’s always chat.stackexchange.com and chat.stackoverflow.com — our live chat rooms!\n\n\nIs Stack Overflow Dev Days 2011 the best name for the conference or should we come up with something new?  Is the term “Dev Days” being used by too many conferences?\n\n\nOver the holidays last year, Jon wrote an epic 45 (!) series of blog posts about reimplementing LINQ to Objects. It’s a fantastic and utterly essential resource for anyone interested in the guts of LINQ.\n\n\nJon’s old and trusty Samsung NC10 laptop was recently stolen – so he’s now rocking a Chrome OS laptop on his daily commute (which unfortunately means he only has a browser and no compiler on his daily commute).  It did however lead to him discovering Compilr which allows you to compile code on the web – he thinks it would be amazing to integrate that into Stack Overflow so you can check code from inside questions.\n\nJeff reveals that of all the SE sites he participates on, his most satisfying answer to date was this post on parenting. Knowing that his answer helped another person with his own child — that’s especially personal and gratifying.\n\nJon needs your help!  If he is chosen to speak at DevDays 2011, what do you  want to hear him speak about?  Enter your suggestions in the comments to this post. Sadly, Jon was having so much fun with the podcast that he forgot to put dinner in the oven halfway through the taping – hence we are left with this picture of the three sitting on their laptops, waiting for dinner to cook while accompanied by a papier-mâché dragon left over from a recent birthday party for Jon’s children.\n\nSee you next week!",
        "url": "https://stackoverflow.blog/2011/05/11/se-podcast-04/"
    },
    {
        "title": "SE Podcast #07",
        "content": "Jeff and Joel are joined by Sam Saffron (aka Waffles), our only Australian developer at Stack Exchange!\n\n\nDoes “Hell Banning” — making a problematic user’s posts visible to just him or her — make sense? You can see Jeff’s post about it over on Coding Horror. When issues like this are presented to the community, the gravity of the situation is often not fully conveyed to the audience. They can’t see all the removed content that tells the story of how destructive that person was to the community. Of course, we always encourage discussion of general moderation issues on the per-site metas.\n\n\nTwo pieces of advice about moderation discussions: try to stick to generalized discussions about a broad class of moderation, without delving into minutiae specific to one user and one situation. To keep it useful to the community, avoid devolving into a  laundry list of every tiny thing that happened to every user. Also, try to limit discussion about moderation to those users who have an actual connection to the site and these moderation events, and aren’t just stopping by to opine about some abstract, perceived wrong on the internet. (insert XKCD cartoon here)\n\n\nSam Saffron has been working remotely for Stack Exchange from Australia for about a year now. Sam came to our attention as an avid participant on Stack Overflow and meta, as well as his own homegrown Stack Overflow inspired support tool he wrote, Community Tracker. In addition to being the lead on the Stack Exchange Data Explorer, Sam’s touched almost every area of the engine at this point: improvements to badges, privileges, edits, users page, tags page …\n\n\nWe’re starting to build a feature we call emacs.stackexchange.com, which essentially gives users a filtered view of Stack Overflow to specific topic groups, as represented by a set of tags. We have historically shut down Area 51 proposals that would factionalize Stack Overflow, and although we feel this is the correct decision, we are sympathetic to the underlying concern. Stack Exchange sites are intended to be groups of topics, identified by tags, that are of broad interest to people who all love a topic — like, say, programming. This is fine when you follow a large tag like [java] or [c#], but what about when you follow 20 small tags? Yes, you can set up a tag filter, but it might be nice to have some default groupings for certain popular sub-areas — thus, emacs.stackexchange.com instead of the Area 51 site proposal for emacs.\n\n\nThe bedrock guideline of our Area 51 site creation process is, “I’d like to ask a question about {x} but there’s no place on the Stack Exchange network to do so”. We’ve been a bit disappointed that the CSTheory community has been unwilling to accept an expansion of their scope, because there are technical computer science questions on Stack Overflow that aren’t being handled correctly and have no other place to go.\n\n\nThe German and Japanese proposals are now public! These are our first baby steps into other languages, as guided by the community. It’s already caused a bit of an issue as we “advertise” popular questions to the network that may have very few words in English. This also comes up with http://judaism.stackexchange.com/ questions which can have quite a bit of Hebrew in them.\n\n\nAs Joel builds out the CHAOS (NYC community development and evangelism) team out, they start with a generalized online SAT/ACT style aptitude test.\nWhich Jeff did not pass. 🙂 But the far more interesting test that we’re giving candidates is what we call the “Internet competency test” — how would you test someone to see if they are experts at using the internet? How to find things, how to send email, how to link, what “The Facebooks” and “The Twitters” are, and so forth? Building such a test is an interesting thought exercise. How would you do it?\n\n\nA question from the chat room — are there any metrics around how much the new suggested edits feature has improved the site? One thing we’ve learned is that “simple” edits to fix layout (code formatting) and proper English go a long, long way towards increasing the overall quality of the experience. At Zappos, they went so far as assigned Mechanical Turk tasks to edit and improve shoe reviews! We have noticed that a) some users are hesitant to approve edits that totally rewrite the post, even when it’s necessary and b) we don’t get nearly as many anonymous edits as we expected; most edits come from existing or registered users.\n\n\nThe intent of editing questions and answers is to offer more permanent resources that can evolve over time. It is important to displace the old, out of date information that is often entombed in Google; for example with Keyboard shortcut to access the first link in a Google search page? Jeff was surprised to find that almost all the searches he did produced old, obsolete, and sort of incorrect results — so he rolled up his sleeves and created a definitive answer, then edited the question and other answers. Hopefully future internet travellers will find this correct and up to date answer… and they can click edit to improve it, too!\n\n\nWe are open sourcing our .NET web performance mini-profiler. This has been huge for us on Stack Exchange, directly leading to 2x-10x performance improvements across the board, and we are pulling it into all our sites. It’s awesome and if you work at all in .NET building websites, I strongly encourage you to check out the .NET web performance mini-profiler for your projects. Kudos to Jarrod Dixon for putting this together in a highly polished, re-usable form, and Marc Gravell for coming up with the genesis of the concept in chat.\n\nThe brand new Stack Exchange Shop is now officially live! Pickup some of our great stack exchange gear like Shirts, Hoodies, Jackets, Pens and even Beer Steins!\n\nJoin us next week when our guest is Marco Arment, the creator of Instapaper and the former lead developer of Tumblr.  We’ll also be live streaming again, so tune in to http://www.livestream.com/stackexchange starting at 3:30pm – you can also join the live chat at http://chat.stackexchange.com/rooms/512.",
        "url": "https://stackoverflow.blog/2011/06/08/se-podcast-07/"
    },
    {
        "title": "SE Podcast #02",
        "content": "This week on the Stack Exchange podcast, Jeff and Joel are back into the swing of the weekly podcast and jump right into business, including:\n\n\nThe algorithm for the Stack Overflow homepage changed a little while back, showing you even more relevant content and questions every time you log in.\n\n\nContent farms and how much they suck (but how amazingly funny and well written “The Content Farm” is.\n\n\nThe recent launch of the HowThingsWork Stack Exchange and why it never made it out of its private beta.  In particular, it had the issue that it would have turned into almost just another content farm and not fulfill the Stack Exchange mission of making the internet better.\n\n\nThe recent move to our new data center and technical changes that have made all of the sites faster and more efficient.\n\n\nHow you can utilize improved networking in your data center to greatly improve performance with efficient upgrades\n\n\nThe Internet Archive is an amazing service for preserving the history of the internet, but it never seems to get enough support.  Go and donate today!\n\nIs there such a thing as a question that is too simple?  What new guidelines should we give people when posting questions on Stack Exchange.\n\nAnd a fun fact about the Stack Exchange podcast: We have listeners in 85 countries around the world.\nSee you next week when Jeff and Joel are joined by Scott Hanselman.\nOne final note – we’re re-numbering the podcast to start back at the beginning, so this is now episode #02 and last week is now episode #01.",
        "url": "https://stackoverflow.blog/2011/04/27/se-podcast-02/"
    },
    {
        "title": "SE Podcast #01",
        "content": "Welcome back to the first episode of the new Stack Exchange Podcast redux!  Jumping right back into the old groove, here’s what happens this week:\n\n\nJeff and Joel discuss missing the openness that the old podcast provided.  Since the podcast is just a recording of their weekly call, it gives listeners an insight into the decision making and vision behind Stack Exchange.\n\n\nSome of the Stack Exchange metas have been having vibrant debates and discussions about the role of the community and moderators in shaping debates – but what are the unseen upsides to having this vibrant meta community?\n\n\nJoel has spent many hours over the last few weeks looking at user trends and patterns between the Stack Exchange sites – what has he found?\n\nThe percentage of “civilians” (users whose first login was to a site other than StackOverflow, SuperUser or ServerFault) on Stack Exchange sites has grown to 36% since the launch of SE.\n\n\n\n\n* However, the recent stasis of the ratio not changing isn't due to civilian growth stopping, its that programmers are growing just as quickly.\n\n* Most interestingly, some of the \"geekiest\" sites (like Ubuntu, Math, Stats, Physics, TeX) have the highest percentage of \"civilian\" users.\n\n\nLaunching this week is the beta of the brand new HowThingsWork community.  Jeff and Joel discuss its odds for success, challenges it faces, and lessons learned from the launches of past communities.\n\n\nThere have been numerous discussionsover the last few months about the closing of questions for being “too localized” – Joel and Jeff discuss their (strong) feelings on how and when this should be used and why you shouldn’t ask about why there’s a pothole outside your house but you should ask why cities have so much trouble maintaining their roads in general.\n\nPlus, did someone successfully troll Joel on this thread?\n\n\n\nComing up in September and October this year: it’s Stack Overflow Dev Days 2011!  We’ll be doing Dev Days in fewer spots this time (4 instead of 10) but they’ll be bigger and better – plus running for two days instead of just one.  Dev Days will be taking place in 4 cities around the world, one each somewhere in the US West Coast, US East Coast, UK and Australia.  Stay tuned at the Stack Overflow blog for more details.\n\nHelp us out – make sure to let us know what topics you want to see covered\n\n\n\nJoel and Jeff discuss their backup procedures and why you need to be careful whether using hard drives or SSDs.  Plus, why you really shouldn’t be too concerned that Dropbox will decrypt your data if they receive a court order.\n\nFinally, we’re going to have all kinds of interesting and upcoming changes for the podcast including guests, a live stream, a live chat room and maybe even video.\n\nA special thanks to our friends at SoundCloud for setting us up on their amazing audio sharing platform – you can check out this episode on their site or below (and even leave comments at specific times during the audio).\nAlso, a big thanks to Friend of George over on audio.stackexchange.com for the recommendation on live recording software that we’re using for the podcast now.",
        "url": "https://stackoverflow.blog/2011/04/20/podcast-88/"
    },
    {
        "title": "SE Podcast #03",
        "content": "This week, Jeff and Joel are joined by Scott Hanselman – tune in for their discussion of everything from MIX11 to the salads at Jack in the Box.\n\n\nWelcome Scott Hanselman! Be sure to check out both of Scott’s excellent podcasts at Hanselminutes and This Developer’s Life.\n\n\nJoel recently wrote an unintentionally controversial blog post about lunch and how important it is here at Stack Exchange and Fog Creek. Despite the claims that Joel is torturing introverts by forcing them to eat lunch together, the truth is that almost everyone at both companies is introverted and yet enjoy lunch together.\n\n\nScott wonders how so many people have so much time to sit around on Hacker News and Reddit (and everywhere else) discussing these blog posts when they have work to do. Of course we have to reference Clay Shirky’s classic Gin, Television, and Social Surplus here.\n\n\nScott is busy putting together a new Synology DiskStation DS1511+ to replace his Windows Home Server setup – unfortunately, there’s a lot of options (and a lot of bad ones out there). Scott is a wired enthusiast, but he does like his optimized wireless N setup, which is based on a Netgear N600.\n\n\nMicrosoft has an amazing video conferencing system known as RoundTable — now branded as the Polycom CX5000 — that captures the room in 360 degrees and then automatically detects and shows the person who is talking. Scott also has a mobile remote telepresence device running around Redmond as him, somewhere. He also recommends the Cisco Umi.\n\n\nOver on mechanics.stackexchange.com, Jeff wonders why online car communities are so brand-centric — there are hundreds of dedicated sites for Ford enthusiasts, and Subaru enthusiasts, and so forth. Whereas programmers can have Java and Python installed side by side on the same PC, you have to own a lot of physical, real world vehicles to have experience with many different car brands — or, be an auto mechanic. Perhaps programmers are kinda-sorta mechanics in the sense that they spend most of their time practicing the noble art of maintenance programming.\n\n\nStack Exchange sites do well in professions where you can open a relevant Stack Exchange site in a window side-by-side with the work you’re already doing on the computer. But what about people who don’t regularly work on computers? Is it realistic to expect people who tend to work offline to take the time and effort to come online after they finish working and keep discussing their work? Or, will the proliferation of computing devices like smartphones and tablets bring the online world to them while they work? It does happen, since diy.stackexchange.com is clearly an offline site but produces a lot of really high quality questions and answers about home improvement.\n\n\nWe’ve improved flagging dramatically on Stack Exchange over the last few months. You may have noticed a public flag weight value on some user profiles. Your flags now carry different weight depending on how accurate and helpful your flags have been in the past … and the more you successfully flag, the more daily flags you’ll get, in a sort of virtuous cycle.\n\nScott asks: why should I care about all these points and flags and badges and reputation systems on Stack Exchange? What’s the point of you guys building your own Dungeons and Dragons MMORPG system online?\n\nTune in to next week’s podcast when Joel will be “live” from London and our guest will be the infamous Jon Skeet!\nAlso, if you’re interested in helping us pick content for Stack Overflow Dev Days – check out Joel’s post on it.",
        "url": "https://stackoverflow.blog/2011/05/04/se-podcast-03/"
    },
    {
        "title": "A New Name for Stack Overflow (with surprise ending)",
        "content": "It’s been a while since we’ve done something arbitrary, complicated, and confusing, so today I’m happy to announce that the name of the company has been changed, effective immediately, to Stack Exchange Inc!\n\nThere’s a method behind this madness, of course: we want to emphasize the importance of the 45 sites in our network, which has long since stopped being about programmers:\n\nThat, plus, whenever we told The New York Times that we were “Stack Overflow,” they would go to stackoverflow.com and have a heart attack. At least this way people wondering about the company understand that we’re about more than just programmer questions. We have Battlestar Galactica too!\nNow the surprise ending. When we first raised venture capital way back in the long-ago year of 2010, we actually had quite a few great investors interested in buying our stock. And since then, the buzz hasn’t abated. We were pretty sure that given the current market conditions, we could easily raise a big pile of new Unicorn-bucks without losing control of the company.\n\nWe made a few phone calls, took a few meetings, I flew to London and Boston, and hey presto, we sold another $12 million worth of the company to some great investors.\nThe new investors are Index Ventures, based in Geneva and London, and Spark Capital, based up in Boston. Our first investor, Union Square Ventures, will also put in more money so as to keep the same ownership percentage that they had before (this is called a “pro-rata”).\nNeedless to say, the new investors will want to keep an eye on all that money, so Neil Rimer from Index will be joining the board of directors, and Bijan Sabet from Spark will be an observer on the board (he can come to meetings but he can’t vote). And to keep from tipping the board to the investors, the “common shareholders” (that is, the founders and employees) will be entitled to elect another representative of their own to the board. We picked Anil Dash, who has been blogging for even longer than I have and has been one of our most valuable advisors.\nNow, you may be wondering how we plan to spend all that money. First of all, of course, we need new stickers and T-shirts. And a ping pong table…\n\nWe’re also improving the employee snack room a little bit:\n\nIf you would like to receive your own totally free commemorative 1,000,000 Unicorn Buck Bill and a Stack Exchange sticker, send a self-addressed stamped envelope to:\nStack Exchange Inc.\n55 Broadway 26 FL\nNew York, NY 10006\nIf you live outside the United States, include about a dollar worth of whatever kind of weird thing it is that you use over there for money (no goats or Yap coins, please).",
        "url": "https://stackoverflow.blog/2011/03/09/a-new-name-for-stack-overflow-with-surprise-ending/"
    },
    {
        "title": "Careers 2.0 Launches",
        "content": "One day, you’ll be telling your grandchildren about getting a programming job, version 1.0. You would send a “resume” to a “recruiter.” It included all kinds of silly information required by the esoteric resume ritual (foreign languages spoken, whether or not you play ultimate Frisbee, Microsoft-veteran status). This so-called “information” was utterly useless at determining whether you could program or not, but if you spelled everything right and used suitable fonts, you could come in for a day of interviews at which you would be asked to perform mundane programming tasks on a whiteboard.\nOver here at Stack Overflow we feel a certain responsibility to make that process better for the millions of programmers who frequent our site. Our dev team in New York has been working day and night to rethink and rebuild our Careers section from the ground up, so today, we are excited to announce Careers 2.0. Here are some of the biggest changes we’ve made.\n1. It’s free (to job seekers)… but invite-only.\nWe used to charge job seekers $19 to post resumes. That was supposed to be a basic sanity filter, to make sure that everyone in our system was really looking for a job.\nYou didn’t like that, and we had to agree. There are better filters than money. Starting today, posting a profile on Careers 2.0 is 100% free, but you have to be invited.\nInvitations come from your peers. We’ll give members a few invites to distribute to programmers they know and trust. Or, contribute to Stack Overflow (and our other sites), get voted up by a lot of smart people, and you may get an automatic invite.\nBy the way, if you paid in the past: thank you! Your account is free for life. But if you don’t think it was worth it, just email us for a full refund.\n2. Profiles are much better\nOur goal is that a Stack Overflow Careers profile should be the ultimate programmer’s portfolio. We’ve redesigned it to look great, and we’ve given you a clean public URL you can use as your professional home on the web (Here’s what mine looks like). Most importantly, we now let you choose your favorite answers which will appear right in the portfolio. You can pick the answers which best demonstrate your expertise. (Here’s mine. Don’t forget to vote it up!)\n\n3. Support for passive candidates\nOur goal is to help awesome programmers find great jobs. However, we’ve found that:\n\nPeople don’t always want to signal that they’re looking for a job\nA lot of candidates don’t even realize that there are better opportunities out there\nCreating a complete profile is a lot of work\n\nSo, what we want is a way for people to be “passively” looking for a job—they’re willing to get an occasional offer from a company, even if they’re not actively looking for a job right now. And we want it to be frictionless, because if somebody is passively looking for a job then by definition they’re not going to do anything to seek it out.\nPassive candidate search lets employers search people’s public profiles based on tags and location. For example, they could search for “Python” and “San Francisco” and find a few dozen users who have “San Francisco” as their location and have answered questions in the Python tag. They can view their public profile information, including their top answers. Remember, we’re never revealing anything which isn’t already part of your public profile.\nIf they find a candidate they really like, the employer can request to contact them. We’ll notify that user in the Stack Exchange inbox that there’s an employer who is interested. That user can choose to receive the employer’s message, block that particular employer, or even block all employers. We’ll be watching this closely to see how it works and make sure it doesn’t become annoying or spammy, and we welcome your feedback on how best to serve passive candidates.\n4. Much better search\nFinally, we have completely revamped the way employers search. It’s much faster and cooler, and shows nifty statistics while you search, so, for example, when you say that you are looking for programmers in Chicago, you can instantly see charts breaking down the skills of Chicago programmers. Search for Ruby programmers, and you can see where they’re located on a map of the world.\n\nYou can test-drive the search interface for free, and see some sample profiles along with basic information about how many candidates match your search.  Of course, to see the full results you’ll need to subscribe.\nThe future of jobs\nIn the future, automatic robot recruiters will use mental telepathy and nuclear fusion technology to get people the perfect jobs. When that happens, rest assured that those robots will be wearing Stack Overflow insignia, but until then, Careers 2.0 is a big leap ahead.",
        "url": "https://stackoverflow.blog/2011/02/23/careers-2-0-launches/"
    },
    {
        "title": "PEER 1 Hosting – Making your data center more awesome!",
        "content": "In 2003, Fog Creek Software (aka Joel’s other baby) moved offices, and decided to ditch its internal T1 and look for a colocation provider. Joel was impressed with PEER 1 Hosting’s customer service, the shiny new data center in NYC, and PEER 1 Hosting even volunteered to host Joel on Software – for free!\nWhen we decided to move our Stack Exchange Network to the East Coast to better serve our global customers, PEER 1 Hosting was the logical choice because of the success that Fog Creek had. We began to migrate part of the data center in May of 2010, and finalized the move of all live sites from Oregon in October of 2010. After all the sites were set up at PEER 1 Hosting, we noticed some awesome results and thus we started a discussion with PEER 1 Hosting about how to extend the same benefits to the community.\nWe think it’s a win-win!\n\nAs an advantage of being part of the community you get an awesome data center at a discounted price – Win!\nThe more business Peer 1 Hosting does with people in the community, the more support they can provide to power Stack Exchange – Win!\n\nHere’s a look at our servers hosted at PEER 1 Hosting:",
        "url": "https://stackoverflow.blog/2011/03/08/peer1-hosting-exclusive/"
    },
    {
        "title": "Suggested Edits and Edit Review",
        "content": "The Stack Exchange engine draws inspiration from a number of sources.\n\nWe continue to be great admirers of Wikipedia, but we’ve always missed out on one crucial aspect of their system: we never allowed anonymous users to edit content. No, that required earning privileges through participation — specifically, the retag privilege at 500 reputation and the full editing privilege at  2000 reputation. \nWell, as of today, I’m proud to announce that we allow anonymous and new users to edit content in our system! The surface area of this change is huge — it means the millions of drive-by anonymous users that visit our sites every day can submit an improvement or correction. Furthermore, you can earn up to +1000 reputation for submitting valid edits. \nWe do currently limit anonymous edits to questions and answers more than 10 minutes old (and with some different caveats, wiki pages too). Millions of posts now have that ubiquitous edit link at the bottom. Click it, and you’ll be sent to the standard editing interface, albeit with a small disclaimer at the top.\n\nThere are a few additional requirements when submitting an edit suggestion:\n\n\nYou must enter a reasonable comment describing your edit.\n\nTo prevent noise and friction, your change must be more than 6 characters.\n\nAfter the edit is submitted, it goes into an edit suggestion queue of a fixed size. (If the queue is currently full, we temporarily stop accepting edits.) Users who have earned the editing privilege can now vote to accept — or reject — the suggested edit. There are two ways to view suggested edits:\n\nSuggested edits for a post are always visible on the post itself. If edits are pending on a particular post, the post’s edit menu will have a counter next to it.  \n\n\nClicking on the edit from a post will show it inline in a floating panel, so you aren’t interrupted.  \n\nIf you have 10,000 reputation, a counter will appear at the top of the page showing the size of the edit suggestion queue (if it’s greater than zero, of course). Clicking this counter will take you to a new /review tab that lists all suggested edits in the queue.  \n\n\nOnce you click on a suggested edit, you get a diff view that shows you the original post on the left, and the edited version on the right. All additions and deletions are highlighted. You can also toggle between HTML and Markdown views via the toolbar buttons on the left.\n\nFrom here, you can approve or reject the edit. When an edit is approved, the editor receives +2 reputation — up to a maximum of +1000 total per user. Contributing good edits is now a nice way to gain reputation and bootstrap less active users into full members of the community.\nTo keep this post a sane and readable size, I have glossed over a lot of the other rules that we have in place to handle edge conditions with edit suggestions. If you have further questions or want lots more detail, please read Sam’s meta post before leaving a comment here. \nSo, in summary:\n\n\nAnonymous, unregistered, and 1 reputation users may now submit suggested edits to most content on our sites.\n\n\nExperienced users with 2,000 reputation or more can review these edits and approve or reject them.\n\nWhen registered users’ edits are accepted, they earn +2 rep, up to a maximum of +1000.\n\nI’ve always wanted to extend some form of editing privileges on our site to everyone on the internet. I just apologize that it took us over two years to figure out how to do it!",
        "url": "https://stackoverflow.blog/2011/02/05/suggested-edits-and-edit-review/"
    },
    {
        "title": "Stack Overflow 2010 Analytics",
        "content": "As we approach the end of the year, I thought I’d roll up some statistics that people occasionally ask about.\nAs a baseline — per Quantcast, the Stack Exchange Network is ranked #364 in overall USA network traffic, and Stack Overflow itself is ranked #598.\nThese numbers are from Google Analytics for the period of January 1, 2010 to December 14, 2010.\nWhere in the world do Stack Overflow users come from?\n\n\n\nUnited States\n\n30.5%\n\n\n\nIndia\n\n8.6%\n\n\n\nUnited Kingdom\n\n7.2%\n\n\n\nGermany\n\n4.7%\n\n\n\nCanada\n\n4.1%\n\n\n\nFrance\n\n2.7%\n\n\n\nAustralia\n\n2.7%\n\n\n\nNetherlands\n\n2.0%\n\n\n\nItaly\n\n1.9%\n\n\n\nBrazil\n\n1.7%\n\n\n\nCompared to last year’s numbers, the trend here is basic globalization 101 — more and more traffic from outside the USA over time, where the US dropped from 36% to just 30% of the total in a single year. The top 10 countries only account for 66% of traffic overall, down from 71% last year. \nHow do Stack Overflow users find the site?\n\n\nGoogle (organic)\n\n87%\n\n\n\nDirect\n\n6.0%\n\n\n\nBing\n\n0.9%\n\n\n\nGoogle (referral)\n\n0.9%\n\n\n\nReddit\n\n0.6%\n\n\n\nNo, Google isn’t a monopoly, they just play one on the internet. Just kidding! please don’t hurt me mister googles\nWhat web browsers do Stack Overflow users use?\n\n\nFirefox\n\n44.1%\n\n\n\nInternet Explorer\n\n22.7%\n\n\n\nChrome\n\n22.6%\n\n\n\nSafari\n\n7.4%\n\n\n\nOpera\n\n2.4%\n\n\n\nMozilla\n\n0.5%\n\n\n\nNote that within Internet Explorer, the breakdown is 60% IE8, 26% IE7, and 13.5% IE6. The Firefox breakdown is primarily 3.5 and 3.6, with a smattering of older versions. Chrome is … all over the map, probably because by the time you read this, they’ve incremented the version again.\nThe big news here relative to last year is the huge jump for Chrome, mostly coming at the expense of IE and Firefox.\nWhat operating systems do Stack Overflow users use?\n\n\nWindows\n\n74.7%\n\n\n\nMac\n\n14.7%\n\n\n\nLinux\n\n9.5%\n\n\n\niPhone\n\n0.4%\n\n\n\nWe didn’t report these stats for last year, but I doubt they are terribly surprising to anyone.\nWhat screen resolutions do Stack Overflow users have?\n\n\n1280 x 1024\n\n18.6%\n\n\n\n1280 x 800\n\n14.0%\n\n\n\n1680 x 1050\n\n13.5%\n\n\n\n1440 x 900\n\n11.4%\n\n\n\n1024 x 768\n\n8.2%\n\n\n\n1920 x 1200\n\n8.1%\n\n\n\n1366 x 768\n\n4.3%\n\n\n\n1600 x 1200\n\n2.3%\n\n\n\n1600 x 900\n\n1.6%\n\n\n\n1152 x 864\n\n1.1%\n\n\n\nThis is very good news compared to last year! What I mainly look at here is the horizontal width. We design for a fixed minimum width of 1024 px and that stat declined from 12% to 8% over the last year.\nSo there you have it — a profile of the average 2010 Stack Overflow user, at least for these metrics! I think this covers most of the questions I see asked on meta about our analytics, but if there are any other metrics you think might be useful to share, make a case for them in the comments.",
        "url": "https://stackoverflow.blog/2010/12/15/stack-overflow-2010-analytics/"
    },
    {
        "title": "Stack Overflow + RHoK = Partners in Hacker Goodness",
        "content": "We were approached by the nice people at Random Hacks of Kindness (RHoK) to help them promote their worldwide event last weekend (December 3-5).  Since our audience on Stack Overflow and Server Fault seemed like a good fit with their inspiring mission, we agreed to toss some banner ad impressions their way. If you’re not familiar with RHoK, an RHoK event brings together the best and the brightest hackers from around the world, who volunteer their time to solve real-world problems presented by risk managers. RHoK’s founding partners include Google, Microsoft, Yahoo!, NASA and The World Bank. Prior Hack-a-Thons have developed numerous crisis management and prevention tools like 311-to-911, I am OK, and Carrot, among others.\n\nBy donating some of our house inventory (retailing at $7,000ish), we were able to promote RHoK’s event for 4 days, resulting in 1,402,258 banner impressions and 4,075 visitors to their website.  We’re thrilled with the results of this short campaign and hope to work with RHoK on future events.\nDid you take part in RHoK #2? If so, what did you think? Would you consider attending a future event? Let us know!",
        "url": "https://stackoverflow.blog/2010/12/07/stack-overflow-rhok-partners-in-hacker-goodness/"
    },
    {
        "title": "Stack Overflow Gives Back 2010",
        "content": "In 2009, Stack Overflow LLC had three employees, and three primary sites — Stack Overflow, Server Fault, and Super User. Plus our careers site at careers.stackoverflow.com\nIn 2010, we incorporated as Stack Overflow Internet Services with venture capital funding. We also grew to twenty-four employees, and 38 primary sites (of which, to be fair, 19 are currently beta). We also created our fantastic network hub at stackexchange.com and the democratic, community driven site creation process at Area 51.\nMy, how time flies when you’re having fun!\n\nBut the community is far bigger than us. Our fellow community moderators generously contribute their time, passion, and leadership to make their sites worth visiting and participating in. We now have over a hundred and thirty community moderators across 38 sites. Can you believe it?\nAs a small gesture of thanks, we offered to make a $100 donation to charity on behalf of each community moderator. I’m happy to report that through the generosity of our community moderators, the following donations were made this holiday season:\n\n\nUnicef — $3,200\n\n\nDoctors Without Borders — $4,400\n\n\nWikimedia Foundation — $2,600\n\nAmnesty International — $2,800\n\nOur community moderators give their own time to cultivate sharing knowledge within their expert communities — they make it possible for everyone to learn together. A worthy cause, and this $13,000 donation is provided in that very same spirit.\nI also wanted to give back to the tools, people, and projects that inspired us and helped us build our own network of websites. To that end, the following donations were made:\n\n\nW3C Consortium — $1,000\n\n\nWordPress Foundation — $1,000\n\n\nWikiMedia Foundation — $1,000\n\n\nCanonical — $1,000\n\n\nLinux Foundation — $1,000\n\n\nInternet Archive — $1,000\n\n\nCreative Commons — $1,000\n\n\nDotNetOpenAuth — $500\n\n\nOpenID Foundation — $1,000\n\n\nOpenSTV — $1,000\n\n\nNagios — $1,000\n\nElectronic Frontier Foundation — $1,000\n\nWe believe our mission as a company is to make the internet better, and we’re proud to support our fellow internet citizens who walk alongside us toward this goal.\nOf course, none of our sites could exist without you — the people who contributed to any Stack Exchange network site in the spirit of peers helping each other. We hope you learned something while you were there, or even better, taught us something we didn’t yet know.\nI have no idea what’s going to happen in 2011, but I look forward to the journey with all of you.",
        "url": "https://stackoverflow.blog/2010/12/25/stack-overflow-gives-back-2010/"
    },
    {
        "title": "Factionalism: Site or Tag?",
        "content": "Let’s say I told you we were going to create a programming website that merged all the C#, Java, Ruby, Python, and PHP programmers, so they could all ask their questions together — and simply tag those questions with the appropriate language. You’d probably get a response like this one:\n\nI disagree with merging. I think [Java] should be a niche site that will attract the relatively expert crowd that doesn’t usually care (or not as much) about other types of developer language questions. Yes, I’m talking specifically about myself, but also know about several others I know in the community who can speak for themselves if they wish.\nBy not merging it, we are giving a good one place to find answers only about [Java], with the ability to have a very engaged and focused expert crowd ready to answer, and benefiting from specialized “rank” in this specific field.\nIt might sound superficial, but I think we’re more likely to see the likes of [Java Expert #1] and [Java Expert #2] in a separate, unmerged [Java] site than in a broader developer site.\n\nBy this logic, Stack Overflow itself should not exist! We should have created a separate site just for the Java faction, and yet another for the PHP faction, and yet another for the C# faction …\nJust replace the word Java, above, with Developer Testing, and this is exactly the situation we’re facing right now.\nJoel and I are deeply opposed to letting the community split itself into factions in this way. We would rather have a few large sites on reasonably broad topics that use tags to differentiate subtopics, instead of two dozen tiny ultra-niche subsites that only a fraction of people interested in that broader topic will ever see.\n\nWhile the Stack Overflow community has historically come down quite hard — honestly a lot harder than either Joel or I originally intended — on the side of the non-subjective question, we believe that programmers.stackexchange.com site is the place where the more subjective “there’s no right answer, but let me share my professional experiences with you” questions can live and prosper.\nLet’s consider the sample questions from the Developer Testing site proposal, and where those questions might live.\n\n\nHow do I unit test threaded code? Non-subjective; already exists and has 70 upvotes under the [multithreading] and [unit-testing] tags\n\n\nHow do I mock a database? Non-subjective; already exists and has 7 upvotes under the [unit-testing] and [mocking] tags\n\n\nHow do I test private methods? Non-subjective; already exists and has 60 upvotes under the [unit-testing] tag.\n\n\nis it OK to have multiple asserts in a single unit test? Subjective; fits on programmers.stackexchange.com under the [unit-testing] tag\n\nHow to start unit testing for a large scale application with no unit testing support at all? Subjective; fits on programmers.stackexchange.com under the [unit-testing] tag\n\nImmediately we have a huge problem: every question in this proposal is a good fit on an existing site! Now compare that with, say, questions about gmail on Super User, or questions about search engine optimization on Stack Overflow — neither of which had a good home until webapps and webmasters were launched.\nIn other words, the whole point of launching new sites is to give interesting questions that currently have no place to go a decent home.\nI’m sensitive to the subjective versus non-subjective divide. There are entire classes of questions that are totally valid concerns for professional programmers which can no longer survive on Stack Overflow in practice. That’s why I supported the programmers.stackexchange.com proposal in the first place; good-but-subjective questions were being closed because they had no home. They needed a home. Now that programmers.stackexchange.com has been created … they have a home.\nNone of the example questions in the Developer Testing proposal lacks a home. Therefore, acquiescing to the factionalism demanded by some elements of the community and creating this site would by definition create a “duplicate” as defined by Area 51:\n\nduplicate\nThis proposal would tend to drain audience from another Stack Exchange site.\n\nIf you asked the Java factions and the C# factions if they needed separate sites, of course they would tell you that they absolutely must have their own sites. But the proof is in the pudding: the Java factions and the C# factions live side-by-side, right now, today, in Stack Overflow tags and learn a ton from each other. And so can the Developer Testing folks.\nSo my advice to you is this: join or die.",
        "url": "https://stackoverflow.blog/2010/09/28/factionalism-site-or-tag/"
    },
    {
        "title": "Stack Exchange on Herding Code",
        "content": "I was invited to participate again on the latest Herding Code podcast. \n\nThis is my second appearance on Herding Code — you may recall I was originally on the show way, way back in August 2008! Where the original podcast was about Stack Overflow, the site, this one is generally about Stack Exchange, the network.\nThe four hosts of the program — Jon Galloway, Kevin Dente, K. Scott Allen, and Scott Koon are old pals, though I think I had so much pent-up podcast monologue inside me that they didn’t have much of a chance to get a word in edgeways. Sorry guys. As usual, I blame Joel.\nTopics covered in the 84 minute podcast include the new sites we’re launching through Area 51, the Stack Exchange API, and many of the key social and technical issues we face in growing the network. \nThanks for having me on, and I hope the conversation is useful!\nListen to Herding Code Podcast #87",
        "url": "https://stackoverflow.blog/2010/07/09/stack-exchange-on-herding-code/"
    },
    {
        "title": "Guidelines for Use of our Logo and Name",
        "content": "Since the Stack Exchange API went into public beta, and we started our totally awesome API contest, we’ve run into a bit of self-inflicted confusion:\n\nHow can I use the Stack Overflow | Server Fault | Super User name and logo in my application?\n\nWhile we had a general “we know proper usage when we see it” idea about this, we didn’t have a document describing the specific do’s and don’ts. But now we do!\nGuidelines for the Use of the Stack Exchange Trademarks\n(also available by clicking the legal link in the footer of any network site page)\nWhile this is the most urgently needed info we didn’t have, we also took the opportunity to improve a few other legal documents for the brave new world of Stack Exchange 2.0:\n\n\nTerms of Service\n\n\nPrivacy Policy\n\nContent Policy\n\nWe tried our best to avoid legalese in these documents:\n\nLegalese is an English term first used in 1914 for legal writing that is designed to be difficult for laymen to read and understand, the implication being that this abstruseness is deliberate for excluding the legally untrained and to justify high fees. Legalese, as a term, has been adopted in other languages. Legalese is characterized by long sentences, many modifying clauses, complex vocabulary, high abstraction, and insensitivity to the layman’s need to understand the document’s gist. Legalese arises most commonly in legal drafting, yet appears in both types of legal analysis. Today, the Plain Language Movement in legal writing is progressing and experts are busy trying to demystify legalese.\n\nIf you’re unfamiliar, the legalese hall of shame is a great reminder of what we’re striving to avoid here.\n\nPlease review these documents and let us know if they are reasonably clear, and answer your main questions, particularly concerning usage of our logos, domains, and names in your own applications.\nWhile you can always comment here on the blog as usual, I opened a meta topic if you have any specific, actionable feedback you’d like us to follow up on.",
        "url": "https://stackoverflow.blog/2010/06/08/guidelines-for-use-of-our-logo-and-name/"
    },
    {
        "title": "Podcast #87",
        "content": "Joel and Jeff sit down with our new community coordinator, Robert Cartaino, to record a “bonus” podcast discussing the future of Stack Overflow and Stack Exchange 2.0.\n\n\nWe hired Robert Cartaino as a full time community coordinator to act as both city planner, sociologist, and programmer with deep technical background. He will be pivotal in helping us move toward the brave new world of Stack Exchange 2.0.\n\n\nRather than the old model of “pay us to use our software”, Stack Exchange is now free. We’re setting up a democratic process where the community itself will determine how and when create new communities. We liken it to Usenet 2.0.\n\n\nThe tension for us is that we want to offer a public service — a community commons that is owned, governed, and mostly operated by the community in a very transparent way — but like Craigslist, we are walking the line between behaving like a non-profit company while remaining a for-profit company.\n\n\nAs a thought experiment, we’d love it if that three years from now a new community is created in a language we don’t even understand which meets the same criteria we originally created Stack Overflow, Server Fault, and Super User under. That is, it’s a community you’d be proud to be associated with, and it fills the internet with useful, practical information. Our goal is to leave the internet better than we originally found it.\n\n\nThe new site creation tool is currently under development and should appear in about a month for public participation. Right now there are 74 (!) site proposals on meta.stackexchange.com for initial discussion.\n\n\nWe believe that removing money as a motivator actually frees people to participate simply because they love the topic, without being encumbered by the “don’t make me think” factor of “is it worth my time to even do this at all?” We want to bring together the intersection of those people who love a topic, and want to make the internet a tiny bit better, one post at a time.\n\n\nAs for ownership, there is a concept of site founders for those who commit to a site and follow through on that commitment, and interim moderators during the private and public beta will be chosen from the most motivated users. And of course all content generated will continue to be Creative Commons licensed and freely available to anyone who wants it.\n\n\nYou are by no means alone — we found that “build it and they will come” didn’t work well for Stack Exchange. Under the new system, the community itself, us, will seed and support your site, and we will actively promote it as neighbor in our existing site network. We want to centralize and group community rather than fragment it, which is what the old SE model tended to do.\n\n\nOne of our Big Hairy Audacious Goals is to achieve some form of mainstream awareness. This is something that Facebook and Twitter have achieved, but we don’t feel that Digg and Reddit have. It’s our hope that if we keep taking baby steps outside our core engineering / programmer safety zone that we’ll eventually get there.\n\nThere is a surprising amount of friction when trying to “move” an existing community to a new format. It’s almost more practical to set up another community that runs in parallel and those who are attracted to the new format can move, while the old guard can stay with the comfort of what they know.\n\nWe hope you enjoyed this “bonus” podcast. We’re still not sure when or if the next podcast will occur; keep an eye on blog.stackoverflow.com for the latest news.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2010/04/26/podcast-87/"
    },
    {
        "title": "Podcast #85",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss the pursuit of venture capital, why Joel is ending his blog, and the hidden power of Google’s web spider.\n\n\nWe were surprised that so many people who read Joel’s article about our venture capital experiment were unable to imagine any way we could put millions of dollars to use.\n\n\nIf you consider that our core mission is to kill software like vBulletin and phpBB, and you had millions of dollars, what would you do and how would you do it?\n\n\nWe were also a little disappointed that some people thought we would be willing to damage the community in some kind of quest to create a business. Hopefully we can be given a bit more credit than that — Joel and I may be dumb, but we’re not dumb enough to destroy the very thing we’re trying to create!\n\n\nChoosing a VC partner is like a marriage, and our philosophy is to only marry someone who has compatible views to our own.\n\n\nEven if we didn’t take VC, the process of talking to all these smart people who have accomplished so much in the industry was illuminating, and helped us synthesize and crystallize our own strategy for what we want to do with Stack Overflow — we’re excited about it, and we think you will be too once we can talk about it in more detail!\n\n\nI was away for a two week trip with my family to beautiful New Zealand, where I gave a talk at Webstock 2010 titled Stack Overflow: Building Social Software for the Anti-Social.\n\n\nI’m buying a new laptop from Dell, and giving away my old Dell laptop to a deserving meta.stackoverflow.com community member. Joel is a hard-core ThinkPad fan, but I believe what the world needs is more of an Ikea PC hardware experience. Dell’s design isn’t quite there yet but it has gotten better.\n\n\nJoel elaborates a bit on why he’s planning to quit blogging. There’s plenty of precedent for leaving while you’re still ahead, like Bill Watterson (of the comic strip “Calvin and Hobbes”) did. After 10 years of doing the same thing, you might want to evolve and do something different, too — but hopefully not vanish without a trace. I’m still trying to convince him not to quit podcasting.\n\n\nIt’s well known that 90% of our traffic comes from Google. But did you know that Google is about the only company with a competent spider, based on our logs? There are so many terrible spiders, even from large companies that really should know better. It’s a chicken and egg problem; Google’s spidering is so far ahead of every other search engine that I’m unclear how anyone could switch — the result pages simply wouldn’t be there!\n\n\nI have found the Howard Aiken quote “Don’t worry about people stealing an idea. If it’s original, you will have to ram it down their throats.” to be very true with regards to Q&A and Stack Overflow. The corollary to this is that if you don’t have to fight people to convince them your idea is good, your idea might not be so hot.\n\nEven very smart people have to be in the right place at the right time to be successful. The best success strategy is probably dogged, bullheaded persistence, because there are so many variables you can’t control or even predict.\n\nWe answered the following listener question:\nMichael from Cambridge: “What if Google, or another large company, decided to clone your product and give it away for free? What should a hypothetical startup do if this happens to them?”\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2010/03/13/podcast-85/"
    },
    {
        "title": "Podcast Future",
        "content": "Hey presto! Jeff gave me permission to publish here, so from now on, you’ll be seeing posts from both of us.\nThe first thing I want to talk about is plans for the podcast. I feel like the current podcast format needs to be freshened up a little bit. I think we’ve started repeating ourselves quite a bit. As a part of my retirement from blogging, I’m trying to stop personal public pontification, podcast or otherwise.\nAdd your ideas in the comments for what you’d like the new podcast to be like. Here are some of my thoughts to start you off:\n\n\nLess about programming and programmers, and more about the broader world of Stack Overflow, Server Fault, Super User, and Stack Exchange.\n\n\nEither Jeff starts laughing at my jokes, or else we get one of those radio morning zoo people like Robin Quivers who laughs at everything.\n\nMore interesting guests and people from the community; less monologues by me about why the earth is banana-shaped.\n\nAfter this week’s episode we’ll officially kill the current podcast and go quiet for a couple of weeks. We’ll launch the new format in early April when the StackOverflow team visits New York.",
        "url": "https://stackoverflow.blog/2010/03/14/podcast-future/"
    },
    {
        "title": "Podcast #86",
        "content": "Joel and Jeff sit down with Anton Geraschenko to discuss the unique qualities of a community of expert mathematicians, how to capture a sphere in a knot, and the importance of off-site backups.\n\n\nThe Stack Overflow team will be in NYC from April 2nd to the 9th for a planning session. Expect exciting announcements at the end of that period, including some that will affect the podcast. Maybe there will be a Stack Overflow morning zoo crew!\n\n\nThere will also be a Stack Overflow open house in NYC sometime that week, so if you’re in the area, please keep an eye on the blog!\n\n\nAnton founded Math Overflow, which runs on the Stack Overflow engine via Stack Exchange. Math Overflow might be the largest community of Math PhDs (and PhD candidates) on the internet. Anton, interestingly, is not a programmer so he was outside our initial audience.\n\n\nAnton attributes much of the initial success of Math Overflow to math bloggers, and most notably Secret Blogging Seminar. He also solicited emails from influential members of the math community and invited them to all participate at launch.\n\n\nInterestingly, Anton also cites the importance of a meta-discussion site to the overall success of a community. This is a conclusion we (well, I) had to be dragged to, kicking and screaming, before we finally created meta.stackoverflow.com. I suppose it is analogous to having a government of some kind before you can have a country.\n\n\nThe meaning of Joel’s oft-repeated phrase “no question is too easy” — which I would rephrase as “no question should be uninteresting” — has a whole different dimension on a site like Math Overflow which is intended for graduate level mathematics questions. Per Anton, you should probably ask “Does my community care about that?”\n\n\nWe wondered if any Math Overflow question, given the highly specialized audience, could be popular in the broader internet sense. Anton cites Is it possible to capture a sphere in a knot? as a possible example.\n\n\nMath Overflow did some community specific customization by incorporating jsMath markup in their posts. This has always been the vision, to provide tools that tailor the ‘wiki’ aspect of the Stack Overflow to the needs of particular expert communities. They plan to switch to the newer MathJax soon. And LaTeX is of course a long term standard in this area.\n\n\nI now appreciate the importance of off-site backups. It’s unlikely your datacenter will be hit by a meteor, but the odds of something going wrong with the air conditioning is much more likely. How likely? It happened to us! Remember kids, eat your Wheaties, and do your off-site backups! We’re also entertaining the idea of a read-only mode for the website for these rare conditions so we don’t have to tackle the very difficult problem of synchronizing data when you are running on a live backup.\n\n\nSince we haven’t launched the Stack Exchange site on Siberian husky puppies (yet), Joel asks for some listener input on what type of treats his new dog Taco would like.\n\nRemember, podcast will be on hiatus for a bit while we retool it — your suggestions are welcome in the interim, see you in about a month!\n\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2010/03/24/podcast-86/"
    },
    {
        "title": "Podcast #84",
        "content": "Joel sits down with the Stack Exchange team, who are working on the hosted version of Stack Overflow at the Fog Creek offices in New York City.\n\n\nMeet the Stack Exchange team — David Fullerton, Aaron Maenpaa, and Emmett Nicholas.\n\n\nFor Stack Exchange sites that have a smaller community, Stack Exchanges may email users more aggressively, to invite users to answer less trafficked SE questions. Joel proposes that weekly roll-up emails might work well on smaller Stack Exchange sites.\n\n\nStack Exchange is a hosted service; it’s currently running on 2.5 servers and soon a third.\n\n\nStack Exchange has an export feature, so all the data in your site can be dumped out to a file, similar to the way the monthly Stack Overflow cc-wiki data dumps work.\n\n\nJoel blogged about Stack Overflow looking for venture capital — that should not affect Stack Exchange. In any case, even if it did, you can use your own domain name which you take with you, and as mentioned above, you can export all your data. There should be competition, and smart competitors will support the Stack Overflow and Stack Exchange export formats.\n\n\nStack Exchange pricing is already at maximum, primarily to reduce demand to a level that the current SE team can support. It can only go down over time! It is definitely our goal to make it easier over time for everyone who wants a Stack Exchange site to have one. We’re exploring a lot of possibilities including ad subsidized; it’s also possible that larger corporate adoption of Stack Exchange may subsidize the smaller community sites as well.\n\n\nRight now every Stack Exchange site has its own IIS website (even though they all share the same app pool), but that turns out to be not a great performance model for lots of small sites.\n\n\nOne of the Catch-22s of a Stack Exchange site is that fundamental actions like voting up and creating tags require reputation, but nobody has any reputation on a new site. The Stack Exchange team added a “bootstrap mode” which relaxes a lot of these requirements so you can get your site up and running.\n\n\nDavid notes that a smooth admin / owner setup process is essential to the Stack Exchange service model. You also can’t have a ghost town — you need some questions bootstrapped into the system before you even show it to the broader public. This is analogous to the private invitation-only betas we did for Stack Overflow, Super User, and Server Fault.\n\nIf you’d like to provide additional feedback to the Stack Exchange team, we encourage you to visit Meta Stack Exchange and help us dogfood our own system.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2010/02/20/podcast-84/"
    },
    {
        "title": "Podcast #82",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff sit down with Mac developer Daniel Jalkut of Red Sweater Software to discuss his experience as a longtime Mac developer and small Mac software business owner, and the possible impact of the iPad.\n\nDaniel launched Red Sweater software way back in 1999 (and has been an active Mac developer since 1995), but it didn’t become his primary business until 2005-ish. The big apps in his stable are MarsEdit, blog composing software, and Black Ink, a crossword app. There has been no iPhone version of these OSX apps to date because it wasn’t a good fit, but the iPad is going to be a nearly perfect fit.\nIn Daniel’s experience, the primary change in Apple’s software developer support story over the last 15 years is that Apple has become much more pragmatic in adopting developer tools from the UNIX and open source world. Remember when Apple had its own Unix, a/ux?\nApple has a whole new alternative to gcc, the clang compiler.\nThe Macmillan-Amazon Kindle incident highlighted how Apple entering the eBook market with the iPad and iBooks is actually disruptive in a good way, that benefits both readers and writers.\nJoel agrees that the iPad will probably kill the Kindle hardware. We think e ink is kind of overrated. It’s not clear how much this matters to Amazon. It is bizarre that the Kindle app will be allowed to run on the iPad as a competing “app store” next to iBooks.\nI’m a little perplexed about the existence of iWork for the iPad, since it highlights the main weakness of the iPad — while touch is great, the inclusion of keyboard support is odd, and I’m not sure how well it’s going to scale to large screens and I think it’s a weak replacement for the mouse paradigm.\nJoel and I think Steve Jobs never really believed that computers made sense as general purpose devices. Computers should always have been appliances, and the iPhone and iPad are manifestations of that.\nSteven Frank likens the iPad to the new world of computing, a bespoke from the ground up reconception of how computers should work, compared to the classic OSX, Linux, Windows desktop old world.\nIs lack of support for Adobe’s Flash on the iPad the equivalent of dropping the floppy drive from early iMac models? I’d say the floppy drive was already pretty useless by the time Apple dropped it, whereas Flash is still kind of useful in a lot of circumstances, as John Nack notes. Particularly on a large screen device billed as delivering a no-compromises web experience.\nIf Apple choosing to make a political statement about dropping Flash (on the iPhone and now iPad) results in websites built with better Flash fallbacks than an empty box on a web page, that is a good thing. It’s just hard for me, personally, to accept that Apple is doing this out of the goodness of their own heart, rather than as a nakedly capitalistic way to protect the income stream from the App Store.\nIt has been pointed out to me that Stack Overflow is powered by bored programmers, so it is in our best interest for programmers to be bored at work.\nJoel says that being bored says a lot more about a person’s state of mind rather than whether the environment is actually boring. If you’re bored while programming, “you are doing it wrong.”\nThere are several dimensions to improving questions on any site on the trilogy; primary among those is editing (at 2k rep), and there always is voting to close (at 3k rep), flagging for moderator attention (at 15 rep). And meta-discussion about questions is always welcome on meta.stackoverflow.com.\nCommunity moderation is an important part of our sites, and we’re currently conducting an election to determine the next Stack Overflow moderator. You do need 200 reputation to have the right to vote, though.\nFor more great Mac dev discussion, check out Daniel’s podcast with Manton Reece, Core Intuition.\n\nWe answered the following listener question on this podcast:\n\nJeffrey “How do you deal with programmers who are intellectually bored at work?”\nPhil “I spend a fair amount of time on Server Fault, but I’ve seen a lot of new users not providing enough information for us to help them. As a result the signal to noise ratio has dropped. What can be done to improve this?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2010/02/05/podcast-82/"
    },
    {
        "title": "Podcast #83",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss the promise and peril of Email (both social and technical), Google Buzz, and the value of training material.\n\n\nI will be at Webstock 2010 and in New Zealand for the next two weeks. I was excited to learn that the singer Wing is from New Zealand. Hear Wing in action. Don’t say I didn’t warn you. OK, maybe I didn’t warn you.\n\n\nI encouraged Joel to have the Stack Exchange team on for a podcast while I am gone for two weeks. There’s a lot of interesting re-engineering of the Stack Overflow engine necessary to support lots of small and medium sites on our engine. If you have questions from the Stack Exchange team, please contribute them to this Meta Stack Exchange thread.\n\n\nI am not a fan of email, to put it mildly, as I wrote in Is Email = Efail and Email: The Variable Reinforcement Machine. Given my discomfort with email, I struggle with the role of email on Stack Overflow — mostly trying to keep it at arms’ length while using it appropriately.\n\n\nI agree with Joel’s position here, which is that aggressive email notifications are toxic to the growth of a community. That’s why our email notifications are somewhat.. slow. It’s intentional.\n\n\nJoel describes Jason Calacanis’ cessation of blogging in favor of a private invitation only email list. He claims that it’s a way of reaching people outside the normal domain of blogging. There are certain folks who just don’t read blogs. Joel feels he has totally and utterly saturated the narrow world of programmers who read blogs, so it’s worth experimenting with different distribution mechanisms and perhaps reach different audiences.\n\n\nThe root of the email problem is that it’s the kitchen sink one-size-fits-all communication medium, when in reality, there should be communication escalation (or de-escalation) to fit what you’re trying to communicate. Tailor your choice of communication medium to the particular message you are delivering!\n\n\nIs email for old people? I do think younger people are correctly intuiting that there are more efficient mechanisms for online communication. As Joel notes, email is really the only canonical form of online communication that everyone is guaranteed to have. You may not have a Twitter or Facebook or Friendster account, but surely you have an email address. Everyone does!\n\n\nI am highly skeptical of the new Google Buzz because it is built on email. You just can’t build a stable structure on top of a broken system, in my humble opinion of course.\n\n\nThe act of sending mail is also incredibly complicated because spammers have abused the infrastructure for a decade. There are a few immune responses that are still effective, such as DKIM and Reverse PTR records. SenderID is another method, also based on DNS records, but it’s less well regarded. If you’re going to send email and you want it to arrive, you need to implement all this stuff!\n\nJoel has documented a lot of the process at Fog Creek in a series of training videos and a book, titled Make Better Software. Compared to most companies, Fog Creek is quite transparent in this regard, and I might even say they evangelize for better programmer working conditions.\n\nOur featured questions this week are:\n\nServer Fault: What’s your recommended server room kit? A nice description of the key items any well provisioned server room ought to have.\n\nWe answered the following listener question on this podcast:\n\nPierre “Good programming training material is expensive. How can students obtain good training materials?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.\nupdate: my 2010 webstock talk is now online.",
        "url": "https://stackoverflow.blog/2010/02/11/podcast-83/"
    },
    {
        "title": "Podcast #81",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss the value of Deep Blue, the Five Whys process, and whether programmers should blog.\n\n\nIf you work at a fancy company like Fog Creek, you’ll have access to a Latte machine, and you too can create Latte art!\n\n\nCheckers is now a solved problem. Chess is almost solved, in that no human player can beat the best software chess engines. In other news, Joel solved tic-tac-toe.\n\n\nDeep Blue was amazing technology for its time, but what was the value in IBM doing this, and pitching it as the epic man vs. computer chess battle? What other companies could pursue cool, useful computer science spectacles like this?\n\n\na followup to our GitHub conversation last week, clarifying some things we didn’t quite get right in our previous conversation.\n\n\nJoel notes that a random programmer at JFK approached him and told him how much Stack Overflow Careers helped him. We have a number of success stories that have arrived via email, twitter, and in person. Incidentally both Stack Overflow and Fog Creek are hiring, and guess where we look first for candidates?\n\n\nAs we partially covered in Podcast #64, it’s difficult to find good testers, because it’s a related yet different skill from programming.\n\n\nA discussion of Joel’s article Five Whys — we seemed to have the same problem of failed network autonegotiation, but we discovered at least one more Why. Per our Server Fault question on ethernet autonegotiation sysadmins seem to agree that “problems” with gigabit ethernet autonegotiate, at least, are almost always symptomatic of deeper root problems.\n\n\nWhen setting up a portfolio of your programming work, what you want to do is stand out among the crowd. What are the shiny beacons you can put in that would get employers excited? Don’t get too detailed too fast, so feel free to use pictures and diagrams — there’s always room for details later.\n\n\nWe don’t like take home programming tests, but is it useful to document the process of how you research and solve a problem? Joel maintains the real win is to over-solve the problem to show what a hard worker you are.\n\n\nSome tips from Joel and Jeff about why and how (or if) programmers should blog. Set a schedule and stick to it. And don’t be a commodity blogger! It helps to focus on the storytelling aspect of the writing, per Ira Glass. And remember, writing a better article on any topic is usually pretty easy, because so much of the content on the internet is so darn bad.\n\nPlease submit your audio questions to the podcast — we have brand new Stack Overflow t-shirts and the best question next week will get one!\n\nWe answered the following listener questions on this podcast:\n\n\nAlison: “I work closely with hardware and firmware, and I have trouble figuring out how to show off my work to my prospective employers. How do I build a portfolio?”\n\nJohn: “I recently started a programming blog at simpleprogrammer.com. How important is it for a programmer to have a blog, and why?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2010/02/01/podcast-81/"
    },
    {
        "title": "Podcast #79",
        "content": "In this episode of the podcast, Joel and Jeff discuss open sourcing Markdown, the necessity of barriers on the open internet, and the importance of design in the software process.\n\nWe highlight three interesting Stack Exchange sites: Climate Deal (environmental climate change issues), ASCOM Answers (astronomy tech), and Math Overflow (professional mathematicians).\nThanks to Anton Geraschenko (the operator of Math Overflow, who I erroneously, embarrassingly, and repeatedly refer to as “Jacob” in this podcast — my apologies) for his help with improving our client side Markdown implementation. We also have a server side implementation of Markdown, which is now open sourced at Google Code.\nThe original Markdown implementation was in Perl. As a result, there is an unfortunate tradition in the community of writing Markdown parsers using a slew of regular expressions. This leads to some rather dense and complicated code with a lot of hairy edge conditions. Like most Perl, it worked well for the 95% case but that last 5% is extraordinarily difficult to achieve.\nJoel argues that if the community had started out writing a proper Markdown parser using standard tools like Yacc, Bison, Lex would have produced much simpler, easier to maintain code. I tend to agree that this is kind of a textbook example of where “the right way” would have perhaps been easier in the long run than the quick and dirty hack.\nTake a look at the core HTML block parser in the much better maintained PHP implementation. It is three full screens .. of a single regular expression. This is the most complex regular expression I’ve ever seen that was not a joke of some kind, and it’s the core of the PHP Markdown implementation. Compiling this enormous regex in .NET causes my super-fast machine to freeze for several seconds.\nRunning an open source project has reminded me of Derek Sivers classic article — Nobody’s going to help you. Does that encourage you or discourage you? You have to be more dedicated to your open source project than anyone else in the world. Your dedication will inspire others to follow.\nUnfortunately, blessing something as open source does not magically synthesize leadership. This is why I was a bit critical of John Gruber’s handling of Markdown, as I felt the lack of action was starting to harm Markdown. Regardless, we donated to Markdown along with all the other parts of our development stack that we rely on. We hope to make these donations a yearly tradition.\nThe idea that you should have no barrier to participation on the open internet isn’t just a myth, it’s a dangerous and destructive myth. We believe you need a barrier to keep those people who aren’t serious out. For example, Wikipedia intentionally does this. We aren’t talking about a concrete wall lined with razor wire, but a toddler sized barrier to keep the most bored and uninteresting users (or, if you prefer, “the majority of the internet”) away.\nJoel explains why he no longer believes in outsourcing design; they are hiring a designer to work at Fog Creek full time. We compare the differences in the hiring process for designers versus programmers.\nOur philosophy of design on Stack Overflow is to try to do as little as possible, but make those few things polished as we can. While there’s always room for improvement, and we love whitespace and minimalism, there is an issue of information density that is totally intentional — particularly on the homepage.\nItem number 11 of the Joel Test ensures that you work for a company where they ask candidates to write code during the interview. The essential part here is not the production of the code, per se, but observation of the work actually happening. You need to know how the sausage is produced.\nThere is a website that conducts programming tests on the internet for you at Codility, but we’re skeptical this can actually work without the one-on-one human element of observation.\n\nWe answered two listener questions:\n\nEvan: “why do you feel it is necessary to charge programmers to list CVs? Won’t this prevent the service from reaching critical mass?”\n“Part of the Joel Test is writing code during the interview. How do you feel about companies who ask programmers to submit code samples or take home programming assignments?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2010/01/10/podcast-79/"
    },
    {
        "title": "Podcast #80",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss GitHub, the value of formal code documentation, and how to decide what features belong in the next version of your software.\n\n\nWe’ve had some difficulty adapting to GitHub, where the reverse engineering of the Javascript Markdown (WMD) editor was performed. It regularly confuses everyone that encounters it, and that’s frustrating from a support perspective.\n\n\nFor example, why does the MangOS project on GitHub have 854 branches? How is that useful to anyone? The project network is so complex it can’t even be rendered! What I specifically object to is that all pulls show up in the timeline as forks; I’d like to see an ability to nominate your pull timeline as either private or “not intended for merging” so it won’t show up in the main network.\n\n\nJoel is writing a series of articles about distributed version control in Mercurial — I’m hoping they will clear up some of my confusion about GitHub. I personally find Google Code much easier to work with.\n\n\nAs part of MarkdownSharp, our open source C# Markdown implementation, I’ve experimented a bit with turning a regex into a state machine — and I was a bit shocked how many lines of code it takes to “unroll” a regex. Is it really easier to troubleshoot 25 individual lines of state machine code (all with potential bugs) or 3 single line regular expressions?\n\n\nStack Overflow user William Shields has taken up Joel’s challenge to write a Markdown parser the right way — and produced an excellent series of articles about what he’s learned in the process: one, two, three, four. It’s a perfect example of the type of learning that Stack Overflow itself is all about; kudos to William for sharing it!\n\n\nJoel and I have mixed feelings about documenting a large code base. Rather than wasting time generating reams of documentation that may never be read, and will rapidly get out of date — we offer some alternatives. Come up with a unit test suite that lives symbiotically with the code, or spend time documenting the key, central data structures instead of the code. Also, have the new hire guys and gals who encounter the code be in charge of keeping the “how do I get started with this stuff?” bootstrapping information up to date.\n\n\nJoel says the least amount of work you need to do to capture how many hours are spent on programming tasks, is to make each source code checkin assume that all time since the previous checkin was spent on whatever the current task is. This is “good enough” in his experience and produces solid, useful future estimates.\n\n\nAt Fog Creek, to determine what features make the cut for the next version of the software they get developers, customer representatives, and the sales team together and do T-Shirt size estimation (S through XXL) of development time for the desired features. Then everyone in the meeting has a dollar to spend on their favorite features. Then, just fit the winners into the allotted schedule.\n\nStack Overflow is a community driven site, so many (but not all) of the new features come from top voted Meta Stack Overflow requests. We try to avoid devolving into design by committee by heavily weighting feature requests that match our vision for the site. Most feedback is not terribly useful — but if you’re willing to spend the time it takes to filter out the bottom 90% of feedback, you may be pleasantly surprised by the cool ideas the community can come up with.\n\nWe answered the following listener questions on this podcast:\n\n\nDave: “I work at a large company with an enormous code base in many different languages. As a new guy trying to find my way around, I get frustrated by the lack of documentation. How much documentation is appropriate?”\n\n\n“We had a new year’s resolution to capture an accurate work log of hours worked, but we’ve already relapsed. How do the Fog Creek developers manage to do this?”\n\nChap: “How do you prioritize features and functionality for your products, and how do you decide what to spend time on and what’s worth doing?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2010/01/21/podcast-80/"
    },
    {
        "title": "Podcast #78",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff sit down with Paul, David, and Matthew — the creators of Litmus and DocType — to discuss ASCII vs. pixels, the power of Amazon EC2, and the unglamorous but critically important topic of backup.\n\n\nThe fine folks at Litmus created DocType partly as a homage to the Stack Overflow engine. We were so impressed we invited them into our League of Web Justice. You can view DocType as the intersection of what Litmus does (screenshots of browsers and email clients rendering HTML) and what Stack Overflow does (Q&A).\n\n\nWhere the Stack Overflow Trilogy is about programmers, sysadmins, and power users exercising ASCII text, DocType and Litmus is about designers exercising pixels. It’s not an audience we can satisfy particularly well, which is why we were happy to partner up. It’s all about getting good, effective answers to your questions, regardless of which site provides those answers.\n\n\nA bit on the technical underpinnings of Litmus. This app has to generate screenshots from a ton of different email clients and a ton of different browsers, for both Macs and PCs. The PC side is served by Amazon Elastic Compute Cloud instances, which was an incredible boon for this type of work. They actually scale up to 400 EC2 instances at peak load times.\n\n\nThe original version of Litmus was built using nothing but scripting on a single machine, but was enough to get customers. They were effectively running on a prototype; the entire app has been rearchitected several times since then.\n\n\nDocType is built mostly in Ruby on Rails, and Litmus is a combination of C# and Ruby on Rails. In that sense, they also reflect the platform agnostic spirit of Stack Overflow.   \n\n\nA brief discussion of the state of the DocType community. One point of integration between the two sites is that people having difficulty solving layouts problems via the screenshot service in Litmus are encouraged to ask for help on DocType.\n\n\nJoel points out that one way to get a critical mass of core users is to get some kind of sponsorship or mention by people who have large audiences. For example, if you’re starting a music site, try to get Derek Sivers to mention you or, better yet, become the godfather of your site. Anyway, always have the goal of making something that is useful to somebody — and start with yourself.\n\n\nWe are a little tired of the backup topic at this point, but maybe it’s a good thing to remind people that every day is International Backup Awareness Day, and it never hurts to revisit your own backup practices, as we did with our Stack Overflow backup policies.\n\n\nRAID is not a backup, but I sure do wish the server which experienced the hard drive failure had some kind of basic mirroring in place to protect against exactly this kind of routine, mundane drive failure. The moving parts are what tend to fail, which is why all our Stack Overflow servers use RAID.\n\nJoel elaborates a bit on the importance of focusing on recovery versus backup. There are a lot of ways a valid “backup” can go horribly wrong, and you will never know any of that until you actively restore a backup.  \n\nOur featured questions this week are:\n\n\nDocType: How does Doctype generate the screenshots they use on the site? A nice description of the ImageMagick commands used to generate the nifty little DocType screenshot thumbnails.\n\nSuperUser: Recovering a lost website with no backup? The short vc”go back in time and do proper backups.” The long version is, “How patient are you?”\n\nWe answered the following listener question on this podcast:\n\nTravis from Wisconsin: “I have a music based Stack Exchange site called keyminor.com. I have a ton of questions I plan to seed the site with, and I have a bunch of users I plan to approach for assistance. What’s the best elevator pitch for getting people to understand and check out a Stack Exchange site?”  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/12/24/podcast-78/"
    },
    {
        "title": "Podcast #77",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss how to (accidentally) destroy your software business, Google’s new DNS and page speed rankings, and why the most productive employees aren’t paid 10 times as much.\n\n\nJust as a disaster planning exercise, what kind of things could happen that would destroy your software business? Your website?  \n\n\nJoel proposes doing test failovers for live customers. He says the important metric isn’t measuring how long you are down, but how fast you can recover from being down.\n\n\nHow much down time per month is acceptable for a service? What’s your agreement with your customers? Does a free service even have “customers”?\n\n\nIf catastrophic failure doesn’t get you, what about the more pernicious and subtle problem of users losing interest in your site, such as what is currently happening to MySpace?\n\n\nOne software development parallel to Joel’s position on recovering from datacenter failure — how quickly you can iterate and fix your software product is probably more important than having perfect releases.\n\n\nGoogle may start prioritizing sites in search results by page load time. This makes total sense to me, as I am willing to forgive a lot if a site loads quickly. The quicker it loads, the quicker I can determine if the site’s content is what I was looking for or not.\n\n\nSpeaking of Google, they introduced a public DNS service which is optimized for speed. Joel theorizes this is to replace broken ISP DNS services. It’s ad-free, which is an odd juxtaposition to the free, ad-subsidized OpenDNS service it will inevitably compete with. DNS speed is definitely important; we outsourced our own authoritative DNS servers as discussed in Podcast #68.\n\n\nWhat would the world we be like if employees who are 10 times more productive than their coworkers were paid 10 times as much? We’re not sure, but I predict the rapid end of that company and possibly civilization as we know it. It’s an interesting thought experiment.\n\n\nJoel says all developers should know C. I’ll counter by saying it’s far more important that all developers know the fundamentals of databases than how to write a working pointer based string copy algorithm.\n\n\nIn our experience, one of the easiest ways to ensure failure on a software development project is to micromanage, get in their way, and put barriers in front of them. For best results, give the team everything they need, along with a strong vision statement, get out of their way and let them own it.  \n\n\nIt seems that every programming language has some kind of evolutionary dead end in it — language features that, while part of the core spec, almost every programmer working in that language will actively discourage you from using. Some of this comes down to issues of programming style that you should agree on as a team, but some of it evolves into generally accepted lore for that language.  \n\nJoel is offering a free Fog Creek t-shirt of your choice for the best question asked next week — so get those (audio only, please!) questions called or mailed in! And leave us a way to reach you.\n\nOur favorite Stack Overflow question this week:\nHave you ever restricted yourself to using a subset of language features? This is the question C++ was born to answer.\nWe answered the following listener questions on this podcast:\n\n\nKelly French: “If it’s true that some programmers are 10 times better than other, why don’t companies pay 10 times as much for these star programmers?”\n\nBrad: “What is your opinion on developers creating databases? What if you work at a company where only ‘Data Architects’ can create databases, and programmers aren’t considered competent to create a database?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/12/17/podcast-77/"
    },
    {
        "title": "Stack Overflow Rack Glamour Shots",
        "content": "We installed our secondary (backup) database server tonight. Geoff took the opportunity to snap a few glamour shots of the Stack Overflow server rack at our host PEAK Internet.\nI present them here for your unbridled enjoyment and pleasure:\n\n\nupdate: Based on feedback from this post, we went back and improved our rack hygiene:\n\nThese are primarily Lenovo RS110 and Lenovo RD120 servers, with a few other rackable items in the mix:\n\n1U web servers (5)  \n\n2.83 Ghz quad core, 8 GB RAM, 2 drive RAID 1\n\nPrimary 2U database server  \n\n3.33 Ghz quad core x 2, 48 GB RAM, 6 drive RAID 10\n\nBackup 2U database server  \n\n2.5 Ghz quad core x 2, 24 GB RAM, 6 drive RAID 10\n\nQNAP TS-409U network attached storage device  \n\n500 Mhz CPU, embedded Linux, hot-plug 4 drive RAID 6\n\nNetgear GS108T smart switch (2)  \n\n8 ports, gigabit, managed SNMP, web interface\n\nNetgear GS724Tv3 ProSafe switch  \n\n24 ports, gigabit, managed SNMP, web interface\n\nTripp-Lite RS-1215-20 12 outlet power strip  \n\nseriously? it’s a friggin’ power strip. Oh fine.\nNote that the primary database server is shared across all sites; only two of the web tier servers currently serve Stack Overflow. We have quite a bit of extra capacity in the rack.\nIf you’d like to see more, you dirty hardware perv, you can peruse a more detailed breakdown of the internals of the servers in Stack Overflow Server Glamour Shots.",
        "url": "https://stackoverflow.blog/2009/12/14/stack-overflow-rack-glamour-shots/"
    },
    {
        "title": "Podcast #75",
        "content": "Joel and Jeff sit down with sysadmin extraordinaire Tom Limoncelli of Everything Sysadmin to discuss IPV6, dumb things for System Administrators to check, and the sysadmin community as reflected in Server Fault.\n\n\nTom has written some classic sysadmin books such as Time Management for System Administrators, The Practice of System and Network Administration.\n\n\nA brief discussion of the April Fool’s RFCs, which go back every year to 1989 per wikipedia. There are even some outliers in the seventies, starting with ARPAWOCKY. These aren’t just humor, but artifacts of computing history.\n\n\nTom shares his thoughts on the IPV6 transition — where we are, how much progress we’ve made, and some of the practical rationales for going to IPV6. What problem does IPV6 solve for us today?\n\n\nI’ve often wondered: is the last address space transition we’ll see in our lifetime the one from 32-bit to 64-bit? Are 128-bit address spaces necessary for system memory? I press Tom on this topic. He notes that the IPV6 committee was originally going to pick a 64-bit address space, but doubled it to 128-bit.\n\n\nWe examine Tom’s hilarious and excellent list of dumb things to check. I guarantee that parts of this list will seem eerily familiar to you.\n\n\nWe attempt to enlist Tom’s help in measuring the boundaries of Server Fault. This is challenging, because the sysadmin world encompasses security, networking, databases, websites, hardware, and general operations and support.\n\n\nWe had great difficulty pinning down the sysadmin community, in contrast with the programming community. Tom is as close as we’ve ever come to the “Joel Spolsky” of the sysadmin world. Tom points out that there is some natural overlap between programmers and system administrators, mostly in the area of release management. Beyond that, there are groups like LOPSA, NPANET, and SAGE.\n\n\nTom notes that if you have a small site that can be served by one box, any stack will do. If you have a medium site that needs hundreds of requests per second, go with what your team knows best. But beyond that, once you get the hundreds of thousands of queries per second, everyone builds a custom solution. You do want to think seriously about optimizing for the decreasing price of commodity hardware, however.  \n\n\nSomehow I hadn’t seen the classic sysadmin comedy routine The Website is Down yet until Tom mentioned it. There’s a series of videos at the eponymously named website.\n\nIf you fancy yourself a Google-scale computing endeavor, or if you are simply interested in the ultimate sysadmin fantasy, definitely read Google’s Guide to Warehouse-Scale Computing.\n\nWe answered the following listener question:\n\nThomas Arnold: “How feasible is it to host a new web application using the Microsoft stack, considering scalability, performance, and cost versus the open source alternatives.”  \n\nOur favorite questions this week — from Server Fault naturally!\n\n\nSysadmin Professional Groups and Associations. An excellent resource.\n\nThe Data Center tag is awfully good reading for anyone who has a server room.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/11/24/podcast-75/"
    },
    {
        "title": "Podcast #74",
        "content": "Joel and Jeff sit down with Kathy Sierra and Bert Bates backstage at the Business of Software 2009 conference.\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879. \nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/11/19/podcast-74/"
    },
    {
        "title": "Podcast #73",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss the meaning of “professionalism” online, the divide between ad-subsidized and pay business models, and the five things everyone should hate about their favorite programming language.\n\n\nA brief mini post-mortem of DevDays. What makes a good conference? What makes a worthwhile event for software developers?\n\n\nSpeaking of conferences, Joel and I will both be at the Business of Software conference next week in San Francisco.\n\n\nA discussion of Robert Scoble’s article on the chat room / forum problem. Some of this stuff is counter-intuitive: you don’t actually want to be too welcoming to newbies, and you don’t actually want too much pure discussion. As Robert said, “the more conversations I got involved in the less I found I was learning.”\n\n\nI object a little bit to people proposing social design patterns to me that are historically demonstrated not to work — or, worse, are known to be toxic. Essentially, they offer opinions without any research or even knowledge of prior research in the field.\n\n\nWe examine Joel’s latest Inc article, Does Slow Growth Equal Slow Death?. 37 Signals responded in their blog. \n\n\nJoel and I both tried to explain our careers strategy. I think Joel’s post on careers.stackoverflow.com was clearer than my post on careers.stackoverflow.com, in that I had to post an update to mine because I failed to explain it adequately — at least based on the reader comments.\n\n\nTo the extent that careers is focusing people on “how can I be more professional online?” we heartily encourage this side-effect. Why wouldn’t you behave professionally online all the time, anyway? It is possible to have fun while being professional at the same time.\n\n\nWe posted the results of our Amazon advertising experiment. It looks like software developers are a worst-case scenario for some types of advertising. Unfortunately.  \n\n\nYou can use free to undermine your competitors, but Google is going them one better — they are paying companies to use their products. It’s “less than free”. Google’s strategy is to get as many people online as possible, since more people online equals more ad clicks, statistically speaking.\n\n\nThere’s an interesting tension between the “charge for stuff” (Microsoft) and “give people ad-subsidized stuff for free” (Google) models. Having been on both sides of this now, there are definite pros and cons to both.\n\n\nJoel and I concur: it probably doesn’t matter what language and toolchain you use, as long as it has a certain level of critical mass. What you should be more concerned about is the product you’re creating.\n\n\nIf you’re happy with your current tool chain, then there’s no reason you need to switch. However, if you can’t list five things you hate about your favorite programming language, then I argue you don’t know it well enough yet to judge. It’s good to be aware of the alternatives, and have a healthy critical eye for whatever it is you’re using.\n\nMost programming languages don’t evolve particularly well over time. They’re usually replaced by other languages rather than new iterations of themselves. Why? What languages would you point to as the best example of growing and evolving in useful, relevant ways?  \n\nWe answered the following listener questions on this podcast:\n\n\nEdward: “What fun technologies are coming up that you think employers are willing to spend money on?”  \n\nColin: “If I’m happy with PHP, why would I want to convert to ASP.NET?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/11/07/podcast-73/"
    },
    {
        "title": "Podcast #76",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss the Stack Overflow Careers philosophy, online community growth patterns, and how to tell if you’re Sid Meier or not.\n\n\nStack Overflow Careers is now fully open for business! Joel explains what it’s all about, the proverbial programmer search engine.   \n\n\nOne thing we have resisted is employer demand for a sort order of CVs by Stack Overflow reputation scores. This is sort of like colleges sorting incoming applications by SAT or ACT scores. We have a brief discussion about how the college admissions process relates (or doesn’t) to job “admissions”.\n\n\nJoel shares his tips on what makes a CV / resume look good to him. And remember, Joel wrote the book on this stuff! So in theory, at least, he knows what he’s talking about! Fog Creek does a lot of hiring every year.\n\n\nNow that we have a so-called “Careers” site on Stack Overflow, any perceived crossover between your professional life and online life is 100% intentional and by design — as correctly noted by the Cerebral Mastication blog.\n\n\nI am now required by law to link to this amazing and hilarious SO post (on the perils of matching XML with regex) which already has a stunning two thousand upvotes! It went hyper-viral.\n\n\nShould we allow Facebook questions (or other questions specific to a website) on Super User? It’s a bit complicated because websites are becoming legitimate “software applications” in today’s computing world, and even more so in the future. The line between a traditional software executable and a website is becoming less and less clear.\n\n\nDiscussing how you scale a community on Stack Exchange — is it about having lots and lots of questions, or garnering a solid audience of experts?\n\n\nThere appears to be a distinct difference between the early, adolescent, and mature stages of a community. You have to plan for and adapt to each stage; there is no “one size fits all” approach. I’m reminded of Robert X. Cringely’s classic essay Commandos, Infantry, and Police.\n\n\nJoel’s counterpoint is that maybe you’re actually working with Sid Meier. My counterpoint: everyone wants to think they’re Sid Meier, but as in Highlander, “There can be only one”.\n\n\nPer Joel, programming is not about knowing a programming language any more than being a concert pianist is about knowing how to read music. But is programming anything like creating art or music?\n\nJoel is offering a free Fog Creek t-shirt of your choice for the best question asked next week — so get those (audio only, please!) questions called or mailed in! And leave us a way to reach you.\n\nWe answered the following listener questions on this podcast:\n\nJosh from Taiwan: “I’m looking to move from QA into programming. Is it better to know one language really well, or lots less well? Also, does Objective-C pass the Joel Test of knowing C?”  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/12/04/podcast-76/"
    },
    {
        "title": "Podcast #69",
        "content": "Joel and Jeff sit down with Peter Seibel to discuss his new book Coders At Work, the effect of listening to music while coding, and the future of programming books.\n\n\nPeter draws on some commonalities in the 15 famous programmers he interviewed for Coders at Work. \n\n\nPeter agrees with Joel that concurrent (threaded) programming is some of the hardest programming anyone can do — even the extraordinary programmers he interviewed concur on this point.  \n\n\nSusan Lammers’ book Programmers at Work was the early inspiration for Coders at Work. It’s a similarly fantastic read. The other book in the same series, Founders at Work, is a great (albeit less technical) too.\n\n\nMany of the programmers interviewed (with the lone exception of Brad Fitzpatrick) got their start before home microcomputers such as the Apple II were even available. But they all spent deep, huge hands-on volumes of time on a computer, somehow.\n\n\nOne big sea change in the last 30 years of programming: per Jamie Zawinski, “these days, almost all software is social software”. The days of the solitary, disconnected programmer toiling away in a server room are essentially over.\n\n\nEven a hardcore game programmer like John Carmack (who, sadly, could not be reached for interview in Peter’s book) has gone on record with a back to basics approach: “if I were off by myself, I would want to become an iPhone game developer.”\n\n\nDoes listening to music affect your ability to program, positively or negatively? Joel cites one unpublished study, then goes on to mention that he occasionally watches video while programming. Is there any actual, verifiable data on this either way?\n\nHave we passed through the “golden age” of technical books? Are technical books dead? What niche will books fill for programmers in the future? Joel and I both remember poring over programming manuals in great detail in the early days because there were no other sources.   \n\nWe answered the following listener question this week:\nStuart: “Do you have any opinions on listening to music while coding? Is this a viable alternative to having a private office?”\nOur favorite questions this week:\n\n\nProposal: Free Vote-Based Advertising for Open Source Projects. We’d like to put some of our Stack Overflow remnant ad inventory to work for the community via voting and popular nominations. The goal is to highlight useful and interesting open source projects that programmers might not be aware of.\n\nWhat is the single most influential book every programmer should read? Why, Coders at Work of course! This was one of the first popular questions posted on Stack Overflow during the private beta; programmers do love their books.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/09/30/podcast-69/"
    },
    {
        "title": "Podcast #71",
        "content": "A collection of clips recorded at the San Francisco DevDays conference, including Joel Spolsky, Mark Harrison, Jeff Atwood, Scott Hanselman and Rory Blyth. This episode runs a bit longer than usual.\n\n\nJoel Spolsky on web usability  \n\n\nMark Harrison on Python and the Norvig spell checker  \n\n\nRory Blyth on iPhone development\n\n\nScott Hanselman on ASP.NET MVC 2.0\n\n\nJeff Atwood on Stack Overflow\n\n\nAd-hoc roundtable podcast with Scott, Rory, Joel, and Jeff backstage at DevDays. Warning: extreme ramblosity ahead!\n\n\nJoel explains his Duct Tape Programmer post. Apparently DevDays is a duct tape conference, and this section of the recording is a duct tape podcast.\n\n\nSome discussion of the ubiquity of mobile code. Also, if you are nostalgic for the era “when development was hard”, the consensus is that you should be doing mobile development today on iPhone, Android, Windows Mobile, or Symbian.\n\n\nRory elaborates on his experience with (and effusive opinions on)  iPhone development to date. Is coding in Objective-C best accompanied by a flux capacitor, New Coke, and Max Headroom? Also, his excitement for MonoTouch.\n\n\nJoel and Scott put on their amateur language designer hats and have a spirited discussion of type inference and Fog Creek’s in-house DSL, Wasabi.\n\nScott covers some of the highlights of new and shiny features coming in the Visual Studio 2010 IDE, the C# 4.0 language, and the ASP.NET MVC 2.0 web framework.\n\nOur favorite questions this week:\n\nHow do I create unicode smileys? So far beyond 🙂 it isn’t even funny. Who knows, you might even learn some typography along the way!\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/10/22/podcast-71/"
    },
    {
        "title": "Podcast #70",
        "content": "In this episode of the podcast, Joel and Jeff discuss DevDays, the diversity of Stack Exchange sites, the debut of CVs and careers on Stack Overflow, and the viability of WiFi at tech conferences.\n\n\nStack Exchange is now officially in public beta! There are a huge number of sites running on the Stack Overflow engine. Far more than I expected at this early stage, anyway.  \n\n\nThe Stack Exchange sites are pushing the boundaries of the specific audience (that is, programmers) we designed it for. Consider the audience overlap between answers.onstartups.com, epicadvice.com, and moms4mom.com. I was getting usability reports from my wife on that last one, which was quite surreal. Also surreal: that Jon Skeet is a top user on one of the above. You’ll never guess which one!\n\n\nDo some of the Stack Exchange sites compete with Stack Overflow? Such as ask.sqlteam.com and snippetgood.com? Not necessarily; if you’re particularly enthusiastic about some niche, you’ll get more questions and tighter focus of community by going to site dedicated to that topic.\n\n\nJoel feels that Stack Exchange works so well as a support forum that he’s shutting down all the other online FogBugz web support tools in favor of fogbugz.stackexchange.com.  \n\n\nWhat’s the minimum number of knowledgeable, invested users you need to have a functional online Q&A community? Joel says one (!). I think it’s more on the order of a few dozen. The software part is easy, the real hurdle is this: can you rustle together a core community of a few dozen enthusiastic, knowledgeable folks?\n\n\nAn extended discussion of our new careers section of Stack Overflow, which we launched last week. Joel sort of wrote the book on this topic, with Smart and Gets Things Done: Joel Spolsky’s Concise Guide to Finding the Best Technical Talent. Our careers approach grows out of Joel (and my) dissatisfaction with the current status quo. It sucks, and we’d like to build something better.\n\n\nThis is the philosophy behind careers.stackoverflow.com : smart companies should be pursuing good programmers, and not the other way around. We also want to cut out the cheesy for-pay contingency recruiters (or any other middlemen, for that matter) from the mix, and directly connect passionate programmers with companies that understand the value of programmers who hit the high notes.\n\n\nThis is Fog Creek’s guarantee for every service they charge money for: “The Fog Creek Promise: If you’re not satisfied, for any reason, within 90 days you get a full refund, period, no questions asked. We don’t want your money if you’re not amazingly happy.” Stack Overflow has adopted this promise as well. Why don’t all companies do this? Why would you want to keep an unsatisfied customer’s money — it generates ill will far out of proportion to the tiny amount of money involved.\n\nAs a part of careers, we’re planning to roll out free, public CVs with user-selectable “vanity” URLs in a week or two. In retrospect, we should have done this from day one, as it compliments the public record of your Q&A on Stack Overflow. As Joel notes, the best way to control your online presence is to fill it yourself with all the cool stuff you’ve been doing! Don’t let others tell the story of you when you can tell it yourself.\n\nOur favorite question this week is from Server Fault:\n\nWhy is Internet access and Wi-Fi always so terrible at large tech conferences? Based on Joel’s recent DevDays experience, reliable WiFi at tech conferences seems to be rare. Why? How can this be fixed? What does it take?  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/10/15/podcast-70/"
    },
    {
        "title": "Podcast #72",
        "content": "Joel and Jeff sit down with Jon Skeet, software engineer at Google London, and the first Stack Overflow user to achieve 100,000 reputation.\n\n\nA brief audio snippet of Jon’s presentation at London DevDays, featuring Tony the Pony and his sidekick.\n\n\nA discussion of the Google London offices, which aren’t quite up to Joel’s high standards, but are quite fun in their own right. And, they do offer free unlimited Curly Wurlies! The London office mostly does mobile development, which in Google world is Android.\n\n\nJoel explains his analogy of software development as a biology-based process, instead of a physics-based process.\n\n\nIn Coders at Work, Peter Norvig — chief research guy at Google — explains that his definition of correctness in software now mostly involves statistics intervals, not absolute boolean “this is right”, “this is wrong” tests.\n\n\nA brief discussion of Joel’s painful 14 line AppleScript odyssey.\n\n\nThere is a wall — literally — of hundreds of mobile phones at Google London that they use to test against. We wonder how Google’s Android will avoid devolving into the same miasma of dozens or hundreds of different versions of hardware, all of which behave differently and require special software support or workarounds.\n\n\nIs Apple becoming to mobile apps what Microsoft was, and is, to desktop PC apps? Will success in future mobile devices _require _an iPhone emulation layer? Although Apple unquestionably deserves their success with the iPhone, Joel and I are deeply concerned that too much Apple dominance in this area is bad for developers, as Apple serves developers poorly.\n\n\nJon spends a lot of time dealing with date and time issues, and shares one particularly horrifying timezone example. Apparently, time is often ambiguous and subject to change by human processes that aren’t … entirely rational.\n\n\nIt is OK to have “fun” questions on Stack Overflow, but a) only occasionally, as we can’t have the system overrun by pure entertainment and b) the question must be legitimately programming related and accepted by the community. As with so many things in life, moderation is key.  \n\n\nIf you’re Jon Skeet, you can post your schedule on meta and it will get 40+ upvotes. Mind you, there is no technical answer there, it’s just Jon’s schedule.\n\nThe daily reputation cap is partly there to encourage programmers to take a break. The goal isn’t to be on Stack Overflow, but to generally do things that make you a better programmer. While that certainly includes the fractional time slices of questions and answers that programmers so generously contribute, it also means doing your job, and writing code! To the extent that Stack Overflow itself becomes the goal, we are failing you.  \n\nOur listener question this week is from … Jon Skeet!\n\nWhy is the reputation cap (currently 200 points per day) time based? Would other forms of capping reputation work better or be more preferable?  \n\nOur favorite Stack Overflow question this week is:\n\nWhat is the best Battleship AI? A good example of a fun, but appropriate, question for Stack Overflow.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a\ndedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/10/30/podcast-72/"
    },
    {
        "title": "Podcast #66",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss reverse proxies, the pitfalls of self-support communities, and designing for engagement.\n\n\nIt is my intent to attend the London and Cambridge DevDays, if my passport comes back in time. Speaking of which, is there anything funnier than a baby’s passport picture?\n\n\nWe officially disabled the built in ASP.NET Session state, so as to set ourselves up for multiple Stack Overflow servers. Fortunately, we don’t need a lot of shared state, but we were using it in a few places. We created a small database table to store the small bits of per-user state that we need.\n\n\nI take an inordinate amount of joy in deleting code from our project. Nothing is more satisfying!\n\n\nTo switch over to multiple servers, we need some kind of load balancer. We chose HAProxy, but we also had to configure tproxy (transparent proxy) support so that the IP addresses arriving at the web servers are not all the same.\n\n\nFor now we’ll be load balancing using a simple hash of the incoming IP address. Depending on which hash you get, you may end up on a different server, but you’ll stay on that server as long as your IP address is stable. This is a fairly crude form of balancing, but should be sufficient.\n\n\nIt’s incredible how aggressive Google’s indexing of our site is; it regularly pulls down a gigabyte of compressed text from us per day, and it wants to do even more. One of the primary motivators for adding a second server is to reduce the traffic load enough so that we can “unleash” google via webmaster tools.\n\n\nA belated welcome to our newest and third site in the trilogy, Super User — it’s for any general computer software or hardware questions, but we’ve already had to disallow videogaming questions.\n\n\nHow much overlap will there be between our public websites, and the sites launched through the Stack Exchange service? But remember, the software (however great it may be) is the easy part. Building a community is the truly difficult part! To succeed, that’s what you should focus on.\n\n\nJoel discusses the shifting meaning of “Beta” — it’s been contorted into “the first five years of a product”. But there is an art to the classic beta, in terms of releasing in a staggered fashion to fresh testers who haven’t seen it yet.\n\n\nGoogle’s self-support model is often unsatisfying because it is community driven, yet the community is powerless and has no real stake in developing the product. They’re given padded rubber rooms to bounce around in harmlessly. That’s not a good way to build community.\n\n\nGoogle needs a lot more evangelists out there interacting with the community and bringing messages back and forth to the mothership. This is something that Microsoft does extraordinarily well, but Google does not seem to “get it”.\n\n\nA brief discussion of some key changes to (hopefully) increase engagement between question asker and answerers. The goal is for answerers to be able to quickly scan a question and see if they’re dealing with someone who cares, or not.\n\nThe default votes answer sort order had a flaw: the sub-order was relevant! We now use random as the sub-order to the votes sort, to minimize any effect of the sub-order. Answers will now appear in random order if they have the same number of votes. Answers should be voted up because they’re inherently good answers, not because they happen to accidentally be on top at that particular moment.\n\nWe answered the following listener questions on this podcast:\n\n\nNathan Long: “Is it valid to discuss iPhone and Blackberry questions on Super User?” This has been discussed on meta.\n\nBrian Kelly: “Is there any formal organization for potential candidates to meet employers at DevDays?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/09/03/podcast-66/"
    },
    {
        "title": "Podcast #68",
        "content": "Joel and Jeff discuss outsourced DNS, virtual machine “appliances”, and programmers as library users versus library writers.\n\n\nAs a dyed in the wool fan of fake plastic rock, I am required by law to mention that The Beatles: Rock Band was released last week. It’s great!\n\n\nWe changed DNS providers, as our existing registrar’s DNS service was highly … irregular.\n\n\nShould you pay for outsourced, dedicated DNS? What do you get for that money? What kinds of value can outsourced DNS provide? What clever things can a smart DNS provider do?\n\n\nIf you need to troubleshoot your DNS, try DNS Stuff.\n\n\nDNS is heavily cached throughout the internet, but I think we overestimate how efficient these distributed caches are. For example, Yahoo found that 40-60 percent of their users have an empty browser cache experience. There is value in having a fast, distributed core service for the no-cache scenario.\n\n\nA brief discussion of our use of virtual machines in our little server farm. Since the only trouble spot for VM performance is disk, that gives us the flexibility of using a lot of great Linux and open source tools for networking (no or very little disk dependency), such as HAProxy and Cacti.\n\n\nSometimes people should question the premise of your question; as in our Server Fault question about having two default gateways, it turns out that the only sane answer is “don’t do that.”\n\n\nWhen it comes to Stack Exchange, the broader the topic, and the more unanswerable questions you have, the worse the engine will do for you. The engine is designed for reasonably narrow topics, with a majority of questions that can actually be answered in some reasonable way.\n\n\nJoel likens the classic divide in software developers to “library users versus library writers”. At what point do programmers cross that chasm? Do they need to? Joel says “we write one algorithm per year.”\n\nHow do you deal with the dancing bunnies problem? Also known as the Dancing pigs problem. “Given a choice between dancing pigs and security, users will pick dancing pigs every time.”\n\nWe answered the following listener questions this week:\n\n\nSteve: “The etiquette rules for meta are much looser than on the other Trilogy sites. Does this have ramifications for Stack Exchange sites?”\n\nBrian: “Technology changes so fast that most developers burn out in 20 years. How do we retain our historical knowledge if the rate of attrition is so high?”\n\nOur favorite questions this week:\n\n\nHow can I gently explain to non-techie friends they are the victim of a hoax? It is part of the responsibility of a true superuser to tend to those users who can’t protect themselves.\n\nWhat is the worst real-world macros/pre-processor abuse you’ve ever come across? The C, she is dangerous!\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/09/18/podcast-68/"
    },
    {
        "title": "Podcast #67",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss the ethics of Craigslist, the pitfalls of customer-installable software, and caching for anonymous web users.\n\n\nIf you’d like a Stack Overflow, Server Fault, or Super User sticker, you can now get three! Just send a SASE to Fog Creek software as documented in this blog post. Please don’t start a Ponzi scheme with those international reply coupons, though!\n\n\nThere was a excellent, huge Wired article on the pros and cons of Craigslist, titled Why Craigslist is Such a Mess. I am mentioned in the article, as an example of someone who created an tool to do all-city search that got shut down by Craiglist, which is quite militant about controlling the service.\n\n\nJoel feels that what Craig Newmark is doing with Craigslist is a brand of evil, in that it has destroyed the income stream (classified ads) that supported professional journalism. Craigslist was one of the models we studied extensively when building Stack Overflow, even cribbing their flagging mechanism. Joel and I have an extended discussion about the ethics of Craigslist.\n\n\nJoel and I disagree about the future of professional journalism; I think the newspaper business model was fundamentally flawed. It is tempting to blame Craigslist for the downfall of newspapers, but if it wasn’t Craigslist, someone else would have done the same thing. For a thoughtful discussion of the topic, check out Clay Shirky’s article Newspapers and Thinking the Unthinkable.\n\n\nOne side effect of Craigslist being free and incredibly popular (more pageviews than eBay and Amazon combined) is that they are breeding the perfect spammer. We looked at Craigslist as an key example of designing for evil. We suspect that over time Craigslist might have to start charging money for most, if not all categories.\n\n\nJoel’s Stack Exchange playground is biztravel.stackexchange.com, but we need better color schemes. I think we need to have a contest to set some reasonable default color schemes for Stack Exchange customers to choose from.\n\n\nOne thing Joel has learned from selling Fogbugz: software designed to be installed on a server in-house at a customer’s site, under full control of that customer, is almost never worth the hassle. Virtual machines, or the software-as-appliance models, are more sustainable. But most companies won’t allow outside vendors to remote into the app to troubleshoot it, either.\n\nA tremendously important part of designing a large public website is optimizing for anonymous user access, which will be a large proportion of your traffic. At Stack Overflow, even before our public launch in September, we spent a lot of time ensuring that anonymous usage is aggressively and heavily cached. \n\nOur favorite Stack Overflow trilogy questions this week are:\n\nCountdown app for DevDays. Joel needs a cool app to help start DevDays sessions on time! Here’s an opportunity to show off your mad coding skills, and have your software prominently featured at every DevDays venue.  \n\nWe answered the following listener question on this podcast:\n\nDavid Smalley from DocType: “Shouldn’t websites optimize heavily for anonymous usage patterns?” Absolutely!  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/09/10/podcast-67/"
    },
    {
        "title": "Yet Another Reason to Dislike France",
        "content": "Joel’s vacation in France is going so very swimmingly that he has declined to participate in the Stack Overflow podcast for yet another week.\n\nI’m not one to judge, but apparently Joel loves France more than he loves Stack Overflow. I’m just sayin’.\nBut, maybe we can pull something together sans Joel. There are some ideas on meta for the as-yet-unrecorded Podcast #66, so feel free to go in there and upvote or add your own.\n(disclaimer: I’m just kidding, I have nothing against France. It’s Australia that really sucks.)",
        "url": "https://stackoverflow.blog/2009/08/25/yet-another-reason-to-dislike-france/"
    },
    {
        "title": "Podcast #64",
        "content": "Joel and Jeff discuss the disappointment of Google AdSense, the difference in skillset between programmers and testers, and the value of standards groups to working programmers.\n\nIf you have feedback for Stack Exchange (still scheduled for beta by September 1st), please leave it on meta.stackoverflow.com under the Stack Exchange tag.\nThe speaker list for Stack Overflow DevDays is coming soon, it’s looking really impressive so far. For example, both John Resig (of jQuery fame) and Miguel De Icaza (of Mono fame) will be at the Boston leg, and there are still seats available! There’s also a rumor that Jeff Atwood, whoever that guy is, may show up in London.\nWe are forming a League of Justice on the web. The first new hero in our league is How-To Geek, of the most excellent How-To Geek website. It’s the editorially cultivated content yin to our user-generated yang.\nOn the crushing disappointment of Google AdSense on Stack Overflow. The theory of AdSense, matching topical ads to the content on the page, is fantastic. The reality of the type of ads we actually saw on Stack Overflow is a terrible disappointment. They were barely relevant, and often quite ugly.\nOur hand-selected ads, targetted to our audience, perform 50 times better than AdSense. We believe that if Google could somehow tag a site with a specific audience topic (such as, say, “programmers”) it would do much better.\nIf a site like Stack Overflow, which does almost a million pageviews a day, can’t make enough to cover even one person at half time using Google AdSense, how does anyone make a living with AdSense? Does it even work?\nJoel says the only people making decent money with AdSense are scammers who specifically build websites to do nothing except target high pay-per-click keywords. I am not sure this is what Google had in mind. It is a stunning indictment of “the power of the algorithm”.\nOur ad partner is Alex from The Daily WTF, and we take responsible advertising seriously. The right kind of advertising, the relevant, interesting, thoughtful kind is win-win. And always in moderation. We are willing to leave money on the table to have the right kind of ads that we like editorially.\nJoel has a great discussion about the difference in skillset between a good tester and a good programmer. “There’s something about the nature of the work that’s different enough that a lot of good developers are bored by testing, and a lot of testers are too detail-oriented to get anything done as a developer.” Some programming skills are helpful, but they’re different.\nThere is great risk in creating standards in advance — how do you know if you’re solving a problem people care about, or even the right problem in the first place? Also, the disconnect between the theory and practice can be rather painful.\nWho can we blame for the codified misspelling of “referer”? I would like to have some words with this person.\nWe frequently use Stack Overflow to build Stack Overflow. It’s almost a recursive endeavor. If you browse the questions the team asks on Stack Overflow or Server Fault, many of them are directly related to development and deployment issues on the sites themselves!\n\nOur favorite questions this week are both from Super User, which for now is still in semi-private beta. If you need the password it is “ewok.adventure” without the quotes.\n\nUpgrading from Windows 7 RC to Windows 7 RTM. It’s perplexing why Microsoft doesn’t officially support RC to RTM without a little hack.\nTroubleshooting Failed Upgrade to Windows 7. Three out of four of my Vista machines upgraded to Windows 7 fine. That fourth one, though … I meticulously documented all the steps I took to troubleshoot it, so maybe my failure will be helpful to someone else in time.\n\nWe answered the following listener questions on this podcast:\n\nAdam: “The Fog Creek way of hiring programmers has been well documented. What about hiring testers, and how they fit into your view of how software should be built?”\nKevin: “What do you see as the role of standards committees in the development community?”\nGeorge: “You talked about open sourcing Stack Overflow. Why not just write a book about it?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/08/06/podcast-64/"
    },
    {
        "title": "Podcast #65",
        "content": "In this episode of the podcast, Joel and Jeff discuss lessons from a year of building Stack Overflow, the mysteries of COBOL, some YSlow website optimizations, and magic numbers.\n\n\nWhat have we learned in a year of building Stack Overflow? If someone wanted to design a system like Stack overflow, I’d give them these two pieces of advice. First, never have any unbounded behavior in your website. Anywhere. Bounding, velocity and rate limiting, should be pervasive throughout your design from day one. Second, provide an outlet for meta discussion from day one. Unless you provide a teacher’s lounge, or afterschool activities for the students, you haven’t completed the experience.  \n\n\nIn our experience, the best way to manage online behavior is to make the positive behaviors fun and rewarding. If you do this right, the bad and negative behaviors fall by the wayside. (Although you also, regrettably, will still need tools for dealing with rare but aberrant behavior.)  \n\n\nNeither Joel or I have ever met a COBOL programmer. That’s why we’re skeptical of these dramatic claims that the world is overrun with invisible COBOL code. There are, surprisingly, some good COBOL questions on Stack Overflow, but it’s a tiny fraction.\n\n\nHow much COBOL code can you fit in the 1 megabyte (at most!) memory that these 60’s and 70’s era servers had? Or the tiny hard drives?\n\n\nIs what happened to COBOL programmers eventually what happens to all programmers? Take SQL as an example. If you have 256 gigabytes of main memory — not very expensive already, and getting cheaper every day — is all that SQL and disk stuff still relevant?\n\n\nWe recently spent some time improving performance on Stack Overflow, and as always we’ve learned that whatever we think is slow, is not, and the part that is slow is in a totally unexpected area of our code. Never assume you know where a performance problem is, because I can almost guarantee you’re wrong. Profile it and look at the data!\n\n\nWe’ve seen huge benefits, more than anticipated, by moving our static web content to a rate, cookieless domain. (We registered sstatic.net for this purpose, which explains the rationale.) This is one of the key recommendations from tools like YSlow and Google Page Speed. It’s a surprisingly effective form of poor man’s web farm scaling.\n\n\nA brief digression into the “why does anyone still use IE6” argument. Here’s Microsoft’s official position, as crazy as it may seem.\n\n\nWe may be at the end of the road for the low hanging fruit of website performance optimizations. Of course we can always buy faster hardware. But that doesn’t fix the speed of light problem. Given our large international audience, I sort of wish we could have multiple server farms in different geographic locations, but that may be quite a long way off.\n\nComputer “magic number” number bugs are kind of fun; you may remember a very public Excel bug in this vein. Joel once got a credit card with an expiration date set in 2049, which is technically valid, but it barely worked anywhere.\n\nOur favorite questions this week:\n\n\nIs 23,148,855,308,184,500 a magic number, or sheer chance? A fascinating tale of programmer number forensics.\n\nHow to learn Cobol. OK, but first of all, why in the world would you want to do this?\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/08/13/podcast-65/"
    },
    {
        "title": "Podcast #62",
        "content": "In this episode of the Stack Overflow podcast, Joel and Jeff discuss software updates, the power of APIs and plugins, and leading by example.\n\n\nA brief discussion of how software should be updated, using Firefox and Apple’s Software Updater as examples. In a perfect world, you wouldn’t need to care about software updates because you’d always be on the latest version. A smart and silent update mechanism should be architected into your app from day one.  \n\n\nWeb apps largely get a pass on the “latest version” problem, but even here, you could update smart by having multiple web servers behind a load balancer, and rotating some servers out of service to update, then back in with the latest version.\n\n\nSpeaking of software updates, Fog Bugz 7 has shipped. It’s the first new version in two years, with a brand new, extensive plugin API.   \n\n\nJoel wonders if having a robust plugin model can replace the need to constantly ship new major versions of your software with new features. I question whether Fog Creek got their plugin API right the first time, but if done right, this is totally plausible.\n\n\nI view plugins as free product design and highly valuable product feedback — so you should fold the top 5 plugins / add-ons into your product every year or so. But how do you do this without crushing your partners in the ecosystem? There are plenty of examples of popular iPhone paid apps being obsoleted by, say, iPhone OS 3.0. Joel argues that plugins should go vertical, and stay out of the path of that oncoming steamroller.\n\n\nNow that we have four sites in the er.. trilogy.. it is finally possible to associate your accounts between the sites, and migrate questions fairly painlessly from site to site.\n\n\nSometimes we belatedly realize that we got something wrong. We’re now thinking that our current +10 upvote, -2 downvote formula nerfs downvotes into oblivion, and lets certain classes of users who tend to ask a lot of low-quality “do my work for me” questions gain a substantial amount of reputation over time. We are pondering making an adjustment here, which is under discussion at meta.stackoverflow.com.\n\n\nMaybe we should be weighting question votes differently, since users who continue to repeatedly ask dozens of low quality questions are still an ongoing concern. As we get more and more questions in the system, the voting system needs to help us discriminate good questions from poor ones, so we want to encourage question votes.  \n\n\nThere is now officially a full time Fog Creek developer working on Stack Exchange — welcome Aaron Maenpaa to the team! On a related note, one advantage of open source tooling is that you don’t have to have painful discussions about licensing expenses and whether the tool is worth using as your team grows.\n\n\nR language enthusiasts are taking a clever and effective approach to get more R content on Stack Overflow — we think this is a great way to build a community that is completely in tune with the spirit of the site.\n\n\nIn the post Leading by Example, I proposed that one of the best ways (maybe the only way?) to lead junior programmers is to do the things you wish they’d do, and let them observe your success. Those that can be led, will follow to some degree, and the rest are a lost cause.\n\nLet’s broaden the terms. Forget programmers, how do you get pizza guys or car wash guys to get excited about what they do? Joel says you can’t. I say there has to be some kind of hippie commune shared ownership business arrangement. At the very least, you can become interested in efficiency, since that might mean you could leave earlier, make more money, or work less.\n\nWe answered the following listener questions on this podcast:\n\n\nJ.D. Long: “The R language is attempting to move away from isolated mailing list and adopt Stack Overflow as a resource. What’s a good way to do this?”\n\nSergei: “I am a programmer in a small IT company. I often see my junior teammates program things that are not optimal. I try to help them, but they’ve complained to my manager. What should I do about this?”\n\nOur favorite site questions this week are:\n\nDNS failing to propagate worldwide. I used this as an example of asking a question the right way, in that you put some effort into the question — research the problem first and provide all the information necessary for people to help you.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/07/23/podcast-62/"
    },
    {
        "title": "Podcast #61",
        "content": "In this episode of the podcast, Joel and Jeff sit down with Miguel de Icaza of the Mono project to discuss Mono, Silverlight / Moonlight, and the pros and cons of open sourcing your code.\n\n\nMiguel is one of the lead developers on the Mono project, which is an ongoing effort to bring the .NET framework to Linux and other non-Microsoft platforms.\n\n\nMiguel characterizes Silverlight (known as Moonlight on Mono) as “the good parts” of WPF. It’s a newer way to build a cross-platform GUI app, an alternative to GTK and Windows Forms.\n\n\nA brief discussion of the implications of cross-platform GUIs, which lack that native flair. Do you have the manpower to maintain three distinct versions of your GUI application — one for Mac, one for Windows, and one for *nixes? Do only programmers notice the subtle differences? \n\n\nRevisiting Fitt’s Law, and applications and operating systems that don’t make good use of it. Certain areas of the screen, mostly the top and bottom and to a lesser extent the sides, are infinitely large, and should be used prominently in the UI to leverage Fitt’s Law.\n\n\nMono runs on the iPhone, through the Unity game engine! This was challenging for the Mono team to develop, because interpreters and runtimes are explicitly disallowed in terms of the iPhone SDK. Mono had to be converted from a JIT to a static compiler.\n\n\nPer Miguel, programmers wanted Mono because Objective-C is fairly primitive in memory management and requires a lot of repetition and boilerplate. With Mono “this is all taken care for you”, as a higher level language.\n\n\nDue to concerns within the free software community, Microsoft made a legally binding promise that it will not enforce patents against Mono — for the core framework.\n\n\nIt turns out that the Microsoft Office 2010 web component, which is free for consumers, is 100% JavaScript + HTML. If Silverlight wasn’t required to pull off Office-in-the-browser by Microsoft itself, is Silverlight really necessary in the bigger scheme of things?\n\n\nMiguel divides the world into PutPixel Programmers and printf programmers. Which type are you?\n\n\nSome big game projects that use Mono for scripting: Second Life, and The Sims 3. Also, a very large social networking site I can’t mention by name was recently ported to Mono.\n\n\nOne of my long term 5 year goals is for the Stack Overflow discussion engine to become a go-to choice for public internet discussion, on par with phpBB and its kin.\n\n\nMiguel offers his insight into the controversial discussion of whether open sourcing Stack Overflow would destroy our business model.\n\n\nWe actually have contributed one open-source component of Stack Overflow back to the community — the Javascript WMD editor. Also, we provide all of our question and answer content back to the community licensed as cc-wiki.\n\n\nOur Stack Exchange hosted solution will offer free versions for non-profit organizations, and we’re also looking at provided an ad-subsidized version of it as well.\n\n\nMiguel de Icaza is also a Stack Overflow user — with 22 answers and 3,484 reputation.\n\n\nCheck out the Mono Migration Analyzer, which will tell you how easily you can (or can’t) port your .NET project to Mono and run it on other platforms. Please do, because feedback from this tool is used to prioritize future Mono development!\n\n\nMiguel committed to speaking at the Boston Stack Overflow DevDays and presenting some of the same Mono goodness he talked about here.\n\nIn other Stack Overflow news, the Super User semi-public beta is now open. Come join us!\n\nOur favorite Stack Overflow question this week:\n\nIs Mono ready for prime time? but of course! See for yourself with a new Mono Visual Studio plugin!  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/07/16/podcast-61/"
    },
    {
        "title": "Podcast #63",
        "content": "In this episode of the podcast, Joel and Jeff discuss the Mythical Man Month problem, keeping communication in check, Windows 7, and web scaling.\n\n\nJoel is fielding his largest team ever at Fog Creek — 9 programmers, 2 testers, and 2 program managers. They only have 10 usable weeks in the summer to build a product with their interns, so they have to parallelize their development.\n\n\nContrary to popular myth, it is possible for a large team to be effective, if you mitigate the Mythical Man Month problem, which is really only about adding people to a late project and bringing them up to speed.  \n\n\nHow do you deal with an excess of communication (the explosion of paths) on larger teams? First, with program managers. That’s what they are there to address, by becoming the conduit for communication. Second, constantly try to reduce the number of meetings and people in meetings.\n\n\nSpeaking of communication excess, is email = efail? This is also why I believe in maximizing the value of your keystrokes, and the value of public communication. If you must email someone, keep it extremely short, a paragraph at most, with a direct question and call to action that is obvious and clear.\n\n\nOne thought experiment: what would happen if all your email became Twitter messages? Or, as Joel proposes, is online communication itself a failed paradigm? At the very least, know the limitations of the communication medium you’re using, and escalate as necessary.\n\n\nSome classes of plugins that can complement a product without competing with it: plugins that make the UI complex or dangerous, plugins that require a subscription fee, plugins that compete with the core business model of the product, and plugins that connect to a different commercial product.\n\n\nProducts that have a vibrant plugin ecosystem and API are almost by definition successful products. It also creates a sort of weird ambient lock-in around the ecosystem, as in Lotus 1-2-3 macros, or Firefox users who won’t switch browsers due to their favorite plugins.\n\n\nA brief discussion of Windows 7, which has much more “curb appeal” than Vista. Joel was not a fan of Vista; I was. And Windows 7 is the best Vista service pack ever.\n\n\nStack Overflow almost reached a million pageviews per day last week, and we’re consistently doing around 120 requests/sec, or 7200 requests/minute. We’re starting to hit peaks of about 80% CPU usage on our single web server, so we may have to add a second webserver to the SO farm soon.\n\n\nSpeaking of sticky sessions, we were surprised to find that there are those rare few users whose IP addresses will change radically from request to request.\n\n\nWe are a Microsoft stack so we’re looking at Velocity to share state across multiple webservers. It’s a clone of memcached.\n\n\nScaling problems are easy to solve. Just throw money at them, like 37signals recently did. The “getting people to give a crap about your application” problem does not respond to money in the same way.\n\nWe run a number of LogParser queries on our webserver logs to identify statistically anomalous things that are happening on our website — what sorts of queries do you run on your web logs to show unusual activity? One of the weirder spiders that’s hitting us a lot is Omgili, a sort of forum search tool.\n\nOur favorite question this week is from Server Fault:\n\nRecommended LogParser queries for IIS monitoring? This is an example of putting the sort of information out into the world that we’d like to see exist — as well as documenting and sharing our own experience in hosting what is now a fairly large public website.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/07/30/podcast-63/"
    },
    {
        "title": "Podcast #60",
        "content": "This is the 60th episode of the StackOverflow podcast where Joel and Jeff discuss the value (or lack thereof) of meta-discussion, how much “big iron” popular websites need, and whether code forking is sometimes inevitable.\n\n\nA discussion of our newly launched outlet for meta-discussion at meta.stackoverflow.com. We view this as a pressure release valve. Why is meta-discussion necessary? What purpose does it serve, and for who?\n\n\nJoel and I are both headphone enthusiasts. It’s also a key part of the programmer’s toolkit for getting “in the zone”, so it’s worth investing in this area. A quality set of headphones can deliver an audio experience equivalent to floor-standing speakers worth thousands of dollars!\n\n\nAfter three logo contests, we are becoming experts in crowdsourcing design. There is a risk here when people don’t know what criteria they’re supposed to be judging on. Joel brings up the point of televisions which all have a “store mode” which maximizes brightness and contrast to the actual detriment of the overall image quality. And if you use a LCD at its out of box brightness (always the maximum) you’re going to go blind!\n\n\nWe took the plunge and upgraded our database server to its maximum of 48 GB of memory. This is mostly a cheap form of insurance against future growth. We may also end up taking advantage of SQL Server’s database compression. The old memory will be eventually used in a second database server we anticipate needing by the end of the year.\n\n\nI was spurred on to do this after reading about the massive 512 GB monster server that Plenty of Fish bought. It’s interesting how the cost of “free”, at that scale (they’re a top 20 website in the US and Canada), is no longer cheap. Joel points to a scathing New Yorker review by Malcolm Gladwell of Chris Anderson’s book Free, which covers similar topics.\n\n\nAs Joel notes, paying $100,000 for a server could be more effective than spending $100,000 for a year’s worth of programmer time to convert your database from single and monolithic (the traditional, classic SQL / Oracle model) to sharded (Hadoop and BigTable).\n\n\nTwitter, for example, has moved to an almost all in-memory database architecture. The downside is that it is literally impossible for me to get to any of my Twitter messages older than the middle of 2008. Still a fan of twitter, though; it’s actually useful. Consider the story of an indie musician who made $19,000 in 10 hours on Twitter, while netting exactly $0 from 30,000 traditional record sales.\n\n\nWhat are the ethics and legality of using code from one job on a different job? If you get a job as a programmer and you never signed anything, then you own all the code you wrote. Most employers sign a Work for Hire agreement which means they own all the code you write while on the job. \n\n\nShould Stack Overflow be eventually open-sourced? Joel is concerned that open sourcing the code would interfere with the hosted product Stack Exchange that Fog Creek is building out right now. I don’t see a conflict between these two audiences; one has infinite time and no money, and the other wants a turnkey, “it just works” solution for a reasonable price.\n\n\nJoel thinks that hosts deploying open source software crash the business model down to the cost of the hosting itself. I wonder how companies like Six Apart (of Movable Type fame) continue to survive if that is the case. And eventually, won’t someone create an open source clone of what you’re doing anyway? Why not beat them to the punch and take control of the situation, by open sourcing the real thing yourself?\n\nI continue to have deep skepticism that the hosted Fog Creek version of Stack Overflow cannot avoid a serious fork with our code. The audience of the ad-supported general internet, versus the audience of paying customers building topic-specific ‘stacks, is very different. Can version control tools save you when you’re building the “same” products for such different audiences?\n\nWe answered the following listener questions on this podcast:\n\nLloyd: “I am leaving a business and working for a competitor in a different business. I want to take the codebase I’ve worked on for the last few years with me — to use as a reference point for future products. What advice can you give?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/07/02/podcast-60/"
    },
    {
        "title": "Attribution Required",
        "content": "All the content contributed to Stack Overflow or other Stack Exchange sites is cc-wiki (aka cc-by-sa) licensed, intended to be shared and remixed. We even provide all our data as a convenient data dump, seeded by us.\nBut our cc-wiki licensing, while intentionally permissive, does require attribution.\n\nAttribution — You must attribute the work in the manner specified by the author or licensor (but not in any way that suggests that they endorse you or your use of the work).\n\nI thought it was pretty clear what “attribution” meant, but given the semi-scammy way the content is popping up in some seedier areas of the internet, maybe not:\n\nhttp://hiveminds.se/vote/framed/story.php?id=23472\nhttp://programmingfaq.w3ec.com/\n\n(there may be others; these are just the ones I know about)\nSo let me clarify what we mean by attribution. If you republish this content, we require that you:\n\nVisually indicate that the content is from Stack Overflow or the Stack Exchange network in some way. It doesn’t have to be obnoxious; a discreet text blurb is fine.\nHyperlink directly to the original question on the source site (e.g., http://stackoverflow.com/questions/12345)\nShow the author names for every question and answer\nHyperlink each author name directly back to their user profile page on the source site (e.g., http://stackoverflow.com/users/12345/username)\n\nBy “directly”, I mean each hyperlink must point directly to our domain in standard HTML visible even with JavaScript disabled, and not use a tinyurl or any other form of obfuscation or redirection. Furthermore, the links must not be nofollowed.\nThis is about the spirit of fair attribution. Attribution to the website, and more importantly, to the individuals who so generously contributed their time to create that content in the first place!\nAnyway, I hope that clears up any confusion — feel free to remix and reuse to your heart’s content, as long as a good faith effort is made to attribute the content!\nConsider turning your Stack Overflow remixes into a new work opportunity. Check out these remote web developer jobs available now.",
        "url": "https://stackoverflow.blog/2009/06/25/attribution-required/"
    },
    {
        "title": "Podcast #56",
        "content": "This is the 56th episode of the StackOverflow podcast where Joel and Jeff sit down with Jason Calacanis to discuss the business side of software, including Mahalo’s “Skee-Ball” economy, when VC funding is appropriate, and whether SEO matters.\n\nJason Calacanis regales us with his tales of being a BBS script kiddie on his IBM PC Jr. He later got fired from his job in the Fordham computer lab for setting up a warez partition on one of the computers in the lab. Oh, and he installed a keylogger on his boss’s computer, and sold pirated software on floppies, too. 🙂\nJason was one of the earliest internet reporters on the east coast with Silicon Alley Reporter.\nApparently the Q&A format — dubbed “Knowledge Exchange” — was pioneered in Korea with Naver and Daum, which Yahoo Answers copied for the US. In Korea, the primary way to get information is through users exchanging knowledge, not search algorithms.\nRather than translate the app, Facebook apparently let users volunteer to translate different parts of the Facebook UI itself. Jason’s Mahalo is not localized.\nIn Korea, the main knowledge exchange sites are all noindexed, so Google is a non-starter there. If all the newspapers in the US noindexed as a consortium, Google would be screwed.\nJason is a big fan of the badge system on Stack Overflow, which he plans to add to Mahalo. This of course is modelled on the Xbox 360 Achievements system; every badge in the system is there to encourage community building (and not inadvertently community destroying) behavior. It’s a surprisingly fine line.\nJoel’s big objection to Mahalo is that, like the now-defunct Google Answers, it turns an intrinsic motivation for asking and answering questions into an extrinsic motivation (hey, I can get paid real money for this!)\nJason maintains that money is not the primary motivator on Mahalo. He calls it a “Skee-Ball Economy”, where you are playing skee-ball for fun, and getting lots of tickets to cash out and buy fun things. It’s a “token economy”. You can’t make a lot of money, but it (theoretically) adds a secondary driver to an already fun activity.\nJason equates the Stack Overflow community with an “expert economy”, akin to the open source software ecosystem. Jason mentioned that he has used nginx and hadoop mailing lists to identify people to hire and/or bring in to teach the other developers at Mahalo. My question is, why shouldn’t Mahalo also be an expert economy?\nJason says “I’m not so much into creating the financial system to get something out of people, it’s more that I like to take work that was previously undercompensated or not compensated and make it into a career. I’m very proud of the fact that we [WebLogs, Inc.] were the company that made blogging into a career.”\nJason famously offered the top 25 users of Digg $1,000 a month to become community managers at Netscape. And 23 of the 25 users took that offer. Joel says this is like paying for sex — applying money at the one point where most people do not have a problem getting people to contribute to a community. Jason: “I may have made a mistake”, but traffic increased, and he maintains there was already a shadow economy around paid submissions to Digg.\nJason, who has a reporting background, ultimately wanted to add a layer of journalism and editorial control to the stories submitted to Digg. Even on “anything goes” vote driven sites like Digg, they do have one level of editorial control, in that stories can be “in dispute.”\nJoel asks Jason — with your background in VC and funding, what would you do with Stack Overflow? Would you raise money? How, why, and for what? (Which reminds me: what’s the difference between VC funding and a flaming bag of poop left on your doorstep? Trick question! There is no difference!)\nWe now offer an integrated job board — if you’re looking for gigs, or looking for a great programmer or sysadmin, check out jobs.stackoverflow.com and jobs.serverfault.com.\nA brief discussion of advertising strategies and philosophies. I’m very skeptical of self-serve advertising after my experience with Google AdSense, which performs abysmally badly on Stack Overflow.\nAre community-driven sites like Mahalo and Stack Overflow turning users into digital sharecroppers? Is it an economic system where people are working for praise? Does splitting the revenue with the user, ala Knol and Google Answers, really work? The track record for this approach is not good. And if you optimize for things that are popular, no matter what they are, then you end up with a site where every question is the programming cartoon question. I call this “Mahalo”.\nIn the next 6-8 weeks, we’ll be launching the third site in the Stack Overflow trilogy — superuser.com. This is a site for power users and computer enthusiasts.\nIs writing software “hard”? That depends on your tolerance for frustration and what you happen to be building.\nJason, as a serial entrepreneur, points out that there is no downside or risk to starting a company and failing in the United States. If you have great ideas, don’t just let them marinate in your brain forever — get out there and start building them!\nOne of my favorite Calacanis posts is Why people hate SEO … and why SMO is bullcrap. 90% of SEO is simple rules for building clean HTML. The other 10% is that SEOs are really just life coaches who need to transform their clients into something awesome that people actually care about. What you really need to optimize for is being awesome. And that’s a bit harder than pulling some SEO out of your magic bag of tricks.\n\nWe answered the following listener questions on this podcast:\n\nBrian McKay: “I recently read the book Dreaming in Code. One of the concepts in the book is that software development is a very difficult profession — that software and surgery are two of the most difficult things that a person can attempt. Do you agree with this?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/06/04/podcast-56/"
    },
    {
        "title": "Podcast #57",
        "content": "This is the 57th episode of the StackOverflow podcast where Joel and Jeff discuss the relationship between speed and skill, iPhone development, and the value of programming fundamentals.\n\n\nJoel comments on the surprising correlation between how fast you can solve a simple problem, and your overall skill level as a programmer. This is why giving even a very experienced programmer a simple problem can still work. If you can’t truly master the fundamentals, it’s hard to work at higher levels of abstraction.\n\n\nWe agree with Paul Graham: in general, there tends to be a correlation between the length of a response and its quality. We’ve also observed this pattern on Stack Overflow. It isn’t always true (TL;DR), but it’s a verifiable pattern. Either be the first and quickest, or be the best and most comprehensive!\n\n\nDue to high demand, five new cities were added to the Stack Overflow DevDays: Boston, Austin, Los Angeles, Cambridge (UK), and Amsterdam.\n\n\nI was quite impressed with the striking design Mike Kus put together for the Stack Overflow DevDays website. He breaks it down step by step for us. Like most programmers, I’m a terrible designer, but at least I know what’s good enough to steal!\n\n\nAs promised, we released a creative commons data dump of all the Stack Overflow data including all questions and answers. We’re excited to see what the community can do with this data; Brent Ozar put together a data mining video to get people started.\n\n\nStack Overflow has become a very popular destination for iPhone development. This is completely accidental, but it is a valid reflection of the vibrant and growing iPhone development community. If you’re an iPhone developer, check out the Mobile Orchard website and podcast, which even has a best of Stack Overflow for iPhone developers!\n\n\nJoel and I are tremendously impressed with Apple’s development push for the iPhone, including the App Store. It is remarkably Microsoft-like, in a good way — it’s completely driven by developers, developers, developers! “If you want to be a mobile developer, your #1 choice has to be Apple.”\n\n\nSome comments on the sad state of Windows Mobile (rumored Silverlight reboot), Google Wave (go HTML 5!) and the Palm Pre (is HTML/JavaScript/CSS a viable development platform)?\n\n\nOne downside of discussing questions on the podcast is that it leads to the Hawthorne effect, and sometimes radically changes the state of the question.\n\n\nJoel recommends SICP, The C Programming Language, The Unix Programming Environment, and Introduction to Algorithms as solid books for programmers who want to brush up on their fundamentals and potentially do well at programming interviews.\n\nWe recommend checking out Jason Calacanis’ podcast, This Week in Startups.\n\nWe answered the following listener questions on this podcast:\n\n\nJosh Hunt: “The first answer to my question, the answer that got the highest number of votes, was not correct — has Stack Overflow failed in the ‘first answer is best’ aspect?” and “We’ve been taught algorithms in our high school using pseudocode. What do you think of this?”\n\n“If I’ve applied for a job at Fog Creek (or anywhere else) and didn’t quite make it, what can I do to improve myself as a programmer and have a better chance next time?”\n\nOur favorite Stack Overflow questions this week are:\n\nBubble Sort Homework. Homework questions are frowned upon on Stack Overflow, but there is a right way to ask them — and a way to get the community to help you while helping each other.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/06/11/podcast-57/"
    },
    {
        "title": "Podcast #58",
        "content": "This is the 58th episode of the StackOverflow podcast where Joel and Jeff discuss HTML encoding, designing “safe by default”, whether a question can be too simple, and the art of beta testing.\n\n\nJoel wonders if doing his Visual Studio development in a virtual machine is a viable solution. I say in this era of cheap 8 GB RAM and quad core CPUs, why not?\n\n\nAs always, Naming Is Hard. We’re struggling with naming the hosted Stack Overflow that Fog Creek is working on. Joel likes the name “Stack Exchange”. It’s not bad, but we wonder if anyone listening has a better idea?\n\n\nI admit, finally, that Joel was right about something. Don’t HTML encode data that’s stored in your database! Take the good advice of Damien Guard and Joel Spolsky! You can choose to store both representations, but don’t store just the HTML; go with the raw data at the highest level of precision.\n\n\nA brief political rant about the evil of view engines that fail to HTML encode by default. The problem with this design choice is that it is not “safe by default”, which is always the wrong choice for a framework or API. Forget to encode some bit of user-entered data in one single stinking place in your web app, and you will be totally owned with XSS. Believe it. I know because it’s happened to us. Multiple times!\n\n\nJoel maintains that, with a strongly-typed language and the right framework, it’s possible (in theory) to completely eliminate XSS — this would require using a specific data type, a type that is your only way to send data to the browser. That data type would be validated at compile time.\n\n\nWe continue to ramp up on our computer enthusiast site, superuser.com — we just launched a logo design contest at crowdspring. This will be as close as we ever get to an “anything goes” website, and I’m excited to see what happens.\n\n\nI maintain your online behavior shouldn’t be all that different than your general public behavior. I say “don’t post anything you wouldn’t want your mom to read.” Joel cites the Wall Street rule: “don’t ever write anything you wouldn’t want published on the front page of the Wall Street Journal.” Also, systems where people are able to behave as if nobody is watching are fundamentally broken systems.\n\n\nJoel says that the only bad simple question is a duplicate simple question. I say simple questions are OK as long as they’re actually interesting (in some way) for other users to consider and answer. To prove his point, Joel actually asks the question on Stack Overflow: How do I move the turtle in LOGO? Do you think this question adds value?\n\n\nSome ruminations about the challenge of asking questions when you are a total beginner and not even sure what you should be asking. Perhaps the best solution there is “screenshots”, or in code parlance: just shut up and show us the code!\n\n\nBeta testing is an art, and perhaps the first beta test barrier is if people can actually understand whatever the heck it is you’re trying to do. There’s often a disconnect between what beta users say (particularly gung-ho early adopters who love betas) and what typical users do. Unfortunately at the early beta, you lack the one thing you’d benefit from most: lots of usage data!\n\n\nThe absurdity of the term “Content Management System”. It’s for, y’know, managing.. content. What does this even mean? Trying to be everything to everyone means you solve nobody’s problem particularly well. Maybe this is why Fog Creek’s hosted FogBugz is not attempting to expand thematically beyond their core business: software bug tracking.\n\nRemember that random NTP server that Joel ran into? They’re back — and they made a slightly .. uh.. disturbing .. theme song for us! Thanks! We think!\n\nWe answered the following listener questions on this podcast:\n\n\nJoseph: “Now that you have the jobs connection up and running, how do you think that will affect the questions and answers on the site — that some future employer might see what they’re doing?”\n\nFrank: “What are your thoughts on getting beta testers (and getting good beta results) when you don’t necessarily have a super high profile project?”\n\nOur favorite Stack Overflow questions this week are:\n\nTwitter image encoding challenge. Not necessarily useful, but a really fun programming challenge. Great use of the bounty system as well!  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question\nusing nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/06/18/podcast-58/"
    },
    {
        "title": "Podcast #59",
        "content": "This is the 59th episode of the StackOverflow podcast where Joel and\nJeff sit down with Damien Katz (of CouchDB) to discuss non-conventional databases, non-conventional programming languages, and taking on non-conventional programming projects.\n\n\nStop, do not pass go, do not collect $200: watch Damien Katz’ outstanding Rubyfringe presentation, CouchDB and Me. It is a hugely inspirational presentation for any working programmer. I can’t recommend it enough. Go watch it now!\n\n\nWe have forgiven Damien Katz for working on Lotus Notes. Mostly. To his credit, he did write some very cool code, as documented in his famous formula engine rewrite.\n\n\nYou can think of Damien Katz’ CouchDB project as the distilled “good stuff” from Lotus Notes. Wait! Why are you running away? Come back! It’s not that bad! We swear!  \n\n\nDamien used Erlang to build CouchDB, largely because it makes error recovery and multiprocessing so much easier. Or as Damien says “what happens when everything goes to s**t”. In other words, networking fails, or you don’t have enough memory to complete the operation. This is stuff that is very tricky in C++, but almost trivial in Erlang.\n\n\nCouchDB took off when the JSON and JavaScript bindings were produced — and were a big hit. This probably says something about trying to popularize your open source project: is it accessible to the average programmer?\n\n\nOn Damien’s journey as a software developer: “eventually you get tired of working on stuff for other people.”   \n\n\nThe negotiations with IBM included the synonyms “douchebags” and “vapid bureaucrats”. They seemed to appreciate his honesty (at least for the set of bad eggs he’s referring to), and Damien is a guy who has spent some time in the bowels of IBM and knows what he is getting into.  \n\n\nI liked that Damien, when he reached analysis paralysis in the middle of his project, turned to the soothing, calming midwestern voice of Steve McConnell — and the classic (and my favorite) book Code Complete 2.\n\n\nWhile building up two new 1U servers for superuser.com, powering on the server with the cover off would trigger the Moro reflex in our 3 month old baby… two rooms over! That’s how loud they are. REALLY loud. I was happy to have UPS take those out of my house.\n\n\nI didn’t appreciate how much happier I would be with community moderation — I am unburdened from being the judge, jury, and executioner of the occasional serious misbehavior. It’s a group discussion now — thanks to our awesome community moderators, we can reach a concensus together!\n\n\nWhat does it mean for an open-source project to be version 1? Version 0.1? Version 0.5? When is it good enough to use? Should you look at commit activity; is the project alive? Or should you look at how many people are actually using the software, regardless of version number or commit activity?\n\n\nIf you’re a developer, and wondering what specific problem CouchDB could solve for you, Damien says: “would the data you have typically be stored in a document in real life?” The classic example is a contacts database. Do you have a phobia of storing large blobs in a database?\n\nI think most hardware-oriented software developers have gone through this thought process at least once: “Hmm. I have gobs and gobs of system memory. Do I really need a swapfile on disk any more?” Don’t try to outsmart the operating system designers, unless you’re an operating system designer. And that goes triple for programmers who think they are language designers!\n\nWe answered the following listener questions on this podcast:\n\nMaayan: “What is your stance about using open source software in production code, when the open source project in question is working, but is either below 1.0 or is not actively maintained?”\n\nOur favorite Stack Overflow questions this week are:\n\n\nCan I do transactions and locks in CouchDB? A brief discussion of how this works in CouchDB versus a typical SQL database.  \n\nAny benefit or detriment from removing a pagefile on an 8GB RAM machine? short answer: no. Long answer: no. Fantastic answer by user quux, who also has an excellent sysadmin blog that we recommend checking out.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/06/24/podcast-59/"
    },
    {
        "title": "Podcast #55",
        "content": "This is the 55th episode of the StackOverflow podcast where Joel and Jeff discuss killer IDEs, how much interview feedback is appropriate (for both parties), and how to teach young programmers who think they know it all.\n\n\nServer Fault has launched! If you’re a sysadmin or IT pro type, please join us there.   \n\n\nYou may have noticed that woot! is the launch sponsor of Server Fault. These sorts of (hopefully) tasteful advertiser relationships underwrite continued development of the site — and let us do cool things like bring on Geoff Dalgas as Stack Overflow Valued Associate #00003!\n\n\nWhat does it mean to be successful as a writer online? Perhaps one metric of success is getting people you respect and admire to link to your writing in an organic, natural way (that is, without asking them to).\n\n\nSteve Yegge indicated he may blog anonymously or not at all in the future. We suspect that Steve’s high profile as a notable software blogger makes it difficult for him at Google, which is a notoriously secretive company. Not Apple secretive, mind you, but close. We agree that as much as Steve writes, it’s coming out of him one way or the other, but unfortunately it may be anonymous from this point on. \n\n\nIf we can render virtual 3D worlds at 60 frames per second, why haven’t our software development IDEs evolved much beyond ASCII text for layout? How about visual comments? And Lutz Roeder wonders about Interactive Source Code (ppt). Why not have diagrams in the code, or even better, dynamic visualization of the data structures in that code?  \n\n\nMy thoughts on what it takes to build a killer IDE. I’m still waiting, by the way.  \n\n\nAn analysis of what it takes to have a vibrant add-in ecosystem, while still folding in the most popular add-ins to the core of the product, where they rightfully belong. This is a fine line to walk, particularly for commercial software.\n\n\nIt really is amazing how many problems go away when your software is all open source. Except for the “how do we pay our employees” one.\n\n\nHow much feedback should job interview candidates get when the interview doesn’t work out? Joel and I have an extended discussion. This is a lot trickier than it seems at first glance. At some level, perhaps you have to treat job interviews (particularly at extremely selective companies like Fog Creek) like romantic relationships — sometimes there just isn’t chemistry. Rather than over-analyze it, learn what you can, and move on to the next relationship.\n\n\nDon’t ask what programming language beginning programmers should learn — ask what type of programming do you want to train people to do! Do you want to teach theory, or skill?   \n\n\nJoel’s example of the MIT curriculum of robot programming is a fantastic one: “what they care about is not the actual language. It’s not a matter of teaching you the Python, it’s teaching you to be a programmer in an environment where everything is constantly falling down around you, nothing as works as documented, even if there were documentation, and there isn’t, and if there was documentation, it was probably written by a technical writer who was afraid to go into the programmer’s offices because the last time she went in she got her head bitten off.”\n\n\nHow to deal with headstrong know-it-all beginning programmers? Been there, done that. And by that I mean I was one, too. You have to fail. In fact, make them fail, if you can. As Joel says, they have to learn that “no code that you write can ever possibly work.” We know. Alternately, throw a copy of Code Complete at them, if they’re in a place where they can actually learn from it.\n\nPossibly one of the worst scenarios for beginning programmers is to be in a company where everyone is a beginning programmer. It does help to have some seasoned veterans in the mix, otherwise you’re basically living out Lord of the Flies — and if you don’t know who Piggy is, then it’s you.\n\nWe answered the following listener questions on this podcast:\n\n\n“I read on Steve Yegge’s blog that he’s not going to blog any more. What are your thoughts on this?”\n\n\nChris: “Can you point to a particular article or time where you realized that your blog was going somewhere?”\n\nOhad: “Why can’t rich comment be put in source code as comments? Why not use images, document snippets, and so forth?”\n\nOur favorite Stack Overflow questions this week are:\n\n\nHow can I teach a know-it-all beginner programmer? Many of us start out this way, sadly, so put yourself in.. er.. your own shoes.\n\nWhat programming language should be taught in Computer Science 101? Maybe the question is fundamentally wrong.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/05/28/podcast-55/"
    },
    {
        "title": "Podcast #54",
        "content": "This is the 54th episode of the StackOverflow podcast where Joel and Jeff discuss bespoke software development, URL routing, the God Algorithm, and getting your database under version control.\n\n\nWe need to talk to you about your flair. Specifically, your User Flair! It’s a small badge you can embed in your own website to show off your identity and “street cred”, such as it is, on Stack Overflow and Server Fault. If that’s not enough, you can also put it on a t-shirt. Or dress up like the Facebook guy. Hey man, these are your life choices, not ours!\n\n\nA brief discussion of how ASP.NET MVC URL routes should be declared. We do it through an custom attribute attached to the top of the method signature, which we feel provides excellent locality of information.\n\n\nPart of the promise of Stack Overflow was that it would be run by the community. We are trying to continue delivering on that promise by electing new community moderators, and having a moderation policy that all the moderators (including the core team) abide by.\n\n\nSpeaking of Stack Overflow DevDays, “the” Jon Skeet is confirmed to be a speaker at the London DevDays; Scott Hanselman will be at the Seattle and San Francisco DevDays.\n\n\nWe now have better, AJAX-y support for handling duplicate questions. We believe duplicate mapping is mostly a human-driven task, but we want to streamline the workflow as much as possible.\n\n\nPart of our development style on Stack Overflow is to build features as they become needed, rather than coding speculatively, trying to guess what will become important later. Our UserVoice site has been very helpful in this regard, as we try mightily to retire the top rated user feature requests and bugs. Well, the ones we agree with, anyway..\n\n\nHow do you bid on software development projects without cutting corners and still stay competitive? Joel shares his thoughts. “Your job is not to deliver a spec, it’s to step into the client’s shoes and figure out what their problem is, and how it can be solved with computers.”\n\n\nI maintain this is the blessing and curse of contract software development — you are a proxy employee during the contract. This can be good, if it’s a client you like and have empathy with, or it can be bad, if it’s a client that you don’t respect, or that you have absolutely nothing in common with. Would you work for that company?\n\n\nOn the topic of bespoke software, Joel recommends the oddly named book How to Castrate a Bull: Unexpected Lessons on Risk, Growth, and Success in Business. Consider selling coffee makers to a hotel — hotels don’t really want a bunch of coffee machines (even if that’s what they ask for), they want a system that guarantees they never have to think about coffee makers in their rooms again. This is what it means to be “enterprisey”. This is what big consulting firms do.\n\n\nIf you’re worried about backdoors in your code, first, don’t work with scumbags. But if you work at an industry where there is a lot of risk, such as banking, then you need an audit trail on everything, and perhaps an internal audit department that does nothing other than check things periodically. A certain percentage of random auditing may be preferable to strict gates on every action.\n\n\nA discussion of O(1), which sort of seems like “The God Algorithm” at first glance. But you do have to define how ‘big’ that 1 is. There are dimensions of space and time here that aren’t immediately apparent.\n\n\nOne quirk of keeping your database under version control is that you have to make a distinction between the schema, the data, and the fixed data. At the very least, have tools that let you diff your database! And ideally integrate with your build and deployment. Have you looked at the Rails way of handling database changes, with Migrations?   \n\nThanks to our podcast sponsor, Mint — they’re looking for a great developer!\n\nWe answered the following listener questions on this podcast:\n\n\n“Is it true that the more the complex the software system is, the simpler it is to manage, because there are more rules defining its behavior?”\n\n\n“How do you win software development contracts, while still delivering quality?” Based on an existing question.  \n\n“How do you deal with a large codebase, and disgruntled employees leaving backdoors in the code?”\n\nOur favorite Stack Overflow questions this week are:\n\n\nDo you source control your databases? The answer is always yes! Yes! YES\n\nWhat’s Up with O(1)? Worth some thought.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/05/21/podcast-54/"
    },
    {
        "title": "A Theory of Moderation",
        "content": "We believe deeply in community moderation. That’s why we appoint Pro Tempore Moderators and, ideally, democratically elected community moderators for every site in our network. But what do community moderators do? The short answer is, as little as possible!\nFrom the very first version of Stack Overflow faq way back in mid-2008, our goal has always been to give power back to the community:\n\nStack Overflow is run by you! If you want to help us run Stack Overflow, you’ll need reputation first. Reputation is a (very) rough measurement of how much the Stack Overflow community trusts you. Reputation is never given, it is earned by convincing other Stack Overflow users that you know what you’re talking about.\n\nWe designed the Stack Exchange network engine to be mostly self-regulating, in that we amortize the overall moderation cost of the system across thousands of teeny-tiny slices of effort contributed by regular, everyday users. Specifically, per the reputation privileges:\n\n\nUsers with 15 rep can flag posts.\n\n\nUsers with 500 rep can review posts from new users.\n\n\nUsers with 2,000 rep can edit any question or answer in the system.\n\n\nUsers with 3,000 rep can cast close and open votes.\n\n\nUsers with 10,000 rep can cast delete and undelete votes on questions, and have access to a moderation dashboard.\n\n\nUsers with 15,000 rep can protect posts.\n\nUsers with 20,000 rep can cast delete votes on negatively voted answers.\n\nEven with active community self-regulation, moderators occasionally need to intervene. Moderators are human exception handlers, there to deal with those (hopefully rare) exceptional conditions that should not normally happen, but when they do, they can bring your entire community to a screaming halt — if you don’t have human exception handling in place.\nThe most common moderator task is to follow up on flagged posts. Every post contains a small flag link, which anyone with 15 reputation can use.\n\nPosts can be flagged as spam, offensive, or just general “needs moderator attention” with an explanatory comment or link.\n\nOnce flagged, a post increments a flag count that shows up in the topbar for every moderator.\n\nIf you see anything in the system that is evil, weird, or in any way exceptional and deserving of moderator attention for any reason… flag it! That’s the primary job of a moderator: to look at every flagged post, and take action if necessary.\nModerators also have some special abilities necessary to handle those rare exceptional conditions:\n\n\nModerator votes are binding. Any place we have voting — close, open, delete, undelete, offensive, migration, etc — that vote will reach the threshold and take effect immediately if a single moderator casts a vote.\n\n\nModerators can lock posts. Locked posts cannot be voted on or changed in any way.\n\n\nModerators can protect questions. Protected questions only allow answers by users with more than 10 reputation.\n\n\nModerators can see more data in the system, including vote statistics (but not ‘who voted for this post’) and user profile information. \n\n\nModerators can place users in timed suspension, and delete users if necessary.\n\nModerators can perform large-scale maintenance actions such as merging questions and tags, tag synonym approvals, and so forth.\n\nSo in summary, if you are a community moderator on a Stack Exchange site, here’s what to expect:\n\n\nAs a moderator, your actions now represent the community, so you will be held to a higher standard of behavior. You are an ambassador of trust, with the same sorts of rights that the official development team and community coordinators have.\n\n\nYour goal is to guide the community with gentle — but firm — intervention. Respect your fellow community members at all times; demonstrate fairness and impartiality in your actions.\n\n\nWhenever possible, try to leave frequent comments on posts where you’ve taken (or considered taking) a moderator action, explaining the reasoning. This is important so that community members can learn the norms of the community and the moderation policies.\n\n\nKeep the site reasonably on topic by closing, migrating, or removing blatantly off-topic questions.\n\n\nRegularly check for flagged posts, and decide if further action is warranted.\n\nIn the case of serious disputes, communicate directly with users via email to help mediate and resolve those disputes.\n\nWhile being a community moderator is a volunteer (but often elected) position, and participation is strictly voluntary at all times, we do require three important things of all elected community moderators.\n\n\nYou must accept the community moderator agreement within 30 days of election or appointment and remain active on the site.\n\n\nYou must stay in communication with your fellow moderators and work with them to resolve any disagreements within the team. There is a process in place for a team to remove moderators who are unable or unwilling to cooperate.\n\nOn Stack Overflow, due to its immense size and scale, there is another requirement. If you spend time on the site participating but aren’t regularly resolving flags, you may cede your right to remain a community moderator.\n\nA lot of the moderation work is extremely mundane, almost janitorial. It’s deleting obvious spam, closing blatantly off-topic questions, and culling some of the worst rated posts in various dimensions.\nThe ideal moderator does as little as possible. But those little actions may be powerful and highly concentrated. Judiciously limiting your use of moderator powers to selectively prune and guide the community — now that’s the true art of moderation.",
        "url": "https://stackoverflow.blog/2009/05/18/a-theory-of-moderation/"
    },
    {
        "title": "Podcast #51",
        "content": "This is the 51st episode of the Stack Overflow podcast, where Joel and Jeff sit down with Joel’s business partner, Michael Pryor of Fog Creek Software, at Stack Overflow world HQ (i.e., Jeff’s house) in El Cerrito, California.\n\nAt my home, Joel discovers my secret clock fetish. I have a pong clock, a nixie clock, and I’d love to have an oscilloscope clock!\nJoel and Michael went to the Computer History Museum, one of my favorite places in the world. It’s not just big iron; Michael geeked out over his old Apple //gs, and Joel enjoyed revisiting old HP calculators.\nStack Overflow comments are now elevated to the main page. We’ve gone through several user feedback cycles on this, and we feel the current comment layout is a good balance. The preference for this is still in the works. This was partially inspired by the way comments are displayed on SFGate articles (scroll to the bottom to see how comments are displayed there).\nA discussion of the value of meta — discussing Stack Overflow on Stack Overflow. How much meta is acceptable? Where should meta-discussion go? Isn’t the podcast and the blog meta enough? Is there a need for stackoverflowoverflow?\nOne problem is that the system we’ve built is good at focused, directed Q&A but quite bad at arbitrary discussion. It’s why Joel objected to me proposing the use of the Stack Overflow engine for the Joel on Software discussion boards and the Business of Software discussion boards. Not a good fit!\nConsider an analogy with school — if you don’t like the after school activities students are engaging in, it’s because you didn’t provide a good set of alternatives for them. But perhaps a better analogy is that of students who become teachers; they need a “teacher’s lounge” area.\nThe whole point of Stack Overflow is synthesizing _better _answers than what you can commonly find on the open internet. If the answer is already good and easily findable elsewhere on the internet, leave it there! Don’t repost the answer on Stack Overflow unless you’re enhancing and improving the answer in some small way.\nHow is Babby Formed has been removed from Yahoo Answers, and we have removed Programming at Sea.\nPart of the philosophy of doing lower-level things yourself, such as building your own computers (or even learning C), is to do it enough to understand it — and learn something along the way. It doesn’t mean that you need to (or even should!) do those things forever, but the journey of learning and discovery is its own reward. The best reference for programmers who want to learn what goes on underneath their code is Charles Petzold’s outstanding book, Code.\nLearning black hat techniques is important, because when good is dumb, evil will always triumph. Don’t be dumb. Know what’s out there, and how to exploit it. The morality of studying black hat techniques derives from what you do with that information. Will you sell it? Distribute it and actively attack ? Or quietly disclose it to the vulnerable software or website?\nJoel marvels at the enormous size of the Microsoft campus since he worked there; when he was at Microsoft in the early 90’s, there were around 5,000 employees and it was not uncommon to see Bill Gates walking around the campus. The Redmond visitor center is a disappointment; it should be more like the Computer History Museum, highlighting Microsoft’s central role in so much of that history to date.\nApparently the best estimates are that there are around 9 million programmers in the world, roughly the population of New York City. Imagine a whole city of nothing but programmers. On second thought, that’s too scary — let’s not.\nA small clarification on last week’s Steve Yegge project; Steve is not the author of the Google JavaScript compiler, but a client of it.\n\nWe answered the following listener questions on this podcast:\n\nPeter: “What do you think about the practice of finding an answer, and re-posting it on Stack Overflow?”\nJuma: “Should software engineers learn how the underlying hardware works?”\n\nOur favorite Stack Overflow questions this week are:\n\nBlack hat knowledge for white hat programmers. Definitely important; if you aren’t performing basic due diligence on what the bad guys do, you’re likely to end up like one of these clowns.\nDeveloper Salaries to Rise? We’re not sure that the number of CS degrees being awarded necessarily correlates with the number of programmers seeking jobs.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/04/29/podcast-51/"
    },
    {
        "title": "Podcast #52",
        "content": "This is the 52nd episode of the StackOverflow podcast — our one year anniversary — where Joel and Jeff discuss the launch of Server Fault, how you determine if your code is smelly (or just aromatic), how programmers learn by doing, and how good ideas are often too crazy to copy until it’s too late.\n\n\nWe’ve been podcasting for one full year now. Hopefully we’ve gotten better at this podcast stuff and not worse, but the jury is still out.\n\n\nServer Fault, the first sister site to Stack Overflow, is now in private beta. Server Fault is for system administrators and IT professionals. If that’s you, come join us!\n\n\nWe’ve only done one major branch in Stack Overflow to date, and it was excruciatingly painful in Subversion, even after updating to 1.6 which has “better” support for merging. We’re considering switching to Mercurial to make future merges feel a bit less like gnawing our own limbs off.  \n\n\nJoel announces that Fog Creek is working on a hosted version of Stack Overflow, and they are looking to hire a software engineer to work on the project. If it works out, you get the whole Fog Creek relocation package! If you’ve ever wanted to work on the Stack Overflow codebase (and you’re looking for a full time gig) this is your chance!  \n\n\nThe prospect of an outside developer looking at our Stack Overflow code base makes us nervous. Maybe this is a healthy reaction — is any code ever good enough? Probably not.\n\n\nWe do believe in continuous refactoring, and part of that is developing free from fear. Don’t be afraid to break stuff! Have some unit tests, and when things do break, be able to fix it very rapidly.\n\n\nTest Driven Development is possibly the worst and most incorrect name ever applied to a concept in software engineering, ever. And that’s saying a lot. TDD is more about design than testing, but when every TDD tutorial starts with “ok, we write a test to verify..” it’s sort of hard to justify. Perhaps Behavior Driven Development would be a better name.\n\n\nTDD, as far as testing is concerned may be a bit too programmatic. Never underestimate the power of a skilled human tester. \n\n\nWe learned ASP.NET MVC as we went. This is a surprisingly common pattern; Joel can’t ever remember a time when he wasn’t building a new application in a new framework. Programming is, almost by definition, continuously learning: your entire career will be one long, unbroken string of learning one new bit of technology after another. Programming is shorthand for learning how to learn.\n\n\nJoel asks: as a professional programmer, how often do you start a new major project that’s going to have a long life expectancy? It’s startlingly rare. Even at Fog Creek they’ve had maybe four in the entire time the company has existed. So when you start a new project, you almost have to bet on the new framework that you think will be vibrant and alive five years from now — that means you’ll be learning as you go, again! There is a double whammy of learning the framework and a language at the same time though — that’s extra-risky.\n\n\nA brief discussion of why unconfirmed “no-touch” user actions are so dangerous on the web; they are a XSRF playground! If the user holds a cookie to your site, and an attacker can get them to click on a GET or POST, they have just forced the user to take that action. We added an interstitial confirmation to a few actions to prevent this; the particular case that was extremely dangerous was associating a new OpenID provider in one click. If that OpenID provider was rogue and controlled by the attacker, they now own the account.\n\n\nJoel notes that if you’re shy about putting things online, you are letting other people control your online identity — and that will hurt you much more in the long run than any potentially questionable things you might possibly put online.\n\n\nOne of the goals of creating Stack Overflow was as a vehicle to build your online identity as a professional programmer, a virtual set of bread crumbs showing that you indeed know your stuff, and your programming peers recognize you for your knowledge.   \n\n\nJoel gave a speech about Stack Overflow at Google recently. What question did Guido van Rossum, the creator of Python, ask?\n\n\nA brief mention of stackoverflowoverflow … overflow.  \n\n\nBy the time anyone tries to copy an iPod, Apple is already a generation ahead. Continual innovation and evolution is always the best approach to defeat those who would blindly copy what you’re doing, and that goes double for software which is infinitely malleable. If your software isn’t continually evolving, it is effectively dead!\n\n\nGood ideas sound too crazy for anyone to even consider copying them. The type of people who copy are not interested in anything that remotely resembles risk; they are only going to copy proven successes. So if you’re starting out with a new crazy idea (and you should be!), this is unlikely to be a practical concern.\n\nJoel’s computer has apparently been taken over by a Mexican wrestler named Gordo. I have no idea.   \n\nWe answered the following listener questions on this podcast:\n\n\nPaul: “I’ve seen some companies do background checks online with MySpace, Facebook, Twitter, etcetera. Should developers be concerned about old, embarrassing code being posted online?”\n\nTom: “As a startup entrepreneur, what steps should you take, if any, to protect your intellectual property?”\n\nOur favorite Stack Overflow questions this week are:\nNone! Every single Server Fault question I’ve asked is my favorite this week! I’ve had all these sysadmin and IT pro questions welling up inside me for months, and it was so intensely satisfying to finally be able to ask them and get really great answers. Please join us in the beta!\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/05/07/podcast-52/"
    },
    {
        "title": "Podcast #53",
        "content": "This is the 53rd episode of the StackOverflow podcast where Joel and Jeff sit down with Wil Shipley of Delicious Monster to discuss the shifting sands of Apple and Microsoft APIs, the value of software development conferences, intuition versus empiricism for developers, and “parrot programming”.\n\nLike all the coolest developers, Wil wrote a web browser. And he’s not shy about mentioning it!\nWil and Joel reminisce about NeXT computers, Steve Jobs’ gig after he was unceremoniously ousted from Apple by John Sculley. Wil wrote a lot of Objective C for NeXT before it was popularized on the Mac.\nWe complain about the fact that Microsoft seems to release a new framework every other year that seems to obsolete the previous framework, as famously documented in Joel’s article How Microsoft Lost the API War.\nJoel announces Stack Overflow Developer Days, in the platform agnostic spirit of the site. Five cities, a great set of speakers from many different disciplines, one day, $99. And yes, we’re trying to get Wil Shipley to speak at the San Francisco leg.\nWil has some fantastic advice for software entrepreneurs — witness his presentation How to Succeed Writing Mac Software (pdf). It motivated at least one developer to enter the priesthood.\nSome thoughts on the utility of conferences for software developers. You should probably try to go to one conference per year, either because you’re interested in the speakers, or you’re interested in networking with other programmers. Beyond that, the benefits are unclear.\nWil notes that WWDC is a unique opportunity to get a lot of your detailed Mac programming questions answered by the people who wrote the APIs. Remember, one of the biggest reason to attend these conference is to hang out in the hallways with your fellow developers!\nI don’t think the legendary Apple secrecy is a good strategy for a developer platform. Witness the absurdity of the iPhone developer NDA.\nOn the other hand, all those developers who learned about WinFS at Microsoft conferences from 2005 to 2007 must be a little cheesed that the feature never shipped. So it is possible to talk about stuff too early.\nWil Shipley is also agnostic about unit testing: Unit Testing is Teh Suck, Urr. Isn’t using programs to test programs a case of “who watches the watchmen”? Also, is every bug ultimately worth fixing?\nIs excessive reliance on unit testing a case of Empiricists versus Intuitionists, as dramatized in the book The Intuitionist? As you get more years of programming experience under your belt, you could argue that you have a (slightly) better “spider sense” of what the problem areas may possibly be in your code. Ideally you should use both empiricism and intuition, of course. Nobody programs using the force. Well, except for Knuth.\nEven a programmer as experienced as Wil occasionally runs afoul of the First Rule of Programming: It’s Always Your Fault. His anecdote involves writing an email to a VP at Apple, though. Humility is often the best approach; “I think I’m doing something wrong here, can you help me figure this out?”\nJoel says no question is too simple for Stack Overflow, and we discourage people from responding with RTFM or “too trivial to even ask”. These questions may be simple, but think about each question in terms of future programmers who might encounter this question; is it relevant enough to the world to help them, and not just the one guy or gal with that one ultra-narrow question? If so, then it’s worth asking.\nJoel calls it page faulting in knowledge. Wil calls it “parrot programming”: newbie programmers who don’t really understand what they’re doing, but occasionally get a search result cracker, so that particular programming behavior is rewarded and reinforced. This is why we encourage neophyte programmers to buy a few key programming books, so they can underpin their giant heap of randomly page faulted knowledge with deeper principles and concepts.\n\nWe answered the following listener questions on this podcast:\n\nKris: “What are your thoughts on the value of attending conferences?”\nClay: “As you become a more experienced programmer, do you use more intuition as a part of your decision making?”\n\nOur favorite Stack Overflow questions this week are:\n\nObjective-C: what does @private mean? Is this question too simple to be asked?\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/05/14/podcast-53/"
    },
    {
        "title": "Podcast #50",
        "content": "This is the 50th episode of the StackOverflow podcast, where Joel and Jeff sit down with Steve Yegge of Google and the most excellent Stevey’s Blog Rants.\n\n\nThis episode was recorded on site at the Kirkland, Washington Google office, where Joel gave a talk earlier in the day.\n\n\nA brief discussion about the APL language, whose keywords are symbols. Imagine how challenging it would be to program in a language where you need a special keyboard. There’s a more popular (not sure “popular” is the right word) version of APL named J which drops the symbols in favor of plain ASCII.\n\n\nHow big a fan of working at Google is Steve? He worries that new hires from college will expect the rest of their working life to be as good as their Google experience.\n\n\nSteve can finally talk about what he was working on, which he was so vague about on our previous podcast with him. Mostly, he was disturbed at the state of JavaScript tooling at Google — “dude, you spelled it fuction again.”\n\n\nThe state of the art in tools means painstakingly adding support for each individual language into each individual editor. What if there was a way to plug first-class language intellisense / compilation functionality into any editor — in a generalized way? That’s the problem Steve set out to solve.\n\n\nTake compilers that are defined for IDEs — Eclipse has three Java compilers built into it — a fast inaccurate one as you type, a better batch one, and then a great big one that does exhaustive analysis on large trees (Steve says Eclipse has “a better Java compiler than the Java compiler”.) This is all necessary to get good editor support! Why not take these compilers and run them on the google infrastructure, so they are commoditized and available to any editor?\n\n\nSteve says the way tools and languages integrate today is utterly backwards. Languages should support the tools, rather than the other way around. “We should have been doing this for 20 years!”  \n\n\nPrototype doesn’t play well with the JavaScript compiler at Google, partly because nobody has actually tried to compile the code before! It exposes some problems that weren’t immediately obvious. All the common JavaScript frameworks require some tweaking for the JavaScript compilation process.\n\n\nSteve likens the comparison between compilation and dynamic typing to taking a shower and brushing your teeth. You should do both! The only reason we can’t do both of these things is because, as Steve points out, our tooling currently sucks.  \n\n\nJavaScript has a more interesting origin than I realized — it was originally based on Scheme.\n\n\nPer Steve, Scala is like Haskell but with more concessions to real world programming. He points out that the great thing about Java is the fantastic tooling, which means it’s ultimately a better programming experience than a theoretically “superior” programming language.\n\n\nJoel doesn’t hate Unix; FogBugz supports Unix (although that support tends to be complex and costly) and Joel regularly runs cygwin on his laptop. That said, modern Unixes have their faults too. Steve observes that the only way to determine what packages are installed on Ubuntu is to diff the dpackage output against a clean machine. Also, Firefox is very slow on Linux relative to Mac and Windows.\n\n\nStack Overflow is for programming related questions, but defining programming related isn’t easy. There will always be a gray area, which is further complicated by the fact that we do want the _occasional _fun questions — we just don’t want the system overrun with the stuff.\n\nSteve points out that even Amazon has examples of “fun” product reviews that wouldn’t normally be permitted, such as On Amazon, All of a Sudden Everyone’s a Milk Critic and The Story About Ping.  \n\nWe answered the following listener questions on this podcast:\n\n“What is Joel’s history with Unix? He mentions Unix a lot in vaguely pejorative ways. Did he have a bad early Unix experience?” No, Steve, the caller did not say “eunuchs”!  \n\nOur favorite Stack Overflow question this week is:\n\nWhat do I need to do in order to be a programmer out at sea? Exhibit A in the eternal close wars. We aren’t sure this is a valid programming question, but some people object to it being closed. For that matter, some people object to anything being closed.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/04/23/podcast-50/"
    },
    {
        "title": "Podcast #49",
        "content": "This is the 49th episode of the StackOverflow podcast, where Joel and Jeff sit down with Alex Papadimoulis of The Daily WTF to discuss the distinction between IT/sysadmins and programmers, online justice for webforums, user-friendly IDs for databases, and the future of software distribution.\n\n\nSome of our favorite Daily WTF entries: Spaced Out and Have You Tried JavaScript? Alex likens their writing process to the Vital Signs column in Discover Magazine.\n\n\nAs we build up serverfault.com , the already grey area of “which question goes where?” becomes even .. greyer. The animal, vegetable, mineral problem is not going away any time soon. That said, if you can attach code to your question, it probably belongs on stackoverflow.com. And if your question involves a server (and no code), it probably belongs on serverfault.com. But there are always exceptions, like this question about working conditions.\n\n\nI was surprised to find that there seems to be no critical mass of sysadmin/it bloggers online, certainly no equivalent to the legions of high profile programming bloggers. Thus, we’ll be initially seeding serverfault.com with those programmers from stackoverflow.com who cross over and also wear the sysadmin/it hat in their work.\n\n\nWhat if there was a programming language that used only abstract symbols instead of existing words in a human language? There is! But it’s only a research project. (And I found out that Joel wasn’t kidding about APL!)\n\n\nSome clarifications about the localization discussion last week. Joel and I continue to disagree about priorities here, is what it boils down to.\n\n\nJoel and Michael are fans of the hellban concept, but I find it to be a bit much like the guys in black masks making people disappear overnight. We implemented a penalty box instead. The hellban might be appropriate for random spammers, but for engaged members of a community, it’s a terrible system of justice. We also improved our flagging system ala Craigslist so it’s easier to communicate with moderators.  \n\n\nThe specific source of friction was editing. It turns out that the spirit of an edit is as important as the technical rationale for it. We love and encourage editing, of course, but it’s possible to follow the absolute letter of the law and still be toxic to the community. Joel says that the typical programming mindset makes us particularly prone to this behavior.\n\n\nYou have to be able to let things go. One of the curiosities of Wikipedia is that the most obsessed users always win. You can’t compete with someone who devotes hours every day to maintaining their pet topic, with scripts to protect it. This system, on some level, must work because if it didn’t Wikipedia would be permanently broken.\n\nIn addition to software increasingly running in the browser via various mechanisms, we view services like Valve’s Steam as the future of software distribution. Ultimately it should be as easy and painless to install software as it is on the closed-ecosystem iPhone and its App Store. The tension between digital distribution and traditional retail channels is still a major hurdle, however.\n\nAlex liked this Stack Overflow question:\n\nDatabase-wide unique-yet-simple identifiers in SQL Server. Great question having to do with the human readability of IDs for unique database records. Lots of food for thought. Alex recommends unique lengths per record type, or the “Smart Key” approach of encoding dates and other unique things in the id.  \n\nWe answered the following listener questions on this podcast:\n\nAndy Brice: “What will happen with the market with downloadable software? Everything in the browser? Hybrid between the downloadable executables and stuff running in the browser? Or will it be business as usual?”  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nReminder: next week, we’ll have Steve Yegge as a guest. The previous episode with Steve was hugely popular, so hopefully this will be another winner!\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/04/15/podcast-49/"
    },
    {
        "title": "Podcast #48",
        "content": "This is the 48th episode of the StackOverflow podcast, where Joel and Jeff discuss planning your career, the importance (or not?) of localization, what makes a good moderator, and dealing with programmers who lack interpersonal skills.\n\n\nUntil 2004, I felt sort of like that feather in the movie Forrest Gump, or the plastic bag in American Beauty. I had no real plan for my career. This prompted me to think about what I wanted from my career, and it’s why I wrote The Eight Levels of Programmers. Think about who you respect, and why, and whether those paths work for you.\n\n\nIf you’re very lucky in your career, perhaps you’ll be able to build Bongo’s Dream House.\n\n\nJoel and I have a long (REALLY LONG) discussion about the Chinese Stack Overflow clone, cnprog. It’s excellent that we are inspiring other programmers, but we do draw the line at copying our look and feel down to the tiniest detail (including the blog). Don’t be a content stealing jerk!  \n\n\nOne reason localization has been a very low priority is that we feel for our particular audience, namely programmers, English is the de facto standard language. Not that other languages aren’t important, but it’s easier to get engineering work done when everything coalesces around a standard language.\n\n\nIt is true that localization is not even close to being on our radar. Programming communities need to form in local languages, too.\n\n\nWe’re open to providing a dump of our cc-wiki licensed content, but we don’t want to have an AOL data scandal. That would be .. bad. It’s the biggest risk blocking that from happening at the moment.\n\n\nJoel believes that there are five “important” languages that programming content should eventually be localized into: German, Spanish, French, Chinese, and Japanese.\n\n\nWe’re beginning the process of promoting a notable user from our community to full-blown moderator status. Shaya Loney, who works at answers.com, had some excellent advice for us — one of the risks is that when you take one of your best teachers and turn them into the principal of the school, you lose a great teacher. We also want moderators with a variety of different backgrounds for diversity.\n\n\nWe were able to test our datacenter disaster contingency planning a little with a recent server error. Lesson: always have your contingency plans ready to go in practice, not just in theory. We only lost time, but we’re considering the use of remote KVMs if this becomes an ongoing concern.\n\n\nOne way to deal with programmers who come off as abrasive and perhaps lack interpersonal skills, is to focus on the specific behaviors that are problematic. Detail the very specific, ultra-narrow things that they could change to improve the way other people react to them.\n\n\nThere’s a good reason to fix this, beyond the bad apple theory. As Joel points out, “for marginal performers, the people who don’t get along, are probably going to get fired, and the people who everybody likes, are probably going to stay around.”\n\nRevisiting the “architect” title. We still think it’s a bad idea, but perhaps it’s more palatable if you think of it as “software engineer with lots of experience.” And get rid of the title! That said, there are the rare few, with Joel’s example of Dave Cutler, who truly was the Architect of Windows NT in every possible sense of the word.  \n\nWe answered the following listener questions on this podcast:\n\n\nDemitrios from Brazil “What do you do with a solid contributor who on a personal level is very annoying, nobody likes him, and nobody can get along with him?”\n\nRudy from Denver “Is it possible that Architect is a valid title, for those developers who have the skill to develop large applications?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/04/09/podcast-48/"
    },
    {
        "title": "Podcast #47",
        "content": "This is the 47th episode of the StackOverflow podcast, where Joel and Jeff discuss Eclipse, plugin architectures, sketching mockups, and optimizations that don’t optimize.\n\n\nI had the honor of keynoting EclipseCon this year with Clay Shirky. Eclipse is an open source IDE with an excellent plugin ecosystem. It’s also a great Java GUI framework.\n\n\nA brief discussion of the communal relationship between applications and plugins.\n\n\nI am cautiously optimistic about the release of Internet Explorer 8. The betas were very scary, but the final released version is surprisingly solid and fast. A totally respectable update from Internet Explorer 7, and it has a very convenient “switch to IE7 rendering mode” (along with a HTML header that does the same thing) that means it’s super easy to essentially have both browsers.\n\n\nJoel explains that he’d rather spend any amount of money than have his developers “take a few weeks” to optimize the FogBugz compiler. Remember, hardware is cheap, and programmers are expensive. This may include buying 8 GB of memory (cheap!) and the super-fast Intel SSD hard drive. It’s recommended by Linus! Be careful with SSDs, the only ones worth having at the moment are the very high end models like the Intel one. Cheaper ones can be slower than regular hard drives!\n\n\nI continue to recommend the two-spindle approach for desktops for optimal performance. It’s the same reason, on a database server, you typically have the OS on one drive and the data on another drive. It reduces contention.\n\n\nWe joke about pure architecture software releases, where nothing visible changes in the product, except the underlying code. There are reasons to do this, such as performance, scalability, and simplicity. But for a product users pay for, a pure architecture release would be suicide.\n\n\nOur live podcast from MIX went great — thanks to everyone who participated! You can watch our 5-minute bit at about 50 minutes into the day one keynote on the official MIX website.\n\n\nThe classic example of a free site attacking the business model of a pay site is Markus Frind’s Plenty of Fish. What’s odd is that PoF has been so successful that Markus is looking to acquire a pay dating site at this point. On the other hand, he’s adding some pay features to his free site as well.\n\n\nJoel talks about how smart the design of Balsamiq Mockups is. It actually forces you to stay simple and abstract, which is the whole point of sketching.\n\n\nSketching is on our minds because the Bill Buxton book Sketching User Experiences was provided to every MIX attendee, and Bill Buxton was the first day 1 keynote speaker.   \n\n\nJoel complains that so many design books start by talking about the design of the iPod, to the point that it’s cliche. Perhaps one design lesson is that people care more about the content than the design — the websites they load are far more important than what browser widget they load it in, despite how important choice of browser is to us geeks.\n\n\nOne of the points Clay brought to our EclipseCon keynote was that social software ends up being a mirror, a reflection of the community you drop it in to. Unlike PhotoShop, which works exactly the same no matter how many times you copy it or who is using it, the same social software may behave completely differently for different communities. This is why Reddit cloning itself into weheartgossip isn’t really working — the audience is too different.\n\n\nMake sure your “optimizations” are actually optimizing, otherwise you’re pessimizing — with the best of intentions, you make your code slower. Benchmark first, not last!  \n\nThere are huge categories of premature optimization you should avoid, but you also want to avoid making big design mistakes early on. It’s not necessarily optimization, per se, but don’t do things that are so incredibly boneheaded you will regret them forever.\n\nWe answered the following listener questions on this podcast:\n\n“What about Stack Overflow for car questions?”\n\nOur favorite Stack Overflow questions this week are:\n\n\n\n\nWhat is the most ridiculous pessimization you’ve seen? In other words, the opposite of optimization?\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/03/26/podcast-47/"
    },
    {
        "title": "Podcast #46",
        "content": "This is the 46th episode of the StackOverflow podcast, live from MIX09, where Joel and Jeff answer questions from the live audience.\n\n\nThis podcast is live from the MIX09 conference! Joel and I also had a small 5 minute segment in the Day 1 keynote, which you can view online. It’s at around the 50 minute mark or so.\n\nWe had a live audience, so the focus of this podcast is on questions from our live audience.\n\nWe answered the following live audience questions on this podcast:\n\n\n“What’s the point of Silverlight?” The short answer is, it’s like Adobe Flash, but much more programmer oriented. Silverlight 3 beta was just launched at MIX, with lots of new developer-y goodness.  \n\n\n“What’s the most number of questions asked by an actual Stack Overflow user?” That would be Edward Tanguay with 210 questions, closely followed by Thomas Owens who asked 207 questions. One reason the “ask a question” button isn’t more prominent on the site is that we encourage people to read and answer a while before asking anything. Good questions take some effort!  \n\n\n“Have you ever considered moving Stack Overflow to the cloud?” The cloud makes more sense for experimental projects that may or may not succeed. We did the math and decided that owning the hardware was a better deal for our project. It could also make sense for hot-standby disaster recovery backup servers. It depends whether or not you prefer flexibility, or fine-grained control.  \n\n\n“What issues did you have with using ASP.NET MVC?” Other than the typical beta issues, not much. The big advantage, to us, is that MVC is a much more web-centric development model. It is a much closer match to our mental model of how web programming should work, and how URLs should be formed.  \n\n\n“What does the new guy do on the first day?” Fix the simplest possible bug in your product. And on the next day, fix a slightly more complex bug. It helps to do this in an environment of active pairing or mentoring.  \n\n\n“Are there some things about the web platform (HTML, CSS, etc) that you wish worked differently?” Sure, the platform barely works. There’s something inspiring about so many programmers are building great stuff on such a rickety platform. And it’s creating a whole new generation of programmers. There’s a certain inexplicable elegance to the madness.  \n\n\n“We have a lot of relatively unstructured data that we’re storing in a database, is there some other way do deal with this? And what about REST vs. SOAP access to it?”  Joel points to Adam Bosworth’s classic talk about the flexibility of loosely structured data. Perhaps something like Lucene or CouchDB would be a better choice than a traditional rigid database. And remember that meta-tags, while worthless on the open web, are trustworthy on local data. Sometimes you don’t need a perfect 100% right answer back from the data. Joel describes the advantage of REST over SOAP thusly: you can just type stuff into the browser’s address bar and see the results in real time.  \n\n\n“Should you teach the framework, or the underlying languages?” Joel points out that maybe students shouldn’t be studying programming at all. You can learn a lot about programming through related fields. Joel and I disagree a bit on this one. I think good developers are inherently curious, so they can learn the framework and dip into the lower level language as necessary to solve whatever problem is at hand. Joel says you should start with the language and scale up.  \n\n\n“How different is the world view of a programmer who is twenty-something and grew up with the web, versus a thirty-something who didn’t? How important is historical context?” Can developers who only know JavaScript, HTML, and CSS grow into being generally great developers? I argue that there’s an inherent intellectual curiosity in all great programmers, so they can start anywhere and get amazing results. Joel notes that some of the historical context can become a burden and possibly even incorrect over time. There’s a tension between necessary mentoring between older and younger programmers, and fresh eyes questioning the status quo. It’s good to continually question the programming status quo. Otherwise, how would we make any progress? We’d carry forward our old biases and decisions forever, even after they were no longer necessary.  \n\n“At what point in Stack Overflow do you see yourselves hiring specialists? How do we justify bringing in experts to management?” We already have, to some degree; we have Jeremy Kratz helping us with design and Brent Ozar helping us with advanced database stuff. You have to know your own limitations, what you’re good at and not good at, and how to slice off a small piece of work that’s appropriate for the specialist. If you need to sell this to management, try it on a small part of the project first and show what the difference would be on the full project.  \n\nOur favorite Stack Overflow questions this week are:\n\n\n\n\nStack Overflow on Line 25 — this is one of the downsides of having the name “Stack Overflow”. It’s impressive how good the answers are to a question by a poor, beleaguered end user who just got a stack overflow JavaScript error in their browser\n\n\n\n\nWhy does setting a stack method result in a Stack Overflow? — this is a classic example of a mind reading answer. The asker wasn’t able to establish what their question really was.\n\n\n\n\nIs there a human readable programming language? — yes, until everyone decided that was a really dumb idea. Its name was COBOL.\n\nShould a function have only one return statement? — a classic discussion question. Discussions are valid as long as they’re focused. Here, the goal is to avoid writing “arrow” or “pacman” code and to keep the functions as small as possible. It’s amazing to us that some developers are still dogmatic about this one. In theory, this is a good rule, but in practice, it isn’t. And practice always overrules theory in my book.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/03/20/podcast-46/"
    },
    {
        "title": "Jeff and Joel at MIX 09: Live Podcast",
        "content": "Joel and I will be at the upcoming MIX 09 conference in Las Vegas next week.\n\nMore specifically, we’ll be doing the Stack Overflow podcast live from the show!\nTuesday, March 17, 2009, at 6:30 PM\nAt the Third Place hang out area\nThe Venetian Las Vegas\n4th Floor, Marcelo 4403\nYou will need to be registered for the conference (which takes place at the Venetian). You do not need to be registered for the workshops.\nThis is technically the day before the conference begins, but if you’ll be there, do stop by! I know Joel is bringing all kinds of crazy audio equipment for lots of audience participation.\nGeoff Dalgas and Jarrod Dixon from the Stack Overflow team will also be present for the duration of the conference, so if you spy them walking around the Venetian, feel free to strike up a conversation with them and grill them on any aspect of SO. I grant anyone reading this full permission to monopolize their time. 🙂\nIf you can’t attend the conference, as a perk for those viewing remotely over the web, there’s also a brief 30 minute online-only Q&A; after the keynote with Scott Guthrie (aka “The Gu”) and myself. I believe we’ll be taking questions through the Twitter #askthegu hashtag. And with any luck I’ll have nothing to say because the Gu has more programming knowledge in the tip of his pinky finger than I have in my entire body.",
        "url": "https://stackoverflow.blog/2009/03/13/jeff-and-joel-at-mix-09-live-podcast/"
    },
    {
        "title": "Podcast #43",
        "content": "This is the 43rd episode of the StackOverflow podcast, where Joel and\nJeff discuss dealing with incompetent programmers, whether salaries should be public, dealing with technical debt, and programming for small businesses.\n\n\nJoel is away this week in Florida at the Future of Web Applications conference, where he was a speaker. He mentioned that the new Atlas web GUI builder was particularly impressive.\n\n\nWe will try to be more careful about our use of Begs The Question.\n\n\nJoel asks about the rationale behind requiring 50 reputation to leave a comment, but allowing a brand new user to post a question or leave an answer. The reason is mostly because we have no mechanism for voting or marking offensive on comments, because they’re ultra-lightweight.\n\n\nOne way to avoid the dilemma of dealing with bad programmers is to be selective who you work for — only choose employment at companies where they Hit the High Notes. It’s even in the Joel Test itself: do new hires have to write code?\n\n\nI’m not a fan of puzzle-based interview processes. I met with a Stack Overflow user this week, Chris Jester-Young, and he revealed a clever and potentially more useful strategy: give interviewees a C program full of bugs, and have them try to debug them! Of course, Chris is a big Code Golf enthusiast, so of course he nailed that one.\n\n\nSometimes you have to try to change your organization to fix the root problems, otherwise you’re just fighting the symptoms and not the disease itself. This can be quite a challenge when you have no real authority. Joel offers some advice in Getting Things Done When You’re Only a Grunt.\n\n\nAre there happy incompetents? I argue that there are; Joel argues that there aren’t. Among the Inept, Ignorance is Bliss. Perhaps the better question to ask is, how can you help this marginal programmer find a career they’ll enjoy? Many so-so programmers can make outstanding testers, for example.\n\n\nWe wonder: what would it be like to work at a commercial for-profit company where everyone’s salaries were public knowledge? I imagined it as something like The Lord of the Flies. Just make sure you aren’t Piggy!  \n\n\nAt Fog Creek, salaries aren’t technically public, but they have a formula through which everyone’s pay can be derived. This is the Fog Creek Professional Ladder. Fog Creek also does profit sharing, so when the company does well, everyone does well.\n\n\nIs there a two-class society at Microsoft, between Testers and Developers? Joel wonders why they need different titles. I had always heard Microsoft did a great job of giving test engineers a viable parallel career track.\n\n\nJoel believes manipulating compensation to motivate people does not work, almost by definition. Top developers will do a good job no matter what compensation system you put in front of them. It’s a “blunt instrument” that can cause as much harm as good. Joel is an advocate of “taking salary discussion off the table, paying people fairly and justly and well, so they can stop worrying about it so much.”\n\n\nWe have a lot of anti-bot code on Stack Overflow. What we didn’t think about was human-entered spam! Now we do — yet another example of the incredible power of rate limiting techniques.\n\n\nOn matters of customer service, we do endeavor to not make the situation worse. Start practicing saying “I’m sorry, it’s our fault.”\n\n\nUpdates may slow down on Stack Overflow for a little while. We have built up a lot of technical debt around our database, and we have to hunker down and refactor a few core database tables that affect 80% of our code. If you don’t pay down your technical debt every so often, you could end up like Twitter — a reliability laughingstock. But, somehow, still successful.\n\n\nThere’s something liberating and energizing about going in and tearing down huge parts of your application to rebuild it and make it better. Unlike our previous discussion on learning languages, I’m more of an advocate of the big bang model here, whereas Joel proposes something more incremental.\n\nIf you work in programming or IT for a small business, can you give an elevator pitch explaining the value you bring to the business to the powers that be? Are you scaling your solutions to the size of your business, and not over-engineering it? What can you outsource, versus what is strategic?  \n\nWe answered the following listener questions on this podcast:\n\nMatt Rogish: “How does one ethically get rid of of incompetent programmers?”\n\nOur favorite Stack Overflow questions this week are:\n\nChoosing a technology stack for a small ‘budget conscious’ business — if the company is unwilling to spend any money at all, that means they place no value on what you’re doing. Fix that first, if you can.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/02/26/podcast-43/"
    },
    {
        "title": "Stack Overflow Podcast Bingo",
        "content": "At our first “live” podcast for MIX09, the developers at Woot! cleverly converted the Stack Overflow podcast drinking game into Stack Overflow podcast bingo, and handed out cards for everyone to play along.\n\nHilarious — hopefully someone scored a bingo during the live podcast! Click to see it larger.",
        "url": "https://stackoverflow.blog/2009/03/19/stack-overflow-podcast-bingo/"
    },
    {
        "title": "Podcast #44",
        "content": "This is the 44th episode of the StackOverflow podcast, where Joel and Jeff discuss the enduring influence of C, the questionable value of the title “Software Architect”, and the evolution of Java.\n\n\nJoel brings the YouTube video Write it in C to our attention. “Pascal won’t quite cut it, write in C.” Did you know that there’s a new version of C++ on the horizon, C++0x? It even has its own tag on Stack Overflow.\n\n\nSpeaking of C, Joel had lunch (and just guest-taught a class at Princeton for) Brian Kernighan. Brian is of course the co-author of the classic K&R book, and the creator of the Awk language. And his second favorite language is Visual Basic, surprisingly.  \n\n\nI’m a little bitter that so many languages (C#, Java, JavaScript, etc) followed the “look” and many of the important design decisions of C, but Joel blames Algol-68.\n\n\nOne C design decision I agree with: using carriage return as your programming line terminator is not a good idea. Having an explicit line ending character like semicolon gives you so much more flexibility, and is far less awkward than weird line continuation characters.\n\n\nExtension methods in C# are a poor man’s way of extending the underlying language.\n\n\nOne new feature in C# 4.0 is named parameter arguments. Joel notes that Excel’s VBA implementation went through this same evolution, and it can potentially mask problems, like “why the heck do we have a function with 7 parameters in the first place?”\n\n\nWe implemented the fantastic open-source Cacti tool to graph how much bandwidth and CPU time we’re using on our servers. Our ISP does burstable billing at the 95th percentile, and this graph is built into Cacti. Right now we’re doing about 750 KB/sec or 6 megabits/sec under those terms, which is (unfortunately) more than we agreed on with our ISP. This throughput number is 99% GZIP compressed text.  \n\n\nWhat is the rationale for expressing all network bandwidth units in terms of bits? I prefer bytes. And while I’m at it, what the heck is a kibibyte?\n\n\nRemember Alexa? They’re still around. It is sort of a mystery how sites like Alexa, Compete, etcetera can infer web traffic for any random website without access to the webserver’s logfiles. It’s essentially client sampling, but the accuracy of this approach is anyone’s guess.\n\n\nJoel’s classic article on unnecessary choice in software reminds us how customization is a double-edged sword. We’ve resisted a lot of per-user customization options on Stack Overflow for similar reasons.\n\n\nJoel and I both are unsure that the title “Software Architect” is a good one. We’re leaning towards it being almost.. a net negative. “It’s almost disrespectful of the actual architects who work in construction, to use that word to refer to some kind of high-falutin’ big-picture UML-drawing code monkey.”\n\n\nTo the extent that the architect is not in the trenches with you doing\nthe work, they don’t have enough context, and will inevitably make the wrong\ndecisions.\n\n\nIf we had the power, we’d do away with the title “Architect”. But if you’re stuck with it — and the architecture astronomy that it frequently engenders — what is the proper role for a so-called Architect? They could work to connect disparate groups at large organizations, to provide context and reduce duplication for disparate groups that are working in isolation. It can be hard for groups working locally to see the context of the larger organization. But I traditionally think of this role as an evangelist and educator, not an architect.\n\n\nThe catch-22 of rekindling a nascent programming career is that.. good programmers can’t stop programming. So if you can give up programming, it sort of almost means that you shouldn’t be doing it anyway. This is Joel’s tough love answer. Bottom line: if you want to be a programmer, get out there and start writing code.. yesterday.\n\n\nJoel thinks that Java on the desktop is essentially dead. I don’t necessarily disagree, but I think Java is still a fine choice on the server. In the context of history, it is an excellent replacement for C++ if you don’t need to-the-metal performance. Joel has called Java “the new VB”, or “the new COBOL”.\n\nThe enterprisey and extra-verbose culture around Java is a bit problematic. Steve Yegge’s pieces on this are quite famous and apt. Bear in mind, Steve is a guy who has written hundreds of thousands of lines of Java code, and he essentially concluded that size is the enemy.  \n\nWe answered the following listener questions on this podcast:\n\n\nBrad from Denver: “How do you get rid of incompetent architects?”\n\nBen Younkins: “I graduated with a CS degree, but I haven’t been working as a programmer for 10 years. I’d like to get back into it. How should I do this?”  \n\nOur favorite Stack Overflow questions this week are:\n\n\n\nHow accurate are the technical arguments in JWZ’s ten-year-old “java sucks” article with today’s Java? Jamie Zawinski is a fairly notorious programmer, and these are valid concerns. How do languages evolve, and how has Java evolved in the last 10 years? Is it better? Worse? The same?\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/03/05/podcast-44/"
    },
    {
        "title": "Podcast #45",
        "content": "This is the 45th episode of the StackOverflow podcast, where Joel and Jeff discuss what a program manager does, the value (or lack thereof) of a functional spec and vision statement, building developer community, and planning your development time.\n\n\nJoel and I will be at the upcoming MIX09 conference. We’re also trying to set up a live podcast there on Tuesday, March 17th in the evening.\n\n\nJoel’s essay How to be a Program Manager attempts to explain the essential role this person plays on a software project. It’s a shame the job has such a nebulous title.\n\n\nIs writing a functional spec at the heart of agile development? What is a spec, exactly? There has to be something between sitting down and pounding out the code with no planning whatsoever, and meticulously, bureaucratically documenting every tiny detail of your application.\n\n\nNot all storyboarding has to be painful. Wireframing the user interface with tools like Balsamiq can take the pain out of a lightweight “functional spec”. Describe every screen, and have some annotations about how stuff is supposed to work. I call this UI-first software development.\n\n\nThe often cited article No Functional Spec doesn’t actually mean no functional spec, if you read it closely. At least in our interpretation of the text.\n\n\nCan your team pass the elevator test? You also need a vision statement or “elevator pitch”. Everyone on your team should be able to explain what your application does, in a few simple paragraphs, to a layman. If they can’t, it’s sign of deeper problems on your project.\n\n\nThe book Dreaming in Code, which documents the Chandler project, might be a good example of a project that had a vision statement that hurt the project instead of helping. It described where they wanted to go, but not how they planned to get there. Flock might be another example — what does “we’re a social web browser” mean?\n\n\nDave Winer maintains that, if you read the description of some new technical thing and can’t understand it after the first readthrough.. it ultimately isn’t important and can be safely ignored.\n\n\nHas Joel Spolsky been honest about his time at Microsoft? Realize that the article in question is one of Joel’s first non-blog blog posts, way back in 2001, describing something that happened in 1992. So it’s ancient history. Joel maintains that Greg Whitten’s 2005 email is simply the other half of the story. There’s no conflict, just two sides of the same coin.\n\n\nFor all the talk about how Reddit comments have degenerated, we felt the programming reddit comments on the Joel article were generally quite insightful.\n\n\nJoel and I are big fans of Hacker News. Although I have criticized the lack of downvotes in the Hacker News system, it’s important to note that there is a secret cabal of 30 editors that will kill flagged articles. So it’s not entirely subject to the whims of user voting, either.\n\n\nJoel thinks that every hacker who maintains a community comes up with a manifesto that puts them squarely in Clay Shirky a Group is its Own Worst Enemy land. Even he has done it, with Building Communities With Software. You have to make very different decisions based on the size and the composition of the group at any particular time.\n\n\nJoel and I both dislike threaded discussion formats. When I delved back into threaded discussion this week on the programming Reddit and Hacker News I was reminded how awkward they are. I think developers have a myopia about tree structures, which are incomprehensible to the average person but a daily part of their programming work.\n\n\nI was shocked to discover that SQL Server will sometimes look at a parameterized query and come up with an incredibly bad query plan, which it will then store in the query cache, and (even worse!) use over and over! The trick is to use the optimize for unknown hint, which tells the query plan generator to use a statistical sampling of potential inputs rather than basing its decisions on whatever random parameter happened to be passed in the first time.\n\nOn getting developers to come up with realistic schedules — first of all, always think in terms of coaching rather than punishment. Punitive measures never work. We recommend following Joel’s advice on evidence based scheduling, which opens with “break it down”.\n\nWe answered the following listener questions on this podcast:\n\nNik Reiman: “What about Stack Overflow for IT questions that aren’t programming related?”\n\nOur favorite Stack Overflow questions this week are:\n\nHow to Deal with Chronic Time Issues? Apparently, beatings will continue until morale improves.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a\ndedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/03/12/podcast-45/"
    },
    {
        "title": "Podcast #40",
        "content": "This is the 40th episode of the StackOverflow podcast, where\nJoel and Jeff sit down with Michael Lopp, aka Rands, to discuss how a geek manages other geeks, the dangers of working remotely, the pitfalls of offshoring, and some techniques for continual learning.\n\n\nYou may know Michael Lopp from his excellent blog, Rands in Repose. We highly recommend the Best Of category if you haven’t visited Rands before. Heck, even if you have.  \n\n\nRands is a Manager of Humans, and many of the entries on his blog are a fantastic resource for other Managers of Humans. “A lot of people stuff on a daily basis, it’s 60 to 70 percent of my day.” He wrote a book on this topic, Managing Humans: Biting and Humorous Tales of a Software Engineering Manager.\n\n\nIf you transition from being a software developer to a manager, you will almost never write code. As a manager, how do you balance writing code — if only as a form of daily exercise, to keep your skills sharp — with the rest of what you do?  \n\n\nThe #1 management skill? Listening. Which means Joel and I should probably never be managers.\n\n\nThe magical number of people one person can manage without having serious problems is seven. Beyond that, you’re probably not giving the people on your team enough attention.\n\n\nOn managing geeks and nerds: it should be done systematically. They like structure, and you have to put that around this messy business of us being human beings. Perhaps the handbook will be of use.\n\n\nLeading by example can only get you so far. What do you do when you inherit the world’s best programmer in some language you don’t even know? It’s much more hands on than that. Your strengths are not your team’s strengths.\n\n\nBuilding a so-called Nerd Playground is one way to attract talented developers. But as Joel says, “10% of the joy of coming in to work is that it’s a great place to work, and 90% is that I love these people.”\n\n\nThe danger of working remotely is that there’s a lot of non-verbal communication that typically goes on. Our tentative recommendation for working remotely, if you must do it, is to have frequent intervals where you all come together multiple days and work together. In order for the remote relationship to work, there has to be a face to face relationship in place to support it.\n\n\nMichael asks about the Stack Overflow badge system, which was explicitly modelled on the Xbox 360 Achievements system. The Bronze, Silver, and Gold badges are there to support beginners, intermediates, and the hardcore respectively. The idea that you have to figure out why you got a badge is there very much by design; the mystery is part of the fun.\n\n\nThere were complaints that answers came too fast on Stack Overflow, which we have hopefully addressed — there is an art to answering questions quickly and effectively. If anything, Stack Overflow “games” you into learning how to progressively answering other people’s questions more and more effectively over time. How, exactly, is this a bad thing?\n\n\nA brief discussion of offshoring. “If people were getting as much value out of remote developers as local developers, then the price would be the same.” It’s also difficult to get good results out of teams when their skin isn’t in the game.\n\n\nWhile I am deeply uncomfortable with using Stack Overflow as a hiring tool, it is totally reasonable to use it as a “breadcrumb trail of your awesomeness” as a programmer. If your questions and answers are well written and clear, and getting upvoted by your peers, that is something to be proud of.\n\n\nHow do you manage continually learning? Reading, writing, and practice of the things you enjoy. It is possible to take this too far, though, and become a magpie developer. One advantage of older developers is that they have more failures under their belt.\n\nMichael looks for a combination of ego and humility when he hires — these are somewhat contradictory traits, but they balance and complement each other.\n\nOur favorite Stack Overflow questions this week are:\n\n\nJoel: What do you do to keep learning?\n\nJeff: I was recently asked for my stackoverflow rep score in a job interview. Is that appropriate?\n\nWe answered one listener question on this podcast:\n\n\n“What makes a great software development manager? Should he or she be a good developer to be a manager?”\n\nAlex: “What do you think of the feasability of building a workforce of people who work remotely from home?”  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/02/05/podcast-40/"
    },
    {
        "title": "Podcast #41",
        "content": "This is the 41st episode of the StackOverflow podcast, where Joel and Jeff sit down with Robert Martin aka “Uncle Bob”, and discuss software quality, the value of software engineering principles, and test-driven development.\n\n\nJoel clarifies that some of his comments in Podcast #38 were a bit unintentionally ad-hominem, and apologizes to Uncle Bob for that — see Bob’s open letter blog post. But on the positive side, it did get us a podcast with Uncle Bob!\n\n\nThis was a big week for Stack Overflow; we moved to a new hosting provider — PEAK Internet in Corvallis. We did have a few blips with DNS but other than that the move was relatively smooth.\n\n\nIncreasing our servers from 4 GB (web) and 4 GB (database) to 8 GB and 24 GB, respectively, opened up tons of breathing room and unleashed a lot of latent performance. Memory is incredibly cheap right now; there’s no reason not to install ridiculous amounts. It is (almost) free performance. Bob reminisces about when he bought memory by the bit!\n\n\nWhen I said “quality doesn’t matter”, I didn’t mean it literally. If you deliver a software product that nobody likes or wants to use, it doesn’t matter how great the quality of your code is. You can always fix code quality — but fixing “nobody gives a crap about our product” is far more difficult. That’s what you should be worrying about most of all.  \n\n\nQuality has many dimensions. The cleanest code in the world could utterly miss the point on usability, scalability, performance, and meeting users’ expectations.\n\n\nOn the other hand, as Bob points out, there are companies that have shipped broken products which permanently damaged their reputations and, in some cases, even forced themselves out of business.\n\n\nBob’s SOLID principles are based on some well known conventions. I talked about the first one, the Single Responsibility Principle, in Curly’s Law: Do One Thing. You may have heard this before as Don’t Repeat Yourself (DRY), Once and Only Once, or Single Point of Truth.\n\n\nWe wonder if some of these guidelines — such as “deploy independently” — are obviated by the inevitable forward march of technology, such as software delivered through the cloud, and virtual machines.\n\n\nWhat happens when principles fall into the hands of people who don’t really know what they’re doing? Or people who become bureaucrats, rigidly enforcing rules on everyone? We think the existence of rules, in and of itself, isn’t necessarily a net good. The types of developers who need those rules are often immune to them.\n\n\nOften, software developed internally doesn’t have to be good; users are forced to use it. This software would never survive as a real product that had users who actually had to want to pay for and use the software. Bob is fond of asking “why is open source software so much better”; part of the reason is that this software has to survive in the real world on its own merits to garner users and attentions. It’s not isolated on some peculiar little corporate Galapagos island where it has no competition.\n\n\nJoel worries that excessive TDD (say, going from 90% to 100% test coverage) cuts time from other activities that could benefit the software product, such as better usability or additional features users are clamoring for.\n\n\nUnit tests are absolutely useful as a form of “eating your own dogfood”, and documenting the behavior of your system. Even if you disregard the actual results of the tests completely, they’re still valuable as documentation and giving you a fresh outside perspective on your codebase.\n\n\nJoel notes the difficulty of testing the UI (web or executable) versus testing the code behind the UI. The classic method of doing this is probably documented in The Art of UNIX Programming, where you start with a command-line app that takes in and spits out text. The GUI is simply a layer you paste on top of the command-line app, which leads to perfect testability — but perhaps not such great apps, in the long run. Which is more important?\n\nThe hidden context of wondering whether a large switch statement you’ve written is the right choice is that you’ve already won — the types of developers who are actively thinking about their work aren’t really the problem.\n\nOur favorite Stack Overflow questions this week are:\n\nEveryone: Large Switch statements: Bad OOP? The idea that giant switch statements are fundamentally evil is a bit of a knee-jerk reaction. It really depends how simple and straightforward you can make the switch statement.  \n\nWe answered one listener question on this podcast:\n\n\nAndrew Davis: “My rule of thumb is that unit tests should be written for clearly defined code that has highly constrained input going in and coming out. Is it even worth writing tests for GUI code?”\n\nTim Kington: “True test-driven development has one benefit you didn’t talk about: you can approach your code from the perspective of the client.”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/02/12/podcast-41/"
    },
    {
        "title": "Podcast #42",
        "content": "This is the 42nd episode of the StackOverflow podcast, where Joel and Jeff discuss ethical email, backup strategies, how to learn new programming languages, and dealing with underperforming developers.\n\n\nThe Conversations Network, a non-profit organization that graciously underwrites the bandwidth costs of this and many other great podcasts, is looking for a sponsor. Email us at podcast@stackoverflow.com if you know of any   \n\n\nWe finally rolled out email support at Stack Overflow. If you haven’t been to the site in 7 days, and have provided a valid email address, we include all the responses to your questions and answers (if any) in that period. And of course there is a true one-click unsubscribe. We’re still tweaking the parameters of how it works — what is the optimal email relationship between a user and a website?\n\n\nSending email these days is a bit of a minefield. How do you avoid instantly going into people’s spam folder? One key piece is having a Reverse PTR record, which is set up at the ISP level. There’s a whole “Deliverability” industry around sending email to people.\n\n\nWe’re encouraged by the emerging standard of entering your OpenID provider’s address as your OpenID login. For example, “yahoo.com” works for Yahoo OpenIDs, and eventually “gmail.com” will work for Google. (Today you must use “google.com/accounts/o8/id” for Google, which is not optimal for hopefully.. obvious.. reasons.) Microsoft is also coming on board, though their OpenID support is in private beta.\n\n\nWe also implemented gold and silver tag-based badges, based on upvotes within a tag. It’s a way of rewarding people who participate heavily in certain topic areas. We did have to rule out discussion based questions for this algorithm to work. We are also considering a tag leaderboard, as suggested by Greg Hewgill.\n\n\nOur backup strategy has been half-hearted so far. To improve this, we invested in an inexpensive embedded Linux based 1u Network Attached Storage device, the QNAP 409u. This will become our dedicated backup device. It has four drive bays and supports RAID 6 (dual parity). Kind of a neat little device; there’s a whole subculture of inexpensive NAS devices I hadn’t explored until now. Drobo, for example.  \n\n\nAs it turns out, the cost of bandwidth ends up being the gating factor for us when dealing with our daily multiple – gigabyte database backups. Jim Gray had an eye opening piece on the economics of bandwidth and the surprising effectiveness of “sneakernets”, even today.\n\n\nHow likely is it that your datacenter is going to explode? Unless you have a fancy multiple datacenter setup for redundancy, it might be more effective to do some trickle uploads to services like Amazon S3, or even some monthly datacenter driving runs to copy data off using a cheap USB 2.5″ hard drive. Luckily, one of our team members lives a mile from the data center, so that’s the approach we’ll be using.\n\n\nWe had some semi-serious issues with our IBM ServeRAID 8k controller, having to do with write-through versus write-back caching. Write-through blocks on actual disk writes, whereas write-back writes to a fast RAM buffer, returns very rapidly, and spools the writes over time (e.g. “lazy writes”). The performance of write-back is dramatically better, but we were seeing some eventual system-wide I/O blocking under heavy write load with write-back caching on. Supposedly this is normal for some RAID controllers, but we opted to downgrade to write-through because the nightly backups would always trigger this behavior for us.  \n\n\nSpeaking of blocking: it’s funny how many of the techniques discussed on the High Scalability blog boil down to hashtables in memory. Memory is one of the fastest things you have in a computer, and it almost never blocks for any significant amount of time. Unlike, say.. hard disks or network.\n\n\nThe act of trying to learn a new language will make you a better developer. Where do you go if you only know PHP? I think you should go to Java or C# to build up a bit more structure, then to Python or Ruby to tear down that structure, as a sort of natural ebb and flow progression journey that I’ve seen a lot of developers make over time. Joel disagrees, and thinks thinks you should go for something radical right out of the gate, like Haskell. “At some point it has to blow your mind, or you’re not learning.”\n\n\nJoel recommends the classic Abelson and Sussman lectures on Structure and Interpretation of Computer Programs. This of course complements the freely available on-line version of the SICP textbook. Go blow your mind! “Once you learn those concepts, you’ll write better code in any language.”\n\n\nIs it an legitimate argument to say that, if you haven’t tried something, you’re not entitled to have an opinion about it? How much does it add to your opinion to have experience in a subject? Joel references Paul Graham’s How to Disagree.\n\n\nShouldn’t every software project you work on be a learning experience, regardless of whether the software ever sees the light of day? Why would you work on a project that isn’t teaching you anything at all?  \n\n\nIs it possible to help programmers who can’t help themselves? We’re not sure throwing a copy of Code Complete at a sub-par developer will necessarily make them any better. I believe pair programing and mentoring is the only way to get this to work, insofar that it ever does. And tread very lightly here, because it’s quite possible to make things worse by being didactic or overbearing.   \n\nHow do you fix not caring? How do you fix lack of motivation? Perhaps the better way to look at this is to keep your project inherently interesting and relevant. Convince your teammates that you’re working on something that matters, at least in some small way. Are we happy with what we’re doing? And if not, how can we fix that?  \n\nWe answered the following listener questions on this podcast:\n\n\nMichał Tataranowicz: “I am a PHP web developer. I want to learn a new language to improve my skills. What language should I learn? It doesn’t have to be useful for web development, although it would probably help.”\n\nAdam from PA: “I work for a R&D group at a large defense contractor, I’ve been told my project is ending. How do I keep my motivation going when I know this project is going to be put on a shelf and not used?”  \n\nOur favorite Stack Overflow questions this week are:\n\n\nWhen to Drink When Listening to the Stack Overflow Podcast. Are you guys listening to the same podcast as us? We never do this stuff! I have a PMP certification, and the answer just happens to always be 6-8 weeks.  \n\nTips on how to inoffensively help an older co-worker to become a developer instead of a code-monkey? This is a tough one.  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/02/19/podcast-42/"
    },
    {
        "title": "New Datacenter Migration",
        "content": "We just finished migrating our new servers over to the new datacenter at PEAK Internet.\n\nThe installation was aided greatly by Stack Overflow team member Geoff Dalgas, who happens to live about a mile from PEAK in Corvallis, Oregon. He visited the facility before the servers arrived, and also helped with their installation. Having Geoff as our “Remote Human Access Card” wasn’t the deciding factor in our choice of datacenter — but it definitely helped!\n\nGeoff recently had his first child, Caleb, and we thought it’d be fun to juxtapose his baby with.. our babies. Aww. So cute! The servers, I mean! You did a fantastic job on both, Geoff.\nPEAK internet impressed us with their detailed technical responses to our requests (yeah, we’re picky), and their outstanding dedicated business hosting rates.\n\nNote that we have moved a bit further to the west coast of the USA in this migration (from Arizona to Oregon), so you may see a tad more latency depending on where in the world you live. Not much we can do about that.\n\n“There’s nothing you can do about latency,” says John Romero, referring to physical restraints that slow down network play. “It’s inherent in the system.”\n“Yeah,” says John Carmack wistfully, “the speed of light sucks.” \n\nWe believe the speed increase of the new servers will more than offset any latency differences. Here’s to a long and harmonious relationship with our new hosts, PEAK Internet!",
        "url": "https://stackoverflow.blog/2009/02/08/new-datacenter-migration/"
    },
    {
        "title": "Podcast #38",
        "content": "This is the 38th episode of the StackOverflow podcast, where Joel and Jeff discuss YSlow optimizations for large websites, the value of unit testing, and the hidden pitfalls of asking questions to programmers.\n\n\nJoel notes that simply paying attention to what your coworkers are doing is an effective way to build and lead a team. If you aren’t interested in what your teammates are doing.. why are you on that team, again?\n\n\nI’ve followed the excellent Yahoo YSlow tool for a while. It really is intended for large scale websites, as I’ve noted before. But Stack Overflow is exactly the type of website that can benefit from YSlow recommendations!\n\n\nWe’ve been using the Expires or Cache-Control Header since we launched. This saves the browser round-trips when getting infrequently changing items, such as images, javascript, or css. The downside is that, when you do actually change these files, you have to remember to change the filenames. A part of our build process now “tags” these files with a version number so we no longer have to remember to do this manually.\n\n\nWe also integrated the YUI Compressor into our build, to minify our CSS and JavaScript resources. We had bad luck with the .NET port of this tool, so we just shell out to Java in the build. Works great, although we had some crazy pathing issues that made us put the JAR file in the root.\n\n\nIt’s also possible for Google to host your shared javascript files, if you’re using a popular third party JS library. We chose not to do this because we package related JavaScript together, so it would defeat the benefits of packaging.\n\n\nBrowsers will parallelize their requests, but only so many requests can be “in flight” to the same domain. So it can be wise to split your website components across domains. Simple aliases such as a.mydomain.com seem to work fine for this purpose.\n\n\nJoel explains CSS sprites, which is an effective way to minimize the number of HTTP requests your website is generating. This is particularly useful on toolbars and the like which contain a lot of related images.\n\n\nThere are analogs here in the Strings tab of Process Explorer, and the UNIX command Strings, as well as classic Windows resource browsing — spelunking for whatever icons and image resources you can find in a file.\n\n\nThis is all important because I want Stack Overflow to be as fast as possible. Performance is a feature, and I think often underestimated. Even half a second delay can cause a 20% drop in traffic.\n\n\nWe discuss differential database backups and DNS time to live, to make the upcoming site transition to new harware as painless as possible, and minimize downtime. We’ll also update the old site with a static HTML page that tells you you need to flush your DNS.\n\n\nJoel notes that his partner Michael had to order thermal compound back in 2000 when he built up PCs for Fog Creek. This stuff is important! Please don’t use vegemite.\n\n\nWe finally fixed our paging algorithm, which had some aggravating edge condition bugs. I dedicate this fix to John Topley.\n\n\nJoel and I have some reservations about unit testing, at least the dogmatic test-first kind, where your goal is to have code coverage in the 95%+ range. It seems to us that this works best for legacy type applications that aren’t changing very much. At some level, the tests become friction preventing you from making changes, as every change results in a stack of failing tests.\n\n\nJoel talks about Robert Martin’s (aka Uncle Bob) Solid Principles, as explained on a recent Hanselminutes podcast. Joel: “it sounded like extremely bureaucratic programming” that “could theoretically protect you against things, but You Aren’t Gonna Need It.”\n\n\nOn the other hand, if you’re building a framework or API, something\ndesigned to be used by thousands or millions of developers, then having\na lot of unit tests — or Uncle Bob’s Principles of OOD — might make sense. Principles and rules are fine, but thinking about what you’re doing should always come first.\n\n\nThe implied part of any question is whether the question even makes sense. I’ve always loved Alex Papadimoulis’ take on this, he “nailed” it with Pounding a Nail: Old Shoe or Glass Bottle?\n\nSoftware developers are trained from birth to ask why; when you ask a programming question, ignore that at your peril. And, please, when you see good questions, vote them up!  \n\nOur favorite Stack Overflow questions this week are:\n\n\nJeff: Problems with the MARQUEE HTML tag. I love that we’re reaching out to developers who ask naive (but earnest!) questions like this.   \n\nJoel: SQL Server “AFTER INSERT” trigger doesn’t see the just-inserted row. Another example of being very careful, when you ask a question, to make sure you explain why you are asking this question. Otherwise you’ll get some answers you didn’t expect, such as “why would anyone ever do that?”  \n\nWe answered one listener question on this podcast:\n\nJoe Hopkins: “What have you found to be the most limiting or annoying part of the ASP.NET MVC? And do you have details on the Business of Software 2009 conference?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/01/22/podcast-38/"
    },
    {
        "title": "Podcast #37",
        "content": "This is the 37th episode of the StackOverflow podcast, where Joel and Jeff discuss the expansion of Stack Overflow into non-programming IT topics, the pernicious problem of “systemitis”, and how to reach the next generation of programmers.\n\nI was star-struck that Alan Kay actually participated in Stack Overflow, both answering a question and even asking a question of his own.\nWe finally reverse engineered the WMD source code, thanks to the noble and herculean efforts of Dana Robinson. If you’re interested you can pull the latest version from Dana’s Git repository.\nJoel recommends Eric Raymond’s Understanding Version-Control Systems. Our (very, very limited) experience with Git emphasizes the importance of editing code with the goal of creating easy to apply patches. If your changes are hard to merge, they’re likely to be ignored.\nI’ve been having fun (for particularly small values of fun) configuring and building the new server hardware for Stack Overflow. I was moderately surprised to find that live rebuilding a RAID array with a 500 GB drive takes around 8 hours; rebuilding a simple 1-1 mirror array in offline mode takes 4 hours.\nJoel recommends the built in Windows Server Network Load Balancer (nlb); there’s also the open source equivalent, HAProxy, which the Reddit guys mentioned in our podcast with them.\nWe are planning to launch an IT-centric Stack Overflow in the next few months. This will be a place for System Administrator and IT professionals — people who work with computers in a professional capacity, but aren’t necessarily programmers — can go to get their questions answered.\nOur first challenge with the IT-centric Stack Overflow is naming it. Naming is extremely difficult, whether you’re naming functions/variables, businesses, websites, or new human beings. We also need to find the leaders and moderators who will drive the community and set the tone for everyone else.\nJoel heard the world population of computer programmers is 4 million. I can’t find a source for this; does anyone have one?\nJoel thinks the current downturn is unlikely to affect the tech sector, except possibly as a broad excuse to cut dead wood out of companies. It’s interesting to contrast the Web 1.0 crash in 2000-2001 with the current environment; it certainly doesn’t feel the same to us.\nJoel and I don’t agree with rigidly defined Project Manager, Programmer, and Test roles; how can you judge other people’s competency in a particular discipline if you have zero competency in it yourself? Obviously this varies by company and person, but cross-training in related disciplines will make you a better programmer.\nJoel talks about “systemitis”, programmers who spend the bulk of their time creating giant universal programming solutions to business problems that don’t really make sense. This is perhaps a sign of programmers who aren’t being challenged in their jobs. Rather than letting them spend their time creating another Universal System, try to recognize systemitis, and encourage these programmers to improve their skills in related disciplines instead of building “the system”\nWe remember the classic BASIC programming that a whole generation of programmers grew up with. Typing in and modifying these simple little games was our first programming experience, an experience that launched a lifelong career. What is the equivalent for today’s young programmers?\n\nOur favorite Stack Overflow questions this week are:\n\nJoel: Significant new inventions in computing since 1980? Joel picked Alan Kay’s question, even before Joel knew it was from Alan Kay. We swear!\n\nWe answered several listener question on this podcast:\n\nAlfred: “What will happen to the open source movement in a sluggish economy? Will it grow or shrink?”\nShawn: “On the Business of Software: why do companies sell only small personal pizzas instead of individual pizza slices?”\nDaniel: “Large companies have well-defined roles like PM, Dev, and Test that are quite rigid. Is this a good strategy?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/01/15/podcast-37/"
    },
    {
        "title": "New Stack Overflow Servers Ready",
        "content": "After many trials and tribulations, the new Stack Overflow servers are now ready to ship.\n\nLadies and gentlemen, meet the newest members of the stackoverflow.com hardware family: SOWEB1, SOWEB2, and SODB1. That’s right, I even labelled them with my black and silver sharpies.\nIt’s been an awfully long month and a half since I originally asked whether we should rent servers or buy them. I’ve finished burn-in testing on all three servers and I am totally confident (barring any shipping disasters) they’ll arrive at our hosting provider ready to slide into a rack and “just work”. The benefit to you is that we make stackoverflow.com even speedier than it already is, and far more scalable.\nI learned quite a bit in building up these servers, and I certainly paid my dues in the process. So you’ll forgive me if I took the liberty of personalizing our servers a little bit.\n\nThat’s right, I build my servers with an extra-special ingredient: love. And if loving these computers is wrong, I don’t wanna be right.\nI guess I was inspired by the old Amiga A1000 I used to own, which had the signatures of the designers molded into the underside of the case.\n\nOf course I’m just a schmuck who assembled some parts, and these guys were actual hardware design gurus far ahead of their time, but you know what I mean.\nIn particular, I have to emphasize two things I learned. If you’re building up servers, make sure you do these two things as soon as they arrive:\n\nUpdate the BIOS and RAID firmware to the latest possible versions.\nMake sure you have the latest operating system drivers.\n\nI’m no stranger to BIOS updates and firmware flashes for my desktops and consumer hardware, but I was hesitant to mess with the firmware on a server. I figured if it ain’t broke, don’t fix it, that sort of thing. Well, I was wrong.\nThe RD120 server demanded a BIOS flash as soon as I installed the slightly newer CPUs I ordered for it. No problem; that’s fairly typical for newer CPUs. Done and done.\nWhat was much more unusual, however, was the way RAID port #6 refused to operate on the server. RAID ports #1 through #5 worked like a champ, but not #6. I ordered a grand total of 12 hard drives (6 + 2 + 2 + 2 spares), and I tried three of them in that port, to no avail. It would see the drive, then reject it within a few minutes. I figured this had to be a hardware problem so I called Lenovo. They dispatched a very friendly tech the next day who came out and replaced the RAID backplane. Unfortunately, this didn’t fix the problem! After he troubleshot it for a bit, I got a lecture about using “non-Lenovo” industry standard SATA hard drives in a server. I actually have two official Lenovo 160 GB drives here, but he wouldn’t use those either as they’re not on the parts list for the RD120, somehow. I insisted, and we inserted the drive. To my amazement, this worked. I hadn’t even considered putting in a different brand of drive. I thanked the tech, and after he left I tried another random SATA drive I have here. It too worked!\n(As an aside, I had a rip of a time finding the Windows app that shows you the status of / lets you control the RAID arrays, but I eventually dug it up — the IBM ServeRAID application. Thanks for nothing, Lenovo!)\nAt this point I belatedly realized what my problem was. As soon as I got the RAID controller updated with the latest firmware, all my problems magically went away — RAID port #6 started working perfectly with the original drives. I would have done this earlier, but Lenovo’s update download didn’t work for me, so I had to call support to get a pointer to the IBM ServeRAID 8k series bootable ISO update, which did work. (By the way, have you ever read anything scarier than RAID controller bugfix change histories? brrr. The latest patch was January 9th!) There were still some performance oddities until I updated the default (apparently very out of date) Windows Server 2008 driver to a newer version I downloaded from Lenovo’s website.\nThe moral of this story? See above. Update the damn firmware and OS drivers to the very latest versions as soon as you get the servers, not weeks later! You’ll save yourself (and your vendor) a lot of hassle.\nI’ve done a fair bit of burn-in testing on all the servers, typical stuff like multiple instances of Prime95. but I paid special attention to the RD120 as it will be our database server. Brent Ozar, our friendly neighborhood DBA ninja, recommended I configure the six-drive array thusly:\n\nTwo drive RAID 1 mirror — Operating System, SQL Server 2008, and Logfiles\nFour drive RAID 10 array — Database files\n\n\nI made it so, and I ran some tests with SQLIO to verify that the data file array had good performance characteristics. I created a 24 GB test file on the array, and used this syntax:\nsqlio -k{R/W} -t8 -s120 -d{drive} -o16 -f{random/sequential} \n      -b{kilobytes} -BH -LS Testfile.dat\nThat means 8 threads, for 120 seconds, hardware buffering only, 16 outstanding I/O operations per thread.\n\n\n\n1kb sequential writes\n19.18 mb/sec\n6ms\n\n\n8kb random reads\n26.90 mb/sec\n36ms\n\n\n8kb random writes\n64.65 mb/sec\n15ms\n\n\n64kb sequential reads\n344.77 mb/sec\n22ms\n\n\n64kb sequential writes\n359.32 mb/sec\n21ms\n\n\n128kb sequential reads\n395.40 mb/sec\n39ms\n\n\n128kb sequential writes\n413.90 mb/sec\n38ms\n\n\n256kb sequential reads\n464.85 mb/sec\n68ms\n\n\n1mb sequential reads\n458.50 mb/sec\n278ms\n\n\n\nThis compares very favorably with the extremely expensive SAN configuration Chad tested (it’s labelled Server #2 in his charts). Behold the power of inexpensive SATA drives in a directly connected RAID 10 array! It would have been even faster if had we gone with a six drive array, but we felt that the OS needed to be on a separate set of spindles.\nI also did a quick run of SQLIOSim, which completed fine but produced a few warnings about long IO requests — but apparently that’s to be expected.\nSQLIOSim will generate sufficient IO requests to overwhelm almost any disk subsystem. The long IO message from the simulator are normal. Although this does tell you that at some point the disks won’t keep up.\nAs Joel pointed out on the last podcast, me personally building up these servers makes zero business sense if you factor in the cost of my time. But I’ve also learned a ton about these servers and the server industry in general in the process. Stuff I feel like I need to know to operate these servers responsibly while they live at a remote data center. To me, that’s worth it — I feel like I’ve paid myself to learn.\nSo here’s to you, SOWEB1, SOWEB2, and SODB1. Long may you run, you magnificent bastards.",
        "url": "https://stackoverflow.blog/2009/01/25/new-stack-overflow-servers-ready/"
    },
    {
        "title": "Podcast #39",
        "content": "This is the 39th episode of the StackOverflow podcast, where Joel and Jeff discuss database design and the shell game of performance, the value of short, focused presentations, and the importance (or not) of a prestigious degree for software engineers.\n\n\nJoel insisted that we run the stackoverflow.com books on QuickBooks. I was more open to using an online accounting solution, but we were worried about someone holding our business finances hostage. Joel also maintains that “every accountant in the world knows QuickBooks”. I’m not happy about it, but small business reality.  \n\n\nNow that we can (theoretically) afford to pay ourselves to work on the site, we deployed two new features: reputation bounties on questions and new reply notifications.   \n\n\nJoel expresses some concern about the value of panel discussions at conferences. There are lots of variables: who is on the panel, what are the topics, and how skilled is the moderator? It’s almost better to give each person on the panel a 10 minute window to talk about some topic they think will have value for the audience.\n\n\nI often think of small, focused presentations as “Grok Talks”. One presentation format which hews closely to this model is Pecha Kucha. It’s generally a good idea to err on the side of keeping it small. The larger the talk, the more material you should have whittled away and deleted to get it down to size.\n\n\nIn building Stack Overflow, we copied a key part of the Wikipedia database design. This turned out to be a mistake. We are due for a massive database refactoring, which is going to be very painful, but it is necessary to avoid excessive joins in a lot of our key queries.\n\n\nWe also begin to appreciate why the giant multi-terabyte table schemas (like Google’s BigTable) are completely join-free, basically simple hashtables or tuples spread across a server farm.  \n\n\nMy benchmarking shows that CPU speed is surprisingly important on our database server. Going from 1.86 GHz, to 2.5 GHz, to 3.5 GHz CPUs I see an almost linear improvement in typical query times! The exception is queries which don’t fit in memory, but right now with 4GB RAM most of our DB fits in ram; with the new 24GB RAM server I expect the database to be entirely in memory for quite a while.\n\n\nJoel talks a bit about queueing theory, and its relation to OS scheduling. I propose that performance is a shell game with bottlenecks, where you’re constantly trying to decide whether the bottleneck should be memory, CPU, or I/O.\n\n\nMore discussion about unit testing: when it’s appropriate, when it isn’t, and what it is for. Remember, 100% code coverage (or even 90% code coverage) is not free. You’re playing another shell game, so decide what axes of that resource balancing equation are important to you. Perhaps the greatest risk is being dogmatic about it.  \n\n\nIf you enjoy this podcast, you might also enjoy Hanselminutes — Joel gives it his seal of approval!\n\n\nJoel revisits the SOLID principles, and compares them to designing replaceable batteries, or a headphone jack, into your product. Appropriate in some narrow cases, but not all the time. Imagine a consumer product where every single part of it could be plugged in and replaced with another compatible part. Is that realistic?\n\n\nPerhaps new language features will advance programming a lot faster than any given set of programming principles, no matter how good they are. I’ve often thought that design patterns are how languages evolve.\n\nJoel says you don’t have to go to a prestigious name brand school, necessarily, but you need to choose schools that have a rigorous selection process. “These people are a tiny little bit more likely to succeed at our rigorous selection process.” I concur — if you aren’t seeking out challenges, whether they are large, small, or somewhere in-between — what are you doing?\n\nOur favorite Stack Overflow questions this week are:\n\n\nJeff: Is mathematics necessary for programming? It can’t hurt, and often helps, but it is not strictly necessary in our opinions.  \n\nJoel: Does it matter where you get your CS degree? In brief, yes, but not for the reasons you might think.   \n\nWe answered one listener question on this podcast:\n\nMichael Coney: “Joel mentioned the SOLID principles on the previous podcast. Our software architect was also fond of over-isolation but was talked out of it. In the real world, if you need to change something, you just rewrite it.”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/01/30/podcast-39/"
    },
    {
        "title": "Podcast #36",
        "content": "Joel and Jeff, with special guest Eric Sink of SourceGear, discuss source control present and future, why writing a compiler is an important rite of passage for programmers, and how budding software engineers should be educated.\n\nI was convinced Eric was going to agree with me on whether or not software developers should know C. Unfortunately for me, he agrees with Joel. Doh!\nEric’s Source Control HOWTO should be required reading for every software developer. Eric literally wrote the book on this, and in fact this series is being converted into a book. Deservedly so; it’s fantastic. The best person to explain source control is someone like Eric who literally wrote a source control system from scratch — SourceGear Vault.\nAn extended discussion of the evolution of source control systems, into distributed version control (DVCS) such as Git, Mercurial, Darcs, and BitKeeper. Eric feels Linus Torvalds’ video “evangelizing” Git does the opposite for many. He’s also uneasy about branching and merging becoming easy, common operations, which is much of the promise of DVCS.\nEric feels DVCS solves certain edge conditions very well, but those edge conditions should only be explored when you feel the need, not promoted as broad feature bullets to the average developer. “The harder you try to explain DVCS, the worse it gets, so stop!”\nEric points to Eric Raymond’s evolving Understanding Version-Control Systems as a pretty good survey of today’s source control landscape.\nOften, features aren’t the point — discoverability is. I was amused to find that Eric discovered how convenient background compilation is in Eclipse. This is something that Visual Basic developers have had for 8 years! Java and C# developers don’t appreciate what they’re missing because it hasn’t been surfaced in the product, until now.\nEric and Joel note that, at some level, source control is about putting obstacles (let’s call them safety barriers) in front of developers — and the question is, how many does your shop need? Do you remember working without version control at all? It’s incredibly fast, until stuff gets overwritten or lost, of course.\nJoel and Eric maintain that writing a compiler is an important rite of passage for a programmer. There’s an enormous class of programming problems where writing a lexer, parser, recursive descent, and parse trees will help you. Once you understand how easy it is to set up a state machine, you’ll never try to use a regular expression inappropriately ever again.\nEric also wrote a web browser. It’s interesting to contrast the experience of writing a compiler, which is typically extremely strict and will fail to compile if a single character is out of place, versus writing a web browser, which accepts all kinds of malformed and downright incorrect HTML and JavaScript. Eric and Joel think this was categorically a huge mistake; I’m not so sure.\nOn Postel’s robustness principle: “be conservative in what you send, liberal in what you accept.” This becomes a painful war of attrition at some level; everybody is vying to accept just a little bit liberally than the next guy, so isn’t there an implied element of mutually assured destruction at the end?\nEric: “Computer Science degrees do not teach programming; they teach how to learn”. And he’s OK with that. We all agree that it’s hugely important to complement your computer science curriculum with either hobby projects, internships in the so-called “real world” — or both! These extracurriculars will improve your chances of landing that first junior developer job.\nCongratulations to our new UserVoice community moderators — Joel Coehoorn and Sean Massa. Do participate on the Stack Overflow UserVoice feedback site, we check it every day, and we read all the feedback we get!\n\nOur favorite Stack Overflow questions this week are:\n\nEric: What is the single most effective thing you did to improve your programming skills? Eric says it was when he wrote a compiler. “You’ll write the crappiest compiler ever, but you will learn so much.”\nJeff: What’s your most controversial programming opinion? This question is almost a textbook example of what we don’t want on Stack Overflow, in that it’s an unanswerable and probably contentious discussion. And yet it’s an extraordinarily high quality question! This is a testament to the quality of the participants, another example of the Stack Overflow community defining what they want to see and setting a positive example for other programmers to follow.\n\nWe answered one listener question on this podcast:\n\nEspen Grindhaug: “In many universities and colleges, they don’t teach the ‘new’ technologies. Can you list some books to get up to speed on the new technologies?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/01/08/podcast-36/"
    },
    {
        "title": "Podcast #35",
        "content": "This is the 35th episode of the StackOverflow podcast, where Joel and Jeff discuss the mysteries of server hardware, anomalous voting patterns, change fatigue, and whether or not Joel is the Martha Stewart of the software industry.\n\n\nA discussion of the bizarre world of server pricing, as discussed in the Best (or Worst) Geek Christmas Ever. It is sort of mysterious how a lot of the same hardware parts are is rebranded “server” parts, along with an instant 50%+ markup.\n\n\nBuilding your own servers up probably doesn’t make any sense from a business perspective, but Joel and I both enjoy learning about this stuff — and it is critical to our business. I doubt I would personally handle every server we ever use, but the first few, absolutely. I believe understanding the commodity hardware market is important for programmers.  \n\n\nJoel notes that you really, really want to test your RAID failover scenarios before deploying your servers. That’s one of the exact reasons I wanted to have the servers here, for me to play with RAID scenarios while the servers are up and running.\n\n\nAfter receiving a number of complaints, we now check for anomalous voting patterns on Stack Overflow. I guess it shouldn’t be surprising that there were 4x as many anomalous upvote patterns as downvote patterns.\n\n\nAnswers to older questions don’t tend to get voted up as aggressively as rapid answers. There’s an aspect of the Fastest Gun in the West to our system. Joel and I believe there are two audiences here; the daily users and the long tail. Sometimes a little (or a lot) of patience in order.\n\n\nWe are now reverse engineering the JavaScript based Markdown editor we use on Stack Overflow. Believe me, we don’t want to, but we have no choice. If you know JavaScript and/or GIT, we welcome your contribution!\n\n\nJoel had a great response to a forum post by a programmer thinking of leaving the industry, which I summarized as Programming: Love It or Leave It. Apparently Joel thinks of himself as the Martha Stewart of the software industry? Who am I to judge; listen to the audio yourself.\n\n\nIf you’re unhappy with your job as a programmer, it might simply be because your situation is not a good one. If you’re in a bad situation, recognize that: either change your organization, or change your organization. Alternately, if you want to have a great 10 to 15 year career goal, why not start your own software company where programmers are able to work under great conditions, building awesome software with their peers?\n\n\nThe Joel on Software discussion forums may soon require (nominal) paid registration, much like MetaFilter. This is something we discussed with Josh Millard, a MetaFilter moderator, on Podcast #22.\n\n\nJoel and I struggle with the definition of “change fatigue” as a career hazard for programmers. Isn’t change the very basis of programming, and the reason most people enter the field? Rather than being a hazard, isn’t the continual change a destination? Admittedly, it must be painful to be a specialist and have your knowledge obsoleted; Joel and I are both broad generalists, so it’s easier for us.\n\nI discovered a great Stack Overflow post through Damien Katz: Arrays, What’s the Point? Good Question. This is a fine example of a question that seems sort of ridiculous on the surface, but can provide amazingly insightful answers — and a deeper understanding of programming. Jonathan Holland’s accepted response has 190 upvotes!\n\nOur favorite Stack Overflow questions this week are:\n\nJeff and Joel: Arrays, What’s the point? This is exactly why we created Stack Overflow; fantastic result. Understanding data structures is as fundamental as it gets — and so is questioning them.  \n\nWe answered one listener question on this podcast:\n\nIan Varley: “A lot of programmers eventually become exhausted by the pace of change in our industry. How do you keep from getting change fatigue?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2009/01/01/podcast-35/"
    },
    {
        "title": "Podcast #32",
        "content": "This is the 2^5 episode of the StackOverflow podcast, where Joel and Jeff discuss software piracy, dealing with public criticism, how to get people to answer your questions, and the ideal programmer office.\n\n\nA brief digression about the analog to digital television switch. Make sure you watch this brief instructional video so you’re prepared.\n\n\nJoel gives an overview of Fog Creek’s attitude towards software piracy and licensing. At its root, we believe that buying your software has to be easier than stealing it. Stop thinking of it as fighting an enemy and think of it as simply being better than the alternative.  \n\n\nOn advertising: if you can get people to talk about or willingly watch your ad, you’ve already won. This is why Wil Shipley’s rant about the Mojave Experiment is counter-productive.\n\n\nI argue that Apple is making real headway in mainstream marketshare, largely because they’ve won the advertising war so decisively. Joel argues that they haven’t. Which of us is right?\n\n\nOne of our major performance optimizations for the “related questions” query is removing the top 10,000 most common English dictionary words (as determined by Google search) before submitting the query to the SQL Server 2008 full text engine. It’s shocking how little is left of most posts once you remove the top 10k English dictionary words. This helps limit and narrow the returned results, which makes the query dramatically faster.  \n\n\nCongratulations to Stack Overflow team member Geoff Dalgas; he’s the proud father of a new baby boy as of last week!   \n\n\nWe plan to mail out weekly email summaries of other people’s answers and comments to your posts — much like FriendFeed — for people who haven’t visited Stack Overflow in a week or longer.\n\n\nSome topics are just fundamentally hard to understand, like the Monty Hall Problem, and lead to a lot of extra discussion. The two banned topics on the XKCD forums are 0.9999 = 1 and airplane on a treadmill for that reason.  \n\n\nJoel “doesn’t want to get too inspirational and stuff” but if you’re not doing a few things where you’re failing a little, you’re probably not trying hard enough. I say if everyone likes you, you probably aren’t doing anything interesting.\n\n\nJoel points to Guidelines on Writing a Philosophy Paper: “pretend that your reader is lazy, stupid, and mean.” And the converse, as a reader, is to try to infer the most charitable possible interpretation of what you’re reading. Not that anyone actually does this, in my experience.  \n\n\nCan you tell the difference between people who honestly want to have a discussion about a topic, and people who are using that topic as a prop for their ego? Learning to make this distinction can ultimately save you a lot of time.\n\n\nMy favorite Stack Overflow question this week is a classic, one of my early favorites: How to get attention for your old, unanswered questions. The response by icelava is absolutely on target — if you want people to pay attention to your question, you have to pay attention to your question. Provide status and progress reports from your own continued effort to answer the question yourself. An excellent example of this is lassevik’s tenacious return to his oddball problem which ultimately turned out to be a bug in the video driver, not his code!\n\nJoel’s favorite Stack Overflow question this week is Must haves for a developer’s office. Hard to disagree with the community on this one: a quality chair, two large monitors, whiteboards, and control of the lighting. If possible — and this is usually a hard thing to get, so you have to really consider how realistic a negotiating position asking for your own private office is. That said, Joel and I continue to believe having a private office is the most ideal programming environment; it offers choice between open/noisy and closed/private. This also depends how much noise you can tolerate. In any case, demand your Programmer’s Bill of Rights. As Joel says, “it’s only money”.  \n\nWe answered the following listener questions on this podcast:\n\nDavid Ackerman: “As a recent graduate, I’ve been on a lot of interview trips recently. The interviews that didn’t result in offers have hurt my confidence more than expected. Jeff, you get a lot of flak on your blog, how do you stay positive when people are tearing you apart?”  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/12/04/podcast-32/"
    },
    {
        "title": "Podcast #34",
        "content": "This is the 34th episode of the StackOverflow podcast, where Joel and Jeff discuss the following:\n\nJoel recommends a pink HDMI cable as a christmas gift for the special ladies in your life. This will go nicely with her pink ethernet cable, pink USB cable.\nWe’ve placed an order for our dedicated servers and have found a dedicated host we tentatively like. We’ll be exploring the “buy” axis of build vs. buy because it gives us greater power and control over our setup. This will also be my first time building a RAID 10 array, which is supposedly a far better solution than RAID 5, and I’m geeking out a bit over that.\nJoel remembers George Orwell’s 1984 and The Thin Red Line.\nIt’s advisable for programmers to spend some time rotating through customer support so they can lean to share the customer’s pain. Alternately, Joel has an even better idea: perform usability tests periodically, with your developers observing. Developers sometimes come up with great new features when exposed to actual users working with the software.\nThe Fog Creek Team completed the Endless Setlist on hard in Rock Band 2. That’s 84 songs in a row, mightily impressive, at least to me.\nI have mixed feelings about easter eggs; if you’re going to put something cool and hidden in your product, why not make it a standard feature so most people will find it and benefit from it? There are two discussions of easter eggs on Stack Overflow: What Easter Eggs have you placed in code, and Is it a good idea to put Easter Eggs in applications?\nYou could argue that a lot of modern large application features are effectively easter eggs because people can’t find them! This is what motivated the move to the Ribbon UI in Office 2007. Nine out of ten feature requests for Office were already in the product. That’s the ultimate easter egg, and not in a good way.\nThe proposed Stack Overflow question bounty feature — to help get those persistently unanswered questions some new attention — has two gating clauses: first, you can only attach a small reputation bounty after 24 hours; second, the majority of the bounty will come from the asker’s own reputation. You have to be willing to slice off a part of your own rep as a reward.\nWe noticed that Jason Calacanis of Mahalo will be doing a Q&A site. The difference is that this site will pay answerers in real money, part of what Joel calls Jason’s Econ 101 management style. The danger is that financial incentives can destroy intrinsic motivation. What’s your management style? Command and Control, Econ 101, or Identity?\nThere is a whole new generation of programmers growing up with code like we did. Here’s hoping they’re learning from our mistakes, so they can make all new mistakes and not repeat all the same dumb mistakes we made. It’s almost like a system of software apprenticeship.\nIs code elegance in the eye of the beholder? Consider the two answers to Parameterizing a SQL IN Clause — which one is more elegant, and why?\n\nOur favorite Stack Overflow questions this week are:\n\nJeff: How old are you, and how old were you when you started coding? This is a great example of using of Stack Overflow to do cool stuff we didn’t anticipate. It also broke our hot question algorithm pretty badly, because it had such a huge number of responses.\nJoel: What was your biggest CS eye opener? Joel points to K&R’s observation that a[5] and 5[a] are the same thing.\nBonus: Parameterizing a SQL IN Clause. Great example of my accepted answer not being accepted by the community. I just wanted to highlight the cleverness of Joel’s solution, which I literally would never have thought of. I ended up using the community’s solution, though.\n\nWe answered the following listener questions on this podcast:\n\nChris: “It’s often said that the job of the software development manager’s job is to insulate developers from customers. But I’ve found it’s helpful for developers to have interactions with users and stakeholders.”\nSinbad Carver: “Did you leave any easter eggs in Stack Overflow? If not, did you consider any?”\nDerek in Canada: “If you attach a bounty to some questions, will that lead to less people answering regular questions?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/12/18/podcast-34/"
    },
    {
        "title": "Podcast #33",
        "content": "This is the thirty-third episode of the StackOverflow podcast, where Joel and\nJeff sit down with special guest Babak Ghahremanpour, the lead developer for FogBugz.\n\nI gifted the Fog Creek office with a set of cymbals for the Rock Band 2 drums, to complement the sweet Rock Band setup I bought for them earlier this year. And yes, I already got them a tambourine and cowbell.\nWe’re starting to seriously consider buying our own servers and renting rackspace for the Stack Overflow servers. It makes sense to us from both from a financial standpoint and from a performance standpoint. We’re also considering some of the cloud services like Amazon EC2 and Windows Azure.\nWe wonder why so much of the software that’s bundled with hardware is so terrible. There’s nothing scarier to me as a software developer than the DVD labelled “Install me!” provided with some bit of hardware that I just bought. Why is that?\nI tend to agree that one danger sign for a new programming job is the requirement to be on call. This is a bit more normal for sysadmin positions, but it’s unusual (and arguably unhealthy) for programmers.\nJoel and I note that developing software predisposes you to “debug” real world processes that largely aren’t worth the effort. Beware!\nWe’ve probably mentioned this before, but whatever else you decide to do with your database, it is incredibly important that you get your database under version control.\nDoes it make sense for every software developer to start their own company, which is what Paul Graham seems to advocate? It’s certainly one of the few paths to becoming very wealthy, if that’s your primary goal.\nIf you just can’t get enough Spolsky, Joel was featured on the Startup Success podcast with Bob Walsh and Patrick Foley.\n\nOur favorite Stack Overflow questions this week:\n\nJeff: Why doesn’t IE7 copy PRE CODE blocks to the clipboard correctly? This is sort of cheating because it’s my own question, but it’s a perfect example of using Stack Overflow to build Stack Overflow! We are the target audience, too.\nJoel: Dealbreakers for new programming jobs. Some great responses to this question; worth a read if you’re looking for a new job.\nBabak: What real life bad habits has programming given you? We alluded to this question in the previous podcast; it’s a classic.\n\nWe answered the following listener questions on this podcast:\n\nPeter Bailey: “When you’re designing a new application, how much code (triggers and stored procedures) do you put in the database?”\nVincent Tan: “What are your top 3 costs in running a software business, and how do you reduce them?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question\nusing nothing but a telephone and a web browser. We also have a\ndedicated phone number you can call to leave audio questions at\n646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/12/11/podcast-33/"
    },
    {
        "title": "No Podcast This Week — Suggested Guests?",
        "content": "There will be no podcast this week, because Joel is on a business trip to Korea, apparently at webappscon. I can’t remember his exact words, but they were something along the lines of “I don’t care that the listeners want a new podcast, I am not a monkey who dances for their amusement!” I tried in vain to reason with him, but you’ve heard how he is. \n\nBut seriously, one thing Joel and I want to do in future podcasts is have more guests on the show. While we of course loooove talking about all things Stack Overflow and Fog Creek, it’s also nice to open the floor up a bit and broaden our horizons.\nWe have a few guests tentatively lined up for future shows through the end of the year:\n\n\nAlexis Ohanian and Steve Huffman of Reddit\n\n\nRichard White of UserVoice\n\n\nSome of the fine folks who write and code woot.com\n\n\nDamien Katz of CouchDB\n\nEric Sink of SourceGear\n\nI’d like to open the comments up to suggestions. Who would you like to hear Joel and I talk with on future Stack Overflow podcasts?\nAnd yes, Stack Overflow rules do apply — the guest does have to be at least peripherally “programming related”, in theory anyway. 🙂",
        "url": "https://stackoverflow.blog/2008/10/23/no-podcast-this-week-suggested-guests/"
    },
    {
        "title": "Podcast #29",
        "content": "This is the twenty-ninth episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\nThe downside of being a PC gamer: it’s prime game release season. My productivity last week was nil due to the release of Fallout 3, as I discuss on my blog. But it was totally worth it.\nOne videogame cliche is the levels filled with random barrels and crates as filler. The classic game site Old Man Murray used to rate games on how quickly you saw a crate after starting the game. And then there was the Quake 2 mod where you played as a crate .. in a room full of crates! Surreal.\nI’ve always wondered if Joel was a gamer. Apparently he played Call of Duty 3 and 4, which bring him back to his days as an Israeli Army infantryman. Also, Bioshock, which is outstanding. At least he has good taste.\nJoel wonders why we don’t use Google search as the primary search method on Stack Overflow. Of course it is possible to search Stack Overflow with Google using the “site:” specifier, as long as you scope to an appropriate “folder”. Currently we offer Google as a search alternative when no results are found. I still think both search methods are desirable, because we can search by user, by tag, and so forth.\nMy first organic hit on Stack Overflow based on a coding search was this question about using Beautiful Soup in IronPython under C#.\nOne of Joel’s favorite Stack Overflow questions this week is Coding In Other Spoken Languages. The discussion is great, but it does beg the question — as much time and money as companies spend localizing software, why don’t we localize programming languages? Joel points out that the Excel macro language is perhaps an exception, as the function names are localized. This is quite rare, but there are non-English based programming languages out there.\nJoel has literally written the book on hiring great programmers — Smart and Gets Things Done. In this podcast he examines a few guidelines from the Fog Creek hiring practices. One of those is having an intern program that is second to none. I was definitely impressed when I visited. Did I mention that they have fully catered lunches every weekday? Also, don’t forget that the interview process is your opportunity to judge the company that wants to hire you. If they don’t have a good interview process, do you really want to work there?\nThe amount of information you are faced with as a developer is overwhelming, with more new stuff arriving every day. How do you keep up with information overload? I recommend “Just In Time” learning. Joel highlights the difference between the early days of Java and today, now that Java has grown into something of a monster. Is .NET on the same path?\n\nWe also answered the following listener questions:\n\nJonas from Sweden: “Can you expand on what characteristics a good programmer should have? When hiring, how do I get them to tell me what makes them a good programmer?”\nIdriss Selhoum: “How do you feel about Microsoft releasing new .NET versions so rapidly, and fragmenting the developer base?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/11/13/podcast-29/"
    },
    {
        "title": "Podcast #30",
        "content": "This is the thirtieth episode of the StackOverflow podcast, where Joel and Jeff sit down with Richard White of uservoice.com.\n\n\nRichard worked as the user interface guy on calendar startup Kiko.com; UserVoice was originally inspired by Richard’s work on Kiko, as a hybrid of Reddit and FogBugz.\n\n\nThere are some thematic similarities between Dell’s IdeaStorm and My Starbucks Idea and UserVoice — to some degree, UserVoice is users voting on the direction your software should take. Does software democracy work?\n\n\nUserVoice isn’t just for software — there’s also Obama CTO and Rebuild The Party. This generated huge load and traffic, so if nothing else it was a good scaling test. The usual item has a maximum of 50 comments; one suggestion had 980 comments.\n\n\nOur use of UserVoice is a bit anomalous; I prefer to (politely) decline requests that I think we won’t get to. Is it more honest to let reasonable requests like this one languish in the system for literally years, ala Microsoft’s Connect, then to find out that they’ve been set to “wontfix” after 3 years? As a user myself, I find this behavior abhorrent.\n\n\nWe do plan to talk a bit less about building Stack Overflow and a bit more about our favorite questions on Stack Overflow.\n\n\nJoel’s favorite Stack Overflow question this week is What Tricks Do You Use to Get Yourself “In The Zone”?\n\n\nUserVoice is a Ruby on Rails app, with approximately 6,000 lines of code. A large portion of that is unit tests.  \n\n\nJeff’s favorite Stack Overflow question is What is an NP-Complete Problem. This is a followup to the blog post where I demonstrate a sadly incomplete understanding of the concept of being NP-complete.\n\n\nJoel notes that there are harder problems than NP-Complete, namely the halting problem. There’s a great Stack Overflow question on this, The Halting Problem in the Field\n\n\nThere are a lot of very hard problems in computer software that aren’t necessarily NP-complete — and we’ve had limited success “solving” them, such as speech and voice recognition. Furthermore, if the best algorithm we can come up with is something like n-cubed, is that a realistic solution?\n\nUserVoice will be using Jan Rain’s RpxNow to implement OpenID. We wondered how myopenid.com would make money; their RpxNow service is the answer to that question. Now uservoice can mark that item off their own uservoice page — it’s the #2 most requested feature by customers of User Voice.\n\nWe also answered the following listener question:\n\nChris Conway: “After 26 episodes of the podcast, will you ever take a turn to less self-reflexive discussion?”  \n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/11/20/podcast-30/"
    },
    {
        "title": "Podcast #31",
        "content": "This is the thirty-first episode of the StackOverflow podcast, where\nJoel and Jeff discuss.. stuff!\n\n\nBased on some comments from Podcast #30, we now know that “Learning about NP-Completeness from Jeff is like learning about irony from Alanis Morissette”. It’s funny because it’s true!\n\n\nIt was also noted that “[Jeff] certainly no mathematician.” In my defense, I’ve always been very open about my lack of math skills. It’s even item #3 in my Five Things We Didn’t Know About You list.\n\n\nI noticed that someone posted the halting problem to GetACoder.com, so if nothing else good came of this, at least humor was delivered.\n\n\nHow useful is math to most programmers? In other words, how often does a typical software developer use something they learned in, say, Calculus class or beyond? Joel cites the original Google PageRank algorithm paper (pdf) and Google’s MapReduce (pdf) as good examples of math in practice for mainstream programming.\n\n\nI believe it’s important for programmers to develop skills that aren’t programming, necessarily, but that are complementary to programming, such as graphic design. (Or databases, or HTML/CSS, etcetera) Remember, good programmers write code; great programmers steal code. This applies triply to design.\n\n\nJoel and I both believe that status reports should be treated as a “public wall”, never as weapons to determine how people get paid or promoted. The single best thing I’ve ever read on this is Poppendieck’s Team Compensation (pdf) — which I discovered through Joel’s first collection of software writing. If I could, I’d print out a copy of this and staple it to the face of every person in the world who manages software developers. Yes, it really is that good. Go read it!\n\n\nOne team at Fog Creek instituted a daily standup meeting for their project, which is a staple of most agile development approaches. In addition to the “Daily Kiwi” convention, Fog Creek also use a locally hosted instance of Laconica, an open source Twitter clone. It’s certainly an interesting alternative to email.\n\n\nJoel believes most small to midsize software companies will deal with an economic downturn by (temporarily) deferring development of new versions of their products. For companies that have a lot of “extra” staff, the economy might be an excuse to get rid of the worst performing 10% of your employees.\n\n\nJoel justifies having a nice office space as 1) a recruiting tool 2) enabling higher programmer productivity and 3) the cost of a nice office space is a tiny number relative to all your other expenses running a company. I argue that companies which don’t intuitively understand why nice office space is important to their employees who spend 8+ hours every day there.. well, those companies aren’t smart enough to survive anyway.\n\n\nMy favorite Stack Overflow question this week is Are Parameters really enough to prevent Sql injections? Joel and I have a long discussion about the importance of parameterized SQL, both for performance and for security (beware Little Bobby Tables!). But you should know that it’s not 100% foolproof; it is possible (though rare) to have latent SQL injection exploits even when fully parameterized.\n\nJoel’s favorite Stack Overflow question this week is How do you pull yourself out of a programming ‘slump’? Joel knows tons of programmers who have burned out by age 50, and feels it is rare to find programmers who have written code for 20 to 30 years. Joel’s article Fire and Motion and my article Moving The Block sort of cover this topic. Joel also recommends the book Death March as a reference book for what to avoid.  \n\nWe answered the following listener questions in this episode:\n\n\nMike Akers: “How much time should programmers be spending in Photoshop?”\n\n\nDavid from the UK: “How do you handle status reports at Fog Creek?”\n\nMatthew Glidden: “How do you run a software company in lean economic times?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at\n646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/11/27/podcast-31/"
    },
    {
        "title": "Podcast #27",
        "content": "This is the twenty-seventh episode of the StackOverflow podcast, where Joel and Jeff interview Alexis “kn0thing” Ohanian and Steve “spez” Huffman, the founders and co-creators of Reddit.\n\n\nJeff is at the Professional Developers’ Conference in Los Angeles. He co-presented a session with Phil Haack on ASP.NET MVC, which you can view online if you are so inclined. Also while at PDC, Jeff participated in a brief roundtable meeting with Ray Ozzie, who had some completely unsolicited and very positive things to say about Stack Overflow!\n\n\nIf you didn’t know, Joel was the genesis of one of the earliest branded reddits — the Joel on Software reddit.\n\n\nWe discuss the Reddit switch from Lisp to Python, and the way Reddit stored raw user passwords in the database.\n\n\nWe use a weighting algorithm based on Reddit’s when we calculate “hotness” in Stack Overflow.\n\n\nReddit, like us, ran for quite a while on a single server. Moving to a second server, splitting the database, provided solid gains for Reddit and is something we just did as well. According to Steve, splitting off the database is easy — making sure you can scale to multiple application web servers is the difficult part, because of shared state caching.\n\n\nSteve is a big fan of HAProxy which is a single software load balancer in front of all ~20 Reddit servers.\n\n\nReddit’s first big partner is The Independent, for branded content. Although there is also WeHeartGossip. Joel and I feel these sorts of communities — to be truly successful — need personalities associated with them that are emblematic of the values and goals of that community.\n\n\nWe briefly discuss some of the protection mechanisms Reddit has in place to prevent abuse and spammers. Steve and Alexis have much more experience dealing with abusive users than we do. Per Steve, the Reddit mantra is “anything goes”, so they try to do as little as possible to inhibit users. We generally agree that the volume of badness is remarkably small. Most users behave responsibly — and this isn’t just an optimistic opinion, it’s based on actual data. That’s the good news!\n\nBehold the power of the Reddit audience: they may just have saved the world by sending a crowbar to the CERN Hadron collider.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/11/01/podcast-27/"
    },
    {
        "title": "Podcast #28",
        "content": "This is the twenty-eighth episode of the StackOverflow podcast, where\nJoel and Jeff discuss Windows Azure, SQL Server 2008 full text search, Bayesian filtering, porn detection, and project management — among other things. \n\n\nJeff met the inestimable Joey DeVilla aka Accordion Guy at PDC, who challenged him to pronounce Azure as in “Windows Azure”. My pronunciation reference for Azure is entirely based on the word appearing in the movie A Clockwork Orange.\n\n\nJoel and I greatly enjoyed Corey Trager’s Jeff Atwood is Trying to Kill Me. We do try to exploit the Jewish / Goyish dynamic. Also, Jeff is sorry he tried to kill you, but glad you survived to write that highly entertaining article.\n\n\nWe are still struggling with SQL Server 2008 full text search issues. And yes, we have engaged with the SQL Server team on this.\n\n\nJoel’s Inc. magazine article about Stack Overflow is now on newsstands (it’s the issue with Kevin Rose of Digg on the cover). The article is also online as well: How Hard Could It Be? The Unproven Path.\n\n\nWe have worked closely with Brent Ozar, who has singlehandedly took it upon himself to be our Stack Overflow database ninja. He’s gone far, far beyond what I would ever expect a volunteer to do — so we’ve added him as an official member of our virtual team. And if you need SQL Server expertise, Brent is your man.\n\n\nMicrosoft finally fixed their bizarre position on hotfixes. Instead of the bad old days of mandatory phone calls and requests, you can simply download the hotfix you need.\n\n\nOne limitation of Linq to SQL is that it does not support any SQL Server full text search predicates. Fortunately, we can freely intermix SQL strings and Linq syntax as much as we like.\n\n\nJoel points out that Google uses Bayesian filtering the way Microsoft uses an if statement. We worry that Microsoft doesn’t adapt their software well enough to the wider internet world, as demonstrated by the radically differing approaches to spellcheck from both companies.\n\n\nWe aren’t clear what the purpose of Microsoft’s new “Oslo” or M modelling language, announced at PDC, is. More domain specific languages? Every developer becomes a language designer? Why does that scare me a little?\n\n\nRay Ozzie made specific reference to “architecture astronaut” at PDC, which is extra humorous because Joel was referring to Ozzie when he coined the term.\n\n\nJoel remembers Hillel Cooperman, who used to be a star at Microsoft, but now works for Jackson Fish Market.\n\n\nOne Stack Overflow question we enjoyed this week: Showing too much ‘skin’ detection in software. The definitive debunking of this technique is from Dan of Dan’s Data, who reviewed PORNsweeper in 2000. We don’t believe the technical landscape has changed since then. Great discussion on Stack Overflow as well.\n\n\nJoel refers to the famous 1994 memo from Steve Sinofsky — Cornell is WIRED! Steve started as Bill Gates’ assistant, and now he’s in charge of Windows 7 after shipping Office 2007.\n\nAnother Stack Overflow question we enjoyed this week: What do project managers do all day? We’re not sure why the owner keeps deleting this question, as we think the answers have a lot of value. Joel also has a lot to say on the general topic of project management.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question\nusing nothing but a telephone and a web browser. We also have a\ndedicated phone number you can call to leave audio questions at\n646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/11/06/podcast-28/"
    },
    {
        "title": "Podcast #26",
        "content": "This is the twenty-sixth episode of the StackOverflow podcast, where Joel and Jeff answer five listener questions, mostly about social software design. Warning: this podcast features cowbell. Really.\n\n\nChristopher Leary: “Any thoughts on the general design of karma and rep systems based on your experience building one for Stack Overflow?”\n\n\nMichael L Perry: “What about a system where votes by people who have more reputation count more?”\n\n\nJeff Metzner: “If I post personal anecdotes as an answer to a question, is it reasonable for other users to edit that?”\n\n\nAnonymous: “Why can’t we ask IT questions? What about a sister site like Stack Overflow but for IT questions?”\n\nMiles Dennis: “For a cost-conscious startup, where do you see the balance between taking inexperienced staff that costs less, versus experienced staff that costs more?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question\nusing nothing but a telephone and a web browser. We also have a\ndedicated phone number you can call to leave audio questions at 646-826-3879.\nWhen calling the audio phone number, be sure to leave your name, so we can properly cite you when we answer your question.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/10/16/podcast-26/"
    },
    {
        "title": "Podcast #25",
        "content": "This is the twenty-fifth episode of the StackOverflow podcast, where Joel and Jeff sit down with the ineffable Steve Yegge, who you may know from his excellent and extremely popular blog Stevey’s Blog Rants. Steve worked for Amazon and currently works for Google.\n\n\nSteve proposes we use the Muppets Show theme as our podcast theme song. I’m more amenable to “The Touch” as featured in the Transformers the Movie from 1986.  \n\n\nWe ask how Google maintains its culture in the face of an army of new hires entering the company every month.\n\n\nSteve is, to put it mildly, a language maven. He shares some of his perspectives on language aesthetics. Should languages be designed by committee, or by a benevolent dictator?\n\n\nIf Steve could teach every developer one thing, it wouldn’t be how to type, or how to write — but how to market.\n\n\nGoogle has an infrastructure in place to support “mini-startups” within the company. Joel thinks all good startups must have ideas that sound terrible. YouTube is a great example, as is the Flip video recorder.\n\n\nBeing an entrepreneur often means spending a lot of your time not programming. This can be challenging for software engineers who love to code. Make sure you know what you’re signing up for if you go this route.\n\n\nSteve is a big believer in the Google experience, even though his last three projects have been cancelled “for business reasons”. Instead of Joel’s “Smart, and Gets Things Done”, Steve proposes “Done, and Gets Things Smart.”\n\n\nHow much does choosing the “right” programming language matter? Isn’t the variance between programmers far more significant to the end result? On the other hand, the best programmers often tend to be fluent in multiple languages.\n\n\nOne way to drag the “one horse language” programmers into multiple languages is to support sublanguages within the same runtime, ala IronPython, IronRuby, Jython, and JRuby.\n\n\nSteve is considering porting his game Wyvern to Android. He can’t talk about his current full time project at Google, but he does fess up to owning it — both from the business side and the engineering side. So if this time it’s cancelled, we really know who to blame.  \n\n\nSteve: “You can’t write about anything interesting without making a bunch of people mad.”, “Everything you say can be quoted out of context 500 years from now.”\n\nOne of my very favorite Steve Yegge posts is You Should Write Blogs. Unfortunately, despite my cajoling, blogging just isn’t for everyone. Too many brilliant programmers are virtually unknown because they have no footprint on the web. This is one of the reasons we created Stack Overflow — to lower that participation barrier, at least a few millimeters.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at\n646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/10/09/podcast-25/"
    },
    {
        "title": "Stack Overflow OpenID Case Study",
        "content": "JanRain, an early supporter of OpenID, just posted an OpenID case study featuring Stack Overflow.\n\nStack Overflow, much like Wikipedia, lets anyone edit anything – but unlike Wikipedia, we require users to earn a certain number of votes from other users before the system trusts them (we call this “reputation”). The concept of identity and logins is an essential part of how our site works.\nAs programmers ourselves, we appreciate how challenging it is not only to write an entire authentication system, but to support one.  One small mistake and you could expose users’ credentials and possibly even passwords!\nWith OpenID, we didn’t have to write any login code, nor do we have to store user passwords. And not only that, but we are no longer asking users to create yet another account on yet another website. Clearly a win-win scenario from our perspective.\nWe were encouraged to use OpenID because our audience is fairly technical, and OpenID is quite common among technical bloggers and frequent blog participants, our early adopters. Also, there’s a rich ecosystem of third party OpenID providers, not to mention Yahoo, AOL, Google, Sun, and soon MySpace.\n\nJanRain runs myOpenID, one of the better independent OpenID providers. I don’t want to mention any names, but some OpenId providers, like one in particular whose name ends in oo, are .. not so great. That’s the blessing and curse of choice: when there are dozens to choose from, some will be better than others.\nThat said, we continue to look at ways to improve the Stack Overflow login experience. A few things in the works on the OpenID front:\n\n\nOffer OpenID registration directly through stackoverflow\n\n\nallow multiple OpenIDs per account\n\nAllow changing the associated OpenID",
        "url": "https://stackoverflow.blog/2008/10/23/stack-overflow-openid-case-study/"
    },
    {
        "title": "Podcast #24",
        "content": "This is the twenty-fourth episode of the StackOverflow podcast, a special roundtable discussion conducted in NYC at Joel’s Fog Creek offices with the entire Stack Overflow team. That includes Jarrod Dixon, Geoff Dalgas, and Michael Pryor in addition to Joel and Jeff.\n\n\nWe muse about the 7.5 million dollar Dreamhost billing error. We admire the openness of Dreamhost, that they would be so up front about such a major gaffe on their blog.\n\n\nThere is a rule at Fog Creek which we at Stack Overflow also follow — never ship on Friday.\n\n\nA brief discussion about responsible advertising; contrasting our ad deal with woot and the Audible sponsorship of podcasts. One sells a product we’ve bought before and vouch for, the other sells DRM encumbered product.\n\n\nMichael and Joel bring up the idea of mixing real world money and our reputation system. I don’t think we’ll do this, but it’s an interesting conversation.\n\n\nDiscussing Geoff’s cool JavaScript reputation graphing system.\n\n\nThe giant “questions” with 300 answers were putting a huge load on the server and on client browsers. We never anticipated this would happen. Jarrod’s pagination feature was deployed last night. Pagination begins at 30 answers, which matches the current wiki community threshold. If your “question” gets to page two of the answers, it’ll be paginated and converted to community mode.\n\n\nMichael asks the eternal question — why not support alternate login methods versus OpenID? I believe that OpenID is a bit of a chicken and egg problem at the moment, and we want to support a better future. We are open to partnering with another OpenID provider to provide a more seamless signup experience; myopenid supports this and we’ll try to get it in the queue.\n\n\nWe go around the table, discussing the short term future — what’s the #1 feature each of us wants to see in on Stack Overflow?\n\n\nMichael draws a comparison between Stack Overflow and Project Euler. You get points on this site for solving algorithmic / mathematical problems.\n\n\nAlthough it has been criticized, we continue to like the Stack Overflow design, which is largely thanks to Jeremy Kratz. We feel providing solid layout and markup control makes our questions look great.\n\n\nWe’ve been pleasantly surprised with the SQL Server 2005 full-text search on Stack Overflow, but we agree with Joel that something like Lucene.NET would probably work better, as it operates at the logical “page” level instead of database record level. People don’t think in terms of database records; they think in terms of web pages.\n\nGeoff discusses how important sitemap.xml was for us. Unlike a blog, we didn’t have stable, permanent links to questions. until we rolled out sitemap it was literally impossible to find questions using web search, even if you entered the exact word-for-word title. As google says, you should use sitemaps for “any site where certain pages are only accessible via a search form”.\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.  We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/10/01/podcast-24/"
    },
    {
        "title": "Podcast #23",
        "content": "This is the twenty-third episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nThe Stack Overflow team will be in New York City from the 24th to the 28th. It’s partly business, and partly a reward to our team for their hard work on the site. What are some cool geeky things for us to do in NYC?\n\n\nWe wonder: do newscasters wear pants?\n\n\nJoel describes his upcoming Inc. magazine article enumerating the seven development mistakes we made in building Stack Overflow. I think by seven he meant zero.\n\n\nMost of the reviews of Cuil and Knol are negative because “I tried it for what it was intended to be used, and it didn’t work.”\n\n\nThe power of short informal code reviews in bridging the skill gap between beginning and expert software developers. Good developers think of this as self-preservation, because today’s beginner code is tomorrow’s code you’ll have to maintain.\n\n\nThere have been a lot of requests for a packaged, customized version of Stack Overflow, but we have some reservations about the difficulty of delivering a packaged solution, and whether the current design will scale down to smaller private communities at all.\n\n\nShould trusted users be allowed to close questions? Or should the community simply vote them down? I argue we need both of these methods; Joel feels we only need voting.\n\nIt’s ok to have some “fun” programming questions every now and then. It can’t be a community if you don’t stop every so often to have some (at least partially on topic) fun.\n\nWe also answered the following listener questions:\n\n\n“How do you handle newbie questions?”\n\nRichard: “How do you cultivate programmer mentoring at a small company?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/09/24/podcast-23/"
    },
    {
        "title": "Podcast #20",
        "content": "This is the twentieth episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nWe figured out our deadlock problem, finally. It had to do with Log4Net being called during a database operation, itself triggering another database operation and log event. This is normally OK, but the events were happening so close together that it resulted in a deadlock.\n\n\nOur new stackoverflow.com launch date is next week, as diagnosing the deadlock set us back at least four or five days.\n\n\nWhat’s your logging philosophy? Should all code be littered with .logthis() and .logthat() calls? Or do you inject logging after the fact somehow?\n\n\nShould you rely on third party libraries, or “find the dependencies and eliminate them“?\n\n\nHaving the source can make the difference between a dependency that works for you, and one that works against you. This is the great strength of taking dependencies on JavaScript libraries from the web — you can always View Source. Perhaps this is why JavaScript is the Lingua Franca of the web, and increasingly the language young people will grow up programming.\n\n\nOne way we know Stack Overflow is already successful — someone created a blog dedicated to hating Stack Overflow! If you can’t get people to care one way or another about what you’ve done, you’ve definitely failed.\n\n\nWhen it comes to trolling, the most powerful countering technique at your disposal is to not pay attention to it. Which we have failed to do. My favorite literary interpretation of this is “the silent treatment” from the Great Brain book series which I read and loved as a child.\n\n\nWe have implemented the transition point between traditional discussion board post ownership and wiki-style group ownership. The transition is forced when there are (n) edits by (n) users, or if there are (n) edits by the post owner. This rule also helps discourage people from bumping their posts by continually editing them, and reduces the perception of reputation gaming from people who try to build a large, collaborative post incorporating the comments of others.\n\n\nAsking good questions is difficult. There’s an art to constructing a question that appeals to your target audience, yet isn’t an overt attempt to pander and farm attention.\n\n\nJoel’s biggest problem, besides dealing with New York City landlords, is getting people to not do what he says just because he says so as their CEO and boss. Joel, as the big picture CEO, rarely has all the information necessary to make good, tiny, local decisions. That’s your job!\n\n\nThere are tons of existing web Q&A sites that we derive inspiration from, but we believe our more focused and directed programmer audience is what makes the difference. When the audience is very large and broad, you’ll end up with things like the baby daddy question and the Georgia tanks question.\n\n\nThe current beta is definitely working, in that people posting questions are getting good answers and fairly quickly — as you can see from Sara Chipps’ report.\n\n\nJoel is in Boston at his Business of Software 2008 conference which is going on now. Joel is thinking up an introduction for Richard Stallman, who by any measure is a legendary figure in the software community.\n\nThere’s a filmmaker on site at the conference, filming footage to be incorporated into a sequel to Project Aardvark in about a year or so. However, this will be a more technical look at how software is developed at Fog Creek and perhaps a primer on some tenets of good software development.\n\nWe also answered the following listener questions:\n\n\nTrey Jackson: “Why doesn’t Jeff listen to Joel? How do you keep people interested in answering questions on Stack Overflow when the volume goes up?”\n\nMartin: “What in your experience or background has been most useful while building Stack Overflow?”\n\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/09/03/podcast-20/"
    },
    {
        "title": "Podcast #22",
        "content": "This is the twenty-second episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nStack Overflow is now a public beta. We went from about 2-5% CPU usage during the private beta to over 50% CPU usage, on an 8-CPU server! Some day one stats: 1,500 questions were asked, 6,000 answers provided, 1,700 comments added, there were 62,000 unique visitors and almost 700,000 page views. Miraculously, the server is still running and performance is still snappy.\n\n\nIt was tempting to keep a closed community, but Joel and I believe the real value here is in letting Google and other web search engines in, along with the hordes of everyday average programmers. We believe programmers are a smarter breed of user, and the low-friction question and answer format will be sustainable for the greater public community if is designed properly. Hopefully.  \n\n\nWe sit down with Josh Millard of MetaFilter, who graciously agreed at very short notice to come on and talk about his role as one of the 5 member core team that helps run and maintain MetaFilter.\n\n\nJosh is a programmer, too: you may remember him as the creator of the weird and wonderful Garkov!\n\n\nIt was a great honor for Stack Overflow to make MetaFilter. I remain a longtime fan of MetaFilter and it definitely influenced the building of Stack Overflow. MetaFilter is a sort of collaborative blog with an amazing and incredibly effective (and eclectic) Q&A community.\n\n\nMetaFilter has grown to five moderators over time. How do you decide who becomes a moderator? Does moderation scale? How much can/should the community police itself?\n\n\nMetaTalk is the “backchannel” of MetaFilter, analogous to the “discussion” page on Wikipedia. It turns out there are two channels of communication in any social website. The topic, and then the topic about the topic. These are two very different audiences with very different needs.  \n\n\n“technologically assisted profiling” is how MetaFilter works; the community flags questionable things (in addition to discussion on MetaTalk) and then the moderators act on those flags. MetaFilter is extremely strict — they consider PR and blatantly promotional material spam, which rules out a huge section of what normally appears on Digg or Reddit.\n\n\nMetaFilter has not voting, but it does have a favorites system, which is something we have planned for Stack Overflow. I follow the Best of MetaFilter feed which I believe is determined by how many people have favorited a given MetaFilter post.\n\nIn the rare event where a user goes haywire — remember that it costs $5 to even join MetaFilter — these users will be given “timeouts” of a day or two until they cool down. There are no scarlet letters or black marks that can be placed on users. The history of the user’s actions, particularly if that history is public, is usually enough to handle the problem. We definitely agree with this philosophy.\n\nWe did not have time to answer any listener questions today, but please send them in and we’ll get to them on the next episode!\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at 646-826-3879.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/09/18/podcast-22/"
    },
    {
        "title": "Podcast #21",
        "content": "This is the twenty-first episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nRoad trip! The Stack Overflow team will be visiting the Fog Creek offices in New York City from Wednesday, September 24th to Sunday, September 28th. Hopefully Joel and crew will be completely moved in by the time we arrive.  \n\n\nWe’re planning to launch the Stack Overflow website to the public on Monday, September 15th.\n\n\nAs a fake plastic rock enthusiast, there is another big item launching this week: Rock Band 2! It’s scheduled to appear Sunday September 14th. We purchased a complete set of fake plastic rock equipment, centered on Rock Band 2, to outfit the new Fog Creek offices and celebrate the newly public website.\n\n\nAn examination of Hegel’s thesis, antithesis, synthesis as applied to PC and Console gaming, and perhaps everything else.\n\n\nI continue to believe game programming may be the most challenging and unforgiving kind of programming — as famously documented by one spouse in 2004. How do you optimize for “fun”?\n\n\nJoel describes it as a “big universe of dumb programmers”, where Stack Overflow is (intended to be) an amplifier of the small bits of signal that come out of that supernova of mediocrity. We’re part of it too!  \n\n\nOn the myth of expertise: fields of expertise in programming are very narrow, and it’s remarkable how quickly you get off the beaten path, into techniques and approaches that almost nobody else is trying.   \n\n\nHow do you deal with users who set out to grief your system? Rather than outright banning or blocking, Joel proposes silently hiding that user’s content from the world, in a way that is only visible to other users. As described in our previous podcast, the silent treatment is an incredibly powerful technique.  \n\n\n“You’ve got a bunch of people playing Chess, but certain people want to play ‘throw the chess pieces all over the park’ — and from there it becomes a sort of wrestling and fighting game.” I can’t go to sleep — someone is wrong on the internet!\n\n\nOne of our ‘playful’ users created giant posts by entering an amusing picture of Joseph Ducreux a hundred times, so I changed the name of his account to that. Generally these kinds of posts automatically get deleted by the community when they reach the ten vote offensive threshold — or they could be edited away by trusted users — but I stepped in as a moderator.\n\n\nThe paradox of griefing is that these users are highly engaged with the system. Most people don’t care and won’t bother. So spending a lot of time gaming the system means you must like it on some level. If you’re not careful you will turn these semi-engaged users into active and purposeful enemies. Joel proposes that users with a historical record of creating problem posts automatically get their content filtered to the bottom of the pile. He draws a comparison with bartenders not dramatically cutting off drunks, but serving them non-alcoholic drinks that look exactly like real drinks.\n\n\nIncentives, like the badge system we use in Stack Overflow, despite being completely arbitrary, can have actual meaning in measuring and showing off your accomplishments. On the other hand, if you’re not careful, you can end up with something like the despised Microsoft Ship-It awards.\n\np.s. The Conversations Network, a not-for-profit organization which hosts our podcast, is looking for sponsors for their podcasts, including this one. It would be a very modest, NPR-style intro at the beginning… “The StackOverflow Podcast is brought to you by Gummy Bears, Inc., bringing fine chewy treats to grubby children everywhere.” If your company might be interested in sponsoring the podcast and becoming a hero to developers worldwide, or at least the eight developers who listen to the podcast, please email Joel.\n\nWe also answered the following listener question:\n\nClay Nichols of Bungalow Software “Did the badge idea come from Joel’s experience in the Israeli military, or from Jennifer Aniston in Office Space?”\n\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/09/11/podcast-21/"
    },
    {
        "title": "What Was Stack Overflow Built With?",
        "content": "This question keeps coming up a lot on Stack Overflow for some reason:\nWhat was Stack Overflow built with?\nSome even wondered if Stack Overflow was built in Ruby on Rails. I consider that a compliment!\nThis question has been covered in some detail in our podcasts, of course, but I know not everyone has time to listen to a bunch of audio footage to find the answer to their question. So, in that spirit, here’s the technology “stack” of Stack Overflow, the stuff Jarrod, Geoff, and I used to build it:\n\n\n\nframework\nMicrosoft ASP.NET\n\n\nlanguage\nC#\n\n\ndevelopment environment\nVisual Studio\n\n\nweb framework\nASP.NET MVC\n\n\nbrowser framework\njQuery\n\n\ndatabase\nSQL Server 2008\n\n\ndata access layer\nLINQ to SQL\n\n\nsource control\nSubversion (now Mercurial through Kiln)\n\n\ncompare tool\nBeyond Compare\n\n\nsource control integration\nVisualSVN (now, VisualHg)\n\n\n\nWe have a few other minor dependencies as well, such as ReCaptcha, DotNetOpenId, and the WMD control (which we subsequently rewrote), but that’s about it.",
        "url": "https://stackoverflow.blog/2008/09/21/what-was-stack-overflow-built-with/"
    },
    {
        "title": "Podcast #19",
        "content": "This is the nineteenth episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nWe’ve mapped our voting functionality to what you see in Digg and Reddit, but we’re a Q&A site, not a link aggregation service. Should we allow voting on questions as well as the answers? Or should questions simply be taggable as favorites, which are a de-facto vote? I believe voting and favorites are related, but not quite the same thing.  \n\n\nHow do you deal with meta-discussion about the site? Wikipedia has two distinct areas for any page: the page itself and the “behind the curtain” discussion about the page. We don’t quite have this.  \n\n\nJoel points out that Google’s dedication to the algorithm over human intervention is on display in the Google search results for “jew”.\n\n\nThe private beta is insular in a way that isn’t immediately apparent to the people participating. We figure a huge percentage of our audience will be the barely interested programmers who end up on a Stack Overflow page from a web search. Also, the type of developers that tend to get attracted to the beta are the best, elite developers. Once the site is public, we’ll have a far wider range of skills in play — and much less sophisticated users.  \n\n\nI realized that Joel has zero votes because we actually had a XSS vulnerability — theoretically “friendly” hacker beta users intercepted our cookies and were able to impersonate us! We’ve fixed it now, but there was some minor collateral damage, such as the deletion of Joel’s voting history. This is one of the challenges of developing a site for skilled (but bored) developers with time and ability on their hands. \n\n\nJoel cites Aaron Swartz’ blog entry How To Launch Software as perhaps a model we should follow. The so-called “Hollywood Launch” tends to cause a huge, uncontrollable spike in traffic and then a massive drop as things don’t go to plan. See Cuil. We are both scared stiff about the amount of traffic we already have, so we’ll be proceeding carefully.\n\n\nOur SQL Server deadlock problem was solved by switching to read committed snapshot. It turns out SQL Server is not tuned very well for typical web app loads, which consist of massive numbers of reads and miniscule numbers of writes.\n\n\nThe Stack Overflow database and webserver are currently the same machine. One easy scaling path for us is to buy another server and dedicating it to the database. I’m just unsure exactly where the transition point is for network latency versus the SQL calls staying in memory.\n\nThere is a huge difference between horrible legacy code by talented programmers and horrible legacy code by, well, horrible programmers. This is frequently measured in WTFs/minute.\n\nWe also answered the following listener questions:\n\n\nRyan Cox: “Can you talk about backup and disaster recovery plans?”\n\n\nRyan: “In developing database-centric software for multiple clients, why not use a single database rather than multiple databases for each client?”\n\nPhil Howie: “How do you balance legacy code that nobody wants to update with programmers who want to use the latest and greatest stuff?”\n\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/08/28/podcast-19/"
    },
    {
        "title": "Podcast #16",
        "content": "This is the sixteenth episode of the StackOverflow podcast, wherein Joel and Jeff discuss the following:\n\n\nProgrammer design is scary — We now, thank goodness, have an actual designer design! Thanks to Jeremy Kratz for assisting us with our design woes. We also appreciate input from Tim Almond, Rob Allen, and Nathan Bowers.\n\n\nWe plan to have a smooth transition from cookie to authenticated user. I thought Jan Miksovsky had a great post on login barriers. I feel a lot of sites get this wrong by throwing up an abrupt login barrier too quickly. Tear down that login wall!\n\n\nyou have your choice of login methods: either OpenID or the traditional three “name, email, URL” input boxes. You will be able to fully participate as a non-authenticated user — both answer and ask questions. You may, however, be capped on reputation score and a few advanced abilities.\n\n\nWe will not be seeding the site with the data from the Joel on Software .NET forum, as we feel it will bias the site too heavily towards that particular audience. Stack Overflow is intended to be non-denominational. We will be seeding the questions and answers on the site with the content generated by the private beta users.\n\n\nOne of the great advantages of the new Web 2.0 economy is that there are so few barriers between programmers and the world — assuming you’re comfortable building a web site. Contrast this with the bad old days of distributing software on floppy disks or CDs.\n\n\nCan you remember the first time you used Google? When and where did you discover it? How has Google resisted succumbing the portalitis disease after so many years? It’s admirable that they’ve pursued simplicity this long.\n\n\nI am mightily impressed that the iPhone can render Stack Overflow, even the jQuery and WMD editor parts. Kudos to Apple for an (almost) no-compromises mobile web browser that delivers a desktop browser experience.\n\n\nJoel loves his new Nokia E71 phone, and he cites the physical keyboard as the primary differentiator — along with the superior third party Exchange integration.\n\n\nRevisiting my programming chair article. Although I loved my 1998 Aeron, I felt I could do better — and the Mirra I’m sitting in now is a distinct improvement. I’m with Jason Calacanis: [buy a cheap desk, and the best chair you can afford](http://www.calacanis.com/2008/03/07/how-to-save-money-running-a-startup-17–  really-good-tips/). Joel recommends the Chadwick Chair which I didn’t get a chance to try, unfortunately.\n\n\nDon’t forget overall computer workstation ergonomics; Joel also recommends variable height desks.\n\n\nOn McConnell’s cone of uncertainty, and the importance of keeping a list of what is to be done. You can’t estimate without a list of tasks — and you probably need to break the tasks down to very minute steps to really understand what those tasks entail, too.\n\n\nAs Joel points out, there is the risk of the “Objects In Mirror Are Closer Than They Appear” illusion — your mind’s eye tends to fill in the gaps. You gloss over the details and presume things will be simpler and easier than they actually are.\n\n\nI believe in two principles during this project. First, having public artifacts that everyone can objectively see and judge. The team should develop a concensus opinion based on that reality. Second, have a plan — but start on that plan as soon as possible! The sooner you get started, the sooner you will discover all the details and weirdnesses you could not anticipate or plan for.\n\nJoel proposes having major plans for version two, and just getting a small version one out the door quickly. The actual usage of the app may not be at all what you imagined, and you can change your approach more rapidly to accommodate those real world uses for version two.  \n\nWe also answered the following listener question:\n\nJosh Parris: “Why did the Stack Overflow schedule blow out?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/07/30/podcast-16/"
    },
    {
        "title": "Special Development Team Podcast",
        "content": "You demanded it.\nWe’re delivering.\nOur special Stack Overflow development team podcast will be recorded later today.\nInstead of yet another scintillating hour of Jeff and Joel constantly talking over each other, in this podcast episode you’ll get to know the other two key players on the Stack Overflow team. You know, the ones that do all the real work.\n\nJarrod Dixon (Morganton, NC)\n\nGeoff Dalgas (Corvallis, OR)\nPop quiz, hotshot. If you were starting a company, who would you pick to come with you?\nFor me, it’s these two guys. Geoff, Jarrod and I all know each other from working together at previous jobs. They are without a doubt two of the very best developers I’ve ever worked with, and it’s an honor to have them on the team. Particularly at the slave wages I’m paying them.  (Actually, I’m not sure even a slave could survive on what I pay.)\nLet’s open the comments up — what questions do you have for the Stack Overflow development team? We’ll get to as many questions as we can fit in an hour.",
        "url": "https://stackoverflow.blog/2008/08/12/special-development-team-podcast/"
    },
    {
        "title": "Podcast #15",
        "content": "This is the fifteenth episode of the StackOverflow podcast, wherein Joel and Jeff discuss the following:\n\nA brief discussion of our shoestring budget, and the project schedule. The beta for Stack Overflow is close; we will likely be trickling people in by the end of the month.\nStrategies for handling recurring or background tasks in ASP.NET. We have a simple method that works for now.\nBeing a stellar software developer does not necessarily equate to being a stellar manager of software developers. Promoting your best coders is not always the best strategy. We highly recommend Peopleware and Managing Humans: Biting and Humorous Tales of a Software Engineering Manager. If you’re a manager, staple these books to your face! Live it, learn it, love it! If you know someone who is a manager of software developers, staple these books to their face. They’re that important.\nJoel’s essential time management tip: get things done by not reading Getting Things Done. Personally, my time management is terrible, but I do have one guiding principle: produce some kind of small public artifact every day. We can recommend Merlin Mann’s excellent site 43Folders, which is sort of a long running geek love letter to that book.\nI argue that regions are the GOTO of code formatting. I navigate in Visual Studio using search as my metaphor. Between CTRL+I incremental search and CTRL+SHIFT+F find in project, I’m never more than a few keystrokes away from whatever code I need to see. Your code is full of highly unique keywords, just like the web is full of unique search terms.\nJoel and I both agree: one of the most effective coding practices you can adopt on your team is interactive, sit-down-with-your-coworker code review. 90% of the things you will learn have nothing to do with the code. I believe programming is a far more social activity than most realize. If you write code, and nobody but you ever sees that code — did you really extract all the benefit from writing that code?\nWhen it comes to interviewing software developers, it seems there are two classes of interviews: the kind where the interviewee gets to drive, and the kind where the interviewer does all the driving. Try to have a game plan for both types of interviews. Be yourself, build a portfolio, and actively study the company you’re interviewing at. For some interviews, you really do need to prepare — practice, practice, practice! If you’re on the job hunt, check out our listings for junior and senior developer jobs.\nWe can’t talk about programming interviews without mentioning classic interview puzzles and the book How Would You Move Mount Fuji?\nOn the amazing power of lambda expressions, delegates, and anonymous methods. Fun stuff!\nIf ACME is in the business of developing explosive widgets, is it unreasonable for them to inevitably outsource their software development to Coders R Us? If you’re serious about software engineering as a career, you deserve to work at a company that is serious about software engineering, too. This usually means choosing to work for a company where software is at the core of their business model. See Joel’s Talk at Yale.\n\nWe answered the following listener questions:\n\nGordon Milne: “I have an opportunity to pursue a more managerial role; how do you feel about making the transition from developer to being responsible for other developers?”\nJason Zimpelmann: “What sorts of time management skills do you use?” and “What about that posting on region blocks?”\nAviv Ben-Yosef: “Should code review be done alone via email or in person?”\nDavid McGraw: “What advice would you give college graduates who are interviewing for programming jobs?”\nAdam Haile: “How do you handle pointers to functions in the .NET world?”\nMatias A. Bellone: “Outsourcing has been putting food on my table for the past few years. What are your feelings on this?”\n\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.\nUpdate: if you had trouble playing back this episode (or the previous one), it may have been due to issues with the way the ID3 tags were stored on the file. The ITConversations folks are on it, and have re-rendered the episodes with a fix.",
        "url": "https://stackoverflow.blog/2008/07/24/podcast-15/"
    },
    {
        "title": "Bad News, Good News",
        "content": "I’ve got some bad news and some good news.\nI like to start with the bad news, and you don’t get a choice, so here goes:\nThere will be no podcasts for the next two weeks.\nJoel is on an extended vacation. Our apologies, but the logistics of recording remotely are too daunting. \n\nPlus, we want Joel to enjoy his vacation, right? Me, I don’t get a vacation. I have to work frantically with Jarrod, Geoff, and Jeremy on this Stack Overflow thing. Not that I’m bitter or anything. I’ll just set my desktop background to something tropical. It’s almost the same thing as a vacation. Almost.\nBut, I also bring you the promised good news!\nYou can sign up for the Stack Overflow beta.\nHooray! Huzzah! Because who doesn’t love using buggy, incomplete websites filled with irate users?\nClick here to sign up for the Beta\nI asked around on Twitter and got a recommendation for a Google Spreadsheet Form. I looked at Wufoo and SurveyMonkey but their limits are too low. I must say I’m impressed with the Google docs spreadsheet form solution; it’s working amazingly well. And it’s so simple. Every time someone visits the form and signs up, a new row is created in the spreadsheet. Easy!",
        "url": "https://stackoverflow.blog/2008/08/06/bad-news-good-news/"
    },
    {
        "title": "Podcast #18",
        "content": "This is the eighteenth episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nWe finally get to meet Michael Pryor, the co-founder of Fog Creek Software, who is a special guest on this episode!\n\n\nJoel had good luck browsing our beta site using Opera Mini. I’m still incredibly impressed with the Mobile Safari browser on the iPhone, which renders our JavaScript-heavy site perfectly, as far as I can tell.  \n\n\nJoel posted a Regex question on the Stack Overflow beta, and I can’t help bringing up RegexBuddy, my favorite (and still best) regular expression tool for developers.\n\n\nSocial websites are a bit unpredictable to build — we intended Stack Overflow as a relatively straightforward question / answer site, but there’s quite a bit of demand for inter-answer discussion. Our system is designed to float the best answers to the top via voting, but this makes conversations in the answers difficult to follow.\n\n\nStack Overflow is a hybrid of a discussion forum, a wiki system, and a voting/reputation system. It’s been a hit so far, but we are running into some design issues resulting from this unusual combination.\n\n\nI had the opportunity last week to meet Merlin Mann, who Joel and I are big fans of. Joel particularly enjoys their podcast, You Look Nice Today. Turns out Merlin is a fan of Joel’s as well. We should form a mutual admiration society!\n\nIf you’d like to sign up for the Stack Overflow private beta, which will run until the end of the month, use our Google Docs signup form.\n\nWe didn’t get to any listener questions this episode, but we’ll remedy that next time!\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/08/21/podcast-18/"
    },
    {
        "title": "Podcast #17",
        "content": "This is the seventeenth episode of the StackOverflow podcast. Joel is on vacation, so this is a special podcast with the software development team: Jeff Atwood, Geoff Dalgas, and Jarrod Dixon.\n\n\nOur team is geographically distributed — I’m in California, Jarrod is in North Carolina, and Geoff is in Oregon.   \n\n\nGeoff and Jarrod, like me, both grew up with BASIC programming on early computers like the Apple // and Commodore 64. Can programmers who grew up programming somehow recognize each other?\n\n\nThe private beta is going well. We think the beta will continue through the month of August. We’ll continue to add 150 users per day until the private beta is over.   \n\nThis entire podcast was inspired by community comments on the Stack Overflow blog, so we proceeded quickly to the following questions:  \n\nWe answered the following questions left from the blog:\n\n\n“How do you manage collaboration on a distributed team? Is code ownership a problem?”\n\n\n“How do you prioritize what features you’re working on?”\n\n\n“How do you test new features you’re developing before you roll them out?”\n\n\n“What were the biggest technical challenges you had to overcome?”\n\n\n“What happened on the site that you didn’t anticipate?”\n\n\n“Are you happy with the performance of your Windows development stack on the web server?”\n\n“Will you have an API? How will you deal with spammers, griefers, and marketers?”\n\nThe Stack Overflow private beta list is essentially full until the end of the month. If you’d like an invite sooner, do two minutes of transcription in the wiki and I’ll bump you so you get an invite the same day.\nIf you’d like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/08/13/podcast-17/"
    },
    {
        "title": "Stack Overflow on Herding Code",
        "content": "I was invited to participate in the latest Herding Code podcast. \n\nThis was a fun one for me because I’ve known the four hosts of the program — Jon Galloway, Kevin Dente, K. Scott Allen, and Scott Koon — through their blogs since forever, eventually meeting most of them in person. All of their blogs predate mine by years. I’d almost say we were blog buddies. If you could call people blog buddies. Which I don’t think you can.\nAt any rate, I go into quite a bit of technical depth on Stack Overflow and some of the features that we have yet to implement, but have been hotly requested — definitely worth a listen if you want to go deep.\nThanks for having me on!\n(oh, and listen past the end for a little audio easter egg that’s sort of fun)",
        "url": "https://stackoverflow.blog/2008/08/25/stack-overflow-on-herding-code/"
    },
    {
        "title": "Podcast #11",
        "content": "This is the eleventh episode of the StackOverflow podcast, wherein Joel and Jeff discuss the following:\n\n\nAddressing a few key bits of podcast feedback: we’ll try to avoid talking over each other, and the\ncallers who are asking questions, in the future.\n\n\nOn the value of software postmortems. \n\n\nOn data generation through Team System Database Edition and Redgate SQL Data Generator. If you don’t have a tool to generate data, why not?\n\n\nJoel provided me with a drop of the Joel on Software .NET discussion forums for the purposes of data load testing. It’s up and running, but we’re not sure we will use it; it might bias stackoverflow.com too heavily towards .NET topics initially.\n\n\nWhy not use full-text searching in SQL Server 2005 for stackoverflow.com? Joel says it’s too hard to use, the index server is too disconnected from the main database process; it just has too many gotchas overall.\n\n\nJoel sings the praises of Lucene.NET; it provides excellent full-text search results for the hosted FogBugz.\n\n\nReginald Braithwaite’s fine essay We Have Lost Control of the Apparatus, which correctly notes that most desktop apps in the corporate world now have to compete with web apps.\n\n\nOn rooting out assumptions in discussions, to make sure you’re actually discussing the same topic: try using the five whys technique Joel discussed.\n\n\nThe odd story of Microsoft’s acquisition of LookOut, a popular and extremely fast indexing solution for Outlook. What happened? Why do so many large companies buy smaller software companies and then essentially kill them?\n\n\nstackoverflow.com will be using Markdown, but one downside of Markdown it the spec allows HTML. This opens us up to XSS exploits, so we have to be very careful here.\n\n\nIf you do any sort of web programming whatsoever, please visit this page of XSS exploits, so you can “scroll” for yourself how dangerous and pervasive the XSS problem is today.\n\n\nA discussion of the complex rules for storing and rendering both Markdown and HTML in the same content. It’s part of the spec, and it gives users a lot of flexibility. We store both the Markdown and rendered HTML representations in the database.\n\n\nWe are using prettify.js which is almost magical in the way it works. It is used on Google Code, and it infers all syntax highlighting for most languages and content without any explicit markup indicating which language is in use. Are there other, better javascript syntax highlighters we should be looking at?\n\n\nThe difficulties of Silverlight: 1.0 versus 2.0, and the distinctly un-webbiness of the “rectangle in a browser” model. If Flash hasn’t been able to overcome these obstacles in 10 years of use and near total ubiquity on the web, how is Silverlight going to?\n\n\nI’m excited about the SquirrelFish project, which promises to speed up plain old JavaScript running in the browser dramatically — 1.5 times faster than Firefox 3, and 2.6 times faster than Opera.\n\n\nOn Steve Yegge’s essay Done And Get Things Smart — is the only reliable way to identify truly great people through actually working with them? Or following the social graph of “name the greatest engineer you have worked with” chain all the way back as far as you can?\n\nJoel himself probably wouldn’t pass the current interview process at Fog Creek. Hiring is hard; it’s better to err on the side of safety, which means a lot of great programmers will get turned down.\n\nWe also answered the following listener questions:\n\n\nStephen Hill:  “What do you think of Microsoft’s Silverlight?”\n\nDave Roberts: “Joel, would you hire Jeff? If not, would you hire me?”\n\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/06/26/podcast-11/"
    },
    {
        "title": "Podcast #10",
        "content": "This is the tenth episode of the StackOverflow podcast, wherein Joel and Jeff discuss the following:\n\n\nWe provide some background for new listeners on what Stack Overflow will be. See Joel’s post and Jeff’s post.\n\n\nAlthough we have ambivalent feelings about Expert’s Exchange, what we’re doing with Stack Overflow is similar, and they do have a sense of humor — and invited me to a conference.\n\n\nWe will be using the cc-wiki licensing terms for content posted on Stack Overflow.\n\n\nHopefully we can ship before Wine (which just hit version 1 after 15 years) and Duke Nukem Forever. Check out a list of things that have happened since Duke Nukem Forever began development.\n\n\nI confess that I was shocked to find out, while listening to our own podcasts, I wasn’t hearing everything Joel was saying! Listening is hard. Make sure you’re thinking about this the next time you listen to someone.\n\n\nJoel has fun with instantrimshot.com and I mention sadtrombone.com ; these are excellent examples of the emerging classes of single-serving websites.\n\n\nYou crazy hackers figured out our super-secret beta website URL! I invite participation for the upcoming private beta, but our in-development site is not suitable for human consumption at this point. There is a special prize for those hardy few that “hacked” their way into the development site, though.  \n\n\nA brief discussion of the badges that you can earn while participating in the Stack Overflow site. We don’t need no stinkin’ badges, of course, but I think they’ll be fun and complimentary to the reputation system.   \n\n\nStack Overflow edits will only be possibly for users who have earned a little bit of reputation on the site by actively participating. This is where we diverge a smidge from Wikipedia, which still (amazingly!) allows regular anonymous edits. But I think it’s a reasonable compromise: anonymous people can ask and answer, but not edit.\n\n\nJarrod did a tremendous job of getting our one-click build set up: it deploys the database, the code, and even runs unit tests against the website before deploying it. We’re using MSBuild and nUnit.\n\n\nJoel references AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis (Paperback), and describes a few of the anti-patterns he’s seen while developing small apps at Fog Creek for internal use.\n\n\nOn the dangers of being an internal IT developer. This is important if you love coding.\n\n\nOne of personal favorite bits of Joel’s writing, on cleaning the toilet. Naturally.\n\n\nSometimes as a manager, it’s your job to do the grubby, ugly stuff so the sales guys can sell and the developers can develop.\n\n\nWe use TortoiseSVN for Subversion integration as almost all other Windows developers do. But as Visual Studio developers, we’ve also adopted VisualSVN, which I highly recommend! It makes working with Subversion a pleasure instead of a chore, at least in my opinion.   \n\n\nAt Fog Creek, they’re switching to Mercurial source control, which like Git is part of the new, emerging class of distributed version control.\n\n\nSource control remains the bedrock of software engineering. I meet so few software developers, myself included, that really understand source control. Just avoid SourceSafe at all costs, and understand the value of branching and merging.\n\n\nIs there anything positive anyone can possibly say about Windows Mobile? How can something six versions old be this terrible? It should be razed to the ground and reinvented, ala Zune and Xbox 360. Can Google’s Android be like Windows Mobile, sans all the sucking? I expect Apple to dominate this closed ecosystem; it plays to all their strengths.  \n\nOn Ruby performance, scaling, “enterpriseyness” and whether or not this is even the right question to ask. Shouldn’t we be thinking of this in terms of the solution first, and the language as a side-effect of that?\n\nWe also answered the following listener questions:\n\n\nSebastian Dwornik: “Doesn’t the current mobile phone platform war remind you of the PC platform wars?”\n\nLoren Norman: “When will Ruby be ready for enterprise development?”\n\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/06/19/podcast-10/"
    },
    {
        "title": "Podcast #13",
        "content": "This is the thirteenth episode of the StackOverflow podcast, wherein Joel and Jeff discuss the following:\n\n\nJoel Spolsky still claims he is a New Zealander — or at least his father was — though I refuse to believe anything that is not in Joel’s Wikipedia entry can possibly be true. More evidence: FogBugz uses the Kiwi as its logo.\n\n\nI completely stole Yuval Tobias’ audio recording question about Spartan Programming and posted it on my blog. My apologies, but it’s a great topic, and I couldn’t resist. You may also appreciate Steve Yegge’s post Portrait of a Noob, as it covers similar ground.  \n\n\nMarco Arment was kind enough, in My Lyrics Are Bottomless, to expand on his earlier criticism. Marco, I can’t bring myself to disagree with a fellow fan of the best two-man novelty band on the planet. I’d love to involve you in the private beta so we can benefit from your advice once you’ve experienced the code in action.  \n\n\nJoel says that ASP.NET is like driving a Lexus, and PHP is like riding a bicycle. Note: please direct all subsequent hate mails to Mr. Joel Spolsky, c/o Fog Creek Software, NY, NY.  \n\n\nThe original schedule for Stack Overflow had us going to the private beta this month (July). Based on the current progress, I believe we need 2 extra weeks to implement editing, and that’s an essential part of the system. The key pieces need to be in place to get meaningful feedback in beta, so even if it slips a bit into August, the beta will be more useful. \n\n\nStack Overflow will implement an Xbox 360 like Achievement system tied to your account. Our “Badges” system fulfills three roles: bronze badges encourage people to try all the different functions in the system, silver badges encourages continued participation, while completionists and hardcore users can strive to get the gold badges. All of this is completely optional, of course, but it is permanently visible on your Stack Overflow profile.  \n\n\nWe will also have a reputation system, which is a simple numeric score attached to your profile. It’s based on the number of upmods your questions and answers get. It bothers us that on many voting based sites, a downmod completely cancels out an upmod. On Stack Overflow, an upmod will be worth twice as much as a downmod.\n\n\nWe hooked up CruiseControl.NET on our project, so every checkin results in a build, unit testing, and deployment to the server. We also get email notifications of what changed and whether the build broke or not.\n\n\nJoel’s classic 2000 article The Joel Test. How does your team fare on these 12 points? If you’re interviewing for a job, does that company pass The Joel Test? We also consider why unit tests aren’t included in Joel’s list, and whether they should be added.\n\n\nWhat version number is your website? Should websites have a version number? Our website version number will be synchronized with the Subversion revision number, so we can be sure what version we’re running.\n\n\nA discussion of Charles Petzold’s fantastic new book, The Annotated Turing. I cannot recommend this book highly enough; Petzold really makes the history and context of Turing and his seminal paper come alive. There’s also a Broadway play Breaking The Code based on Turing’s life.\n\n\nJoel has a new book, More Joel on Software. Joel shares his thoughts on the merits and pitfalls of turning your blog into a book.\n\n\nJoel decries the groupthink of Silicon Valley, and the flight from startup to startup. Joel thinks you can have a successful, original startup anywhere on the globe. You may want to maintain a US office, however.\n\n\nThe principle of progressive enhancement is why AJAX is more web friendly, whereas the “rounded rectangle in a browser” model of Silverlight and Flash isn’t. Embrace and extend! There are a number of fairly mature JavaScript API libraries out there now, like jQuery, Dojo, and scriptaculous.  \n\n\nYahoo has some outstanding resources for web developers — make sure you check out the Yahoo Developer Network.\n\nIf you live in the New York City area, Fog Creek Software is having an open house July 17th at 5 PM. It is open to all — please attend if you are in the area!\n\nWe also answered the following listener questions:\n\n\nIsaac Moses: “How will you get people who know stuff to keep coming back to your site and answer questions?”\n\n\nNicholas Kavadias: “Do you have advice for anyone who wants to get involved in a tech startup that’s not in Silicon Valley?”\n\nStephen Bohlen: “Don’t AJAX approaches have a lot of the same problems as Flash and Silverlight?”\n\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/07/10/podcast-13/"
    },
    {
        "title": "Podcast #12",
        "content": "This is the twelfth episode of the Stack Overflow podcast, wherein Joel and Jeff discuss the following:\n\n\nThe difficulty of working on an airplane, even with an ultraportable laptop. I use the Dell XPS M1330, which I love, but it’s still marginal on an airplane.  \n\n\nIt’s not quite version control, but why doesn’t our IDE automatically create lightweight versions every time we save?\n\n\nJoel discovers the wide world of undervolting, which can dramatically reduce the power usage (and thus heat generation) of the Intel CPU inside the Macbook Air — which is notorious for overheating. The program is coolbook; look into it if you have a Macbook Air.\n\n\nMarco Arment provides this sage bit of advice: Don’t let Jeff Atwood lead your web project. Too late! I try to avoid becoming the web equivalent of Usenet’s James Parry (kibo), the original egosurfer, by responding to every single post that includes my name. But it does give me an opportunity to reply via the podcast using an audio clip from my very favorite two man novelty band, Flight of the Conchords.   \n\n\nStack Overflow is meant to replace some books, but by no means all of them. We love books! We spend the rest of the episode discussing Joel’s Fog Creek Software Management Training Program reading list. It is a fantastic list, filled with excellent reads that will broaden and inspire you as a software developer — or software entrepreneur.\n\n\nI would be remiss if I didn’t mention my favorite technical book title of all time: The Difference Between God and Larry Ellison: God Doesn’t Think He’s Larry Ellison.\n\n\nIt’s not a book, exactly, but I highly recommend the 2001 documentary Startup.com which provides a sometimes disturbing look into the hysteria at the height of the original dot-com era.\n\n\nIf you only read one book from this list, make it Peopleware: Productive Projects and Teams. And if you like that, walk the list of Demarco and Lister books and read a few more!\n\n\nI have read Robert X. Cringely for years. I love his older book Accidental Empires and the related three part video, Triumph of the Nerds. I was disturbed to find out from Joel that there is more than one Robert X. Cringely these days.\n\n\nYou own a copy of How to Win Friends & Influence People — right? If not, why not? This is not a sleazy, ugly book like The Game. It’s a timeless classic, as relevant today as it was over fifty years ago when it was originally written.  \n\n\nDon’t have time to listen to all that jibba-jabba? Here is Joel’s short list:\n\n\nPeopleware: Productive Projects and Teams\n\n\nDon’t Make Me Think: A Common Sense Approach to Web Usability\n\n\nThe Non-Designer’s Design Book\n\n\nFacts and Fallacies of Software Engineering\n\n\nSecrets of Consulting: A Guide to Giving and Getting Advice Successfully\n\n\nInfluence: The Psychology of Persuasion\n\n\nGetting to Yes: Negotiating Agreement Without Giving In\n\nHow to Win Friends & Influence People\n\n\nRemember, most programmers don’t read books — but you should!\n\nThere were no listener questions this week. Please send in your questions — the more controversial, the better!\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/07/02/podcast-12/"
    },
    {
        "title": "Listen to Podcasts in Less Time",
        "content": "Joel may not listen to our podcasts after we record them, but I certainly do. I have to in order to put together the show notes with hyperlinks, and the episode summary.\nOne way to speed up listening to the podcast is to use the fast playback option. In Windows Media Player, you can do this by right-clicking the play button and selecting “Fast Playback”.\n\nI’m not sure exactly how it works, but this speeds up the playback without turning us into chipmunks. So you can listen to a 60 minute show in around 40 minutes.\nTo see more detailed options, select View | Enhancements | Play Speed Settings:\n\nThe default “fast” setting is 1.4x, which I find quite listenable. You can accelerate playback by as much as 2x, but it becomes difficult to follow at that point.\nI typically use WinAmp, myself, but I’ve switched to Windows Media Player for accelerated playback of our podcasts. I’m sure this type of accelerated playback option is available in other audio playback software for Mac and Linux, too — if you know how, please note in the comments!",
        "url": "https://stackoverflow.blog/2008/06/30/listen-to-podcasts-in-less-time/"
    },
    {
        "title": "Podcast #14",
        "content": "This is the fourteenth episode of the StackOverflow podcast, wherein Joel and Jeff discuss the following:\n\n\nThis week’s Rock Band downloadable content is epic — the best of the Who. Pointless podcast trivia: the Who song Baba O’Reily is a concatenation of two influences, one philosophical, the other musical: Meher Baba and Terry Riley. “They’re all wasted!“\n\n\nOn Joel’s post Don’t Hide or Disable Menu Items. Joel considers this post an experiment in minimalism, to see if it is possible to write an extremely short piece that still works. I viewed it as a mistake; surely there’s something between three tiny paragraphs and 5,000 words.\n\n\nThere should be a common UI metaphor for things that are disabled that provides a standard bit of interface to indicate why something is disabled. The specific situation that Joel ran into that motivated his post on this was the fact that the accelerated playback mode of Windows Media Player was disabled for Joel.\n\n\nI believe that comments are an important avenue for clarification and course correction in blogs, which is why they are so essential. Is a blog without comments even a blog at all? It is what provides the conversational tone that makes them work.\n\n\nJoel feels conversational nature is “leading to the demise of blogs”. People are relying on the conversation to complete the idea, rather than writing and researching the topic and presenting it as a coherent whole. It’s more like hanging out with your friends and saying the first thing that pops into your head. Joel draws comparisons to the eternal September.\n\n\nSo much of programming is not easily measurable or quantifiable; it is explained by anecdote. I believe it is the reader’s job to read critically and question viewpoints — and demand some form of supporting data, beyond just one example or a few anecdotes. Don’t let the most persuasive argument win; let the best data win.\n\n\nJoel brings up a great point — you should avoid weasel words in your writing! Or at least know when you’re using them. And try to stop.  \n\n\nOn making decisions based on data: I believe you should automatically measure the number of queries and the time they take in your software. Based on that data, decide how much to normalize your database.\n\n\nJoel says the older he gets, the less he knows — citing a few of his earlier posts. He plans to switch to story driven writing, free of agenda or morals. Let the reader interpret whatever message he or she wants into it.\n\n\nPerhaps the ideal workspace is re-configurable by the group that works in it — Microsoft’s new research building might be an example of this, or the the Patterns & Practices agile workspace.\n\n\nA discussion on the perils of object relational mapping — it’s not called the Vietnam of Computer Science for nothing. We use LINQ to SQL on Stack Overflow and I have been quite happy with LINQ to SQL because it is 1) flexible 2) very lightweight and 3) built into the language as a fundamental construct, not bolted on in bunch of code generation or classes. \n\nThanks again to everyone contributing wiki transcriptions!\n\nWe also answered the following listener questions:\n\nPaul D. Waite: “As a web developer going from JavaScript and Python to Objective-C, where should I start learning C?”\n\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/07/16/podcast-14/"
    },
    {
        "title": "Recording Podcast Questions Using Your Telephone",
        "content": "If you want to submit a question for the next podcast, it must be in audio format. If you don’t have an easy way to record your question, here’s how. Use the BlogTalkRadio Cinch service:\n\n\nCall (646) 200-0000\n\n\nTalk\n\nGet the RSS feed at http://cinch.blogtalkradio.com/YOURPHONENUMBER\n\nI just tried it, and it really works! I called 646-200-0000 from my cell phone, talked, hung up, then navigated to http://cinch.blogtalkradio.com/510620xxxx in my web browser:\n\nThe resulting mp3 file is 32 kbps, 11 kHz. There’s a small “blog talk radio!” intro added, then whatever you said on the telephone.\nListen to my sample mp3 (43kb)\nJust call 646-200-0000, talk, hang up, then visit the URL to download your freshly created mp3 audio file — and mail it to us at podcast@stackoverflow.com. It really is that easy!\nThanks again to Tim Patterson for turning us on to this cool and free service!",
        "url": "https://stackoverflow.blog/2008/05/15/recording-podcast-questions-using-your-telephone/"
    },
    {
        "title": "Podcast #8",
        "content": "This is the eighth episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nAs of our next podcast, we will be hosted at ITConversations — the NPR of podcasts. A good outfit to be associated with!\n\n\nYes, Joel does pronounce “wav file” as “wohv file”. I have no idea. Ask him.\n\n\nJoel keynoted the Rails conference. Josh Susser said “If you missed it, count yourself lucky.” Apparently at least David Heinemeier Hansson liked it.\n\n\nIt’s true that I objected to David’s attitude towards people who don’t use Macs, but it’s possible to have objections to specific statements people make, or specific beliefs they may have, and still respect them as a person. Disagreement does not mean we are mortal enemies. David has a lot of smart, interesting things to say. That just wasn’t one of them.\n\n\n“The programming community is larger than any one particular tribe.” But why are certain communities more insular and insecure than others? Joel relates this to cognitive dissonance.\n\n\nI remain a big fan of Clay Shirky and his latest book. How big a fan? It’s Clay Shirky’s Internet, We Just Live In It. I believe every working programmer who touches the web should read his latest book, Here Comes Everybody.\n\n\nOn addressing criticism — “there arise a new, young generation of rebels who remember not when you were the young rebel, writing new things, and making no claim to authority.”\n\n\nI found Paulo’s thoughtful criticism of our podcast and I wanted to address it. To quote Randy Pausch: “That’s a lesson that stuck with me my whole life. When you see yourself doing something badly and nobody’s bothering to tell you anymore, that’s a very bad place to be. Your critics are your ones telling you they still love you and care.” \n\n\nJoel feels like he was misunderstood on the topic of exceptions. Well, if you were writing a memory allocator for an operating system, anyway.\n\n\nJoel and I do agree that threading is hard. It’s amazing that web apps largely get a pass on this, thanks to the architecture of the webserver model.\n\n\nI give a shout-out to Rick Brewster of Paint.NET who calls the (excellent) threading code he wrote in Paint.NET “easily the most complex code in Paint.NET”\n\n\nWe’re using SQL Server 2005 as the underlying database for stackoverflow.com. We engage in a brief discussion of the pros and cons of Oracle and MySQL databases in our (limited) experience.\n\n\nJoel describes his frustration with the way some writers turn single anecdotes into statements of truth, both on the internet and off. Of course Joel and I are both guilty of this, too.\n\n\nIn my better blog posts, I tend to use more of a meta-aggregation model, where I do research and summarize what I found. I point to a lot of different opinions, then offer my own — but I try to diligently avoid clinging religiously to my opinions. In the face of new, better data, I can be convinced. I firmly believe in strong opinions, weakly held.\n\n\nWhen it comes to Domain Specific Languages, we definitely prefer them to a bunch of XML. I am particularly fond of SQL and Regular Expressions as mini-DSLs — I believe in embracing the concept of languages inside languages.\n\n\nJoel and I are still very excited about Microsoft’s DLR (IronPython and IronRuby) as an escape route from the superficial differences between the Coke and Pepsi of C# and VB.NET.\n\n\nwelcome Geoff Dalgas to the stackoverflow.com programming team!\n\nAs usual, thank you for all the questions and for the Wiki edits! \n\nWe also answered the following listener question:\n\nTendayi Mawushe: In the enterprise Java world, you can’t do much without writing a lot of XML. In response to that, a new idea little domain specific languages is emerging. What are your thoughts on this?\n\nIf you’d like to submit a question to be answered in our next episode,\nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/06/04/podcast-8/"
    },
    {
        "title": "Podcast #7",
        "content": "This is the seventh episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nMany thanks to Stuart Cam for recording a stackoverflow theme song; a brief digression on the introductions to the Sopranos and Get Smart.\n\n\nHow programmers know it’s a holiday: the door to the office is locked, or the Google logo changes.\n\n\nTuesday is also Rock Band new song download day. This week was pretty epic — the complete album The Cars. Joel would like the 1975 song Convoy. Maybe he’s a CB radio fan?\n\n\nWorking from home, I miss some of the camaraderie of my fellow programmers. What can I do about that? I’ve always admired Joel’s commitment to creating a good working environment for programmers. Joel has a regular column in Inc. magazine, and the June issue happens to cover this topic.\n\n\nJoel calls http://www.officesnapshots.com/ “office pornography”, where “pornography” is described as “looking at pictures of things you can’t have.” It’s also sort of like MTV Cribs for the IT set.\n\n\nJoel points out that cool office common areas are great, but what really matters is the desk where you actually do your work.\n\n\nI like to build my own PCs and use three monitors, so it’s difficult for me to bring my work with me without it turning into a comedy routine. Another reason I enjoy having my own office: I’m into decorating — see my old office at Vertigo.\n\n\nDo private offices interfere with collaboration and pair programming?\n\n\nWhich configuration of monitors is ideal for programming?\n\n\nI profess my love for WinSplit Revolution, which I consider essential on any monitor larger than 22″. We also wonder why OS window managers aren’t smarter about edge snapping and using available desktop space intelligently.\n\n\nAn extended discussion of OpenID. I encourage everyone reading this to sign up for an OpenID and try it yourself. I recommend myopenid. Joel signs up for an OpenID live on the podcast.\n\n\nThe importance of proper OpenID attribute exchange — so you can store your avatar image, URL, birthday, address and so forth in one place and have it handed over automatically to websites from your OpenID provider. Without this, OpenID is much less attractive.\n\n\nA discussion of Eric Sink’s C and Morse Code — isn’t programmer time spent learning C better spent learning how to communicate and understand the business domain they’re working in? There’s a deeper topic of Systems Analyst vs. Programmer here that we’ll have to dig into.\n\n\nReminder: Joel will be in Portland keynoting RailsConf later this week.\n\n\nJoel wants people to write in about their preferred password management solutions.\n\nAs usual, thank you for all the questions and for the Wiki edits! We appreciate all the interest in the private beta signups, too.\n\nWe also answered the following listener question, with a lot of peripheral discussion on related topics:\n\nJohn Dyer: Isn’t it better for programmers to program using standard programming frameworks and libraries rather than creating things from scratch?\n\nIf you’d like to submit a question to be answered in our next episode,\nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/05/28/podcast-7/"
    },
    {
        "title": "Podcast #4",
        "content": "This is the fourth episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nWhy we think stackoverflow.com isn’t “reinventing the wheel”, or at least, reinventing it in a useful way. Failure, however, is always an option.\n\n\nWe will be using ASP.NET MVC to build stackoverflow, as covered in my recent blog post. Joel and I carry on a long discussion of Model-View-Controller.\n\n\nA mention of CSS Zen Garden. Joel thinks it’s an unrealistic example, but I don’t.\n\n\nDefining “skinnability”, whether it applies to your application, or if it even matters.\n\n\nA mention of this year’s Maker Faire, where I met the Wikimedia Foundation’s Jay Walsh. Followed by an examination of why we admire Wikipedia and consider it a defining influence.\n\n\nGuests welcome! You will be able to participate fully in stackoverflow.com without ever creating an account — but there will be perks for creating an account.\n\n\nA bit about our reputation system — learning the lessons of PageRank.\n\n\nDealing with the inevitable evil users and users who actively game the reputation system. Not you, of course. We like you.\n\n\nAdopting Creative Commons by-nc-sa for our podcast and CCWiki for stackoverflow.com.\n\n\nOn the contract between Joel and Jeff to form stackoverflow.com : the difference between a C Corporation and Limited Liability Company (scintillating!)\n\n\nDo we need lawyers? Yes, we need lawyers. Unfortunately.\n\n\nThe final results of our logo contest.\n\n\nTwitter: is it only useful for “web celebrities?”  I personally love Twitter and find it quite useful. Follow me on Twitter, and see for yourself. I’ll try to convince Joel to join up.\n\n\nTip of the week: Redgate SQL Compare.\n\nThank you for all the questions and for the Wiki edits!\n\nWe also answered the following listener questions, with a lot of peripheral discussion on related topics:\n\n\nKyle Neumeier: How will you provide enough content to achieve a critical mass of activity on stackoverflow.com?\n\n\nAndrew Morrow: How will you deal with answer ordering and voting? Will it be based on votes alone? If so, how do we follow the thread of a conversation? \n\nObviousTroll: Is it worthwhile to go back to school and get a graduate degree in computer science?\n\nIf you’d like to submit a question to be answered in our next episode,\nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/05/07/podcast-4/"
    },
    {
        "title": "Podcast #9",
        "content": "This is the ninth episode of the StackOverflow podcast — the first fully hosted on itconversations — wherein Joel and Jeff discuss the following:\n\n\nApple’s WWDC is going on this week, and Joel has a few Fog Creek people at the conference.\n\n\nat a WWDC party, I saw my friend Wil Shipley of Delicious Monster, who just so happens to be a FogBugz user. If you have a Mac, check out Delicious Monster 2!\n\n\nOn the use of Javascript — is it OK to require JavaScript on today’s web?\n\n\nHow to pronounce OS X.\n\n\nOn Nicholas Carr’s excellent Atlantic article Is Google Making Us Stupid? His blog is outstanding as well and highly recommended. Many people know him from his book Does IT Matter?\n\n\nOn the challenges of tagging and hierarchy, and the folly of attempting to define popularity before it exists. \n\n\nThe StackOverflow private beta is still scheduled for early next month. We have to go through at least one full cycle privately with Joel first. Beyond that, we will be seeding the site with the existing content of the discuss.joelonsoftware.com .NET questions forum.\n\n\nOn the absurdity and emotional emptiness of TechCrunch. Is it venture capital pornography?\n\n\nA quick reference to my friend Matt Hempey’s Here Comes Another Bubble video. It’s so good, it won a webby award!\n\n\nNews flash: Joel adopts instant messaging technology, seven years after the fact!\n\n\nWe did our first server deployment of the stackoverflow code, where we ran into a little ASP.NET MVC beta problem. We’re crossing our fingers and hoping ASP.NET MVC will have a “go live” license before we enter the public beta.\n\n\nJoel describes the way they use FinalBuilder, and I describe my brief dabblings with MSBuild.\n\n\nOn the strange sentiment of “I agree with everything you’ve written, except..”\n\n\nWhy does Amazon’s affiliate program work, when Fog Creek’s Fogbugz affiliate program did not?\n\n\nHow Google Answers failed because they paid people.\n\n\nIs it possible to “specialize in being a generalist”? Does that even mean anything? Expressing our general affection for Seth Godin, while acknowledging that he is, after all, a marketing weasel. But a really, really good one!\n\n\nAn example of specialization in action: how Larry O’Brien’s single post on programming Sabre generated the majority of his income.\n\n\nHow I personally wish the “begins-with-www or doesn’t-begin-with-www” debate would just go away. Perhaps some humor will help? Probably not.\n\n\nA final coda on Joel’s question to our audience about password management.\n\nOn the manifold evils of focus stealing, and our very favorite home page of all time: about:blank\n\nWe also answered the following listener questions:\n\n\nJohn Topley: “What are your thoughts on affiliate programs, such as the new 37signals affiliate program?”\n\n\nMatthew Glidden: “What do you think of Seth Godin’s We specialize in everything?”\n\nJim McKeeth: “A reproducible way of generating a secure password: passwordmaker.org“\n\nIf you’d like to submit a question to be answered in our next episode,  \nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/06/11/podcast-9/"
    },
    {
        "title": "Podcast #5",
        "content": "This is the fifth episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nTrivia clarifications from podcast #3: Leonardo DiCaprio on Growing Pains, and how the Fonz actually Jumped the Shark in Happy Days\n\n\nThanks for all the offers to pitch in and help!\n\n\nThe StackOverflow private beta should be in about 6-8 weeks.\n\n\nMy depressing lack of project planning: Joel maintains I need a task list. In Fogbugz, of course.\n\n\nA discussion of the ASP.NET login provider model and NTLM, and how to enable NTLM in Firefox.\n\n\nA correlation between the prevalence of NTLM and Microsoft’s model of developing software for corporations versus developing software for consumers.\n\n\nA discussion on David Heinemeier-Hansson’s excellent Startup School talk: Is it pathetic that someone needs to stand up at a startup school and tell people that they need to charge for their product?\n\n\nBusinesses will spend money — consumers won’t. You can’t make money selling commodities to consumers as a startup; you have to sell a luxury.\n\n\nThe Google model: get the eyeballs, figure out how to make money later. Is that fair to startups? Can every startup make it to the necessary scale to get that revenue model to work?\n\n\nexperiments with AdSense on fakeplasticrock.com and codinghorror.com (search)\n\n\nWhy Joel and I feel compelled to run ad-blocking software in our browsers. Why doesn’t it block the Google search result ads? Are search result ads more task-related and thus useful?\n\n\nJamie Zawinski on social networking websites: they should get you laid.\n\n\nI try to get Joel to use Twitter again, and he references the Penny Arcade cartoon. I still think it’s useful. Follow me on Twitter!\n\n\nA (very) long — but worthwhile — discussion about my recent post on XML.\n\n\nRevealing Notepad’s “bug”.\n\n\nApps like RescueTime which track what applications you’re running over time.\n\n\nDiscussion of an email from Michael Dorfman, wherein he is embarrassed on my behalf for my lack of computer science rigor.\n\n\nJoel questions the sense of humor of his readers.\n\n\nA brief bit of advice from Joel on washing your electronics, and how to fix your computers by dropping them. Hey, I didn’t say it was good advice.\n\nThank you for all the questions and for the Wiki edits!\n\nThere were no listener questions this week. We’d love to answer your questions on any topic!\nIf you’d like to submit a question to be answered in our next episode,\nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/05/14/podcast-5/"
    },
    {
        "title": "Podcast #6",
        "content": "This is the sixth episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nA mercifully brief critique of Joel’s Skype avatar. Of course, he should be using this image.\n\n\nThe other programmer I’m working with, Jarrod, will be visiting me this week. It’s his first visit to California! Welcome to the San Francisco Bay area — geek mecca. We will get some pair programming time in.\n\n\nWe’ll also visit the Computer History Museum, one of my favorite places in the world. I like to refer to it as computer hardware pornography.\n\n\nAn examination of the ASP.NET MVC development model as compared to the classic ASP.NET Form model.\n\n\nWe’ll be using JQuery as our JavaScript and AJAX framework, and ELMAH for error handling duties.\n\n\nA bit on the Fog Creek philosophy of error handling: crashes are automatically entered in Fogbugz.\n\n\nAbout crashing in general. I enjoy talking about this because I think it’s incredibly important. Crash responsibly!\n\n\nWhy you should pay people not to work at your company.\n\n\nWhy am I so evangelical about Twitter?\n\n\nWhat should Joel talk about at the Rails Conference Keynote?\n\n\nIs it unfair to dismiss Java? Is the only difference between Java and COBOL that Java doesn’t require you to type keywords in all capital letters?\n\n\nThe rare topic that Joel and I agree on: presentations should be about entertainment first and information second.\n\n\nWhat’s the best way to deal with the larger bandwidth requirements for a podcast? We’re going to use up more than 1250 GB this month. Should we be on ITConversations?\n\n\nWe would like to support OpenID for site logins.\n\n\nAbout my $5,000 donation to open source on .NET — or more specifically, to ScrewTurn Wiki.\n\n\nA brief mention of Google DocType and the now defunct Google Answers.\n\n\nIs Google starting to have the Microsoft “big company” problem? Why can’t big companies effectively spin off smaller companies?\n\n\nWhat is the Microsoft “Strategy Tax”?\n\n\nThe list of new features in Vista. How many did you know about? More importantly, how many of these features do you use and care about? \n\n\nA mention of the [Software Engineering Radio](http://se-radio.net/ ) podcast. \n\nAs usual, thank you for all the questions and for the Wiki edits! We appreciate all the interest in the private beta signups, too.\n\nWe also answered the following listener questions, with a lot of peripheral discussion on related topics:\n\n\nWarren Henning: Why custom build stackoverflow.com when you could use something off the shelf?\n\n\nAndrew Hay: Why did you choose to reinvent the default ASP.NET membership provider?\n\n\nMartin Wallace: Have you considered open sourcing the stackoverflow.com code?\n\nDaniel Thompson: What should be in the next version of Windows, and is it worth spending hundreds of dollars to upgrade?\n\nIf you’d like to submit a question to be answered in our next episode,\nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com. You can record a question using nothing but a telephone and a web browser.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/05/20/podcast-6/"
    },
    {
        "title": "Podcast #1",
        "content": "This is the inaugural episode of the StackOverflow Podcast, with your hosts Joel Spolsky and Jeff Atwood, wherein we explain what StackOverflow.com will be. We hope.\nIf you’d like to submit a question to be answered in our next episode,\nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com.\nThe transcript wiki for this episode is available for editing. It was graciously submitted by Brian Pelton.",
        "url": "https://stackoverflow.blog/2008/04/17/podcast-1/"
    },
    {
        "title": "Podcast #3",
        "content": "This is the third episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nA brief, but awesome, reference to Donald Gibb in Revenge of the Nerds.\n\n\nWe are now using Skype and Pamela to record our podcast for higher quality.\n\n\nJoel’s original 2002 Recommended Programmer Reading list and Jeff’s Top 5 Programming Books — and why stackoverflow.com will complement, not replace, these kinds of books.\n\n\nThe ineffable Steve Yegge, and a digression on the philosophy of Apple and Microsoft font rendering strategies.\n\n\nConfirming that stackoverflow.com will be as language agnostic as we can make it. It is for programming questions, whatever the language and platform. Yes, it’s true that Joel and I have a Microsoft background, but we respect that programming is far larger than Microsoft.\n\n\nWhy You Should Learn C (again).\n\n\nOn our technology stack: stackoverflow.com will be built in ASP.NET running on our dedicated Windows Server 2008 x64 box — but that doesn’t mean stackoverflow.com, the site, will be about ASP.NET!\n\n\nOn jumping the shark.\n\n\nAn extended examination of everyone’s favorite language: Wasabi! Along with some reasons why you might actually want to build your own DSL and compiler.\n\n\nA discussion of our logo contest at 99designs.com.\n\nWhat, exactly, is a stack overflow?\n\nWe also answered the following listener questions, with a lot of peripheral discussion on related topics:\n\n\nDave Kauffman: On Computer Science versus Software Engineering: is there any real-world use for recursion? \n\n\nNick Malaguti: How should he deal with real world programming projects as a part of college classes? Specifically, the fact that there’s no real hierarchy and an inability to move the deadline? Also, what software do you recommend to manage software projects? (Joel swears that Nick was not paid to ask this question, in case you were wondering.)\n\n\nDavid Alison: What do we think of services like the Google App Engine?\n\nTim Patterson: How to use blogtalkradio.com to easily record a question for stackoverflow using nothing but your telephone and a web browser.\n\nIf you’d like to submit a question to be answered in our next episode,\nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com.\nThe transcript wiki for this episode is available for public editing.",
        "url": "https://stackoverflow.blog/2008/04/30/podcast-3/"
    },
    {
        "title": "Podcast #2",
        "content": "This is the second episode of the StackOverflow podcast, wherein Joel and I discuss the following:\n\n\nWhy have a podcast at all? What’s the point?\n\n\nA discussion about some the podcasts Joel listens to: John Dvorak, Adam Curry.\n\n\nStackOverflow podcast transcription wiki courtesy of FogBugz\n\n\nNew RSS feed at blog.stackoverflow.com, with podcast specific RSS feed courtesy of podpress.\n\n\nPodcast feed submitted at iTunes, PodCast Alley, Yahoo Podcasts and Podcast Ready.\n\n\nSound quality concerns (we’re working on it).\n\nWhy we require audio submissions for questions.\n\nWe also answered the following listener questions, with a lot of peripheral discussion on related topics:\n\n\nNathan Stohlmann: How do we plan to keep religious discussions from happening on stackoverflow? will we provide a way to show implementations in multiple languages?\n\n\nMatt Youell: How will we handle spam or reblogged content from stackoverflow? What about licensing issues with user-generated content?\n\n\nAndrew Davis: How will we prevent stackoverflow quality from diminishing over time as the site becomes more popular?\n\nAndre Bluehs: Should I learn C++?\n\nIf you’d like to submit a question to be answered in our next episode,\nrecord an audio file (90 seconds or less) and mail it to podcast@stackoverflow.com.\nThe transcript wiki for this episode is available for editing.",
        "url": "https://stackoverflow.blog/2008/04/23/podcast-2/"
    },
    {
        "title": "Logo Design Contest",
        "content": "The name stackoverflow.com was partially chosen by the community, with stackoverflow.com winning by a virtual landslide.\nBut websites can’t survive on name alone. We also need a logo. A logo with verve. With zazz. With moxie! A dynamic logo that reflects the potential of this mythical programming community site we’re building.\nRather than try out my anemic design skills — it’s always dangerous when programmers start thinking they’re designers — I thought I’d put the logo design to the community in similar fashion. We have a stackoverflow.com logo design contest at 99 designs, with a prize of $29 at stake.\n\nI’ve been quite impressed by many of the submissions so far. The contest runs for another five days, so if you’re interested, please submit a logo!",
        "url": "https://stackoverflow.blog/2008/04/24/logo-design-contest/"
    }
]